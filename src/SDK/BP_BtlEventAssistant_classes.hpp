#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtlEventAssistant

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Xrd777_structs.hpp"
#include "Xrd777_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BtlEventAssistant.BP_BtlEventAssistant_C
// 0x02A8 (0x0520 - 0x0278)
class ABP_BtlEventAssistant_C final : public AAppActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBtlBCDMoveCameraComponent*             BtlBCDMoveCamera;                                  // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBtlBCDCharaCameraComponent*            BtlBCDCharaCamera;                                 // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBtlCoreComponent*                      BtlCore;                                           // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlPerformer_C*                     Invoke;                                            // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlPerformer_C*                     PartyMember1;                                      // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlPerformer_C*                     PartyMember2;                                      // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlPerformer_C*                     PartyMember3;                                      // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlPerformer_C*                     Target1;                                           // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_BtlPerformer_C*>             PerformerList;                                     // 0x02C8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             HasLoadedEvent;                                    // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class ALevelSequenceActor*                    LevelSequenceActor;                                // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         LevelSequencePlayer;                               // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             On_End_Event;                                      // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<class ACineCameraActor*>               CameraList;                                        // 0x0308(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	int32                                         MainCameraIndex;                                   // 0x0318(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACineCameraActor*                       UsingCamera;                                       // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CutinWidget;                                       // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlPerformer_C*                     CutinPersona;                                      // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlPerformer_C*                     CutinBackGround;                                   // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlPerformer_C*                     CutinGround;                                       // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMediaPlayer*                           MediaPlayer;                                       // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FString, class UNiagaraComponent*> NiagaraEffectsArray;                               // 0x0350(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UBP_BtlEnvironment_C*                   BtlEnvironment;                                    // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BtlGuiComponent_C*                  BtlGui;                                            // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             On_End_FadeIn;                                     // 0x03B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             On_End_FadeOut;                                    // 0x03C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             On_End_Prepare_Play_Video;                         // 0x03D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             On_End_Open_MediaPlayer;                           // 0x03E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UNiagaraComponent*                      EffectPersonaSpawn;                                // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FLinearColor>                   Sky_Lights_Colors;                                 // 0x03F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FLinearColor>                   Spot_Lights_Colors;                                // 0x0408(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         EnemyDeadPower;                                    // 0x0418(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableEnemyDead;                                   // 0x041C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor)
	uint8                                         Pad_41D[0x3];                                      // 0x041D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             On_Request_Shuffle_Time_Start;                     // 0x0420(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class ULevelSequence*                         LsSfihtRecieve;                                    // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             HasFinisedShiftLoad;                               // 0x0438(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class ALevelSequenceActor*                    LsSfihtRecieveActor;                               // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BtlCameraManagerComponent_C*        BtlCamera;                                         // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBtlCutsceneEditorMode                        CameraMode;                                        // 0x0458(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UNiagaraComponent*>              NiagaraStoreList;                                  // 0x0460(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class ABP_BtlAlloutController_C*              AlloutController;                                  // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<int32, TSoftObjectPtr<class ULevelSequence>> ShiftRecieveSeq;                                   // 0x0478(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	float                                         BattleTimeDilation;                                // 0x04C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SequenceTimeDilation;                              // 0x04CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             On_Request_Result_Start;                           // 0x04D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class ABP_BtlEventAttachPoint_C*              EventAttachPoint;                                  // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             On_Request_Summon_Enemies_For_Serial_Encount;      // 0x04E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<class UNiagaraComponent*>              NiagaraListForDelete;                              // 0x04F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class USkeletalMeshComponent*>         EnemyStencilChangedList;                           // 0x0508(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          bEnemyTeammateTheurgia;                            // 0x0518(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void HasLoadedEvent__DelegateSignature();
	void On_End_Event__DelegateSignature();
	void On_End_FadeIn__DelegateSignature();
	void On_End_FadeOut__DelegateSignature();
	void On_End_Prepare_Play_Video__DelegateSignature();
	void On_End_Open_MediaPlayer__DelegateSignature();
	void On_Request_Shuffle_Time_Start__DelegateSignature();
	void HasFinisedShiftLoad__DelegateSignature();
	void On_Request_Result_Start__DelegateSignature();
	void On_Request_Summon_Enemies_For_Serial_Encount__DelegateSignature();
	void ExecuteUbergraph_BP_BtlEventAssistant(int32 EntryPoint);
	void On_Has_Finished_Called_From_Controller();
	void On_Prepare_Play_Video();
	void BCD_Character_Animation(class ABP_BtlPerformer_C* Performer);
	void On_Has_Finished_Event();
	void On_Play_Event_With_Main_Chara(class ABP_BtlCharacterBase_C* Invoke_0, class ABP_BtlCharacterBase_C* Target);
	void On_Play_Event();
	void On_Load_Seq_Async(TSoftObjectPtr<class ULevelSequence> LevelSequence);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void BCD_All_Player_Rotate(const struct FRotator& NewRotation);
	void BCD_Set_Targets_Visible(bool Visible);
	void BCD_Relocation_Player_Only();
	void BCD_Adjust_Chara_Root_To(EBtlEventAreaType Area);
	void BCD_All_Player_Visible(bool Visible, bool WithDeadChara);
	void BCD_Set_Visible_Other_Scene_Chara(bool Visible);
	void BCD_Result_Start();
	void BCD_Set_BG_Visible(bool Visible);
	void BCD_Play_Allout_SE();
	void BCD_Play_SE(int32 ID);
	void BCD_Play_Persona_Scene_Animation(EBtlEventAreaType Area, EBtlPersonaSceneAnimationType Type, bool UseOriginalBlend, int32 Index_0);
	void BCD_Shake_Start(float Time, EBtlShakeType Type);
	void BCD_Play_Persona_Animation(EBtlEventAreaType Area, EBtlPersonaAnimationType Type, bool UseOriginalBlend, int32 Index_0);
	void BCD_Persona_Set_Location(EBtlEventAreaType Area, const struct FTransform& Transform, bool WorldTransform, int32 Index_0);
	void BCD_Set_Persona_Visible(EBtlEventAreaType Area, bool Visible, int32 Index_0);
	void BCD_Hide_Others();
	void BCD_Effect_Detach(const class FString& EffectName);
	void BCD_Play_Effect_At_Persona_Socket(class UNiagaraSystem* Niagara, class FName Socket_Name, const class FString& Effect_Name, EBtlEventAreaType Area_Type, const struct FTransform& Trans, bool NotAttach, bool ReferenceRotate, int32 Index_0);
	void BCD_Effect_At_Chara_Transform(class UNiagaraSystem* Niagara, EBtlEventAreaType Area_Type, const class FString& EffectName, float Life_Seconds, const struct FTransform& Trans);
	void BCD_Effect_At_Weapon_Socket_Transfrom(class UNiagaraSystem* Niagara, class FName Socket_Name, const class FString& Effect_Name, EBtlEventAreaType Area_Type, const struct FTransform& Trans, bool NotAttach);
	void BCD_Effect_At_Socket_Transform(class UNiagaraSystem* Niagara, class FName SocketName, const class FString& EffectName, EBtlEventAreaType Area, const struct FTransform& Trans, bool NotAttach);
	void BCD_Effect_At_Weapon_Socket(class UNiagaraSystem* Niagara, class FName Socket_Name, const class FString& Effect_Name, EBtlEventAreaType Area_Type);
	void BCD_Set_Transform_at_Character_Persona_Spawn_Effect(EBtlEventAreaType NewParam);
	void BCD_Set_Transform_Persona_Spawn_Effect(const struct FTransform& Transform);
	void BCD_Set_Vislble_Persona_Spawn_Effect(bool Visible);
	void BCD_Effect_At_Socket(class UNiagaraSystem* Niagara, class FName Socket_Name, const class FString& Effect_Name, EBtlEventAreaType Area_Type);
	void CustomEvent_1();
	void CustomEvent_0();
	void BCD_Stop_Effect(const class FString& EffectName);
	void BCD_Effect_At_Chara(class UNiagaraSystem* Niagara, EBtlEventAreaType Area_Type, const class FString& EffectName, float Life_Seconds);
	void BCD_Effect_World(class UNiagaraSystem* Niagara, const struct FTransform& Transform, const class FString& EffectName, float Life_Seconds, int32 CueId);
	void BCD_Set_Camera(float InterpTime, float X, float Y, float Z, float Roll, float Pitch, float Yaw, EBtlCutsceneBlendType BlendType, float BlendExp);
	void BCD_Set_Chara_Camera(float InterpTime, float Radium_Ration, float Height_Ration, float Rotate_Degree, EBtlEventAreaType TargetType, class FName Socket_Name, EBtlCutsceneBlendType BlendType, float BlendExp, float Pan, float Roll, bool UseCommonCylinder);
	void BCD_Play_Video();
	void BCD_Close_WBP();
	void BCD_Show_WBP();
	void BCD_FadeIN_Wipe(EBtlFadeType Type, int32 Frame);
	void BCD_FadeOUT_Wipe(EBtlFadeType Type, int32 Frame);
	void BCD_FadeIn(float Time);
	void BCD_FadeOut(float Time);
	void BCD_Target_Enemy_Reset_Stencil();
	void BCD_Target_Enemy_Set_Stencil();
	void BCD_Target_Enemy_Visible(bool Visible, bool WithDeadChara);
	void BCD_All_Enemy_Summon_For_Serial_Encount();
	void BCD_Targets_Play_Effect(class UNiagaraSystem* FX, class FName SocketName, bool UseLocationOnly, bool SpawnFrontPosition, int32 SENo);
	void BCD_All_Enemy_Rotate(const struct FRotator& NewRotation);
	void BCD_All_Enemy_Visible(bool Visible, bool WithDeadChara);
	void BCD_All_Enemy_Play_Effect(class UNiagaraSystem* FX, class FName SocketName, bool UseLocationOnly, int32 SENo);
	void BCD_All_Enemy_Color(const struct FColor& Color, float Alpha);
	void BCD_All_Enemy_Play_Allout_Dead();
	void BCD_All_Enemy_Play_Animation(EBtlAnimationType Anim, EBtlAnimationType Anim_Next);
	void BCD_Allout_Play_Voice_Run_into_Enemy();
	void BCD_Play_Allout_Finish_Tex();
	void BCD_Result_Capture();
	void BCD_Start_Shuffle_Time();
	void BCD_Shift_Play_Catch_Sequence();
	void On_Unload_Shift_Stuff();
	void On_Load_Shift_Stuff(class ABtlActor* CharaFrom, class ABtlActor* CharaTo);
	void BCD_Show_NyxAvatar_Feather_Effect();
	void BCD_Show_Monorail_Rush_Effect();
	void BCD_SetPartyPanelVisible(bool IsVisible);
	void BCD_ShowSkillName(int32 SkillId, bool IsEnemy, float Time);
	void BCD_Call_Jyokyohelp(EBtlJyokyohelpType Type);
	void OnLoaded_AC88E505430191437A26DAAA3C28A967(class UObject* Loaded);
	void OnLoaded_691412D54C4C232F9A57179F9A7D72FA(class UObject* Loaded);
	void OnLoaded_EAEC04644E0DEDCEA74F079822A00578(class UObject* Loaded);
	void Setup_Mannequin();
	void InitializePerformer();
	void SearchPerformer(class ABP_BtlCharacterBase_C* SearchCharacter, bool* Found);
	class UNiagaraComponent* SpawnEffect(class UNiagaraSystem* Niagara, const struct FTransform& Transform, bool Auto_Destroy, bool UseLocationOnly);
	struct FTransform GetTransformFromArea(EBtlEventAreaType AreaType);
	void LinkAssistantToPerformer();
	void Play_Camera(const struct FTransform& Transform, float InterpTime);
	void SetupCamera();
	void SetCameraView(const struct FTransform& Transform, float Interp_Time);
	void Arrange_Target_Camera(class ACineCameraActor** Camera);
	void LookatCharacter(class ABP_BtlCharacterBase_C* Character);
	void GetTargetPerformer(EBtlEventAreaType TargetType, class ABP_BtlPerformer_C** Performer);
	void SetupBtlEnvironment();
	void Set_All_Character_Visible(bool Visible, bool NotAffectGuest);
	void SetFadeBind();
	void SetBtlGui(class UBP_BtlGuiComponent_C* NewParam);
	void Relocation_Characters();
	void FadeOutBySecond(float Second);
	void FadeInBySecond(float Second);
	void Call_End_FadeIn();
	void Call_End_FadeOut();
	void LoadMediaPlayer(class UMediaPlayer* MediaPlayer_0, class UBaseMediaSource* MediaSource);
	void PauseVideo();
	void PreparePlayVideo();
	void CleanUpVideo();
	void Call_End_Open_MediaPlayer(const class FString& OpenedUrl);
	void Set_PersonaSpawnEffect(class UNiagaraComponent* Effect);
	void Restore_Lights();
	void Init_Lights();
	void Set_BG_Visible(bool Visible);
	void SetMembers(TArray<class ABP_BtlCharacterBase_C*>& Participants);
	TArray<class ABtlActor*> GetEnemyList();
	void SetupEnemyDeadPower();
	void ExtractLocation(const struct FTransform& Location);
	void GetBCDCamera(class ACineCameraActor** Output);
	void SetupPartyMembers(TArray<class ABP_BtlCharacterBase_C*>& Others);
	void ClearAllMembers();
	void SetCameraViewAdvance(const struct FTransform& Transform, float InterpTime, EBtlCutsceneBlendType BlendType, float BlendExp);
	void GetTargetPerfomerCutscene(EBtlEventAreaType AreaType, class ABP_BtlPerformer_C** Performer);
	void BCDCameraTick();
	void BCDCharaCameraTick();
	void BCDMoveCameraTick();
	void ConvertTransformFromCharaCylinder(struct FTransform* Transform);
	void Clear();
	void SetSequenceCharaRoot(const struct FTransform& Transform);
	void ShowFieldEffect(class ANiagaraActor* Niagara);
	void UpdateTimes();
	void SetVisibleOthers(bool Visible);
	void SetupStuff();
	void GetHero(class ABP_BtlCharacterBase_C** HERO);
	void Relocation_Characters_for_Command();
	void UpdateEnemyTeammateTheurgia();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BtlEventAssistant_C">();
	}
	static class ABP_BtlEventAssistant_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BtlEventAssistant_C>();
	}
};
static_assert(alignof(ABP_BtlEventAssistant_C) == 0x000008, "Wrong alignment on ABP_BtlEventAssistant_C");
static_assert(sizeof(ABP_BtlEventAssistant_C) == 0x000520, "Wrong size on ABP_BtlEventAssistant_C");
static_assert(offsetof(ABP_BtlEventAssistant_C, UberGraphFrame) == 0x000278, "Member 'ABP_BtlEventAssistant_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, BtlBCDMoveCamera) == 0x000280, "Member 'ABP_BtlEventAssistant_C::BtlBCDMoveCamera' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, BtlBCDCharaCamera) == 0x000288, "Member 'ABP_BtlEventAssistant_C::BtlBCDCharaCamera' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, DefaultSceneRoot) == 0x000290, "Member 'ABP_BtlEventAssistant_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, BtlCore) == 0x000298, "Member 'ABP_BtlEventAssistant_C::BtlCore' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, Invoke) == 0x0002A0, "Member 'ABP_BtlEventAssistant_C::Invoke' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, PartyMember1) == 0x0002A8, "Member 'ABP_BtlEventAssistant_C::PartyMember1' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, PartyMember2) == 0x0002B0, "Member 'ABP_BtlEventAssistant_C::PartyMember2' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, PartyMember3) == 0x0002B8, "Member 'ABP_BtlEventAssistant_C::PartyMember3' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, Target1) == 0x0002C0, "Member 'ABP_BtlEventAssistant_C::Target1' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, PerformerList) == 0x0002C8, "Member 'ABP_BtlEventAssistant_C::PerformerList' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, HasLoadedEvent) == 0x0002D8, "Member 'ABP_BtlEventAssistant_C::HasLoadedEvent' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, LevelSequenceActor) == 0x0002E8, "Member 'ABP_BtlEventAssistant_C::LevelSequenceActor' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, LevelSequencePlayer) == 0x0002F0, "Member 'ABP_BtlEventAssistant_C::LevelSequencePlayer' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, On_End_Event) == 0x0002F8, "Member 'ABP_BtlEventAssistant_C::On_End_Event' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, CameraList) == 0x000308, "Member 'ABP_BtlEventAssistant_C::CameraList' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, MainCameraIndex) == 0x000318, "Member 'ABP_BtlEventAssistant_C::MainCameraIndex' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, UsingCamera) == 0x000320, "Member 'ABP_BtlEventAssistant_C::UsingCamera' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, CutinWidget) == 0x000328, "Member 'ABP_BtlEventAssistant_C::CutinWidget' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, CutinPersona) == 0x000330, "Member 'ABP_BtlEventAssistant_C::CutinPersona' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, CutinBackGround) == 0x000338, "Member 'ABP_BtlEventAssistant_C::CutinBackGround' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, CutinGround) == 0x000340, "Member 'ABP_BtlEventAssistant_C::CutinGround' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, MediaPlayer) == 0x000348, "Member 'ABP_BtlEventAssistant_C::MediaPlayer' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, NiagaraEffectsArray) == 0x000350, "Member 'ABP_BtlEventAssistant_C::NiagaraEffectsArray' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, BtlEnvironment) == 0x0003A0, "Member 'ABP_BtlEventAssistant_C::BtlEnvironment' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, BtlGui) == 0x0003A8, "Member 'ABP_BtlEventAssistant_C::BtlGui' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, On_End_FadeIn) == 0x0003B0, "Member 'ABP_BtlEventAssistant_C::On_End_FadeIn' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, On_End_FadeOut) == 0x0003C0, "Member 'ABP_BtlEventAssistant_C::On_End_FadeOut' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, On_End_Prepare_Play_Video) == 0x0003D0, "Member 'ABP_BtlEventAssistant_C::On_End_Prepare_Play_Video' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, On_End_Open_MediaPlayer) == 0x0003E0, "Member 'ABP_BtlEventAssistant_C::On_End_Open_MediaPlayer' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, EffectPersonaSpawn) == 0x0003F0, "Member 'ABP_BtlEventAssistant_C::EffectPersonaSpawn' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, Sky_Lights_Colors) == 0x0003F8, "Member 'ABP_BtlEventAssistant_C::Sky_Lights_Colors' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, Spot_Lights_Colors) == 0x000408, "Member 'ABP_BtlEventAssistant_C::Spot_Lights_Colors' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, EnemyDeadPower) == 0x000418, "Member 'ABP_BtlEventAssistant_C::EnemyDeadPower' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, EnableEnemyDead) == 0x00041C, "Member 'ABP_BtlEventAssistant_C::EnableEnemyDead' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, On_Request_Shuffle_Time_Start) == 0x000420, "Member 'ABP_BtlEventAssistant_C::On_Request_Shuffle_Time_Start' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, LsSfihtRecieve) == 0x000430, "Member 'ABP_BtlEventAssistant_C::LsSfihtRecieve' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, HasFinisedShiftLoad) == 0x000438, "Member 'ABP_BtlEventAssistant_C::HasFinisedShiftLoad' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, LsSfihtRecieveActor) == 0x000448, "Member 'ABP_BtlEventAssistant_C::LsSfihtRecieveActor' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, BtlCamera) == 0x000450, "Member 'ABP_BtlEventAssistant_C::BtlCamera' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, CameraMode) == 0x000458, "Member 'ABP_BtlEventAssistant_C::CameraMode' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, NiagaraStoreList) == 0x000460, "Member 'ABP_BtlEventAssistant_C::NiagaraStoreList' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, AlloutController) == 0x000470, "Member 'ABP_BtlEventAssistant_C::AlloutController' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, ShiftRecieveSeq) == 0x000478, "Member 'ABP_BtlEventAssistant_C::ShiftRecieveSeq' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, BattleTimeDilation) == 0x0004C8, "Member 'ABP_BtlEventAssistant_C::BattleTimeDilation' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, SequenceTimeDilation) == 0x0004CC, "Member 'ABP_BtlEventAssistant_C::SequenceTimeDilation' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, On_Request_Result_Start) == 0x0004D0, "Member 'ABP_BtlEventAssistant_C::On_Request_Result_Start' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, EventAttachPoint) == 0x0004E0, "Member 'ABP_BtlEventAssistant_C::EventAttachPoint' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, On_Request_Summon_Enemies_For_Serial_Encount) == 0x0004E8, "Member 'ABP_BtlEventAssistant_C::On_Request_Summon_Enemies_For_Serial_Encount' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, NiagaraListForDelete) == 0x0004F8, "Member 'ABP_BtlEventAssistant_C::NiagaraListForDelete' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, EnemyStencilChangedList) == 0x000508, "Member 'ABP_BtlEventAssistant_C::EnemyStencilChangedList' has a wrong offset!");
static_assert(offsetof(ABP_BtlEventAssistant_C, bEnemyTeammateTheurgia) == 0x000518, "Member 'ABP_BtlEventAssistant_C::bEnemyTeammateTheurgia' has a wrong offset!");

}

