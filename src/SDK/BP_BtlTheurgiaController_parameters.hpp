#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtlTheurgiaController

#include "Basic.hpp"

#include "FBtlTheurgiaLocOffset_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "FBtlTheurgiaSeq_structs.hpp"


namespace SDK::Params
{

// Function BP_BtlTheurgiaController.BP_BtlTheurgiaController_C.ExecuteUbergraph_BP_BtlTheurgiaController
// 0x0250 (0x0250 - 0x0000)
struct BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         K2Node_DynamicCast_AsLevel_Sequence;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BtlFadeSync_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBtlTheurgiaSeq                       K2Node_MakeStruct_FBtlTheurgiaSeq;                 // 0x0050(0x00A0)(HasGetValueTypeHash)
	struct FFBtlTheurgiaSeq                       CallFunc_GetDataTableRowFromName_OutRow;           // 0x00F0(0x00A0)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALevelSequenceActor*                    CallFunc_CreateLevelSequencePlayer_OutActor;       // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_CreateLevelSequencePlayer_ReturnValue;    // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x01B0(0x0010)(ZeroConstructor, NoDestructor)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_1;          // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          CallFunc_Choice_Seq_to_Play_SequenceToPlay;        // 0x01C8(0x0028)(HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         K2Node_DynamicCast_AsLevel_Sequence_1;             // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20B[0x5];                                      // 0x020B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ALevelSequenceActor*                    CallFunc_CreateLevelSequencePlayer_OutActor_1;     // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_CreateLevelSequencePlayer_ReturnValue_1;  // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyTeammates_Result;                  // 0x0225(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_226[0x2];                                      // 0x0226(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_2;          // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_2;            // 0x0238(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsPlayingAstrea_ReturnValue;              // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController) == 0x000008, "Wrong alignment on BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController");
static_assert(sizeof(BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController) == 0x000250, "Wrong size on BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController");
static_assert(offsetof(BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController, EntryPoint) == 0x000000, "Member 'BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController, Temp_object_Variable) == 0x000018, "Member 'BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController, K2Node_DynamicCast_AsLevel_Sequence) == 0x000020, "Member 'BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController::K2Node_DynamicCast_AsLevel_Sequence' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController, CallFunc_BtlFadeSync_ReturnValue) == 0x000029, "Member 'BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController::CallFunc_BtlFadeSync_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController, K2Node_Event_DeltaSeconds) == 0x00002C, "Member 'BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController, K2Node_CustomEvent_Loaded) == 0x000030, "Member 'BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController, CallFunc_Conv_IntToString_ReturnValue) == 0x000038, "Member 'BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController, CallFunc_Conv_StringToName_ReturnValue) == 0x000048, "Member 'BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController, K2Node_MakeStruct_FBtlTheurgiaSeq) == 0x000050, "Member 'BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController::K2Node_MakeStruct_FBtlTheurgiaSeq' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000F0, "Member 'BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000190, "Member 'BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController, CallFunc_CreateLevelSequencePlayer_OutActor) == 0x000198, "Member 'BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController::CallFunc_CreateLevelSequencePlayer_OutActor' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController, CallFunc_CreateLevelSequencePlayer_ReturnValue) == 0x0001A0, "Member 'BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController::CallFunc_CreateLevelSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController, CallFunc_GetSequencePlayer_ReturnValue) == 0x0001A8, "Member 'BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController, K2Node_CreateDelegate_OutputDelegate_1) == 0x0001B0, "Member 'BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController, CallFunc_GetSequencePlayer_ReturnValue_1) == 0x0001C0, "Member 'BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController::CallFunc_GetSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController, CallFunc_Choice_Seq_to_Play_SequenceToPlay) == 0x0001C8, "Member 'BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController::CallFunc_Choice_Seq_to_Play_SequenceToPlay' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController, Temp_object_Variable_1) == 0x0001F0, "Member 'BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x0001F8, "Member 'BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController, K2Node_DynamicCast_AsLevel_Sequence_1) == 0x000200, "Member 'BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController::K2Node_DynamicCast_AsLevel_Sequence_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController, K2Node_DynamicCast_bSuccess_1) == 0x000208, "Member 'BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController, CallFunc_BooleanAND_ReturnValue) == 0x000209, "Member 'BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController, CallFunc_IsValid_ReturnValue) == 0x00020A, "Member 'BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController, CallFunc_CreateLevelSequencePlayer_OutActor_1) == 0x000210, "Member 'BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController::CallFunc_CreateLevelSequencePlayer_OutActor_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController, CallFunc_CreateLevelSequencePlayer_ReturnValue_1) == 0x000218, "Member 'BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController::CallFunc_CreateLevelSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000220, "Member 'BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController, CallFunc_IsValid_ReturnValue_1) == 0x000224, "Member 'BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController, CallFunc_IsEnemyTeammates_Result) == 0x000225, "Member 'BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController::CallFunc_IsEnemyTeammates_Result' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController, CallFunc_GetSequencePlayer_ReturnValue_2) == 0x000228, "Member 'BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController::CallFunc_GetSequencePlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController, K2Node_CustomEvent_Loaded_1) == 0x000230, "Member 'BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController, K2Node_CreateDelegate_OutputDelegate_2) == 0x000238, "Member 'BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController, CallFunc_IsPlayingAstrea_ReturnValue) == 0x000248, "Member 'BP_BtlTheurgiaController_C_ExecuteUbergraph_BP_BtlTheurgiaController::CallFunc_IsPlayingAstrea_ReturnValue' has a wrong offset!");

// Function BP_BtlTheurgiaController.BP_BtlTheurgiaController_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_BtlTheurgiaController_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlTheurgiaController_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_BtlTheurgiaController_C_ReceiveTick");
static_assert(sizeof(BP_BtlTheurgiaController_C_ReceiveTick) == 0x000004, "Wrong size on BP_BtlTheurgiaController_C_ReceiveTick");
static_assert(offsetof(BP_BtlTheurgiaController_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_BtlTheurgiaController_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_BtlTheurgiaController.BP_BtlTheurgiaController_C.OnLoaded_419743374F851E2A1AB942B6DA4C7D5F
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlTheurgiaController_C_OnLoaded_419743374F851E2A1AB942B6DA4C7D5F final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlTheurgiaController_C_OnLoaded_419743374F851E2A1AB942B6DA4C7D5F) == 0x000008, "Wrong alignment on BP_BtlTheurgiaController_C_OnLoaded_419743374F851E2A1AB942B6DA4C7D5F");
static_assert(sizeof(BP_BtlTheurgiaController_C_OnLoaded_419743374F851E2A1AB942B6DA4C7D5F) == 0x000008, "Wrong size on BP_BtlTheurgiaController_C_OnLoaded_419743374F851E2A1AB942B6DA4C7D5F");
static_assert(offsetof(BP_BtlTheurgiaController_C_OnLoaded_419743374F851E2A1AB942B6DA4C7D5F, Loaded) == 0x000000, "Member 'BP_BtlTheurgiaController_C_OnLoaded_419743374F851E2A1AB942B6DA4C7D5F::Loaded' has a wrong offset!");

// Function BP_BtlTheurgiaController.BP_BtlTheurgiaController_C.OnLoaded_48C72DAE4B6AFD3C5C57A5A22F41F554
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlTheurgiaController_C_OnLoaded_48C72DAE4B6AFD3C5C57A5A22F41F554 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlTheurgiaController_C_OnLoaded_48C72DAE4B6AFD3C5C57A5A22F41F554) == 0x000008, "Wrong alignment on BP_BtlTheurgiaController_C_OnLoaded_48C72DAE4B6AFD3C5C57A5A22F41F554");
static_assert(sizeof(BP_BtlTheurgiaController_C_OnLoaded_48C72DAE4B6AFD3C5C57A5A22F41F554) == 0x000008, "Wrong size on BP_BtlTheurgiaController_C_OnLoaded_48C72DAE4B6AFD3C5C57A5A22F41F554");
static_assert(offsetof(BP_BtlTheurgiaController_C_OnLoaded_48C72DAE4B6AFD3C5C57A5A22F41F554, Loaded) == 0x000000, "Member 'BP_BtlTheurgiaController_C_OnLoaded_48C72DAE4B6AFD3C5C57A5A22F41F554::Loaded' has a wrong offset!");

// Function BP_BtlTheurgiaController.BP_BtlTheurgiaController_C.Setup
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlTheurgiaController_C_Setup final
{
public:
	class ABP_BtlEventAssistant_C*                CallFunc_GetActorOfClass_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlTheurgiaController_C_Setup) == 0x000008, "Wrong alignment on BP_BtlTheurgiaController_C_Setup");
static_assert(sizeof(BP_BtlTheurgiaController_C_Setup) == 0x000008, "Wrong size on BP_BtlTheurgiaController_C_Setup");
static_assert(offsetof(BP_BtlTheurgiaController_C_Setup, CallFunc_GetActorOfClass_ReturnValue) == 0x000000, "Member 'BP_BtlTheurgiaController_C_Setup::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");

// Function BP_BtlTheurgiaController.BP_BtlTheurgiaController_C.AllocateMembers
// 0x0030 (0x0030 - 0x0000)
struct BP_BtlTheurgiaController_C_AllocateMembers final
{
public:
	TArray<class ABtlActor*>                      CallFunc_GetActionTargets_ReturnValue;             // 0x0000(0x0010)(ReferenceParm)
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlTheurgiaController_C_AllocateMembers) == 0x000008, "Wrong alignment on BP_BtlTheurgiaController_C_AllocateMembers");
static_assert(sizeof(BP_BtlTheurgiaController_C_AllocateMembers) == 0x000030, "Wrong size on BP_BtlTheurgiaController_C_AllocateMembers");
static_assert(offsetof(BP_BtlTheurgiaController_C_AllocateMembers, CallFunc_GetActionTargets_ReturnValue) == 0x000000, "Member 'BP_BtlTheurgiaController_C_AllocateMembers::CallFunc_GetActionTargets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_AllocateMembers, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_BtlTheurgiaController_C_AllocateMembers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_AllocateMembers, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_BtlTheurgiaController_C_AllocateMembers::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_AllocateMembers, K2Node_DynamicCast_AsBP_Btl_Character_Base) == 0x000020, "Member 'BP_BtlTheurgiaController_C_AllocateMembers::K2Node_DynamicCast_AsBP_Btl_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_AllocateMembers, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_BtlTheurgiaController_C_AllocateMembers::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BtlTheurgiaController.BP_BtlTheurgiaController_C.Clear
// 0x0002 (0x0002 - 0x0000)
struct BP_BtlTheurgiaController_C_Clear final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlTheurgiaController_C_Clear) == 0x000001, "Wrong alignment on BP_BtlTheurgiaController_C_Clear");
static_assert(sizeof(BP_BtlTheurgiaController_C_Clear) == 0x000002, "Wrong size on BP_BtlTheurgiaController_C_Clear");
static_assert(offsetof(BP_BtlTheurgiaController_C_Clear, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_BtlTheurgiaController_C_Clear::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_Clear, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_BtlTheurgiaController_C_Clear::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_BtlTheurgiaController.BP_BtlTheurgiaController_C.HideOtherCharacters
// 0x0088 (0x0088 - 0x0000)
struct BP_BtlTheurgiaController_C_HideOtherCharacters final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CallFunc_GetActionTargets_ReturnValue;             // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingOffensiveSkill_ReturnValue;        // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSkillMixraid_ReturnValue;               // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABtlActor*>                      CallFunc_GetAllCharacterList_ReturnValue;          // 0x0050(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_Array_Get_Item_1;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base_1;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlTheurgiaController_C_HideOtherCharacters) == 0x000008, "Wrong alignment on BP_BtlTheurgiaController_C_HideOtherCharacters");
static_assert(sizeof(BP_BtlTheurgiaController_C_HideOtherCharacters) == 0x000088, "Wrong size on BP_BtlTheurgiaController_C_HideOtherCharacters");
static_assert(offsetof(BP_BtlTheurgiaController_C_HideOtherCharacters, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_BtlTheurgiaController_C_HideOtherCharacters::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_HideOtherCharacters, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_BtlTheurgiaController_C_HideOtherCharacters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_HideOtherCharacters, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_BtlTheurgiaController_C_HideOtherCharacters::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_HideOtherCharacters, CallFunc_GetActionTargets_ReturnValue) == 0x000010, "Member 'BP_BtlTheurgiaController_C_HideOtherCharacters::CallFunc_GetActionTargets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_HideOtherCharacters, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_BtlTheurgiaController_C_HideOtherCharacters::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_HideOtherCharacters, CallFunc_IsUsingOffensiveSkill_ReturnValue) == 0x000024, "Member 'BP_BtlTheurgiaController_C_HideOtherCharacters::CallFunc_IsUsingOffensiveSkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_HideOtherCharacters, CallFunc_IsSkillMixraid_ReturnValue) == 0x000025, "Member 'BP_BtlTheurgiaController_C_HideOtherCharacters::CallFunc_IsSkillMixraid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_HideOtherCharacters, Temp_int_Loop_Counter_Variable_1) == 0x000028, "Member 'BP_BtlTheurgiaController_C_HideOtherCharacters::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_HideOtherCharacters, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'BP_BtlTheurgiaController_C_HideOtherCharacters::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_HideOtherCharacters, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_BtlTheurgiaController_C_HideOtherCharacters::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_HideOtherCharacters, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_BtlTheurgiaController_C_HideOtherCharacters::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_HideOtherCharacters, K2Node_DynamicCast_AsBP_Btl_Character_Base) == 0x000040, "Member 'BP_BtlTheurgiaController_C_HideOtherCharacters::K2Node_DynamicCast_AsBP_Btl_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_HideOtherCharacters, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_BtlTheurgiaController_C_HideOtherCharacters::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_HideOtherCharacters, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'BP_BtlTheurgiaController_C_HideOtherCharacters::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_HideOtherCharacters, CallFunc_GetAllCharacterList_ReturnValue) == 0x000050, "Member 'BP_BtlTheurgiaController_C_HideOtherCharacters::CallFunc_GetAllCharacterList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_HideOtherCharacters, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'BP_BtlTheurgiaController_C_HideOtherCharacters::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_HideOtherCharacters, CallFunc_Array_Get_Item_1) == 0x000068, "Member 'BP_BtlTheurgiaController_C_HideOtherCharacters::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_HideOtherCharacters, CallFunc_Less_IntInt_ReturnValue_1) == 0x000070, "Member 'BP_BtlTheurgiaController_C_HideOtherCharacters::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_HideOtherCharacters, K2Node_DynamicCast_AsBP_Btl_Character_Base_1) == 0x000078, "Member 'BP_BtlTheurgiaController_C_HideOtherCharacters::K2Node_DynamicCast_AsBP_Btl_Character_Base_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_HideOtherCharacters, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'BP_BtlTheurgiaController_C_HideOtherCharacters::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_BtlTheurgiaController.BP_BtlTheurgiaController_C.GetRootTrans
// 0x0190 (0x0190 - 0x0000)
struct BP_BtlTheurgiaController_C_GetRootTrans final
{
public:
	float                                         XOffset;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             OutTrans;                                          // 0x0010(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FTransform                             Trans;                                             // 0x0040(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CallFunc_GetActionTargets_ReturnValue;             // 0x0080(0x0010)(ReferenceParm)
	struct FRotator                               CallFunc_AdjustEnemyTeammatesRotate_AdjustedRotate; // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeCylinder_Bottom_Center;               // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeCylinder_Radius;                      // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeCylinder_Height;                      // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00F0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0160(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlTheurgiaController_C_GetRootTrans) == 0x000010, "Wrong alignment on BP_BtlTheurgiaController_C_GetRootTrans");
static_assert(sizeof(BP_BtlTheurgiaController_C_GetRootTrans) == 0x000190, "Wrong size on BP_BtlTheurgiaController_C_GetRootTrans");
static_assert(offsetof(BP_BtlTheurgiaController_C_GetRootTrans, XOffset) == 0x000000, "Member 'BP_BtlTheurgiaController_C_GetRootTrans::XOffset' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_GetRootTrans, OutTrans) == 0x000010, "Member 'BP_BtlTheurgiaController_C_GetRootTrans::OutTrans' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_GetRootTrans, Trans) == 0x000040, "Member 'BP_BtlTheurgiaController_C_GetRootTrans::Trans' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_GetRootTrans, CallFunc_MakeRotator_ReturnValue) == 0x000070, "Member 'BP_BtlTheurgiaController_C_GetRootTrans::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_GetRootTrans, CallFunc_GetActionTargets_ReturnValue) == 0x000080, "Member 'BP_BtlTheurgiaController_C_GetRootTrans::CallFunc_GetActionTargets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_GetRootTrans, CallFunc_AdjustEnemyTeammatesRotate_AdjustedRotate) == 0x000090, "Member 'BP_BtlTheurgiaController_C_GetRootTrans::CallFunc_AdjustEnemyTeammatesRotate_AdjustedRotate' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_GetRootTrans, CallFunc_MakeCylinder_Bottom_Center) == 0x00009C, "Member 'BP_BtlTheurgiaController_C_GetRootTrans::CallFunc_MakeCylinder_Bottom_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_GetRootTrans, CallFunc_MakeCylinder_Radius) == 0x0000A8, "Member 'BP_BtlTheurgiaController_C_GetRootTrans::CallFunc_MakeCylinder_Radius' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_GetRootTrans, CallFunc_MakeCylinder_Height) == 0x0000AC, "Member 'BP_BtlTheurgiaController_C_GetRootTrans::CallFunc_MakeCylinder_Height' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_GetRootTrans, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000B0, "Member 'BP_BtlTheurgiaController_C_GetRootTrans::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_GetRootTrans, CallFunc_MakeVector_ReturnValue) == 0x0000B4, "Member 'BP_BtlTheurgiaController_C_GetRootTrans::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_GetRootTrans, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0000C0, "Member 'BP_BtlTheurgiaController_C_GetRootTrans::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_GetRootTrans, CallFunc_Add_VectorVector_ReturnValue) == 0x0000CC, "Member 'BP_BtlTheurgiaController_C_GetRootTrans::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_GetRootTrans, CallFunc_BreakVector_X) == 0x0000D8, "Member 'BP_BtlTheurgiaController_C_GetRootTrans::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_GetRootTrans, CallFunc_BreakVector_Y) == 0x0000DC, "Member 'BP_BtlTheurgiaController_C_GetRootTrans::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_GetRootTrans, CallFunc_BreakVector_Z) == 0x0000E0, "Member 'BP_BtlTheurgiaController_C_GetRootTrans::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_GetRootTrans, CallFunc_MakeVector_ReturnValue_1) == 0x0000E4, "Member 'BP_BtlTheurgiaController_C_GetRootTrans::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_GetRootTrans, CallFunc_MakeTransform_ReturnValue) == 0x0000F0, "Member 'BP_BtlTheurgiaController_C_GetRootTrans::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_GetRootTrans, CallFunc_BreakTransform_Location) == 0x000120, "Member 'BP_BtlTheurgiaController_C_GetRootTrans::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_GetRootTrans, CallFunc_BreakTransform_Rotation) == 0x00012C, "Member 'BP_BtlTheurgiaController_C_GetRootTrans::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_GetRootTrans, CallFunc_BreakTransform_Scale) == 0x000138, "Member 'BP_BtlTheurgiaController_C_GetRootTrans::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_GetRootTrans, CallFunc_BreakVector_X_1) == 0x000144, "Member 'BP_BtlTheurgiaController_C_GetRootTrans::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_GetRootTrans, CallFunc_BreakVector_Y_1) == 0x000148, "Member 'BP_BtlTheurgiaController_C_GetRootTrans::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_GetRootTrans, CallFunc_BreakVector_Z_1) == 0x00014C, "Member 'BP_BtlTheurgiaController_C_GetRootTrans::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_GetRootTrans, CallFunc_Add_FloatFloat_ReturnValue) == 0x000150, "Member 'BP_BtlTheurgiaController_C_GetRootTrans::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_GetRootTrans, CallFunc_MakeVector_ReturnValue_2) == 0x000154, "Member 'BP_BtlTheurgiaController_C_GetRootTrans::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_GetRootTrans, CallFunc_MakeTransform_ReturnValue_1) == 0x000160, "Member 'BP_BtlTheurgiaController_C_GetRootTrans::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");

// Function BP_BtlTheurgiaController.BP_BtlTheurgiaController_C.LocateStartPosition
// 0x0470 (0x0470 - 0x0000)
struct BP_BtlTheurgiaController_C_LocateStartPosition final
{
public:
	struct FFBtlTheurgiaLocOffset                 EnemyOffset;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PersonaNum;                                        // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0xC];                                       // 0x0014(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RootTrans;                                         // 0x0020(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CallFunc_GetActionTargets_ReturnValue;             // 0x0078(0x0010)(ReferenceParm)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetID_ReturnValue;                        // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0104(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFBtlTheurgiaLocOffset                 CallFunc_GetDataTableRowFromName_OutRow;           // 0x0110(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0xF];                                      // 0x0121(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRootTrans_OutTrans;                    // 0x0130(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetSkillID_ReturnValue;                   // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_AdjustEnemyTeammatesRotate_AdjustedRotate; // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyTeammates_Result;                  // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_172[0x6];                                      // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 CallFunc_GetCharacter_Character;                   // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlCharacterBase_C*                 CallFunc_GetCharacter_Character_1;                 // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSkillOrgia_ReturnValue;                 // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingOffensiveSkill_ReturnValue;        // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18B[0x1];                                      // 0x018B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStrega_ReturnValue;                     // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSkillMixraid_ReturnValue;               // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_196[0x2];                                      // 0x0196(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CallFunc_GetActionTargets_ReturnValue_1;           // 0x0198(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x3];                                      // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeCylinder_Bottom_Center;               // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeCylinder_Radius;                      // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeCylinder_Height;                      // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0204(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0220(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0250(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x025C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E5[0x3];                                      // 0x02E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 CallFunc_GetCharacter_Character_2;                 // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSkillMixraid_ReturnValue_1;             // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1[0x3];                                      // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F9[0x3];                                      // 0x02F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x02FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_AdjustEnemyTeammatesRotate_AdjustedRotate_1; // 0x0308(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0314(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0320(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x032C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0338(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0344(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0350(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x038C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_398[0x8];                                      // 0x0398(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x03A0(0x0030)(IsPlainOldData, NoDestructor)
	class ABP_BtlCharacterBase_C*                 CallFunc_GetCharacter_Character_3;                 // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x03D8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlTheurgiaController_C_LocateStartPosition) == 0x000010, "Wrong alignment on BP_BtlTheurgiaController_C_LocateStartPosition");
static_assert(sizeof(BP_BtlTheurgiaController_C_LocateStartPosition) == 0x000470, "Wrong size on BP_BtlTheurgiaController_C_LocateStartPosition");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, EnemyOffset) == 0x000000, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::EnemyOffset' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, PersonaNum) == 0x000010, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::PersonaNum' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, RootTrans) == 0x000020, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::RootTrans' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000050, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00005C, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_BreakRotator_Roll) == 0x000068, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_BreakRotator_Pitch) == 0x00006C, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_BreakRotator_Yaw) == 0x000070, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_GetActionTargets_ReturnValue) == 0x000078, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_GetActionTargets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_Add_FloatFloat_ReturnValue) == 0x000088, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_MakeRotator_ReturnValue) == 0x000098, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000A4, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_MakeTransform_ReturnValue) == 0x0000B0, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_GetActorScale3D_ReturnValue) == 0x0000E0, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_GetID_ReturnValue) == 0x0000EC, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_GetID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_Conv_IntToString_ReturnValue) == 0x0000F0, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_Array_Length_ReturnValue) == 0x000100, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_Conv_StringToName_ReturnValue) == 0x000104, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00010C, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_GetDataTableRowFromName_OutRow) == 0x000110, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000120, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_GetRootTrans_OutTrans) == 0x000130, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_GetRootTrans_OutTrans' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_GetSkillID_ReturnValue) == 0x000160, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_GetSkillID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_AdjustEnemyTeammatesRotate_AdjustedRotate) == 0x000164, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_AdjustEnemyTeammatesRotate_AdjustedRotate' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000170, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_IsEnemyTeammates_Result) == 0x000171, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_IsEnemyTeammates_Result' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_GetCharacter_Character) == 0x000178, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_GetCharacter_Character' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_GetCharacter_Character_1) == 0x000180, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_GetCharacter_Character_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_IsSkillOrgia_ReturnValue) == 0x000188, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_IsSkillOrgia_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000189, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_IsUsingOffensiveSkill_ReturnValue) == 0x00018A, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_IsUsingOffensiveSkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, Temp_int_Variable) == 0x00018C, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_Add_IntInt_ReturnValue) == 0x000190, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_IsStrega_ReturnValue) == 0x000194, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_IsStrega_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_IsSkillMixraid_ReturnValue) == 0x000195, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_IsSkillMixraid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_GetActionTargets_ReturnValue_1) == 0x000198, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_GetActionTargets_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_BooleanOR_ReturnValue) == 0x0001A8, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_MakeCylinder_Bottom_Center) == 0x0001AC, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_MakeCylinder_Bottom_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_MakeCylinder_Radius) == 0x0001B8, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_MakeCylinder_Radius' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_MakeCylinder_Height) == 0x0001BC, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_MakeCylinder_Height' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0001C0, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_MakeVector_ReturnValue) == 0x0001C4, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_BreakTransform_Location) == 0x0001D0, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_BreakTransform_Rotation) == 0x0001DC, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_BreakTransform_Scale) == 0x0001E8, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_BreakRotator_Roll_1) == 0x0001F4, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_BreakRotator_Pitch_1) == 0x0001F8, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_BreakRotator_Yaw_1) == 0x0001FC, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000200, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_MakeVector_ReturnValue_1) == 0x000204, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_MakeRotator_ReturnValue_1) == 0x000210, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_MakeTransform_ReturnValue_1) == 0x000220, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_Add_VectorVector_ReturnValue) == 0x000250, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x00025C, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0002E4, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_GetCharacter_Character_2) == 0x0002E8, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_GetCharacter_Character_2' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_IsSkillMixraid_ReturnValue_1) == 0x0002F0, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_IsSkillMixraid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_Subtract_IntInt_ReturnValue) == 0x0002F4, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0002F8, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_MakeRotator_ReturnValue_2) == 0x0002FC, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_AdjustEnemyTeammatesRotate_AdjustedRotate_1) == 0x000308, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_AdjustEnemyTeammatesRotate_AdjustedRotate_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000314, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_BreakTransform_Location_1) == 0x000320, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_BreakTransform_Rotation_1) == 0x00032C, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_BreakTransform_Scale_1) == 0x000338, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000344, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_MakeTransform_ReturnValue_2) == 0x000350, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_BreakVector_X) == 0x000380, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_BreakVector_Y) == 0x000384, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_BreakVector_Z) == 0x000388, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_MakeVector_ReturnValue_2) == 0x00038C, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_MakeTransform_ReturnValue_3) == 0x0003A0, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_GetCharacter_Character_3) == 0x0003D0, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_GetCharacter_Character_3' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x0003D8, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_LocateStartPosition, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000460, "Member 'BP_BtlTheurgiaController_C_LocateStartPosition::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");

// Function BP_BtlTheurgiaController.BP_BtlTheurgiaController_C.TurnigPersona
// 0x0070 (0x0070 - 0x0000)
struct BP_BtlTheurgiaController_C_TurnigPersona final
{
public:
	TArray<struct FVector>                        ScaleList;                                         // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSkillOrgia_ReturnValue;                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSkillMixraid_ReturnValue;               // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	TArray<struct FVector>                        K2Node_MakeArray_Array_1;                          // 0x0028(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_GetPersona_ReturnValue;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlPersonaBase_C*                   K2Node_DynamicCast_AsBP_Btl_Persona_Base;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlTheurgiaController_C_TurnigPersona) == 0x000008, "Wrong alignment on BP_BtlTheurgiaController_C_TurnigPersona");
static_assert(sizeof(BP_BtlTheurgiaController_C_TurnigPersona) == 0x000070, "Wrong size on BP_BtlTheurgiaController_C_TurnigPersona");
static_assert(offsetof(BP_BtlTheurgiaController_C_TurnigPersona, ScaleList) == 0x000000, "Member 'BP_BtlTheurgiaController_C_TurnigPersona::ScaleList' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_TurnigPersona, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_BtlTheurgiaController_C_TurnigPersona::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_TurnigPersona, CallFunc_IsSkillOrgia_ReturnValue) == 0x000014, "Member 'BP_BtlTheurgiaController_C_TurnigPersona::CallFunc_IsSkillOrgia_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_TurnigPersona, CallFunc_IsSkillMixraid_ReturnValue) == 0x000015, "Member 'BP_BtlTheurgiaController_C_TurnigPersona::CallFunc_IsSkillMixraid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_TurnigPersona, K2Node_MakeArray_Array) == 0x000018, "Member 'BP_BtlTheurgiaController_C_TurnigPersona::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_TurnigPersona, K2Node_MakeArray_Array_1) == 0x000028, "Member 'BP_BtlTheurgiaController_C_TurnigPersona::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_TurnigPersona, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_BtlTheurgiaController_C_TurnigPersona::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_TurnigPersona, CallFunc_Array_Get_Item) == 0x00003C, "Member 'BP_BtlTheurgiaController_C_TurnigPersona::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_TurnigPersona, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_BtlTheurgiaController_C_TurnigPersona::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_TurnigPersona, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_BtlTheurgiaController_C_TurnigPersona::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_TurnigPersona, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_BtlTheurgiaController_C_TurnigPersona::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_TurnigPersona, CallFunc_GetPersona_ReturnValue) == 0x000058, "Member 'BP_BtlTheurgiaController_C_TurnigPersona::CallFunc_GetPersona_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_TurnigPersona, K2Node_DynamicCast_AsBP_Btl_Persona_Base) == 0x000060, "Member 'BP_BtlTheurgiaController_C_TurnigPersona::K2Node_DynamicCast_AsBP_Btl_Persona_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_TurnigPersona, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_BtlTheurgiaController_C_TurnigPersona::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BtlTheurgiaController.BP_BtlTheurgiaController_C.RestorePersona
// 0x0030 (0x0030 - 0x0000)
struct BP_BtlTheurgiaController_C_RestorePersona final
{
public:
	int32                                         PersonaNum;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSkillOrgia_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSkillMixraid_ReturnValue;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_GetPersona_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlPersonaBase_C*                   K2Node_DynamicCast_AsBP_Btl_Persona_Base;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlTheurgiaController_C_RestorePersona) == 0x000008, "Wrong alignment on BP_BtlTheurgiaController_C_RestorePersona");
static_assert(sizeof(BP_BtlTheurgiaController_C_RestorePersona) == 0x000030, "Wrong size on BP_BtlTheurgiaController_C_RestorePersona");
static_assert(offsetof(BP_BtlTheurgiaController_C_RestorePersona, PersonaNum) == 0x000000, "Member 'BP_BtlTheurgiaController_C_RestorePersona::PersonaNum' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_RestorePersona, CallFunc_IsSkillOrgia_ReturnValue) == 0x000004, "Member 'BP_BtlTheurgiaController_C_RestorePersona::CallFunc_IsSkillOrgia_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_RestorePersona, CallFunc_IsSkillMixraid_ReturnValue) == 0x000005, "Member 'BP_BtlTheurgiaController_C_RestorePersona::CallFunc_IsSkillMixraid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_RestorePersona, Temp_int_Variable) == 0x000008, "Member 'BP_BtlTheurgiaController_C_RestorePersona::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_RestorePersona, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_BtlTheurgiaController_C_RestorePersona::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_RestorePersona, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'BP_BtlTheurgiaController_C_RestorePersona::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_RestorePersona, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000014, "Member 'BP_BtlTheurgiaController_C_RestorePersona::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_RestorePersona, CallFunc_GetPersona_ReturnValue) == 0x000018, "Member 'BP_BtlTheurgiaController_C_RestorePersona::CallFunc_GetPersona_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_RestorePersona, K2Node_DynamicCast_AsBP_Btl_Persona_Base) == 0x000020, "Member 'BP_BtlTheurgiaController_C_RestorePersona::K2Node_DynamicCast_AsBP_Btl_Persona_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_RestorePersona, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_BtlTheurgiaController_C_RestorePersona::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BtlTheurgiaController.BP_BtlTheurgiaController_C.SetupTheurgiaSkillPerformance
// 0x00C0 (0x00C0 - 0x0000)
struct BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance final
{
public:
	int32                                         PersonaNum;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_BtlHumanBase_C*                     K2Node_DynamicCast_AsBP_Btl_Human_Base;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStrega_ReturnValue;                     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOrgia_ReturnValue;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlHumanBase_C*                     K2Node_DynamicCast_AsBP_Btl_Human_Base_1;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_SelectRotator_ReturnValue;                // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44[0xC];                                       // 0x0044(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSkillMixraid_ReturnValue;               // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlHumanBase_C*                     K2Node_DynamicCast_AsBP_Btl_Human_Base_2;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_GetPersona_ReturnValue;                   // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlPersonaBase_C*                   K2Node_DynamicCast_AsBP_Btl_Persona_Base;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance) == 0x000010, "Wrong alignment on BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance");
static_assert(sizeof(BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance) == 0x0000C0, "Wrong size on BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance");
static_assert(offsetof(BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance, PersonaNum) == 0x000000, "Member 'BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance::PersonaNum' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance, CallFunc_MakeRotator_ReturnValue) == 0x000004, "Member 'BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance, K2Node_DynamicCast_AsBP_Btl_Human_Base) == 0x000010, "Member 'BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance::K2Node_DynamicCast_AsBP_Btl_Human_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance, CallFunc_IsStrega_ReturnValue) == 0x000019, "Member 'BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance::CallFunc_IsStrega_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance, CallFunc_IsOrgia_ReturnValue) == 0x00001A, "Member 'BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance::CallFunc_IsOrgia_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance, K2Node_DynamicCast_AsBP_Btl_Human_Base_1) == 0x000020, "Member 'BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance::K2Node_DynamicCast_AsBP_Btl_Human_Base_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance, CallFunc_MakeRotator_ReturnValue_1) == 0x00002C, "Member 'BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance, CallFunc_SelectRotator_ReturnValue) == 0x000038, "Member 'BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance::CallFunc_SelectRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance, CallFunc_MakeTransform_ReturnValue) == 0x000050, "Member 'BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance, Temp_int_Variable) == 0x000080, "Member 'BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance, CallFunc_IsSkillMixraid_ReturnValue) == 0x000084, "Member 'BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance::CallFunc_IsSkillMixraid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance, K2Node_DynamicCast_AsBP_Btl_Human_Base_2) == 0x000090, "Member 'BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance::K2Node_DynamicCast_AsBP_Btl_Human_Base_2' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance, K2Node_DynamicCast_bSuccess_2) == 0x000098, "Member 'BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance, CallFunc_GetPersona_ReturnValue) == 0x0000A0, "Member 'BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance::CallFunc_GetPersona_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance, K2Node_DynamicCast_AsBP_Btl_Persona_Base) == 0x0000A8, "Member 'BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance::K2Node_DynamicCast_AsBP_Btl_Persona_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance, K2Node_DynamicCast_bSuccess_3) == 0x0000B0, "Member 'BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000B4, "Member 'BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_BtlTheurgiaController_C_SetupTheurgiaSkillPerformance::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BtlTheurgiaController.BP_BtlTheurgiaController_C.Choice Seq to Play
// 0x0030 (0x0030 - 0x0000)
struct BP_BtlTheurgiaController_C_Choice_Seq_to_Play final
{
public:
	TSoftObjectPtr<class ULevelSequence>          SequenceToPlay;                                    // 0x0000(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsPersonaEvolved_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlTheurgiaController_C_Choice_Seq_to_Play) == 0x000008, "Wrong alignment on BP_BtlTheurgiaController_C_Choice_Seq_to_Play");
static_assert(sizeof(BP_BtlTheurgiaController_C_Choice_Seq_to_Play) == 0x000030, "Wrong size on BP_BtlTheurgiaController_C_Choice_Seq_to_Play");
static_assert(offsetof(BP_BtlTheurgiaController_C_Choice_Seq_to_Play, SequenceToPlay) == 0x000000, "Member 'BP_BtlTheurgiaController_C_Choice_Seq_to_Play::SequenceToPlay' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_Choice_Seq_to_Play, CallFunc_IsPersonaEvolved_ReturnValue) == 0x000028, "Member 'BP_BtlTheurgiaController_C_Choice_Seq_to_Play::CallFunc_IsPersonaEvolved_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_Choice_Seq_to_Play, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000029, "Member 'BP_BtlTheurgiaController_C_Choice_Seq_to_Play::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");

// Function BP_BtlTheurgiaController.BP_BtlTheurgiaController_C.SetEquipVisible
// 0x0010 (0x0010 - 0x0000)
struct BP_BtlTheurgiaController_C_SetEquipVisible final
{
public:
	class ABP_BtlHumanBase_C*                     K2Node_DynamicCast_AsBP_Btl_Human_Base;            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlTheurgiaController_C_SetEquipVisible) == 0x000008, "Wrong alignment on BP_BtlTheurgiaController_C_SetEquipVisible");
static_assert(sizeof(BP_BtlTheurgiaController_C_SetEquipVisible) == 0x000010, "Wrong size on BP_BtlTheurgiaController_C_SetEquipVisible");
static_assert(offsetof(BP_BtlTheurgiaController_C_SetEquipVisible, K2Node_DynamicCast_AsBP_Btl_Human_Base) == 0x000000, "Member 'BP_BtlTheurgiaController_C_SetEquipVisible::K2Node_DynamicCast_AsBP_Btl_Human_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_SetEquipVisible, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'BP_BtlTheurgiaController_C_SetEquipVisible::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_SetEquipVisible, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_BtlTheurgiaController_C_SetEquipVisible::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlTheurgiaController.BP_BtlTheurgiaController_C.TurningCharacter
// 0x0030 (0x0030 - 0x0000)
struct BP_BtlTheurgiaController_C_TurningCharacter final
{
public:
	TScriptInterface<class IBtlAegisInterface>    K2Node_DynamicCast_AsBtl_Aegis_Interface;          // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBtlBossStregaInterface> K2Node_DynamicCast_AsBtl_Boss_Strega_Interface;    // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStrega_ReturnValue;                     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlTheurgiaController_C_TurningCharacter) == 0x000008, "Wrong alignment on BP_BtlTheurgiaController_C_TurningCharacter");
static_assert(sizeof(BP_BtlTheurgiaController_C_TurningCharacter) == 0x000030, "Wrong size on BP_BtlTheurgiaController_C_TurningCharacter");
static_assert(offsetof(BP_BtlTheurgiaController_C_TurningCharacter, K2Node_DynamicCast_AsBtl_Aegis_Interface) == 0x000000, "Member 'BP_BtlTheurgiaController_C_TurningCharacter::K2Node_DynamicCast_AsBtl_Aegis_Interface' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_TurningCharacter, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_BtlTheurgiaController_C_TurningCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_TurningCharacter, K2Node_DynamicCast_AsBtl_Boss_Strega_Interface) == 0x000018, "Member 'BP_BtlTheurgiaController_C_TurningCharacter::K2Node_DynamicCast_AsBtl_Boss_Strega_Interface' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_TurningCharacter, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_BtlTheurgiaController_C_TurningCharacter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_TurningCharacter, CallFunc_IsStrega_ReturnValue) == 0x000029, "Member 'BP_BtlTheurgiaController_C_TurningCharacter::CallFunc_IsStrega_ReturnValue' has a wrong offset!");

// Function BP_BtlTheurgiaController.BP_BtlTheurgiaController_C.RestoreEnemy
// 0x00A8 (0x00A8 - 0x0000)
struct BP_BtlTheurgiaController_C_RestoreEnemy final
{
public:
	TArray<class ABtlActor*>                      CallFunc_GetActionTargets_ReturnValue;             // 0x0000(0x0010)(ReferenceParm)
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x001C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlTheurgiaController_C_RestoreEnemy) == 0x000008, "Wrong alignment on BP_BtlTheurgiaController_C_RestoreEnemy");
static_assert(sizeof(BP_BtlTheurgiaController_C_RestoreEnemy) == 0x0000A8, "Wrong size on BP_BtlTheurgiaController_C_RestoreEnemy");
static_assert(offsetof(BP_BtlTheurgiaController_C_RestoreEnemy, CallFunc_GetActionTargets_ReturnValue) == 0x000000, "Member 'BP_BtlTheurgiaController_C_RestoreEnemy::CallFunc_GetActionTargets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_RestoreEnemy, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_BtlTheurgiaController_C_RestoreEnemy::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_RestoreEnemy, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_BtlTheurgiaController_C_RestoreEnemy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_RestoreEnemy, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x00001C, "Member 'BP_BtlTheurgiaController_C_RestoreEnemy::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_RestoreEnemy, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0000A4, "Member 'BP_BtlTheurgiaController_C_RestoreEnemy::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_BtlTheurgiaController.BP_BtlTheurgiaController_C.AdjustEnemyTeammatesRotate
// 0x0028 (0x0028 - 0x0000)
struct BP_BtlTheurgiaController_C_AdjustEnemyTeammatesRotate final
{
public:
	struct FRotator                               InRotate;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               AdjustedRotate;                                    // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyTeammates_Result;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlTheurgiaController_C_AdjustEnemyTeammatesRotate) == 0x000004, "Wrong alignment on BP_BtlTheurgiaController_C_AdjustEnemyTeammatesRotate");
static_assert(sizeof(BP_BtlTheurgiaController_C_AdjustEnemyTeammatesRotate) == 0x000028, "Wrong size on BP_BtlTheurgiaController_C_AdjustEnemyTeammatesRotate");
static_assert(offsetof(BP_BtlTheurgiaController_C_AdjustEnemyTeammatesRotate, InRotate) == 0x000000, "Member 'BP_BtlTheurgiaController_C_AdjustEnemyTeammatesRotate::InRotate' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_AdjustEnemyTeammatesRotate, AdjustedRotate) == 0x00000C, "Member 'BP_BtlTheurgiaController_C_AdjustEnemyTeammatesRotate::AdjustedRotate' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_AdjustEnemyTeammatesRotate, CallFunc_ComposeRotators_ReturnValue) == 0x000018, "Member 'BP_BtlTheurgiaController_C_AdjustEnemyTeammatesRotate::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTheurgiaController_C_AdjustEnemyTeammatesRotate, CallFunc_IsEnemyTeammates_Result) == 0x000024, "Member 'BP_BtlTheurgiaController_C_AdjustEnemyTeammatesRotate::CallFunc_IsEnemyTeammates_Result' has a wrong offset!");

}

