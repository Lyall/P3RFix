#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AutoPlay

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "AutoPlay_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class AutoPlay.APCommandBase
// 0x0038 (0x0060 - 0x0028)
class UAPCommandBase : public UObject
{
public:
	uint8                                         Pad_28[0x38];                                      // 0x0028(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"APCommandBase">();
	}
	static class UAPCommandBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAPCommandBase>();
	}
};
static_assert(alignof(UAPCommandBase) == 0x000008, "Wrong alignment on UAPCommandBase");
static_assert(sizeof(UAPCommandBase) == 0x000060, "Wrong size on UAPCommandBase");

// Class AutoPlay.APCmdStartRecord
// 0x0008 (0x0068 - 0x0060)
class UAPCmdStartRecord final : public UAPCommandBase
{
public:
	TWeakObjectPtr<class UAutoPlayGameInstanceSubsystem> APSubsystem_;                                      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"APCmdStartRecord">();
	}
	static class UAPCmdStartRecord* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAPCmdStartRecord>();
	}
};
static_assert(alignof(UAPCmdStartRecord) == 0x000008, "Wrong alignment on UAPCmdStartRecord");
static_assert(sizeof(UAPCmdStartRecord) == 0x000068, "Wrong size on UAPCmdStartRecord");
static_assert(offsetof(UAPCmdStartRecord, APSubsystem_) == 0x000060, "Member 'UAPCmdStartRecord::APSubsystem_' has a wrong offset!");

// Class AutoPlay.APCmdEndRecord
// 0x0008 (0x0068 - 0x0060)
class UAPCmdEndRecord final : public UAPCommandBase
{
public:
	TWeakObjectPtr<class UAutoPlayGameInstanceSubsystem> APSubsystem_;                                      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"APCmdEndRecord">();
	}
	static class UAPCmdEndRecord* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAPCmdEndRecord>();
	}
};
static_assert(alignof(UAPCmdEndRecord) == 0x000008, "Wrong alignment on UAPCmdEndRecord");
static_assert(sizeof(UAPCmdEndRecord) == 0x000068, "Wrong size on UAPCmdEndRecord");
static_assert(offsetof(UAPCmdEndRecord, APSubsystem_) == 0x000060, "Member 'UAPCmdEndRecord::APSubsystem_' has a wrong offset!");

// Class AutoPlay.APCmdEcho
// 0x0018 (0x0078 - 0x0060)
class UAPCmdEcho final : public UAPCommandBase
{
public:
	uint8                                         Pad_60[0x18];                                      // 0x0060(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"APCmdEcho">();
	}
	static class UAPCmdEcho* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAPCmdEcho>();
	}
};
static_assert(alignof(UAPCmdEcho) == 0x000008, "Wrong alignment on UAPCmdEcho");
static_assert(sizeof(UAPCmdEcho) == 0x000078, "Wrong size on UAPCmdEcho");

// Class AutoPlay.APCmdNop
// 0x0000 (0x0060 - 0x0060)
class UAPCmdNop final : public UAPCommandBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"APCmdNop">();
	}
	static class UAPCmdNop* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAPCmdNop>();
	}
};
static_assert(alignof(UAPCmdNop) == 0x000008, "Wrong alignment on UAPCmdNop");
static_assert(sizeof(UAPCmdNop) == 0x000060, "Wrong size on UAPCmdNop");

// Class AutoPlay.APCmdRecordRequest
// 0x0020 (0x0048 - 0x0028)
class UAPCmdRecordRequest final : public UObject
{
public:
	uint8                                         Pad_28[0x20];                                      // 0x0028(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"APCmdRecordRequest">();
	}
	static class UAPCmdRecordRequest* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAPCmdRecordRequest>();
	}
};
static_assert(alignof(UAPCmdRecordRequest) == 0x000008, "Wrong alignment on UAPCmdRecordRequest");
static_assert(sizeof(UAPCmdRecordRequest) == 0x000048, "Wrong size on UAPCmdRecordRequest");

// Class AutoPlay.APCmdScreenShot
// 0x0010 (0x0070 - 0x0060)
class UAPCmdScreenShot final : public UAPCommandBase
{
public:
	uint8                                         Pad_60[0x10];                                      // 0x0060(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"APCmdScreenShot">();
	}
	static class UAPCmdScreenShot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAPCmdScreenShot>();
	}
};
static_assert(alignof(UAPCmdScreenShot) == 0x000008, "Wrong alignment on UAPCmdScreenShot");
static_assert(sizeof(UAPCmdScreenShot) == 0x000070, "Wrong size on UAPCmdScreenShot");

// Class AutoPlay.APCmdSlowMotion
// 0x0008 (0x0068 - 0x0060)
class UAPCmdSlowMotion final : public UAPCommandBase
{
public:
	uint8                                         Pad_60[0x8];                                       // 0x0060(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"APCmdSlowMotion">();
	}
	static class UAPCmdSlowMotion* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAPCmdSlowMotion>();
	}
};
static_assert(alignof(UAPCmdSlowMotion) == 0x000008, "Wrong alignment on UAPCmdSlowMotion");
static_assert(sizeof(UAPCmdSlowMotion) == 0x000068, "Wrong size on UAPCmdSlowMotion");

// Class AutoPlay.APCmdWaitForNextCommand
// 0x0010 (0x0070 - 0x0060)
class UAPCmdWaitForNextCommand final : public UAPCommandBase
{
public:
	uint8                                         Pad_60[0x8];                                       // 0x0060(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class UAutoPlayGameInstanceSubsystem> APSubsystem_;                                      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"APCmdWaitForNextCommand">();
	}
	static class UAPCmdWaitForNextCommand* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAPCmdWaitForNextCommand>();
	}
};
static_assert(alignof(UAPCmdWaitForNextCommand) == 0x000008, "Wrong alignment on UAPCmdWaitForNextCommand");
static_assert(sizeof(UAPCmdWaitForNextCommand) == 0x000070, "Wrong size on UAPCmdWaitForNextCommand");
static_assert(offsetof(UAPCmdWaitForNextCommand, APSubsystem_) == 0x000068, "Member 'UAPCmdWaitForNextCommand::APSubsystem_' has a wrong offset!");

// Class AutoPlay.AutoPlayCommandLogger
// 0x0068 (0x0090 - 0x0028)
class UAutoPlayCommandLogger final : public UObject
{
public:
	uint8                                         Pad_28[0x68];                                      // 0x0028(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AutoPlayCommandLogger">();
	}
	static class UAutoPlayCommandLogger* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAutoPlayCommandLogger>();
	}
};
static_assert(alignof(UAutoPlayCommandLogger) == 0x000008, "Wrong alignment on UAutoPlayCommandLogger");
static_assert(sizeof(UAutoPlayCommandLogger) == 0x000090, "Wrong size on UAutoPlayCommandLogger");

// Class AutoPlay.AutoPlayCommandManager
// 0x0028 (0x0050 - 0x0028)
class UAutoPlayCommandManager final : public UObject
{
public:
	TArray<struct FAPCommandReserve>              CommandQueue_;                                     // 0x0028(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_38[0x18];                                      // 0x0038(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AutoPlayCommandManager">();
	}
	static class UAutoPlayCommandManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAutoPlayCommandManager>();
	}
};
static_assert(alignof(UAutoPlayCommandManager) == 0x000008, "Wrong alignment on UAutoPlayCommandManager");
static_assert(sizeof(UAutoPlayCommandManager) == 0x000050, "Wrong size on UAutoPlayCommandManager");
static_assert(offsetof(UAutoPlayCommandManager, CommandQueue_) == 0x000028, "Member 'UAutoPlayCommandManager::CommandQueue_' has a wrong offset!");

// Class AutoPlay.AutoPlayCommandServer
// 0x0030 (0x0058 - 0x0028)
class UAutoPlayCommandServer final : public UObject
{
public:
	class UAtlTcpListener*                        Server_;                                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAutoPlayCommandManager*                CommandManager_;                                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAutoPlayCommandLogger*                 CommandLogger_;                                    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAPCommandBase*                         CurrentCommand_;                                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_48[0x10];                                      // 0x0048(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnConnected(const class UAtlSocketBase* Socket);
	void OnDisconnected(const class UAtlSocketBase* Socket);
	void OnReceivedAsString(const class UAtlSocketBase* Socket, const class FString& Str);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AutoPlayCommandServer">();
	}
	static class UAutoPlayCommandServer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAutoPlayCommandServer>();
	}
};
static_assert(alignof(UAutoPlayCommandServer) == 0x000008, "Wrong alignment on UAutoPlayCommandServer");
static_assert(sizeof(UAutoPlayCommandServer) == 0x000058, "Wrong size on UAutoPlayCommandServer");
static_assert(offsetof(UAutoPlayCommandServer, Server_) == 0x000028, "Member 'UAutoPlayCommandServer::Server_' has a wrong offset!");
static_assert(offsetof(UAutoPlayCommandServer, CommandManager_) == 0x000030, "Member 'UAutoPlayCommandServer::CommandManager_' has a wrong offset!");
static_assert(offsetof(UAutoPlayCommandServer, CommandLogger_) == 0x000038, "Member 'UAutoPlayCommandServer::CommandLogger_' has a wrong offset!");
static_assert(offsetof(UAutoPlayCommandServer, CurrentCommand_) == 0x000040, "Member 'UAutoPlayCommandServer::CurrentCommand_' has a wrong offset!");

// Class AutoPlay.AutoPlayCommandWorker
// 0x00A8 (0x00D0 - 0x0028)
class UAutoPlayCommandWorker final : public UObject
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAPCommandInstance>             CommandQueue_;                                     // 0x0038(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAPCommandInstance                     CurrentCommand_;                                   // 0x0050(0x0050)(NativeAccessSpecifierPrivate)
	uint8                                         Pad_A0[0x30];                                      // 0x00A0(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AutoPlayCommandWorker">();
	}
	static class UAutoPlayCommandWorker* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAutoPlayCommandWorker>();
	}
};
static_assert(alignof(UAutoPlayCommandWorker) == 0x000010, "Wrong alignment on UAutoPlayCommandWorker");
static_assert(sizeof(UAutoPlayCommandWorker) == 0x0000D0, "Wrong size on UAutoPlayCommandWorker");
static_assert(offsetof(UAutoPlayCommandWorker, CommandQueue_) == 0x000038, "Member 'UAutoPlayCommandWorker::CommandQueue_' has a wrong offset!");
static_assert(offsetof(UAutoPlayCommandWorker, CurrentCommand_) == 0x000050, "Member 'UAutoPlayCommandWorker::CurrentCommand_' has a wrong offset!");

// Class AutoPlay.AutoPlayEventObject
// 0x0010 (0x0038 - 0x0028)
class UAutoPlayEventObject final : public UObject
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AutoPlayEventObject">();
	}
	static class UAutoPlayEventObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAutoPlayEventObject>();
	}
};
static_assert(alignof(UAutoPlayEventObject) == 0x000008, "Wrong alignment on UAutoPlayEventObject");
static_assert(sizeof(UAutoPlayEventObject) == 0x000038, "Wrong size on UAutoPlayEventObject");

// Class AutoPlay.AutoPlayGameInstanceSubsystem
// 0x0388 (0x03B8 - 0x0030)
class UAutoPlayGameInstanceSubsystem final : public UGameInstanceSubsystem
{
public:
	uint8                                         Pad_30[0x230];                                     // 0x0030(0x0230)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<uint32, class UAutoPlayEventObject*>     EventObjects_;                                     // 0x0260(0x0050)(Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_2B0[0x28];                                     // 0x02B0(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	class UFont*                                  FontObject_;                                       // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAutoPlayCommandServer*                 CommandServer_;                                    // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAutoPlayCommandLogger*                 CommandLogger_;                                    // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAutoPlayCommandManager*                CommandManager_;                                   // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAutoPlayCommandWorker*                 CommandWorker_;                                    // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_300[0x98];                                     // 0x0300(0x0098)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnTickControlDelegate_;                            // 0x0398(0x0010)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPrivate)
	class UTexture*                               PadImage_;                                         // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTexture*                               PadPress_;                                         // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AutoPlayGameInstanceSubsystem">();
	}
	static class UAutoPlayGameInstanceSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAutoPlayGameInstanceSubsystem>();
	}
};
static_assert(alignof(UAutoPlayGameInstanceSubsystem) == 0x000008, "Wrong alignment on UAutoPlayGameInstanceSubsystem");
static_assert(sizeof(UAutoPlayGameInstanceSubsystem) == 0x0003B8, "Wrong size on UAutoPlayGameInstanceSubsystem");
static_assert(offsetof(UAutoPlayGameInstanceSubsystem, EventObjects_) == 0x000260, "Member 'UAutoPlayGameInstanceSubsystem::EventObjects_' has a wrong offset!");
static_assert(offsetof(UAutoPlayGameInstanceSubsystem, FontObject_) == 0x0002D8, "Member 'UAutoPlayGameInstanceSubsystem::FontObject_' has a wrong offset!");
static_assert(offsetof(UAutoPlayGameInstanceSubsystem, CommandServer_) == 0x0002E0, "Member 'UAutoPlayGameInstanceSubsystem::CommandServer_' has a wrong offset!");
static_assert(offsetof(UAutoPlayGameInstanceSubsystem, CommandLogger_) == 0x0002E8, "Member 'UAutoPlayGameInstanceSubsystem::CommandLogger_' has a wrong offset!");
static_assert(offsetof(UAutoPlayGameInstanceSubsystem, CommandManager_) == 0x0002F0, "Member 'UAutoPlayGameInstanceSubsystem::CommandManager_' has a wrong offset!");
static_assert(offsetof(UAutoPlayGameInstanceSubsystem, CommandWorker_) == 0x0002F8, "Member 'UAutoPlayGameInstanceSubsystem::CommandWorker_' has a wrong offset!");
static_assert(offsetof(UAutoPlayGameInstanceSubsystem, OnTickControlDelegate_) == 0x000398, "Member 'UAutoPlayGameInstanceSubsystem::OnTickControlDelegate_' has a wrong offset!");
static_assert(offsetof(UAutoPlayGameInstanceSubsystem, PadImage_) == 0x0003A8, "Member 'UAutoPlayGameInstanceSubsystem::PadImage_' has a wrong offset!");
static_assert(offsetof(UAutoPlayGameInstanceSubsystem, PadPress_) == 0x0003B0, "Member 'UAutoPlayGameInstanceSubsystem::PadPress_' has a wrong offset!");

}

