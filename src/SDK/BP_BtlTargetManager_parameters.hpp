#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtlTargetManager

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_BtlTargetManager.BP_BtlTargetManager_C.ExecuteUbergraph_BP_BtlTargetManager
// 0x0004 (0x0004 - 0x0000)
struct BP_BtlTargetManager_C_ExecuteUbergraph_BP_BtlTargetManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlTargetManager_C_ExecuteUbergraph_BP_BtlTargetManager) == 0x000004, "Wrong alignment on BP_BtlTargetManager_C_ExecuteUbergraph_BP_BtlTargetManager");
static_assert(sizeof(BP_BtlTargetManager_C_ExecuteUbergraph_BP_BtlTargetManager) == 0x000004, "Wrong size on BP_BtlTargetManager_C_ExecuteUbergraph_BP_BtlTargetManager");
static_assert(offsetof(BP_BtlTargetManager_C_ExecuteUbergraph_BP_BtlTargetManager, EntryPoint) == 0x000000, "Member 'BP_BtlTargetManager_C_ExecuteUbergraph_BP_BtlTargetManager::EntryPoint' has a wrong offset!");

// Function BP_BtlTargetManager.BP_BtlTargetManager_C.GetTargetsCharacters
// 0x0050 (0x0050 - 0x0000)
struct BP_BtlTargetManager_C_GetTargetsCharacters final
{
public:
	TArray<class ABP_BtlCharacterBase_C*>         Characters;                                        // 0x0000(0x0010)(Parm, OutParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CallFunc_GetTargets_ReturnValue;                   // 0x0020(0x0010)(ReferenceParm)
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlTargetManager_C_GetTargetsCharacters) == 0x000008, "Wrong alignment on BP_BtlTargetManager_C_GetTargetsCharacters");
static_assert(sizeof(BP_BtlTargetManager_C_GetTargetsCharacters) == 0x000050, "Wrong size on BP_BtlTargetManager_C_GetTargetsCharacters");
static_assert(offsetof(BP_BtlTargetManager_C_GetTargetsCharacters, Characters) == 0x000000, "Member 'BP_BtlTargetManager_C_GetTargetsCharacters::Characters' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetTargetsCharacters, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_BtlTargetManager_C_GetTargetsCharacters::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetTargetsCharacters, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_BtlTargetManager_C_GetTargetsCharacters::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetTargetsCharacters, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_BtlTargetManager_C_GetTargetsCharacters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetTargetsCharacters, CallFunc_GetTargets_ReturnValue) == 0x000020, "Member 'BP_BtlTargetManager_C_GetTargetsCharacters::CallFunc_GetTargets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetTargetsCharacters, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_BtlTargetManager_C_GetTargetsCharacters::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetTargetsCharacters, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_BtlTargetManager_C_GetTargetsCharacters::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetTargetsCharacters, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'BP_BtlTargetManager_C_GetTargetsCharacters::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetTargetsCharacters, CallFunc_Less_IntInt_ReturnValue) == 0x00003D, "Member 'BP_BtlTargetManager_C_GetTargetsCharacters::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetTargetsCharacters, K2Node_DynamicCast_AsBP_Btl_Character_Base) == 0x000040, "Member 'BP_BtlTargetManager_C_GetTargetsCharacters::K2Node_DynamicCast_AsBP_Btl_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetTargetsCharacters, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_BtlTargetManager_C_GetTargetsCharacters::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetTargetsCharacters, CallFunc_Array_AddUnique_ReturnValue) == 0x00004C, "Member 'BP_BtlTargetManager_C_GetTargetsCharacters::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_BtlTargetManager.BP_BtlTargetManager_C.GetMain
// 0x0020 (0x0020 - 0x0000)
struct BP_BtlTargetManager_C_GetMain final
{
public:
	class ABP_BtlCharacterBase_C*                 Character;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABtlActor*                              CallFunc_GetMainCharacter_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlTargetManager_C_GetMain) == 0x000008, "Wrong alignment on BP_BtlTargetManager_C_GetMain");
static_assert(sizeof(BP_BtlTargetManager_C_GetMain) == 0x000020, "Wrong size on BP_BtlTargetManager_C_GetMain");
static_assert(offsetof(BP_BtlTargetManager_C_GetMain, Character) == 0x000000, "Member 'BP_BtlTargetManager_C_GetMain::Character' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMain, CallFunc_GetMainCharacter_ReturnValue) == 0x000008, "Member 'BP_BtlTargetManager_C_GetMain::CallFunc_GetMainCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMain, K2Node_DynamicCast_AsBP_Btl_Character_Base) == 0x000010, "Member 'BP_BtlTargetManager_C_GetMain::K2Node_DynamicCast_AsBP_Btl_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMain, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_BtlTargetManager_C_GetMain::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BtlTargetManager.BP_BtlTargetManager_C.GetEffectTargetsCharacters
// 0x0058 (0x0058 - 0x0000)
struct BP_BtlTargetManager_C_GetEffectTargetsCharacters final
{
public:
	TArray<class ABP_BtlCharacterBase_C*>         Characters;                                        // 0x0000(0x0010)(Parm, OutParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CallFunc_GetEffectTargets_ReturnValue;             // 0x0020(0x0010)(ReferenceParm)
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlTargetManager_C_GetEffectTargetsCharacters) == 0x000008, "Wrong alignment on BP_BtlTargetManager_C_GetEffectTargetsCharacters");
static_assert(sizeof(BP_BtlTargetManager_C_GetEffectTargetsCharacters) == 0x000058, "Wrong size on BP_BtlTargetManager_C_GetEffectTargetsCharacters");
static_assert(offsetof(BP_BtlTargetManager_C_GetEffectTargetsCharacters, Characters) == 0x000000, "Member 'BP_BtlTargetManager_C_GetEffectTargetsCharacters::Characters' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetEffectTargetsCharacters, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_BtlTargetManager_C_GetEffectTargetsCharacters::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetEffectTargetsCharacters, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_BtlTargetManager_C_GetEffectTargetsCharacters::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetEffectTargetsCharacters, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_BtlTargetManager_C_GetEffectTargetsCharacters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetEffectTargetsCharacters, CallFunc_GetEffectTargets_ReturnValue) == 0x000020, "Member 'BP_BtlTargetManager_C_GetEffectTargetsCharacters::CallFunc_GetEffectTargets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetEffectTargetsCharacters, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_BtlTargetManager_C_GetEffectTargetsCharacters::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetEffectTargetsCharacters, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_BtlTargetManager_C_GetEffectTargetsCharacters::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetEffectTargetsCharacters, K2Node_DynamicCast_AsBP_Btl_Character_Base) == 0x000040, "Member 'BP_BtlTargetManager_C_GetEffectTargetsCharacters::K2Node_DynamicCast_AsBP_Btl_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetEffectTargetsCharacters, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_BtlTargetManager_C_GetEffectTargetsCharacters::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetEffectTargetsCharacters, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BP_BtlTargetManager_C_GetEffectTargetsCharacters::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetEffectTargetsCharacters, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_BtlTargetManager_C_GetEffectTargetsCharacters::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetEffectTargetsCharacters, CallFunc_Array_Add_ReturnValue) == 0x000054, "Member 'BP_BtlTargetManager_C_GetEffectTargetsCharacters::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_BtlTargetManager.BP_BtlTargetManager_C.GetMainCharacterCylinder
// 0x00A8 (0x00A8 - 0x0000)
struct BP_BtlTargetManager_C_GetMainCharacterCylinder final
{
public:
	bool                                          UseCommonCylinder;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ExceptPersona;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Bottom_Center;                                     // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Height;                                            // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Cylinder_Center;                                   // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      List;                                              // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class ABtlActor*                              CallFunc_GetMainCharacter_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeCylinder_Bottom_Center;               // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeCylinder_Radius;                      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeCylinder_Height;                      // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_GetPersona_ReturnValue;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckPersonaValid_ReturnValue;            // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlHumanBase_C*                     K2Node_DynamicCast_AsBP_Btl_Human_Base;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckHidingPersonaForSkillScene_ReturnValue; // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_BtlTargetManager_C_GetMainCharacterCylinder) == 0x000008, "Wrong alignment on BP_BtlTargetManager_C_GetMainCharacterCylinder");
static_assert(sizeof(BP_BtlTargetManager_C_GetMainCharacterCylinder) == 0x0000A8, "Wrong size on BP_BtlTargetManager_C_GetMainCharacterCylinder");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainCharacterCylinder, UseCommonCylinder) == 0x000000, "Member 'BP_BtlTargetManager_C_GetMainCharacterCylinder::UseCommonCylinder' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainCharacterCylinder, ExceptPersona) == 0x000001, "Member 'BP_BtlTargetManager_C_GetMainCharacterCylinder::ExceptPersona' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainCharacterCylinder, Bottom_Center) == 0x000004, "Member 'BP_BtlTargetManager_C_GetMainCharacterCylinder::Bottom_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainCharacterCylinder, Radius) == 0x000010, "Member 'BP_BtlTargetManager_C_GetMainCharacterCylinder::Radius' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainCharacterCylinder, Height) == 0x000014, "Member 'BP_BtlTargetManager_C_GetMainCharacterCylinder::Height' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainCharacterCylinder, Cylinder_Center) == 0x000018, "Member 'BP_BtlTargetManager_C_GetMainCharacterCylinder::Cylinder_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainCharacterCylinder, List) == 0x000028, "Member 'BP_BtlTargetManager_C_GetMainCharacterCylinder::List' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainCharacterCylinder, CallFunc_GetMainCharacter_ReturnValue) == 0x000038, "Member 'BP_BtlTargetManager_C_GetMainCharacterCylinder::CallFunc_GetMainCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainCharacterCylinder, CallFunc_MakeCylinder_Bottom_Center) == 0x000040, "Member 'BP_BtlTargetManager_C_GetMainCharacterCylinder::CallFunc_MakeCylinder_Bottom_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainCharacterCylinder, CallFunc_MakeCylinder_Radius) == 0x00004C, "Member 'BP_BtlTargetManager_C_GetMainCharacterCylinder::CallFunc_MakeCylinder_Radius' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainCharacterCylinder, CallFunc_MakeCylinder_Height) == 0x000050, "Member 'BP_BtlTargetManager_C_GetMainCharacterCylinder::CallFunc_MakeCylinder_Height' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainCharacterCylinder, CallFunc_GetPersona_ReturnValue) == 0x000058, "Member 'BP_BtlTargetManager_C_GetMainCharacterCylinder::CallFunc_GetPersona_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainCharacterCylinder, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000060, "Member 'BP_BtlTargetManager_C_GetMainCharacterCylinder::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainCharacterCylinder, CallFunc_Array_AddUnique_ReturnValue) == 0x000064, "Member 'BP_BtlTargetManager_C_GetMainCharacterCylinder::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainCharacterCylinder, CallFunc_MakeVector_ReturnValue) == 0x000068, "Member 'BP_BtlTargetManager_C_GetMainCharacterCylinder::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainCharacterCylinder, CallFunc_CheckPersonaValid_ReturnValue) == 0x000074, "Member 'BP_BtlTargetManager_C_GetMainCharacterCylinder::CallFunc_CheckPersonaValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainCharacterCylinder, CallFunc_Add_VectorVector_ReturnValue) == 0x000078, "Member 'BP_BtlTargetManager_C_GetMainCharacterCylinder::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainCharacterCylinder, K2Node_DynamicCast_AsBP_Btl_Human_Base) == 0x000088, "Member 'BP_BtlTargetManager_C_GetMainCharacterCylinder::K2Node_DynamicCast_AsBP_Btl_Human_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainCharacterCylinder, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'BP_BtlTargetManager_C_GetMainCharacterCylinder::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainCharacterCylinder, CallFunc_CheckHidingPersonaForSkillScene_ReturnValue) == 0x000091, "Member 'BP_BtlTargetManager_C_GetMainCharacterCylinder::CallFunc_CheckHidingPersonaForSkillScene_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainCharacterCylinder, K2Node_MakeArray_Array) == 0x000098, "Member 'BP_BtlTargetManager_C_GetMainCharacterCylinder::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_BtlTargetManager.BP_BtlTargetManager_C.GetTargetsCylinder
// 0x0068 (0x0068 - 0x0000)
struct BP_BtlTargetManager_C_GetTargetsCylinder final
{
public:
	bool                                          UseCommonCylinder;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Bottom_Center;                                     // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Height;                                            // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Cylinder_Center;                                   // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_BtlCharacterBase_C*>         CallFunc_GetTargetsCharacters_Characters;          // 0x0028(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_MakeCylinder_Bottom_Center;               // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeCylinder_Radius;                      // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeCylinder_Height;                      // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlTargetManager_C_GetTargetsCylinder) == 0x000008, "Wrong alignment on BP_BtlTargetManager_C_GetTargetsCylinder");
static_assert(sizeof(BP_BtlTargetManager_C_GetTargetsCylinder) == 0x000068, "Wrong size on BP_BtlTargetManager_C_GetTargetsCylinder");
static_assert(offsetof(BP_BtlTargetManager_C_GetTargetsCylinder, UseCommonCylinder) == 0x000000, "Member 'BP_BtlTargetManager_C_GetTargetsCylinder::UseCommonCylinder' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetTargetsCylinder, Bottom_Center) == 0x000004, "Member 'BP_BtlTargetManager_C_GetTargetsCylinder::Bottom_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetTargetsCylinder, Radius) == 0x000010, "Member 'BP_BtlTargetManager_C_GetTargetsCylinder::Radius' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetTargetsCylinder, Height) == 0x000014, "Member 'BP_BtlTargetManager_C_GetTargetsCylinder::Height' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetTargetsCylinder, Cylinder_Center) == 0x000018, "Member 'BP_BtlTargetManager_C_GetTargetsCylinder::Cylinder_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetTargetsCylinder, CallFunc_GetTargetsCharacters_Characters) == 0x000028, "Member 'BP_BtlTargetManager_C_GetTargetsCylinder::CallFunc_GetTargetsCharacters_Characters' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetTargetsCylinder, CallFunc_MakeCylinder_Bottom_Center) == 0x000038, "Member 'BP_BtlTargetManager_C_GetTargetsCylinder::CallFunc_MakeCylinder_Bottom_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetTargetsCylinder, CallFunc_MakeCylinder_Radius) == 0x000044, "Member 'BP_BtlTargetManager_C_GetTargetsCylinder::CallFunc_MakeCylinder_Radius' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetTargetsCylinder, CallFunc_MakeCylinder_Height) == 0x000048, "Member 'BP_BtlTargetManager_C_GetTargetsCylinder::CallFunc_MakeCylinder_Height' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetTargetsCylinder, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00004C, "Member 'BP_BtlTargetManager_C_GetTargetsCylinder::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetTargetsCylinder, CallFunc_MakeVector_ReturnValue) == 0x000050, "Member 'BP_BtlTargetManager_C_GetTargetsCylinder::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetTargetsCylinder, CallFunc_Add_VectorVector_ReturnValue) == 0x00005C, "Member 'BP_BtlTargetManager_C_GetTargetsCylinder::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_BtlTargetManager.BP_BtlTargetManager_C.IsOtherCharacter
// 0x0050 (0x0050 - 0x0000)
struct BP_BtlTargetManager_C_IsOtherCharacter final
{
public:
	class ABP_BtlCharacterBase_C*                 CheckChara;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OtherCharacter;                                    // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Found;                                             // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_BtlCharacterBase_C*>         CallFunc_GetTargetsCharacters_Characters;          // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 CallFunc_GetMain_Character;                        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlCharacterBase_C*                 CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlTargetManager_C_IsOtherCharacter) == 0x000008, "Wrong alignment on BP_BtlTargetManager_C_IsOtherCharacter");
static_assert(sizeof(BP_BtlTargetManager_C_IsOtherCharacter) == 0x000050, "Wrong size on BP_BtlTargetManager_C_IsOtherCharacter");
static_assert(offsetof(BP_BtlTargetManager_C_IsOtherCharacter, CheckChara) == 0x000000, "Member 'BP_BtlTargetManager_C_IsOtherCharacter::CheckChara' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_IsOtherCharacter, OtherCharacter) == 0x000008, "Member 'BP_BtlTargetManager_C_IsOtherCharacter::OtherCharacter' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_IsOtherCharacter, Found) == 0x000009, "Member 'BP_BtlTargetManager_C_IsOtherCharacter::Found' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_IsOtherCharacter, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_BtlTargetManager_C_IsOtherCharacter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_IsOtherCharacter, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_BtlTargetManager_C_IsOtherCharacter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_IsOtherCharacter, CallFunc_Not_PreBool_ReturnValue) == 0x000014, "Member 'BP_BtlTargetManager_C_IsOtherCharacter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_IsOtherCharacter, CallFunc_GetTargetsCharacters_Characters) == 0x000018, "Member 'BP_BtlTargetManager_C_IsOtherCharacter::CallFunc_GetTargetsCharacters_Characters' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_IsOtherCharacter, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_BtlTargetManager_C_IsOtherCharacter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_IsOtherCharacter, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_BtlTargetManager_C_IsOtherCharacter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_IsOtherCharacter, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_BtlTargetManager_C_IsOtherCharacter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_IsOtherCharacter, CallFunc_GetMain_Character) == 0x000038, "Member 'BP_BtlTargetManager_C_IsOtherCharacter::CallFunc_GetMain_Character' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_IsOtherCharacter, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_BtlTargetManager_C_IsOtherCharacter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_IsOtherCharacter, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000048, "Member 'BP_BtlTargetManager_C_IsOtherCharacter::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_IsOtherCharacter, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000049, "Member 'BP_BtlTargetManager_C_IsOtherCharacter::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");

// Function BP_BtlTargetManager.BP_BtlTargetManager_C.GetCombineCylinder
// 0x00C8 (0x00C8 - 0x0000)
struct BP_BtlTargetManager_C_GetCombineCylinder final
{
public:
	bool                                          UseCommonCylinder;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ExceptPersonaCylinder;                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Bottom_Center;                                     // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Height;                                            // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Cylinder_Center;                                   // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_BtlCharacterBase_C*>         List;                                              // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlCharacterBase_C*                 CallFunc_GetMain_Character;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckHidingPersonaForSkillScene_ReturnValue; // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlCharacterBase_C*                 CallFunc_GetMain_Character_1;                      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_BtlCharacterBase_C*>         CallFunc_GetMainWithPersona_Character;             // 0x0058(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeCylinder_Bottom_Center;               // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeCylinder_Radius;                      // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeCylinder_Height;                      // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_BtlCharacterBase_C*>         CallFunc_GetTargetsCharacters_Characters;          // 0x00B8(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_BtlTargetManager_C_GetCombineCylinder) == 0x000008, "Wrong alignment on BP_BtlTargetManager_C_GetCombineCylinder");
static_assert(sizeof(BP_BtlTargetManager_C_GetCombineCylinder) == 0x0000C8, "Wrong size on BP_BtlTargetManager_C_GetCombineCylinder");
static_assert(offsetof(BP_BtlTargetManager_C_GetCombineCylinder, UseCommonCylinder) == 0x000000, "Member 'BP_BtlTargetManager_C_GetCombineCylinder::UseCommonCylinder' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetCombineCylinder, ExceptPersonaCylinder) == 0x000001, "Member 'BP_BtlTargetManager_C_GetCombineCylinder::ExceptPersonaCylinder' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetCombineCylinder, Bottom_Center) == 0x000004, "Member 'BP_BtlTargetManager_C_GetCombineCylinder::Bottom_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetCombineCylinder, Radius) == 0x000010, "Member 'BP_BtlTargetManager_C_GetCombineCylinder::Radius' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetCombineCylinder, Height) == 0x000014, "Member 'BP_BtlTargetManager_C_GetCombineCylinder::Height' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetCombineCylinder, Cylinder_Center) == 0x000018, "Member 'BP_BtlTargetManager_C_GetCombineCylinder::Cylinder_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetCombineCylinder, List) == 0x000028, "Member 'BP_BtlTargetManager_C_GetCombineCylinder::List' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetCombineCylinder, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_BtlTargetManager_C_GetCombineCylinder::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetCombineCylinder, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_BtlTargetManager_C_GetCombineCylinder::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetCombineCylinder, CallFunc_GetMain_Character) == 0x000040, "Member 'BP_BtlTargetManager_C_GetCombineCylinder::CallFunc_GetMain_Character' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetCombineCylinder, CallFunc_CheckHidingPersonaForSkillScene_ReturnValue) == 0x000048, "Member 'BP_BtlTargetManager_C_GetCombineCylinder::CallFunc_CheckHidingPersonaForSkillScene_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetCombineCylinder, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_BtlTargetManager_C_GetCombineCylinder::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetCombineCylinder, CallFunc_GetMain_Character_1) == 0x000050, "Member 'BP_BtlTargetManager_C_GetCombineCylinder::CallFunc_GetMain_Character_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetCombineCylinder, CallFunc_GetMainWithPersona_Character) == 0x000058, "Member 'BP_BtlTargetManager_C_GetCombineCylinder::CallFunc_GetMainWithPersona_Character' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetCombineCylinder, CallFunc_Array_AddUnique_ReturnValue) == 0x000068, "Member 'BP_BtlTargetManager_C_GetCombineCylinder::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetCombineCylinder, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_BtlTargetManager_C_GetCombineCylinder::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetCombineCylinder, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BP_BtlTargetManager_C_GetCombineCylinder::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetCombineCylinder, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'BP_BtlTargetManager_C_GetCombineCylinder::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetCombineCylinder, CallFunc_MakeCylinder_Bottom_Center) == 0x000080, "Member 'BP_BtlTargetManager_C_GetCombineCylinder::CallFunc_MakeCylinder_Bottom_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetCombineCylinder, CallFunc_MakeCylinder_Radius) == 0x00008C, "Member 'BP_BtlTargetManager_C_GetCombineCylinder::CallFunc_MakeCylinder_Radius' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetCombineCylinder, CallFunc_MakeCylinder_Height) == 0x000090, "Member 'BP_BtlTargetManager_C_GetCombineCylinder::CallFunc_MakeCylinder_Height' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetCombineCylinder, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000094, "Member 'BP_BtlTargetManager_C_GetCombineCylinder::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetCombineCylinder, CallFunc_MakeVector_ReturnValue) == 0x000098, "Member 'BP_BtlTargetManager_C_GetCombineCylinder::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetCombineCylinder, CallFunc_Array_AddUnique_ReturnValue_1) == 0x0000A4, "Member 'BP_BtlTargetManager_C_GetCombineCylinder::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetCombineCylinder, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A8, "Member 'BP_BtlTargetManager_C_GetCombineCylinder::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetCombineCylinder, CallFunc_GetTargetsCharacters_Characters) == 0x0000B8, "Member 'BP_BtlTargetManager_C_GetCombineCylinder::CallFunc_GetTargetsCharacters_Characters' has a wrong offset!");

// Function BP_BtlTargetManager.BP_BtlTargetManager_C.GetMainWithPersona
// 0x0068 (0x0068 - 0x0000)
struct BP_BtlTargetManager_C_GetMainWithPersona final
{
public:
	TArray<class ABP_BtlCharacterBase_C*>         Character;                                         // 0x0000(0x0010)(Parm, OutParm)
	class ABP_BtlCharacterBase_C*                 NewLocalVar_0;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_BtlCharacterBase_C*>         List;                                              // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class ABP_BtlCharacterBase_C*                 CallFunc_GetMain_Character;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABtlActor*                              CallFunc_GetPersona_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckPersonaValid_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlPersonaBase_C*                   K2Node_DynamicCast_AsBP_Btl_Persona_Base;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlHumanBase_C*                     K2Node_DynamicCast_AsBP_Btl_Human_Base;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlTargetManager_C_GetMainWithPersona) == 0x000008, "Wrong alignment on BP_BtlTargetManager_C_GetMainWithPersona");
static_assert(sizeof(BP_BtlTargetManager_C_GetMainWithPersona) == 0x000068, "Wrong size on BP_BtlTargetManager_C_GetMainWithPersona");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainWithPersona, Character) == 0x000000, "Member 'BP_BtlTargetManager_C_GetMainWithPersona::Character' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainWithPersona, NewLocalVar_0) == 0x000010, "Member 'BP_BtlTargetManager_C_GetMainWithPersona::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainWithPersona, List) == 0x000018, "Member 'BP_BtlTargetManager_C_GetMainWithPersona::List' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainWithPersona, CallFunc_GetMain_Character) == 0x000028, "Member 'BP_BtlTargetManager_C_GetMainWithPersona::CallFunc_GetMain_Character' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainWithPersona, CallFunc_GetPersona_ReturnValue) == 0x000030, "Member 'BP_BtlTargetManager_C_GetMainWithPersona::CallFunc_GetPersona_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainWithPersona, CallFunc_CheckPersonaValid_ReturnValue) == 0x000038, "Member 'BP_BtlTargetManager_C_GetMainWithPersona::CallFunc_CheckPersonaValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainWithPersona, K2Node_DynamicCast_AsBP_Btl_Persona_Base) == 0x000040, "Member 'BP_BtlTargetManager_C_GetMainWithPersona::K2Node_DynamicCast_AsBP_Btl_Persona_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainWithPersona, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_BtlTargetManager_C_GetMainWithPersona::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainWithPersona, K2Node_DynamicCast_AsBP_Btl_Human_Base) == 0x000050, "Member 'BP_BtlTargetManager_C_GetMainWithPersona::K2Node_DynamicCast_AsBP_Btl_Human_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainWithPersona, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_BtlTargetManager_C_GetMainWithPersona::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainWithPersona, CallFunc_Array_AddUnique_ReturnValue) == 0x00005C, "Member 'BP_BtlTargetManager_C_GetMainWithPersona::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainWithPersona, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000060, "Member 'BP_BtlTargetManager_C_GetMainWithPersona::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");

// Function BP_BtlTargetManager.BP_BtlTargetManager_C.CheckTargetSelfOnly
// 0x0038 (0x0038 - 0x0000)
struct BP_BtlTargetManager_C_CheckTargetSelfOnly final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Work;                                              // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_GetMainCharacter_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_BtlCharacterBase_C*>         CallFunc_GetTargetsCharacters_Characters;          // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlTargetManager_C_CheckTargetSelfOnly) == 0x000008, "Wrong alignment on BP_BtlTargetManager_C_CheckTargetSelfOnly");
static_assert(sizeof(BP_BtlTargetManager_C_CheckTargetSelfOnly) == 0x000038, "Wrong size on BP_BtlTargetManager_C_CheckTargetSelfOnly");
static_assert(offsetof(BP_BtlTargetManager_C_CheckTargetSelfOnly, Result) == 0x000000, "Member 'BP_BtlTargetManager_C_CheckTargetSelfOnly::Result' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_CheckTargetSelfOnly, Work) == 0x000001, "Member 'BP_BtlTargetManager_C_CheckTargetSelfOnly::Work' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_CheckTargetSelfOnly, CallFunc_GetMainCharacter_ReturnValue) == 0x000008, "Member 'BP_BtlTargetManager_C_CheckTargetSelfOnly::CallFunc_GetMainCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_CheckTargetSelfOnly, CallFunc_GetTargetsCharacters_Characters) == 0x000010, "Member 'BP_BtlTargetManager_C_CheckTargetSelfOnly::CallFunc_GetTargetsCharacters_Characters' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_CheckTargetSelfOnly, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_BtlTargetManager_C_CheckTargetSelfOnly::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_CheckTargetSelfOnly, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_BtlTargetManager_C_CheckTargetSelfOnly::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_CheckTargetSelfOnly, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000030, "Member 'BP_BtlTargetManager_C_CheckTargetSelfOnly::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_CheckTargetSelfOnly, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000031, "Member 'BP_BtlTargetManager_C_CheckTargetSelfOnly::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_BtlTargetManager.BP_BtlTargetManager_C.CheckTargetsIncludeSelf
// 0x0040 (0x0040 - 0x0000)
struct BP_BtlTargetManager_C_CheckTargetsIncludeSelf final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Work;                                              // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABtlActor*                              CallFunc_GetMainCharacter_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_BtlCharacterBase_C*>         CallFunc_GetTargetsCharacters_Characters;          // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlTargetManager_C_CheckTargetsIncludeSelf) == 0x000008, "Wrong alignment on BP_BtlTargetManager_C_CheckTargetsIncludeSelf");
static_assert(sizeof(BP_BtlTargetManager_C_CheckTargetsIncludeSelf) == 0x000040, "Wrong size on BP_BtlTargetManager_C_CheckTargetsIncludeSelf");
static_assert(offsetof(BP_BtlTargetManager_C_CheckTargetsIncludeSelf, Result) == 0x000000, "Member 'BP_BtlTargetManager_C_CheckTargetsIncludeSelf::Result' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_CheckTargetsIncludeSelf, Work) == 0x000001, "Member 'BP_BtlTargetManager_C_CheckTargetsIncludeSelf::Work' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_CheckTargetsIncludeSelf, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_BtlTargetManager_C_CheckTargetsIncludeSelf::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_CheckTargetsIncludeSelf, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_BtlTargetManager_C_CheckTargetsIncludeSelf::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_CheckTargetsIncludeSelf, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_BtlTargetManager_C_CheckTargetsIncludeSelf::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_CheckTargetsIncludeSelf, CallFunc_GetMainCharacter_ReturnValue) == 0x000010, "Member 'BP_BtlTargetManager_C_CheckTargetsIncludeSelf::CallFunc_GetMainCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_CheckTargetsIncludeSelf, CallFunc_GetTargetsCharacters_Characters) == 0x000018, "Member 'BP_BtlTargetManager_C_CheckTargetsIncludeSelf::CallFunc_GetTargetsCharacters_Characters' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_CheckTargetsIncludeSelf, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_BtlTargetManager_C_CheckTargetsIncludeSelf::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_CheckTargetsIncludeSelf, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_BtlTargetManager_C_CheckTargetsIncludeSelf::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_CheckTargetsIncludeSelf, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_BtlTargetManager_C_CheckTargetsIncludeSelf::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_CheckTargetsIncludeSelf, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000039, "Member 'BP_BtlTargetManager_C_CheckTargetsIncludeSelf::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_BtlTargetManager.BP_BtlTargetManager_C.CheckTargetsIncludePlayerAndEnemy
// 0x0040 (0x0040 - 0x0000)
struct BP_BtlTargetManager_C_CheckTargetsIncludePlayerAndEnemy final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          FoundPlayer;                                       // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          FoundEnemy;                                        // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_BtlCharacterBase_C*>         CallFunc_GetTargetsCharacters_Characters;          // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemy_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlTargetManager_C_CheckTargetsIncludePlayerAndEnemy) == 0x000008, "Wrong alignment on BP_BtlTargetManager_C_CheckTargetsIncludePlayerAndEnemy");
static_assert(sizeof(BP_BtlTargetManager_C_CheckTargetsIncludePlayerAndEnemy) == 0x000040, "Wrong size on BP_BtlTargetManager_C_CheckTargetsIncludePlayerAndEnemy");
static_assert(offsetof(BP_BtlTargetManager_C_CheckTargetsIncludePlayerAndEnemy, Result) == 0x000000, "Member 'BP_BtlTargetManager_C_CheckTargetsIncludePlayerAndEnemy::Result' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_CheckTargetsIncludePlayerAndEnemy, FoundPlayer) == 0x000001, "Member 'BP_BtlTargetManager_C_CheckTargetsIncludePlayerAndEnemy::FoundPlayer' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_CheckTargetsIncludePlayerAndEnemy, FoundEnemy) == 0x000002, "Member 'BP_BtlTargetManager_C_CheckTargetsIncludePlayerAndEnemy::FoundEnemy' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_CheckTargetsIncludePlayerAndEnemy, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_BtlTargetManager_C_CheckTargetsIncludePlayerAndEnemy::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_CheckTargetsIncludePlayerAndEnemy, CallFunc_BooleanAND_ReturnValue) == 0x000008, "Member 'BP_BtlTargetManager_C_CheckTargetsIncludePlayerAndEnemy::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_CheckTargetsIncludePlayerAndEnemy, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_BtlTargetManager_C_CheckTargetsIncludePlayerAndEnemy::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_CheckTargetsIncludePlayerAndEnemy, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_BtlTargetManager_C_CheckTargetsIncludePlayerAndEnemy::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_CheckTargetsIncludePlayerAndEnemy, CallFunc_GetTargetsCharacters_Characters) == 0x000018, "Member 'BP_BtlTargetManager_C_CheckTargetsIncludePlayerAndEnemy::CallFunc_GetTargetsCharacters_Characters' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_CheckTargetsIncludePlayerAndEnemy, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_BtlTargetManager_C_CheckTargetsIncludePlayerAndEnemy::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_CheckTargetsIncludePlayerAndEnemy, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_BtlTargetManager_C_CheckTargetsIncludePlayerAndEnemy::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_CheckTargetsIncludePlayerAndEnemy, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_BtlTargetManager_C_CheckTargetsIncludePlayerAndEnemy::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_CheckTargetsIncludePlayerAndEnemy, CallFunc_IsEnemy_ReturnValue) == 0x000039, "Member 'BP_BtlTargetManager_C_CheckTargetsIncludePlayerAndEnemy::CallFunc_IsEnemy_ReturnValue' has a wrong offset!");

// Function BP_BtlTargetManager.BP_BtlTargetManager_C.GetMainAndTargets
// 0x0068 (0x0068 - 0x0000)
struct BP_BtlTargetManager_C_GetMainAndTargets final
{
public:
	TArray<class ABtlActor*>                      OutResult;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class ABtlActor*>                      OutResult2;                                        // 0x0010(0x0010)(Parm, OutParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 CallFunc_GetMain_Character;                        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_BtlCharacterBase_C*>         CallFunc_GetTargetsCharacters_Characters;          // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlTargetManager_C_GetMainAndTargets) == 0x000008, "Wrong alignment on BP_BtlTargetManager_C_GetMainAndTargets");
static_assert(sizeof(BP_BtlTargetManager_C_GetMainAndTargets) == 0x000068, "Wrong size on BP_BtlTargetManager_C_GetMainAndTargets");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainAndTargets, OutResult) == 0x000000, "Member 'BP_BtlTargetManager_C_GetMainAndTargets::OutResult' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainAndTargets, OutResult2) == 0x000010, "Member 'BP_BtlTargetManager_C_GetMainAndTargets::OutResult2' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainAndTargets, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_BtlTargetManager_C_GetMainAndTargets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainAndTargets, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_BtlTargetManager_C_GetMainAndTargets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainAndTargets, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_BtlTargetManager_C_GetMainAndTargets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainAndTargets, CallFunc_GetMain_Character) == 0x000030, "Member 'BP_BtlTargetManager_C_GetMainAndTargets::CallFunc_GetMain_Character' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainAndTargets, CallFunc_Array_Add_ReturnValue) == 0x000038, "Member 'BP_BtlTargetManager_C_GetMainAndTargets::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainAndTargets, CallFunc_GetTargetsCharacters_Characters) == 0x000040, "Member 'BP_BtlTargetManager_C_GetMainAndTargets::CallFunc_GetTargetsCharacters_Characters' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainAndTargets, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_BtlTargetManager_C_GetMainAndTargets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainAndTargets, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_BtlTargetManager_C_GetMainAndTargets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainAndTargets, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_BtlTargetManager_C_GetMainAndTargets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_GetMainAndTargets, CallFunc_Array_Add_ReturnValue_1) == 0x000064, "Member 'BP_BtlTargetManager_C_GetMainAndTargets::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_BtlTargetManager.BP_BtlTargetManager_C.IsEnchantCharacter
// 0x0020 (0x0020 - 0x0000)
struct BP_BtlTargetManager_C_IsEnchantCharacter final
{
public:
	class ABP_BtlCharacterBase_C*                 CheckChara;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OtherCharacter;                                    // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Found;                                             // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 CallFunc_GetMain_Character;                        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlTargetManager_C_IsEnchantCharacter) == 0x000008, "Wrong alignment on BP_BtlTargetManager_C_IsEnchantCharacter");
static_assert(sizeof(BP_BtlTargetManager_C_IsEnchantCharacter) == 0x000020, "Wrong size on BP_BtlTargetManager_C_IsEnchantCharacter");
static_assert(offsetof(BP_BtlTargetManager_C_IsEnchantCharacter, CheckChara) == 0x000000, "Member 'BP_BtlTargetManager_C_IsEnchantCharacter::CheckChara' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_IsEnchantCharacter, OtherCharacter) == 0x000008, "Member 'BP_BtlTargetManager_C_IsEnchantCharacter::OtherCharacter' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_IsEnchantCharacter, Found) == 0x000009, "Member 'BP_BtlTargetManager_C_IsEnchantCharacter::Found' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_IsEnchantCharacter, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'BP_BtlTargetManager_C_IsEnchantCharacter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_IsEnchantCharacter, CallFunc_GetMain_Character) == 0x000010, "Member 'BP_BtlTargetManager_C_IsEnchantCharacter::CallFunc_GetMain_Character' has a wrong offset!");
static_assert(offsetof(BP_BtlTargetManager_C_IsEnchantCharacter, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'BP_BtlTargetManager_C_IsEnchantCharacter::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

}

