#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimNotify_PlayAtomCue

#include "Basic.hpp"


namespace SDK::Params
{

// Function AnimNotify_PlayAtomCue.PlayAtomCue_C.Received_Notify
// 0x0030 (0x0030 - 0x0000)
struct PlayAtomCue_C_Received_Notify final
{
public:
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Animation;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAtomComponent*                         CallFunc_PlaySoundForAnimNotify_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAtomComponent*                         CallFunc_PlaySoundForAnimNotify_ReturnValue_1;     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayAtomCue_C_Received_Notify) == 0x000008, "Wrong alignment on PlayAtomCue_C_Received_Notify");
static_assert(sizeof(PlayAtomCue_C_Received_Notify) == 0x000030, "Wrong size on PlayAtomCue_C_Received_Notify");
static_assert(offsetof(PlayAtomCue_C_Received_Notify, MeshComp) == 0x000000, "Member 'PlayAtomCue_C_Received_Notify::MeshComp' has a wrong offset!");
static_assert(offsetof(PlayAtomCue_C_Received_Notify, Animation) == 0x000008, "Member 'PlayAtomCue_C_Received_Notify::Animation' has a wrong offset!");
static_assert(offsetof(PlayAtomCue_C_Received_Notify, ReturnValue) == 0x000010, "Member 'PlayAtomCue_C_Received_Notify::ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayAtomCue_C_Received_Notify, CallFunc_PlaySoundForAnimNotify_ReturnValue) == 0x000018, "Member 'PlayAtomCue_C_Received_Notify::CallFunc_PlaySoundForAnimNotify_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayAtomCue_C_Received_Notify, CallFunc_PlaySoundForAnimNotify_ReturnValue_1) == 0x000020, "Member 'PlayAtomCue_C_Received_Notify::CallFunc_PlaySoundForAnimNotify_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayAtomCue_C_Received_Notify, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'PlayAtomCue_C_Received_Notify::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function AnimNotify_PlayAtomCue.PlayAtomCue_C.GetNotifyName
// 0x0048 (0x0048 - 0x0000)
struct PlayAtomCue_C_GetNotifyName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	class FString                                 NotifyName;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetNotifyName_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayAtomCue_C_GetNotifyName) == 0x000008, "Wrong alignment on PlayAtomCue_C_GetNotifyName");
static_assert(sizeof(PlayAtomCue_C_GetNotifyName) == 0x000048, "Wrong size on PlayAtomCue_C_GetNotifyName");
static_assert(offsetof(PlayAtomCue_C_GetNotifyName, ReturnValue) == 0x000000, "Member 'PlayAtomCue_C_GetNotifyName::ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayAtomCue_C_GetNotifyName, NotifyName) == 0x000010, "Member 'PlayAtomCue_C_GetNotifyName::NotifyName' has a wrong offset!");
static_assert(offsetof(PlayAtomCue_C_GetNotifyName, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'PlayAtomCue_C_GetNotifyName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayAtomCue_C_GetNotifyName, CallFunc_GetDisplayName_ReturnValue) == 0x000028, "Member 'PlayAtomCue_C_GetNotifyName::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayAtomCue_C_GetNotifyName, CallFunc_GetNotifyName_ReturnValue) == 0x000038, "Member 'PlayAtomCue_C_GetNotifyName::CallFunc_GetNotifyName_ReturnValue' has a wrong offset!");

}

