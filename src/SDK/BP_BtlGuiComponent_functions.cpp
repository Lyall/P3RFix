#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtlGuiComponent

#include "Basic.hpp"

#include "BP_BtlGuiComponent_classes.hpp"
#include "BP_BtlGuiComponent_parameters.hpp"


namespace SDK
{

// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.OnDebugKill__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::OnDebugKill__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "OnDebugKill__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.OnPromiseOK__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::OnPromiseOK__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "OnPromiseOK__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.OnPromiseCANCEL__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::OnPromiseCANCEL__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "OnPromiseCANCEL__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.onCallCutinModde__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsCutinMode                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BtlGuiComponent_C::OnCallCutinModde__DelegateSignature(bool IsCutinMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "onCallCutinModde__DelegateSignature");

	Params::BP_BtlGuiComponent_C_OnCallCutinModde__DelegateSignature Parms{};

	Parms.IsCutinMode = IsCutinMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.OnAsyncLoadCompleted__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::OnAsyncLoadCompleted__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "OnAsyncLoadCompleted__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.ExecuteUbergraph_BP_BtlGuiComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BtlGuiComponent_C::ExecuteUbergraph_BP_BtlGuiComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "ExecuteUbergraph_BP_BtlGuiComponent");

	Params::BP_BtlGuiComponent_C_ExecuteUbergraph_BP_BtlGuiComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.UpdateUICamera
// (BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::UpdateUICamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "UpdateUICamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.CallClearState
// (BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::CallClearState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "CallClearState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.CallPrevState
// (BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::CallPrevState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "CallPrevState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.OnBindGuiState
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Number                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BtlGuiComponent_C::OnBindGuiState(bool Flag, int32 Number)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "OnBindGuiState");

	Params::BP_BtlGuiComponent_C_OnBindGuiState Parms{};

	Parms.Flag = Flag;
	Parms.Number = Number;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.OnGUIDestroyed
// (BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::OnGUIDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "OnGUIDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.On Select Behind Target
// (BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::On_Select_Behind_Target()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "On Select Behind Target");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.On Select Next Target
// (BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::On_Select_Next_Target()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "On Select Next Target");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.On Initiate Gui
// (BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::On_Initiate_Gui()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "On Initiate Gui");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BtlGuiComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "ReceiveTick");

	Params::BP_BtlGuiComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.On Attack Melee Weapon
// (BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::On_Attack_Melee_Weapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "On Attack Melee Weapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.On Enchant Skill
// (BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::On_Enchant_Skill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "On Enchant Skill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.SetUIVisibleON
// (BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::SetUIVisibleON()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "SetUIVisibleON");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.SetBGVisibleON
// (BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::SetBGVisibleON()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "SetBGVisibleON");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.SetPlayerVisibleON
// (BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::SetPlayerVisibleON()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "SetPlayerVisibleON");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.SetUICaptureON
// (BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::SetUICaptureON()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "SetUICaptureON");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.SetEnemyVisibleON
// (BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::SetEnemyVisibleON()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "SetEnemyVisibleON");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.SetUIVisibleOFF
// (BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::SetUIVisibleOFF()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "SetUIVisibleOFF");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.SetBGViibleOFF
// (BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::SetBGViibleOFF()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "SetBGViibleOFF");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.SetPlayerVisibleOFF
// (BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::SetPlayerVisibleOFF()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "SetPlayerVisibleOFF");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.SetUICaptureOFF
// (BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::SetUICaptureOFF()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "SetUICaptureOFF");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.SetEnemyVisibleOFF
// (BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::SetEnemyVisibleOFF()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "SetEnemyVisibleOFF");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.DisableRush
// (BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::DisableRush()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "DisableRush");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.CallInputDelegate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBtlInputKey                     InputKey                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UBP_BtlGuiComponent_C::CallInputDelegate(const struct FBtlInputKey& InputKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "CallInputDelegate");

	Params::BP_BtlGuiComponent_C_CallInputDelegate Parms{};

	Parms.InputKey = std::move(InputKey);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.ChangeRush
// (BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::ChangeRush()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "ChangeRush");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.OnBindCommandInfo
// (BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::OnBindCommandInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "OnBindCommandInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.CallDebugKill
// (BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::CallDebugKill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "CallDebugKill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.On Bind Input
// (BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::On_Bind_Input()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "On Bind Input");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.OnGuard
// (BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::OnGuard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "OnGuard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.OnRequestSkillAgeing
// (BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::OnRequestSkillAgeing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "OnRequestSkillAgeing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.OnRequestPrevAction
// (BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::OnRequestPrevAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "OnRequestPrevAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.On TakeOver
// (BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::On_TakeOver()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "On TakeOver");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.OnUseItem
// (BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::OnUseItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "OnUseItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.OnRush
// (BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::OnRush()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "OnRush");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.Initiation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBtlCoreComponent*                Btl_Core                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_BtlTargetManager_C*           Btl_Targets                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_BtlActionManager_C*           Btl_Action                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_BtlCameraManagerComponent_C*  Btl_Camera                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBtlInputComponent*               Btl_Input                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_BtlUICameraComponent_C*       BtlUICamera                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BtlGuiComponent_C::Initiation(class UBtlCoreComponent* Btl_Core, class UBP_BtlTargetManager_C* Btl_Targets, class UBP_BtlActionManager_C* Btl_Action, class UBP_BtlCameraManagerComponent_C* Btl_Camera, class UBtlInputComponent* Btl_Input, class UBP_BtlUICameraComponent_C* BtlUICamera)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "Initiation");

	Params::BP_BtlGuiComponent_C_Initiation Parms{};

	Parms.Btl_Core = Btl_Core;
	Parms.Btl_Targets = Btl_Targets;
	Parms.Btl_Action = Btl_Action;
	Parms.Btl_Camera = Btl_Camera;
	Parms.Btl_Input = Btl_Input;
	Parms.BtlUICamera = BtlUICamera;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.SetCommandCamera
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::SetCommandCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "SetCommandCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.CheckKeyboardInput
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::CheckKeyboardInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "CheckKeyboardInput");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.StartCutinMode
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::StartCutinMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "StartCutinMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.RefleshCutinMode
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::RefleshCutinMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "RefleshCutinMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.BP_BtlGuiComponent_AutoGenFunc
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BtlGuiComponent_C::BP_BtlGuiComponent_AutoGenFunc(bool NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "BP_BtlGuiComponent_AutoGenFunc");

	Params::BP_BtlGuiComponent_C_BP_BtlGuiComponent_AutoGenFunc Parms{};

	Parms.NewParam = NewParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.SetUIVisivle
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnable                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BtlGuiComponent_C::SetUIVisivle(bool IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "SetUIVisivle");

	Params::BP_BtlGuiComponent_C_SetUIVisivle Parms{};

	Parms.IsEnable = IsEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.SetBGVisible
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BtlGuiComponent_C::SetBGVisible(bool InputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "SetBGVisible");

	Params::BP_BtlGuiComponent_C_SetBGVisible Parms{};

	Parms.InputPin = InputPin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.SetPlayerVisible
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Input_pin                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BtlGuiComponent_C::SetPlayerVisible(bool Input_pin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "SetPlayerVisible");

	Params::BP_BtlGuiComponent_C_SetPlayerVisible Parms{};

	Parms.Input_pin = Input_pin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.SetUICaptureEnable
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BtlGuiComponent_C::SetUICaptureEnable(bool InputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "SetUICaptureEnable");

	Params::BP_BtlGuiComponent_C_SetUICaptureEnable Parms{};

	Parms.InputPin = InputPin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.SetEnemyVisible
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Input_pin                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BtlGuiComponent_C::SetEnemyVisible(bool Input_pin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "SetEnemyVisible");

	Params::BP_BtlGuiComponent_C_SetEnemyVisible Parms{};

	Parms.Input_pin = Input_pin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.On Gui Setup
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBtlCoreComponent*                BtlCore_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBtlInputComponent*               BtlInput_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BtlGuiComponent_C::On_Gui_Setup(class UBtlCoreComponent* BtlCore_0, class UBtlInputComponent* BtlInput_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "On Gui Setup");

	Params::BP_BtlGuiComponent_C_On_Gui_Setup Parms{};

	Parms.BtlCore_0 = BtlCore_0;
	Parms.BtlInput_0 = BtlInput_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.SortByList
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABtlActor*>                InList                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class ABtlActor*>                OutList                                                (Parm, OutParm)

void UBP_BtlGuiComponent_C::SortByList(TArray<class ABtlActor*>& InList, TArray<class ABtlActor*>* OutList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "SortByList");

	Params::BP_BtlGuiComponent_C_SortByList Parms{};

	Parms.InList = std::move(InList);

	UObject::ProcessEvent(Func, &Parms);

	InList = std::move(Parms.InList);

	if (OutList != nullptr)
		*OutList = std::move(Parms.OutList);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.SetupPartyPanelActiveActor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABtlActor*                        ActiveActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BtlGuiComponent_C::SetupPartyPanelActiveActor(class ABtlActor* ActiveActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "SetupPartyPanelActiveActor");

	Params::BP_BtlGuiComponent_C_SetupPartyPanelActiveActor Parms{};

	Parms.ActiveActor = ActiveActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.CallPromise
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBtlGuiPromise                          PromiseType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BtlGuiComponent_C::CallPromise(EBtlGuiPromise PromiseType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "CallPromise");

	Params::BP_BtlGuiComponent_C_CallPromise Parms{};

	Parms.PromiseType = PromiseType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.CreateTargetList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABtlActor*>                ActionList                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    IsHPBar                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NoAnimation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsSillhouetteOnly                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsStencilEnemyOnly                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BtlGuiComponent_C::CreateTargetList(TArray<class ABtlActor*>& ActionList, bool IsHPBar, bool NoAnimation, bool IsSillhouetteOnly, bool IsStencilEnemyOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "CreateTargetList");

	Params::BP_BtlGuiComponent_C_CreateTargetList Parms{};

	Parms.ActionList = std::move(ActionList);
	Parms.IsHPBar = IsHPBar;
	Parms.NoAnimation = NoAnimation;
	Parms.IsSillhouetteOnly = IsSillhouetteOnly;
	Parms.IsStencilEnemyOnly = IsStencilEnemyOnly;

	UObject::ProcessEvent(Func, &Parms);

	ActionList = std::move(Parms.ActionList);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.UpdateTargetList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABtlActor*>                ActionList                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_BtlGuiComponent_C::UpdateTargetList(TArray<class ABtlActor*>& ActionList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "UpdateTargetList");

	Params::BP_BtlGuiComponent_C_UpdateTargetList Parms{};

	Parms.ActionList = std::move(ActionList);

	UObject::ProcessEvent(Func, &Parms);

	ActionList = std::move(Parms.ActionList);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.ClearTargetList
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::ClearTargetList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "ClearTargetList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.CreateTargetListWrap
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsHPBar                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NoAnimation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BtlGuiComponent_C::CreateTargetListWrap(bool IsHPBar, bool NoAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "CreateTargetListWrap");

	Params::BP_BtlGuiComponent_C_CreateTargetListWrap Parms{};

	Parms.IsHPBar = IsHPBar;
	Parms.NoAnimation = NoAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.StartEventMode
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::StartEventMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "StartEventMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.RefleshEventMode
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::RefleshEventMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "RefleshEventMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.BindOnActCommand
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABtlActor*                        BtlActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BtlGuiComponent_C::BindOnActCommand(class ABtlActor* BtlActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "BindOnActCommand");

	Params::BP_BtlGuiComponent_C_BindOnActCommand Parms{};

	Parms.BtlActor = BtlActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.CheckIsEfficary
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABtlActor*>                TargetList                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    RecoveryHP                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RecoverySP                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Efficary                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BtlGuiComponent_C::CheckIsEfficary(TArray<class ABtlActor*>& TargetList, bool RecoveryHP, bool RecoverySP, bool* Efficary)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "CheckIsEfficary");

	Params::BP_BtlGuiComponent_C_CheckIsEfficary Parms{};

	Parms.TargetList = std::move(TargetList);
	Parms.RecoveryHP = RecoveryHP;
	Parms.RecoverySP = RecoverySP;

	UObject::ProcessEvent(Func, &Parms);

	TargetList = std::move(Parms.TargetList);

	if (Efficary != nullptr)
		*Efficary = Parms.Efficary;
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.SetTargetIndex
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABtlActor*>                Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   Output_Get                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BtlGuiComponent_C::SetTargetIndex(TArray<class ABtlActor*>& Array, int32* Output_Get)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "SetTargetIndex");

	Params::BP_BtlGuiComponent_C_SetTargetIndex Parms{};

	Parms.Array = std::move(Array);

	UObject::ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);

	if (Output_Get != nullptr)
		*Output_Get = Parms.Output_Get;
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.UpdateTargetListAnim
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABtlActor*>                ActionList                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    SkipMovingAnimation                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BtlGuiComponent_C::UpdateTargetListAnim(TArray<class ABtlActor*>& ActionList, bool SkipMovingAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "UpdateTargetListAnim");

	Params::BP_BtlGuiComponent_C_UpdateTargetListAnim Parms{};

	Parms.ActionList = std::move(ActionList);
	Parms.SkipMovingAnimation = SkipMovingAnimation;

	UObject::ProcessEvent(Func, &Parms);

	ActionList = std::move(Parms.ActionList);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.GetUIColorModelShowActor
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AActor*>                   ActorList1                                             (Parm, OutParm)

void UBP_BtlGuiComponent_C::GetUIColorModelShowActor(TArray<class AActor*>* ActorList1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "GetUIColorModelShowActor");

	Params::BP_BtlGuiComponent_C_GetUIColorModelShowActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ActorList1 != nullptr)
		*ActorList1 = std::move(Parms.ActorList1);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.SwitchUIColor Silluette
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsUIColor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BtlGuiComponent_C::SwitchUIColor_Silluette(bool IsUIColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "SwitchUIColor Silluette");

	Params::BP_BtlGuiComponent_C_SwitchUIColor_Silluette Parms{};

	Parms.IsUIColor = IsUIColor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.SetColorSilluette
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     ColorA                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     ColorB                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BtlGuiComponent_C::SetColorSilluette(const struct FLinearColor& ColorA, const struct FLinearColor& ColorB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "SetColorSilluette");

	Params::BP_BtlGuiComponent_C_SetColorSilluette Parms{};

	Parms.ColorA = std::move(ColorA);
	Parms.ColorB = std::move(ColorB);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.GetTargetIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BtlGuiComponent_C::GetTargetIndex(int32* Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "GetTargetIndex");

	Params::BP_BtlGuiComponent_C_GetTargetIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Index_0 != nullptr)
		*Index_0 = Parms.Index_0;
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.GetTargetEnemyList
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABtlActor*>                ReturnValue                                            (Parm, OutParm, ReturnParm)

TArray<class ABtlActor*> UBP_BtlGuiComponent_C::GetTargetEnemyList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "GetTargetEnemyList");

	Params::BP_BtlGuiComponent_C_GetTargetEnemyList Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.SetPartyPanelVisible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Vidible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BtlGuiComponent_C::SetPartyPanelVisible(bool Vidible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "SetPartyPanelVisible");

	Params::BP_BtlGuiComponent_C_SetPartyPanelVisible Parms{};

	Parms.Vidible = Vidible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.GetUIColorModel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_BtlUIColorModel_C*            Model                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BtlGuiComponent_C::GetUIColorModel(class ABP_BtlUIColorModel_C** Model)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "GetUIColorModel");

	Params::BP_BtlGuiComponent_C_GetUIColorModel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Model != nullptr)
		*Model = Parms.Model;
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.UpdateLineStream
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BtlGuiComponent_C::UpdateLineStream(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "UpdateLineStream");

	Params::BP_BtlGuiComponent_C_UpdateLineStream Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.SetSpeedLinePostProsess
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   RadialBlur                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   SpeedLines                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BtlGuiComponent_C::SetSpeedLinePostProsess(float RadialBlur, float SpeedLines)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "SetSpeedLinePostProsess");

	Params::BP_BtlGuiComponent_C_SetSpeedLinePostProsess Parms{};

	Parms.RadialBlur = RadialBlur;
	Parms.SpeedLines = SpeedLines;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.FindGUIActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_BtlGuiBaseActor_C*            GuiActor                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Sucsess                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BtlGuiComponent_C::FindGUIActor(class FName Name_0, class ABP_BtlGuiBaseActor_C** GuiActor, bool* Sucsess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "FindGUIActor");

	Params::BP_BtlGuiComponent_C_FindGUIActor Parms{};

	Parms.Name_0 = Name_0;

	UObject::ProcessEvent(Func, &Parms);

	if (GuiActor != nullptr)
		*GuiActor = Parms.GuiActor;

	if (Sucsess != nullptr)
		*Sucsess = Parms.Sucsess;
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.AsyncLoadStart
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBtlCoreComponent*                BtlCore_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BtlGuiComponent_C::AsyncLoadStart(class UBtlCoreComponent* BtlCore_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "AsyncLoadStart");

	Params::BP_BtlGuiComponent_C_AsyncLoadStart Parms{};

	Parms.BtlCore_0 = BtlCore_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.ChkAsyncLoad
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Completed                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BtlGuiComponent_C::ChkAsyncLoad(bool* Completed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "ChkAsyncLoad");

	Params::BP_BtlGuiComponent_C_ChkAsyncLoad Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Completed != nullptr)
		*Completed = Parms.Completed;
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.SetUICameraLerpTime
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   LerpTime                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BtlGuiComponent_C::SetUICameraLerpTime(float LerpTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "SetUICameraLerpTime");

	Params::BP_BtlGuiComponent_C_SetUICameraLerpTime Parms{};

	Parms.LerpTime = LerpTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.SetColorSilluetteGun
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     ColorA                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     ColorB                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BtlGuiComponent_C::SetColorSilluetteGun(const struct FLinearColor& ColorA, const struct FLinearColor& ColorB, bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "SetColorSilluetteGun");

	Params::BP_BtlGuiComponent_C_SetColorSilluetteGun Parms{};

	Parms.ColorA = std::move(ColorA);
	Parms.ColorB = std::move(ColorB);
	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.SetTargetInfo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABtlActor*                        Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoAnimation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BtlGuiComponent_C::SetTargetInfo(class ABtlActor* Actor, bool NoAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "SetTargetInfo");

	Params::BP_BtlGuiComponent_C_SetTargetInfo Parms{};

	Parms.Actor = Actor;
	Parms.NoAnimation = NoAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.ReleaseTargetInfo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoAnimation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BtlGuiComponent_C::ReleaseTargetInfo(bool NoAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "ReleaseTargetInfo");

	Params::BP_BtlGuiComponent_C_ReleaseTargetInfo Parms{};

	Parms.NoAnimation = NoAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.SetSilluetteTheutgiaGun
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsTheurgiaGun                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BtlGuiComponent_C::SetSilluetteTheutgiaGun(bool IsTheurgiaGun)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "SetSilluetteTheutgiaGun");

	Params::BP_BtlGuiComponent_C_SetSilluetteTheutgiaGun Parms{};

	Parms.IsTheurgiaGun = IsTheurgiaGun;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.GetSillhouetteCamera
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACameraActor*                     SilCamera                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BtlGuiComponent_C::GetSillhouetteCamera(class ACameraActor** SilCamera)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "GetSillhouetteCamera");

	Params::BP_BtlGuiComponent_C_GetSillhouetteCamera Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SilCamera != nullptr)
		*SilCamera = Parms.SilCamera;
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.CheckSillhouetteLock
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Lock                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BtlGuiComponent_C::CheckSillhouetteLock(bool* Lock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "CheckSillhouetteLock");

	Params::BP_BtlGuiComponent_C_CheckSillhouetteLock Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Lock != nullptr)
		*Lock = Parms.Lock;
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.CheckSkillUseable
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SkillId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBtlCommandType                         Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CostCheckOnly                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Useable                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BtlGuiComponent_C::CheckSkillUseable(int32 SkillId, EBtlCommandType Type, bool CostCheckOnly, bool* Useable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "CheckSkillUseable");

	Params::BP_BtlGuiComponent_C_CheckSkillUseable Parms{};

	Parms.SkillId = SkillId;
	Parms.Type = Type;
	Parms.CostCheckOnly = CostCheckOnly;

	UObject::ProcessEvent(Func, &Parms);

	if (Useable != nullptr)
		*Useable = Parms.Useable;
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.CheckSkillUseableUserList
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SkillId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBtlCommandType                         Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class ABtlActor*>                SendCorrespondList                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    Useable                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BtlGuiComponent_C::CheckSkillUseableUserList(int32 SkillId, EBtlCommandType Type, TArray<class ABtlActor*>& SendCorrespondList, bool* Useable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "CheckSkillUseableUserList");

	Params::BP_BtlGuiComponent_C_CheckSkillUseableUserList Parms{};

	Parms.SkillId = SkillId;
	Parms.Type = Type;
	Parms.SendCorrespondList = std::move(SendCorrespondList);

	UObject::ProcessEvent(Func, &Parms);

	SendCorrespondList = std::move(Parms.SendCorrespondList);

	if (Useable != nullptr)
		*Useable = Parms.Useable;
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.SupportOffTargetInfo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABtlActor*                        Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BtlGuiComponent_C::SupportOffTargetInfo(class ABtlActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "SupportOffTargetInfo");

	Params::BP_BtlGuiComponent_C_SupportOffTargetInfo Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.SetKeyHelp
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBtlGuiIconKeyHelp                      Help                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DisableParam                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BtlGuiComponent_C::SetKeyHelp(EBtlGuiIconKeyHelp Help, bool DisableParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "SetKeyHelp");

	Params::BP_BtlGuiComponent_C_SetKeyHelp Parms{};

	Parms.Help = Help;
	Parms.DisableParam = DisableParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.KeyhelpVisible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BtlGuiComponent_C::KeyhelpVisible(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "KeyhelpVisible");

	Params::BP_BtlGuiComponent_C_KeyhelpVisible Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.ClearKeyHelp
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::ClearKeyHelp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "ClearKeyHelp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.ClearDamagePanel
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::ClearDamagePanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "ClearDamagePanel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.ModelAsyncLoadStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBtlCoreComponent*                BtlCore_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BtlGuiComponent_C::ModelAsyncLoadStart(class UBtlCoreComponent* BtlCore_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "ModelAsyncLoadStart");

	Params::BP_BtlGuiComponent_C_ModelAsyncLoadStart Parms{};

	Parms.BtlCore_0 = BtlCore_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.ModelChkAsyncLoad
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Completed                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BtlGuiComponent_C::ModelChkAsyncLoad(bool* Completed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "ModelChkAsyncLoad");

	Params::BP_BtlGuiComponent_C_ModelChkAsyncLoad Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Completed != nullptr)
		*Completed = Parms.Completed;
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.ModelAsyncLoadStartMainCharacter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBtlCoreComponent*                BtlCore_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BtlGuiComponent_C::ModelAsyncLoadStartMainCharacter(class UBtlCoreComponent* BtlCore_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "ModelAsyncLoadStartMainCharacter");

	Params::BP_BtlGuiComponent_C_ModelAsyncLoadStartMainCharacter Parms{};

	Parms.BtlCore_0 = BtlCore_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.SillhouetteModelDestroy
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::SillhouetteModelDestroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "SillhouetteModelDestroy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.ProcDebugKill
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BtlGuiComponent_C::ProcDebugKill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "ProcDebugKill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.SetWeaponVisibleSilluette
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BtlGuiComponent_C::SetWeaponVisibleSilluette(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "SetWeaponVisibleSilluette");

	Params::BP_BtlGuiComponent_C_SetWeaponVisibleSilluette Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.GetTuoUICommandPosOffset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        CommandPos                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        BoundaryPos                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BtlGuiComponent_C::GetTuoUICommandPosOffset(struct FVector2D* CommandPos, struct FVector2D* BoundaryPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "GetTuoUICommandPosOffset");

	Params::BP_BtlGuiComponent_C_GetTuoUICommandPosOffset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CommandPos != nullptr)
		*CommandPos = std::move(Parms.CommandPos);

	if (BoundaryPos != nullptr)
		*BoundaryPos = std::move(Parms.BoundaryPos);
}


// Function BP_BtlGuiComponent.BP_BtlGuiComponent_C.Is Delay Create Target List
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bOut                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BtlGuiComponent_C::Is_Delay_Create_Target_List(bool* bOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlGuiComponent_C", "Is Delay Create Target List");

	Params::BP_BtlGuiComponent_C_Is_Delay_Create_Target_List Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bOut != nullptr)
		*bOut = Parms.bOut;
}

}

