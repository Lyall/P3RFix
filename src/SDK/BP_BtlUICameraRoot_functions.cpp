#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtlUICameraRoot

#include "Basic.hpp"

#include "BP_BtlUICameraRoot_classes.hpp"
#include "BP_BtlUICameraRoot_parameters.hpp"


namespace SDK
{

// Function BP_BtlUICameraRoot.BP_BtlUICameraRoot_C.ExecuteUbergraph_BP_BtlUICameraRoot
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlUICameraRoot_C::ExecuteUbergraph_BP_BtlUICameraRoot(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlUICameraRoot_C", "ExecuteUbergraph_BP_BtlUICameraRoot");

	Params::BP_BtlUICameraRoot_C_ExecuteUbergraph_BP_BtlUICameraRoot Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlUICameraRoot.BP_BtlUICameraRoot_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_BtlUICameraRoot_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlUICameraRoot_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlUICameraRoot.BP_BtlUICameraRoot_C.TidyAnimation__UpdateFunc
// (BlueprintEvent)

void ABP_BtlUICameraRoot_C::TidyAnimation__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlUICameraRoot_C", "TidyAnimation__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlUICameraRoot.BP_BtlUICameraRoot_C.TidyAnimation__FinishedFunc
// (BlueprintEvent)

void ABP_BtlUICameraRoot_C::TidyAnimation__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlUICameraRoot_C", "TidyAnimation__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlUICameraRoot.BP_BtlUICameraRoot_C.DestroyCamera
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlUICameraRoot_C::DestroyCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlUICameraRoot_C", "DestroyCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlUICameraRoot.BP_BtlUICameraRoot_C.UICameraUpdate
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_BtlUICameraRoot_C::UICameraUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlUICameraRoot_C", "UICameraUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlUICameraRoot.BP_BtlUICameraRoot_C.Set Default Param
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABtlActor*                        Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlUICameraRoot_C::Set_Default_Param(class ABtlActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlUICameraRoot_C", "Set Default Param");

	Params::BP_BtlUICameraRoot_C_Set_Default_Param Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlUICameraRoot.BP_BtlUICameraRoot_C.MoveTopToSkill
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABtlActor*                        Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Lerp                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlUICameraRoot_C::MoveTopToSkill(class ABtlActor* Actor, float Lerp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlUICameraRoot_C", "MoveTopToSkill");

	Params::BP_BtlUICameraRoot_C_MoveTopToSkill Parms{};

	Parms.Actor = Actor;
	Parms.Lerp = Lerp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlUICameraRoot.BP_BtlUICameraRoot_C.MoveTopToItem
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABtlActor*                        Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Lerp                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlUICameraRoot_C::MoveTopToItem(class ABtlActor* Actor, float Lerp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlUICameraRoot_C", "MoveTopToItem");

	Params::BP_BtlUICameraRoot_C_MoveTopToItem Parms{};

	Parms.Actor = Actor;
	Parms.Lerp = Lerp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlUICameraRoot.BP_BtlUICameraRoot_C.MoveToTop
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABtlActor*                        Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Lerp                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlUICameraRoot_C::MoveToTop(class ABtlActor* Actor, float Lerp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlUICameraRoot_C", "MoveToTop");

	Params::BP_BtlUICameraRoot_C_MoveToTop Parms{};

	Parms.Actor = Actor;
	Parms.Lerp = Lerp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlUICameraRoot.BP_BtlUICameraRoot_C.MoveTopToGuard
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABtlActor*                        Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Lerp                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlUICameraRoot_C::MoveTopToGuard(class ABtlActor* Actor, float Lerp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlUICameraRoot_C", "MoveTopToGuard");

	Params::BP_BtlUICameraRoot_C_MoveTopToGuard Parms{};

	Parms.Actor = Actor;
	Parms.Lerp = Lerp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlUICameraRoot.BP_BtlUICameraRoot_C.MoveTopToTheurgia
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABtlActor*                        Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Lerp                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlUICameraRoot_C::MoveTopToTheurgia(class ABtlActor* Actor, float Lerp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlUICameraRoot_C", "MoveTopToTheurgia");

	Params::BP_BtlUICameraRoot_C_MoveTopToTheurgia Parms{};

	Parms.Actor = Actor;
	Parms.Lerp = Lerp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlUICameraRoot.BP_BtlUICameraRoot_C.MoveTopToStrategy
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABtlActor*                        Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Lerp                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlUICameraRoot_C::MoveTopToStrategy(class ABtlActor* Actor, float Lerp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlUICameraRoot_C", "MoveTopToStrategy");

	Params::BP_BtlUICameraRoot_C_MoveTopToStrategy Parms{};

	Parms.Actor = Actor;
	Parms.Lerp = Lerp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlUICameraRoot.BP_BtlUICameraRoot_C.MoveTopToTargetSelect
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABtlActor*                        Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Lerp                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlUICameraRoot_C::MoveTopToTargetSelect(class ABtlActor* Actor, float Lerp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlUICameraRoot_C", "MoveTopToTargetSelect");

	Params::BP_BtlUICameraRoot_C_MoveTopToTargetSelect Parms{};

	Parms.Actor = Actor;
	Parms.Lerp = Lerp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlUICameraRoot.BP_BtlUICameraRoot_C.CalcLoopAngle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_BtlUICameraRoot_C::CalcLoopAngle(float InputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlUICameraRoot_C", "CalcLoopAngle");

	Params::BP_BtlUICameraRoot_C_CalcLoopAngle Parms{};

	Parms.InputPin = InputPin;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

