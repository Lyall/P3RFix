#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CriWareMovieScenes

#include "Basic.hpp"

#include "MovieScene_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// ScriptStruct CriWareMovieScenes.MovieSceneAtomSectionTemplate
// 0x0008 (0x0028 - 0x0020)
struct FMovieSceneAtomSectionTemplate final : public FMovieSceneEvalTemplate
{
public:
	class UMovieSceneAtomSection*                 AtomSection;                                       // 0x0020(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMovieSceneAtomSectionTemplate) == 0x000008, "Wrong alignment on FMovieSceneAtomSectionTemplate");
static_assert(sizeof(FMovieSceneAtomSectionTemplate) == 0x000028, "Wrong size on FMovieSceneAtomSectionTemplate");
static_assert(offsetof(FMovieSceneAtomSectionTemplate, AtomSection) == 0x000020, "Member 'FMovieSceneAtomSectionTemplate::AtomSection' has a wrong offset!");

// ScriptStruct CriWareMovieScenes.MovieSceneManaSectionParams
// 0x0030 (0x0030 - 0x0000)
struct FMovieSceneManaSectionParams final
{
public:
	class UAtomComponent*                         AtomComponent;                                     // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UManaSource*                            ManaSource;                                        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UManaTexture*                           ManaTexture;                                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UManaPlayer*                            ManaPlayer;                                        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameNumber                           SectionStartFrame;                                 // 0x0020(0x0004)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameNumber                           SectionEndFrame;                                   // 0x0024(0x0004)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLooping;                                          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFrameNumber                           StartFrameOffset;                                  // 0x002C(0x0004)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMovieSceneManaSectionParams) == 0x000008, "Wrong alignment on FMovieSceneManaSectionParams");
static_assert(sizeof(FMovieSceneManaSectionParams) == 0x000030, "Wrong size on FMovieSceneManaSectionParams");
static_assert(offsetof(FMovieSceneManaSectionParams, AtomComponent) == 0x000000, "Member 'FMovieSceneManaSectionParams::AtomComponent' has a wrong offset!");
static_assert(offsetof(FMovieSceneManaSectionParams, ManaSource) == 0x000008, "Member 'FMovieSceneManaSectionParams::ManaSource' has a wrong offset!");
static_assert(offsetof(FMovieSceneManaSectionParams, ManaTexture) == 0x000010, "Member 'FMovieSceneManaSectionParams::ManaTexture' has a wrong offset!");
static_assert(offsetof(FMovieSceneManaSectionParams, ManaPlayer) == 0x000018, "Member 'FMovieSceneManaSectionParams::ManaPlayer' has a wrong offset!");
static_assert(offsetof(FMovieSceneManaSectionParams, SectionStartFrame) == 0x000020, "Member 'FMovieSceneManaSectionParams::SectionStartFrame' has a wrong offset!");
static_assert(offsetof(FMovieSceneManaSectionParams, SectionEndFrame) == 0x000024, "Member 'FMovieSceneManaSectionParams::SectionEndFrame' has a wrong offset!");
static_assert(offsetof(FMovieSceneManaSectionParams, bLooping) == 0x000028, "Member 'FMovieSceneManaSectionParams::bLooping' has a wrong offset!");
static_assert(offsetof(FMovieSceneManaSectionParams, StartFrameOffset) == 0x00002C, "Member 'FMovieSceneManaSectionParams::StartFrameOffset' has a wrong offset!");

// ScriptStruct CriWareMovieScenes.MovieSceneManaSectionTemplate
// 0x0038 (0x0058 - 0x0020)
struct FMovieSceneManaSectionTemplate final : public FMovieSceneEvalTemplate
{
public:
	struct FMovieSceneManaSectionParams           Params;                                            // 0x0020(0x0030)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_50[0x8];                                       // 0x0050(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMovieSceneManaSectionTemplate) == 0x000008, "Wrong alignment on FMovieSceneManaSectionTemplate");
static_assert(sizeof(FMovieSceneManaSectionTemplate) == 0x000058, "Wrong size on FMovieSceneManaSectionTemplate");
static_assert(offsetof(FMovieSceneManaSectionTemplate, Params) == 0x000020, "Member 'FMovieSceneManaSectionTemplate::Params' has a wrong offset!");

}

