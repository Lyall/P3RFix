#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharacterBase

#include "Basic.hpp"

#include "CharacterBase_classes.hpp"
#include "CharacterBase_parameters.hpp"


namespace SDK
{

// Function CharacterBase.CharacterBaseBpLib.GetSoftClassPath
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UAnimBlueprint>    AnimBP                                                 (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCharacterBaseBpLib::GetSoftClassPath(const class UObject* WorldContextObject, TSoftObjectPtr<class UAnimBlueprint> AnimBP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterBaseBpLib", "GetSoftClassPath");

	Params::CharacterBaseBpLib_GetSoftClassPath Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.AnimBP = AnimBP;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterBase.AnimInstanceCore.GetLookAtTargetActor
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UAnimInstanceCore::GetLookAtTargetActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimInstanceCore", "GetLookAtTargetActor");

	Params::AnimInstanceCore_GetLookAtTargetActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function CharacterBase.AnimInstanceCore.GetLookAtTargetActorBoneName
// (Event, Public, BlueprintEvent)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAnimInstanceCore::GetLookAtTargetActorBoneName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimInstanceCore", "GetLookAtTargetActorBoneName");

	Params::AnimInstanceCore_GetLookAtTargetActorBoneName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function CharacterBase.AnimInstanceCore.GetLookAtType
// (Event, Public, BlueprintEvent)
// Parameters:
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UAnimInstanceCore::GetLookAtType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimInstanceCore", "GetLookAtType");

	Params::AnimInstanceCore_GetLookAtType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function CharacterBase.AnimInstanceCore.GetLookAtWorldLocation
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UAnimInstanceCore::GetLookAtWorldLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimInstanceCore", "GetLookAtWorldLocation");

	Params::AnimInstanceCore_GetLookAtWorldLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function CharacterBase.AnimInstanceCore.IsPlaySlotAnimation
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InAnimSlotName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAnimInstanceCore::IsPlaySlotAnimation(class FName InAnimSlotName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimInstanceCore", "IsPlaySlotAnimation");

	Params::AnimInstanceCore_IsPlaySlotAnimation Parms{};

	Parms.InAnimSlotName = InAnimSlotName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterBase.AnimInstanceCore.SetLookAtTargetActor
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimInstanceCore::SetLookAtTargetActor(class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimInstanceCore", "SetLookAtTargetActor");

	Params::AnimInstanceCore_SetLookAtTargetActor Parms{};

	Parms.TargetActor = TargetActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharacterBase.AnimInstanceCore.SetLookAtTargetActorBoneName
// (Event, Public, BlueprintEvent)
// Parameters:
// class FString                           BoneName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimInstanceCore::SetLookAtTargetActorBoneName(const class FString& BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimInstanceCore", "SetLookAtTargetActorBoneName");

	Params::AnimInstanceCore_SetLookAtTargetActorBoneName Parms{};

	Parms.BoneName = std::move(BoneName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharacterBase.AnimInstanceCore.SetLookAtType
// (Event, Public, BlueprintEvent)
// Parameters:
// uint8                                   LookAtType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimInstanceCore::SetLookAtType(uint8 LookAtType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimInstanceCore", "SetLookAtType");

	Params::AnimInstanceCore_SetLookAtType Parms{};

	Parms.LookAtType = LookAtType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharacterBase.AnimInstanceCore.SetLookAtWorldLocation
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimInstanceCore::SetLookAtWorldLocation(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimInstanceCore", "SetLookAtWorldLocation");

	Params::AnimInstanceCore_SetLookAtWorldLocation Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharacterBase.AnimInstanceCore.SetOverrideLocomotionNotMoveAnim
// (Event, Public, BlueprintEvent)
// Parameters:
// class UAnimSequence*                    InAnimSeq                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimInstanceCore::SetOverrideLocomotionNotMoveAnim(class UAnimSequence* InAnimSeq)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimInstanceCore", "SetOverrideLocomotionNotMoveAnim");

	Params::AnimInstanceCore_SetOverrideLocomotionNotMoveAnim Parms{};

	Parms.InAnimSeq = InAnimSeq;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharacterBase.CharacterBaseCore.GetCompLastRenderTimeOnScreen
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UPrimitiveComponent*              MeshComp                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ACharacterBaseCore::GetCompLastRenderTimeOnScreen(class UPrimitiveComponent* MeshComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CharacterBaseCore", "GetCompLastRenderTimeOnScreen");

	Params::CharacterBaseCore_GetCompLastRenderTimeOnScreen Parms{};

	Parms.MeshComp = MeshComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterBase.CharacterBaseCore.GetLastRenderTimeOnScreen
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ACharacterBaseCore::GetLastRenderTimeOnScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterBaseCore", "GetLastRenderTimeOnScreen");

	Params::CharacterBaseCore_GetLastRenderTimeOnScreen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterBase.CharacterBaseCore.GetMontageSectionName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ACharacterBaseCore::GetMontageSectionName(class UAnimMontage* Montage, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterBaseCore", "GetMontageSectionName");

	Params::CharacterBaseCore_GetMontageSectionName Parms{};

	Parms.Montage = Montage;
	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterBase.CharacterBaseCore.LoadEndEvent
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ACharacterBaseCore::LoadEndEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterBaseCore", "LoadEndEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CharacterBase.CharacterBaseCore.ReCalculateBounds
// (Final, Native, Public, BlueprintCallable)

void ACharacterBaseCore::ReCalculateBounds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterBaseCore", "ReCalculateBounds");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CharacterBase.MobBaseAiControllerCore.AddPointIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMobBaseAiControllerCore::AddPointIndex(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobBaseAiControllerCore", "AddPointIndex");

	Params::MobBaseAiControllerCore_AddPointIndex Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CharacterBase.MobBaseAiControllerCore.GetPointIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AMobBaseAiControllerCore::GetPointIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobBaseAiControllerCore", "GetPointIndex");

	Params::MobBaseAiControllerCore_GetPointIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterBase.MobBaseAiControllerCore.GetPointIndexLAST
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AMobBaseAiControllerCore::GetPointIndexLAST()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobBaseAiControllerCore", "GetPointIndexLAST");

	Params::MobBaseAiControllerCore_GetPointIndexLAST Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterBase.MobBaseAiControllerCore.ReStartAiCtrl
// (Final, Native, Public, BlueprintCallable)

void AMobBaseAiControllerCore::ReStartAiCtrl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobBaseAiControllerCore", "ReStartAiCtrl");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CharacterBase.MobBaseAiControllerCore.SetPointIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMobBaseAiControllerCore::SetPointIndex(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobBaseAiControllerCore", "SetPointIndex");

	Params::MobBaseAiControllerCore_SetPointIndex Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CharacterBase.MobBaseAiControllerCore.StartAiCtrl
// (Final, Native, Public, BlueprintCallable)

void AMobBaseAiControllerCore::StartAiCtrl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobBaseAiControllerCore", "StartAiCtrl");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CharacterBase.MobBaseAiControllerCore.UpdateActorBlueprint
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   WalkSpeedRatio                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMobBaseAiControllerCore::UpdateActorBlueprint(float WalkSpeedRatio, float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobBaseAiControllerCore", "UpdateActorBlueprint");

	Params::MobBaseAiControllerCore_UpdateActorBlueprint Parms{};

	Parms.WalkSpeedRatio = WalkSpeedRatio;
	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharacterBase.MobBaseAiControllerCore.UpdateProc
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMobBaseAiControllerCore::UpdateProc(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobBaseAiControllerCore", "UpdateProc");

	Params::MobBaseAiControllerCore_UpdateProc Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CharacterBase.MobBaseAiControllerCore.GetOwnerActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AMobWalkCharaBaseCore*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMobWalkCharaBaseCore* AMobBaseAiControllerCore::GetOwnerActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobBaseAiControllerCore", "GetOwnerActor");

	Params::MobBaseAiControllerCore_GetOwnerActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterBase.MobBaseAiControllerCore.GetRoutePointNEXT
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FMobWalkRoutePoint               ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMobWalkRoutePoint AMobBaseAiControllerCore::GetRoutePointNEXT() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobBaseAiControllerCore", "GetRoutePointNEXT");

	Params::MobBaseAiControllerCore_GetRoutePointNEXT Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterBase.MobBaseAiControllerCore.GetRoutePointNOW
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FMobWalkRoutePoint               ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMobWalkRoutePoint AMobBaseAiControllerCore::GetRoutePointNOW() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobBaseAiControllerCore", "GetRoutePointNOW");

	Params::MobBaseAiControllerCore_GetRoutePointNOW Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterBase.MobCharaBaseListener.UpdateMobChara
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IMobCharaBaseListener::UpdateMobChara(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobCharaBaseListener", "UpdateMobChara");

	Params::MobCharaBaseListener_UpdateMobChara Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharacterBase.MobWalkTarget.GetTargetType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMobWalkTargetType                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EMobWalkTargetType AMobWalkTarget::GetTargetType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobWalkTarget", "GetTargetType");

	Params::MobWalkTarget_GetTargetType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterBase.MobWalkCharaBaseCore.AddPointList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FMobWalkRoutePoint               InPoint                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AMobWalkCharaBaseCore::AddPointList(const struct FMobWalkRoutePoint& InPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobWalkCharaBaseCore", "AddPointList");

	Params::MobWalkCharaBaseCore_AddPointList Parms{};

	Parms.InPoint = std::move(InPoint);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CharacterBase.MobWalkCharaBaseCore.GetPointListMax
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AMobWalkCharaBaseCore::GetPointListMax()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobWalkCharaBaseCore", "GetPointListMax");

	Params::MobWalkCharaBaseCore_GetPointListMax Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterBase.MobWalkCharaBaseCore.InitPointList
// (Final, Native, Public, BlueprintCallable)

void AMobWalkCharaBaseCore::InitPointList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobWalkCharaBaseCore", "InitPointList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CharacterBase.MobWalkCharaBaseCore.SetBpIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMobWalkCharaBaseCore::SetBpIndex(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobWalkCharaBaseCore", "SetBpIndex");

	Params::MobWalkCharaBaseCore_SetBpIndex Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CharacterBase.MobWalkCharaBaseCore.SetFollowParent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InParent                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMobWalkCharaBaseCore::SetFollowParent(class AActor* InParent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobWalkCharaBaseCore", "SetFollowParent");

	Params::MobWalkCharaBaseCore_SetFollowParent Parms{};

	Parms.InParent = InParent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CharacterBase.MobWalkCharaBaseCore.SetFollowRelativeLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InLocation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMobWalkCharaBaseCore::SetFollowRelativeLocation(const struct FVector& InLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobWalkCharaBaseCore", "SetFollowRelativeLocation");

	Params::MobWalkCharaBaseCore_SetFollowRelativeLocation Parms{};

	Parms.InLocation = std::move(InLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CharacterBase.MobWalkCharaBaseCore.SetOpacityCore
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMobWalkCharaBaseCore::SetOpacityCore(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobWalkCharaBaseCore", "SetOpacityCore");

	Params::MobWalkCharaBaseCore_SetOpacityCore Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CharacterBase.MobWalkCharaBaseCore.SetPointIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMobWalkCharaBaseCore::SetPointIndex(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobWalkCharaBaseCore", "SetPointIndex");

	Params::MobWalkCharaBaseCore_SetPointIndex Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CharacterBase.MobWalkCharaBaseCore.SetStartLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InLocation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMobWalkCharaBaseCore::SetStartLocation(const struct FVector& InLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobWalkCharaBaseCore", "SetStartLocation");

	Params::MobWalkCharaBaseCore_SetStartLocation Parms{};

	Parms.InLocation = std::move(InLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CharacterBase.MobWalkCharaBaseCore.SetWaitTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMobWalkCharaBaseCore::SetWaitTime(float InTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobWalkCharaBaseCore", "SetWaitTime");

	Params::MobWalkCharaBaseCore_SetWaitTime Parms{};

	Parms.InTime = InTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CharacterBase.MobWalkCharaBaseCore.GetBpIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AMobWalkCharaBaseCore::GetBpIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobWalkCharaBaseCore", "GetBpIndex");

	Params::MobWalkCharaBaseCore_GetBpIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterBase.MobWalkCharaBaseCore.GetFollowParent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AMobWalkCharaBaseCore::GetFollowParent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobWalkCharaBaseCore", "GetFollowParent");

	Params::MobWalkCharaBaseCore_GetFollowParent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterBase.MobWalkCharaBaseCore.GetFollowRelativeLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AMobWalkCharaBaseCore::GetFollowRelativeLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobWalkCharaBaseCore", "GetFollowRelativeLocation");

	Params::MobWalkCharaBaseCore_GetFollowRelativeLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterBase.MobWalkCharaBaseCore.GetOpacityCore
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AMobWalkCharaBaseCore::GetOpacityCore() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobWalkCharaBaseCore", "GetOpacityCore");

	Params::MobWalkCharaBaseCore_GetOpacityCore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterBase.MobWalkCharaBaseCore.GetPointIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AMobWalkCharaBaseCore::GetPointIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobWalkCharaBaseCore", "GetPointIndex");

	Params::MobWalkCharaBaseCore_GetPointIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterBase.MobWalkCharaBaseCore.GetPointList
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMobWalkRoutePoint               ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMobWalkRoutePoint AMobWalkCharaBaseCore::GetPointList(int32 Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobWalkCharaBaseCore", "GetPointList");

	Params::MobWalkCharaBaseCore_GetPointList Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterBase.MobWalkCharaBaseCore.GetPointList_LAST
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FMobWalkRoutePoint               ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMobWalkRoutePoint AMobWalkCharaBaseCore::GetPointList_LAST() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobWalkCharaBaseCore", "GetPointList_LAST");

	Params::MobWalkCharaBaseCore_GetPointList_LAST Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterBase.MobWalkCharaBaseCore.GetPointList_START
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FMobWalkRoutePoint               ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMobWalkRoutePoint AMobWalkCharaBaseCore::GetPointList_START() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobWalkCharaBaseCore", "GetPointList_START");

	Params::MobWalkCharaBaseCore_GetPointList_START Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterBase.MobWalkCharaBaseCore.GetStartLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AMobWalkCharaBaseCore::GetStartLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobWalkCharaBaseCore", "GetStartLocation");

	Params::MobWalkCharaBaseCore_GetStartLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterBase.MobWalkCharaBaseCore.GetWaitTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AMobWalkCharaBaseCore::GetWaitTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobWalkCharaBaseCore", "GetWaitTime");

	Params::MobWalkCharaBaseCore_GetWaitTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterBase.NpcAnimationBaseCore.GetIdolAnimSequnece
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAnimSequenceBase*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimSequenceBase* UNpcAnimationBaseCore::GetIdolAnimSequnece()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NpcAnimationBaseCore", "GetIdolAnimSequnece");

	Params::NpcAnimationBaseCore_GetIdolAnimSequnece Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterBase.NpcAnimationBaseCore.GetLookAtTargetActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UNpcAnimationBaseCore::GetLookAtTargetActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NpcAnimationBaseCore", "GetLookAtTargetActor");

	Params::NpcAnimationBaseCore_GetLookAtTargetActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterBase.NpcAnimationBaseCore.GetLookAtTargetActorBoneName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UNpcAnimationBaseCore::GetLookAtTargetActorBoneName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NpcAnimationBaseCore", "GetLookAtTargetActorBoneName");

	Params::NpcAnimationBaseCore_GetLookAtTargetActorBoneName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterBase.NpcAnimationBaseCore.GetLookAtType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ENpcAnimLookAtType                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ENpcAnimLookAtType UNpcAnimationBaseCore::GetLookAtType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NpcAnimationBaseCore", "GetLookAtType");

	Params::NpcAnimationBaseCore_GetLookAtType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterBase.NpcAnimationBaseCore.GetLookAtWorldLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UNpcAnimationBaseCore::GetLookAtWorldLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NpcAnimationBaseCore", "GetLookAtWorldLocation");

	Params::NpcAnimationBaseCore_GetLookAtWorldLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterBase.NpcAnimationBaseCore.SetIdolAnimSequnece
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAnimSequenceBase*                Anim                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNpcAnimationBaseCore::SetIdolAnimSequnece(class UAnimSequenceBase* Anim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NpcAnimationBaseCore", "SetIdolAnimSequnece");

	Params::NpcAnimationBaseCore_SetIdolAnimSequnece Parms{};

	Parms.Anim = Anim;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CharacterBase.NpcAnimationBaseCore.SetLookAtTargetActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNpcAnimationBaseCore::SetLookAtTargetActor(class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NpcAnimationBaseCore", "SetLookAtTargetActor");

	Params::NpcAnimationBaseCore_SetLookAtTargetActor Parms{};

	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CharacterBase.NpcAnimationBaseCore.SetLookAtTargetActorBoneName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           BoneName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNpcAnimationBaseCore::SetLookAtTargetActorBoneName(const class FString& BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NpcAnimationBaseCore", "SetLookAtTargetActorBoneName");

	Params::NpcAnimationBaseCore_SetLookAtTargetActorBoneName Parms{};

	Parms.BoneName = std::move(BoneName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CharacterBase.NpcAnimationBaseCore.SetLookAtType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ENpcAnimLookAtType                      Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNpcAnimationBaseCore::SetLookAtType(ENpcAnimLookAtType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NpcAnimationBaseCore", "SetLookAtType");

	Params::NpcAnimationBaseCore_SetLookAtType Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CharacterBase.NpcAnimationBaseCore.SetLookAtWorldLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNpcAnimationBaseCore::SetLookAtWorldLocation(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NpcAnimationBaseCore", "SetLookAtWorldLocation");

	Params::NpcAnimationBaseCore_SetLookAtWorldLocation Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CharacterBase.NpcBaseCore.CommitModelSetting
// (Event, Public, BlueprintEvent)

void ANpcBaseCore::CommitModelSetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NpcBaseCore", "CommitModelSetting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CharacterBase.NpcBaseCore.GetMontageSectionName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ANpcBaseCore::GetMontageSectionName(class UAnimMontage* Montage, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NpcBaseCore", "GetMontageSectionName");

	Params::NpcBaseCore_GetMontageSectionName Parms{};

	Parms.Montage = Montage;
	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterBase.NpcBaseCore.GetMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* ANpcBaseCore::GetMesh() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NpcBaseCore", "GetMesh");

	Params::NpcBaseCore_GetMesh Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

