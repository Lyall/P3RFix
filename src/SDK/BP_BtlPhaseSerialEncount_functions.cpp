#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtlPhaseSerialEncount

#include "Basic.hpp"

#include "BP_BtlPhaseSerialEncount_classes.hpp"
#include "BP_BtlPhaseSerialEncount_parameters.hpp"


namespace SDK
{

// Function BP_BtlPhaseSerialEncount.BP_BtlPhaseSerialEncount_C.ExecuteUbergraph_BP_BtlPhaseSerialEncount
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlPhaseSerialEncount_C::ExecuteUbergraph_BP_BtlPhaseSerialEncount(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPhaseSerialEncount_C", "ExecuteUbergraph_BP_BtlPhaseSerialEncount");

	Params::BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlPhaseSerialEncount.BP_BtlPhaseSerialEncount_C.On Summon Enemies
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlPhaseSerialEncount_C::On_Summon_Enemies()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPhaseSerialEncount_C", "On Summon Enemies");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlPhaseSerialEncount.BP_BtlPhaseSerialEncount_C.Has Finished Serial Encout Sequence
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlPhaseSerialEncount_C::Has_Finished_Serial_Encout_Sequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPhaseSerialEncount_C", "Has Finished Serial Encout Sequence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlPhaseSerialEncount.BP_BtlPhaseSerialEncount_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_BtlPhaseSerialEncount_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPhaseSerialEncount_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlPhaseSerialEncount.BP_BtlPhaseSerialEncount_C.On Play Camera til Finish Loading
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlPhaseSerialEncount_C::On_Play_Camera_til_Finish_Loading()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPhaseSerialEncount_C", "On Play Camera til Finish Loading");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlPhaseSerialEncount.BP_BtlPhaseSerialEncount_C.Has Finished Loading Enemies
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlPhaseSerialEncount_C::Has_Finished_Loading_Enemies()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPhaseSerialEncount_C", "Has Finished Loading Enemies");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlPhaseSerialEncount.BP_BtlPhaseSerialEncount_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlPhaseSerialEncount_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPhaseSerialEncount_C", "ReceiveTick");

	Params::BP_BtlPhaseSerialEncount_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlPhaseSerialEncount.BP_BtlPhaseSerialEncount_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_BtlPhaseSerialEncount_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPhaseSerialEncount_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlPhaseSerialEncount.BP_BtlPhaseSerialEncount_C.CreateNextPhase
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBtlPhaseType                           Phase                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABtlPhase*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class ABtlPhase* ABP_BtlPhaseSerialEncount_C::CreateNextPhase(EBtlPhaseType Phase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPhaseSerialEncount_C", "CreateNextPhase");

	Params::BP_BtlPhaseSerialEncount_C_CreateNextPhase Parms{};

	Parms.Phase = Phase;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BtlPhaseSerialEncount.BP_BtlPhaseSerialEncount_C.SetSerialEncountParameter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBtlCoreComponent*                BtlCore_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlPhaseSerialEncount_C::SetSerialEncountParameter(class UBtlCoreComponent* BtlCore_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPhaseSerialEncount_C", "SetSerialEncountParameter");

	Params::BP_BtlPhaseSerialEncount_C_SetSerialEncountParameter Parms{};

	Parms.BtlCore_0 = BtlCore_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlPhaseSerialEncount.BP_BtlPhaseSerialEncount_C.CoordinateVisibility
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_BtlPhaseSerialEncount_C::CoordinateVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPhaseSerialEncount_C", "CoordinateVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlPhaseSerialEncount.BP_BtlPhaseSerialEncount_C.SyncEventCamera
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlPhaseSerialEncount_C::SyncEventCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPhaseSerialEncount_C", "SyncEventCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlPhaseSerialEncount.BP_BtlPhaseSerialEncount_C.CheckProgressNextPhaseInBP
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_BtlPhaseSerialEncount_C::CheckProgressNextPhaseInBP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPhaseSerialEncount_C", "CheckProgressNextPhaseInBP");

	Params::BP_BtlPhaseSerialEncount_C_CheckProgressNextPhaseInBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

