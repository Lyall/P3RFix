#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtlShadowBase

#include "Basic.hpp"

#include "Xrd777_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_BtlShadowBase.BP_BtlShadowBase_C.ExecuteUbergraph_BP_BtlShadowBase
// 0x0370 (0x0370 - 0x0000)
struct BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_BtlCharacterBase_C*>         CallFunc_GetTargetsCharacters_Characters;          // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckLoaded_ReturnValue;                  // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System;               // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CallFunc_SpawnAllSummonEnemy_ReturnValue;          // 0x0070(0x0010)(ReferenceParm)
	bool                                          CallFunc_CheckLoaded_ReturnValue_1;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         CallFunc_GetEffect_ReturnValue;                    // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALevelSequenceActor*                    CallFunc_CreateLevelSequencePlayer_OutActor;       // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_CreateLevelSequencePlayer_ReturnValue;    // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x00F4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_EmergeIndex;                    // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_initialHiding;                        // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x3];                                      // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x019C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_ShortMode;                            // 0x01AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AE[0x2];                                      // 0x01AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDeadCurveValue_ReturnValue;            // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B5[0x3];                                      // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_4;        // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_CriticalHindrance;                    // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Rapid;                                // 0x01C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_HalfMode;                             // 0x01C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C7[0x1];                                      // 0x01C7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         CallFunc_GetEffect_ReturnValue_1;                  // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 K2Node_MakeStruct_Color;                           // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 K2Node_MakeStruct_Color_1;                         // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckLoaded_ReturnValue_2;                // 0x01DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveMode_ReturnValue;              // 0x01DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEnableTranslucence_ReturnValue;      // 0x01DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UNiagaraSystem*                         CallFunc_GetEffect_ReturnValue_2;                  // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEnableTranslucence_ReturnValue_1;    // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDeadFloorEffectScale_Scale;            // 0x01F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsDown;                         // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_205[0xB];                                      // 0x0205(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0210(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x024C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0258(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetFrontToCamEffectAdditionalPos_AddWorldPos; // 0x0264(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x027C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0288(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0290(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x02C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x02CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x02D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E4[0x4];                                      // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UNiagaraSystem>          CallFunc_GetSummonEmergeEffect_SummonEmergeEffect; // 0x02E8(0x0028)(HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_CustomEvent_Effect;                         // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_1;      // 0x0318(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_321[0x3];                                      // 0x0321(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_5;          // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         CallFunc_GetEffect_ReturnValue_3;                  // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetOpacity_Opacity;                       // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimelineLength_ReturnValue;            // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_5;        // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckLoaded_ReturnValue_3;                // 0x0344(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_345[0x3];                                      // 0x0345(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C[0x4];                                      // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 CallFunc_Array_Get_Item_1;                         // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlShadowBase_C*                    K2Node_DynamicCast_AsBP_Btl_Shadow_Base;           // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase) == 0x000010, "Wrong alignment on BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase");
static_assert(sizeof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase) == 0x000370, "Wrong size on BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, EntryPoint) == 0x000000, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, Temp_int_Loop_Counter_Variable_1) == 0x000008, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000024, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000030, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_GetTargetsCharacters_Characters) == 0x000040, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_GetTargetsCharacters_Characters' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_CheckLoaded_ReturnValue) == 0x000055, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_CheckLoaded_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, Temp_object_Variable) == 0x000058, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, K2Node_DynamicCast_AsNiagara_System) == 0x000060, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::K2Node_DynamicCast_AsNiagara_System' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_SpawnAllSummonEnemy_ReturnValue) == 0x000070, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_SpawnAllSummonEnemy_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_CheckLoaded_ReturnValue_1) == 0x000080, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_CheckLoaded_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_Array_Get_Item) == 0x000088, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, K2Node_DynamicCast_AsBP_Btl_Character_Base) == 0x000090, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::K2Node_DynamicCast_AsBP_Btl_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_Array_Length_ReturnValue_1) == 0x00009C, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A0, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000A4, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000A8, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_GetEffect_ReturnValue) == 0x0000B0, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_GetEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, K2Node_CustomEvent_Loaded) == 0x0000B8, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_CreateLevelSequencePlayer_OutActor) == 0x0000C0, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_CreateLevelSequencePlayer_OutActor' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_CreateLevelSequencePlayer_ReturnValue) == 0x0000C8, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_CreateLevelSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000D0, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x0000D4, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0000D8, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_Add_VectorVector_ReturnValue) == 0x0000E4, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x0000F0, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0000F4, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_K2_SetActorLocation_ReturnValue) == 0x00017C, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, K2Node_CustomEvent_EmergeIndex) == 0x000180, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::K2Node_CustomEvent_EmergeIndex' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000184, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000188, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_Add_FloatFloat_ReturnValue) == 0x00018C, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000190, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, K2Node_Event_DeltaSeconds) == 0x000194, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, K2Node_Event_initialHiding) == 0x000198, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::K2Node_Event_initialHiding' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, K2Node_CreateDelegate_OutputDelegate) == 0x00019C, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_IsValid_ReturnValue) == 0x0001AC, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, K2Node_Event_ShortMode) == 0x0001AD, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::K2Node_Event_ShortMode' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_GetDeadCurveValue_ReturnValue) == 0x0001B0, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_GetDeadCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0001B4, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x0001B8, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_FClamp_ReturnValue) == 0x0001BC, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_Subtract_FloatFloat_ReturnValue_4) == 0x0001C0, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_Subtract_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, K2Node_Event_CriticalHindrance) == 0x0001C4, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::K2Node_Event_CriticalHindrance' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, K2Node_Event_Rapid) == 0x0001C5, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::K2Node_Event_Rapid' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, K2Node_Event_HalfMode) == 0x0001C6, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::K2Node_Event_HalfMode' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_GetEffect_ReturnValue_1) == 0x0001C8, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_GetEffect_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, K2Node_MakeStruct_Color) == 0x0001D0, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::K2Node_MakeStruct_Color' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, K2Node_MakeStruct_Color_1) == 0x0001D4, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::K2Node_MakeStruct_Color_1' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x0001D8, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_IsValid_ReturnValue_1) == 0x0001DC, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_CheckLoaded_ReturnValue_2) == 0x0001DD, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_CheckLoaded_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_CheckActiveMode_ReturnValue) == 0x0001DE, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_CheckActiveMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_CheckEnableTranslucence_ReturnValue) == 0x0001DF, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_CheckEnableTranslucence_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_GetEffect_ReturnValue_2) == 0x0001E0, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_GetEffect_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_CheckEnableTranslucence_ReturnValue_1) == 0x0001E8, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_CheckEnableTranslucence_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_SpawnSystemAttached_ReturnValue) == 0x0001F0, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_GetDeadFloorEffectScale_Scale) == 0x0001F8, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_GetDeadFloorEffectScale_Scale' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, K2Node_CustomEvent_IsDown) == 0x000204, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::K2Node_CustomEvent_IsDown' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_GetSocketTransform_ReturnValue) == 0x000210, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_BreakTransform_Location) == 0x000240, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_BreakTransform_Rotation) == 0x00024C, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_BreakTransform_Scale) == 0x000258, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_GetFrontToCamEffectAdditionalPos_AddWorldPos) == 0x000264, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_GetFrontToCamEffectAdditionalPos_AddWorldPos' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000270, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_SelectVector_ReturnValue) == 0x00027C, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000288, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_GetTransform_ReturnValue) == 0x000290, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_BreakTransform_Location_1) == 0x0002C0, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_BreakTransform_Rotation_1) == 0x0002CC, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_BreakTransform_Scale_1) == 0x0002D8, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_GetSummonEmergeEffect_SummonEmergeEffect) == 0x0002E8, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_GetSummonEmergeEffect_SummonEmergeEffect' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, K2Node_CustomEvent_Effect) == 0x000310, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::K2Node_CustomEvent_Effect' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_SpawnSystemAtLocation_ReturnValue_1) == 0x000318, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_SpawnSystemAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000320, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_Divide_FloatFloat_ReturnValue_5) == 0x000324, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_Divide_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_GetEffect_ReturnValue_3) == 0x000328, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_GetEffect_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_GetOpacity_Opacity) == 0x000330, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_GetOpacity_Opacity' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_FClamp_ReturnValue_1) == 0x000334, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_GetTimelineLength_ReturnValue) == 0x000338, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_GetTimelineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_Subtract_FloatFloat_ReturnValue_5) == 0x00033C, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_Subtract_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000340, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_CheckLoaded_ReturnValue_3) == 0x000344, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_CheckLoaded_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, Temp_int_Array_Index_Variable_1) == 0x000348, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, CallFunc_Array_Get_Item_1) == 0x000350, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, K2Node_DynamicCast_AsBP_Btl_Shadow_Base) == 0x000358, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::K2Node_DynamicCast_AsBP_Btl_Shadow_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase, K2Node_DynamicCast_bSuccess_2) == 0x000360, "Member 'BP_BtlShadowBase_C_ExecuteUbergraph_BP_BtlShadowBase::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BP_BtlShadowBase.BP_BtlShadowBase_C.On Emerge Effect Play
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlShadowBase_C_On_Emerge_Effect_Play final
{
public:
	class UNiagaraSystem*                         Effect;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlShadowBase_C_On_Emerge_Effect_Play) == 0x000008, "Wrong alignment on BP_BtlShadowBase_C_On_Emerge_Effect_Play");
static_assert(sizeof(BP_BtlShadowBase_C_On_Emerge_Effect_Play) == 0x000008, "Wrong size on BP_BtlShadowBase_C_On_Emerge_Effect_Play");
static_assert(offsetof(BP_BtlShadowBase_C_On_Emerge_Effect_Play, Effect) == 0x000000, "Member 'BP_BtlShadowBase_C_On_Emerge_Effect_Play::Effect' has a wrong offset!");

// Function BP_BtlShadowBase.BP_BtlShadowBase_C.On Play Dead Effect
// 0x0001 (0x0001 - 0x0000)
struct BP_BtlShadowBase_C_On_Play_Dead_Effect final
{
public:
	bool                                          IsDown_0;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlShadowBase_C_On_Play_Dead_Effect) == 0x000001, "Wrong alignment on BP_BtlShadowBase_C_On_Play_Dead_Effect");
static_assert(sizeof(BP_BtlShadowBase_C_On_Play_Dead_Effect) == 0x000001, "Wrong size on BP_BtlShadowBase_C_On_Play_Dead_Effect");
static_assert(offsetof(BP_BtlShadowBase_C_On_Play_Dead_Effect, IsDown_0) == 0x000000, "Member 'BP_BtlShadowBase_C_On_Play_Dead_Effect::IsDown_0' has a wrong offset!");

// Function BP_BtlShadowBase.BP_BtlShadowBase_C.HideForOtherAction
// 0x0003 (0x0003 - 0x0000)
struct BP_BtlShadowBase_C_HideForOtherAction final
{
public:
	bool                                          CriticalHindrance;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Rapid;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HalfMode;                                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlShadowBase_C_HideForOtherAction) == 0x000001, "Wrong alignment on BP_BtlShadowBase_C_HideForOtherAction");
static_assert(sizeof(BP_BtlShadowBase_C_HideForOtherAction) == 0x000003, "Wrong size on BP_BtlShadowBase_C_HideForOtherAction");
static_assert(offsetof(BP_BtlShadowBase_C_HideForOtherAction, CriticalHindrance) == 0x000000, "Member 'BP_BtlShadowBase_C_HideForOtherAction::CriticalHindrance' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_HideForOtherAction, Rapid) == 0x000001, "Member 'BP_BtlShadowBase_C_HideForOtherAction::Rapid' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_HideForOtherAction, HalfMode) == 0x000002, "Member 'BP_BtlShadowBase_C_HideForOtherAction::HalfMode' has a wrong offset!");

// Function BP_BtlShadowBase.BP_BtlShadowBase_C.On Play Dead Performance
// 0x0001 (0x0001 - 0x0000)
struct BP_BtlShadowBase_C_On_Play_Dead_Performance final
{
public:
	bool                                          ShortMode;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlShadowBase_C_On_Play_Dead_Performance) == 0x000001, "Wrong alignment on BP_BtlShadowBase_C_On_Play_Dead_Performance");
static_assert(sizeof(BP_BtlShadowBase_C_On_Play_Dead_Performance) == 0x000001, "Wrong size on BP_BtlShadowBase_C_On_Play_Dead_Performance");
static_assert(offsetof(BP_BtlShadowBase_C_On_Play_Dead_Performance, ShortMode) == 0x000000, "Member 'BP_BtlShadowBase_C_On_Play_Dead_Performance::ShortMode' has a wrong offset!");

// Function BP_BtlShadowBase.BP_BtlShadowBase_C.SpawnCharacterBP
// 0x0001 (0x0001 - 0x0000)
struct BP_BtlShadowBase_C_SpawnCharacterBP final
{
public:
	bool                                          InitialHiding;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlShadowBase_C_SpawnCharacterBP) == 0x000001, "Wrong alignment on BP_BtlShadowBase_C_SpawnCharacterBP");
static_assert(sizeof(BP_BtlShadowBase_C_SpawnCharacterBP) == 0x000001, "Wrong size on BP_BtlShadowBase_C_SpawnCharacterBP");
static_assert(offsetof(BP_BtlShadowBase_C_SpawnCharacterBP, InitialHiding) == 0x000000, "Member 'BP_BtlShadowBase_C_SpawnCharacterBP::InitialHiding' has a wrong offset!");

// Function BP_BtlShadowBase.BP_BtlShadowBase_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_BtlShadowBase_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlShadowBase_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_BtlShadowBase_C_ReceiveTick");
static_assert(sizeof(BP_BtlShadowBase_C_ReceiveTick) == 0x000004, "Wrong size on BP_BtlShadowBase_C_ReceiveTick");
static_assert(offsetof(BP_BtlShadowBase_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_BtlShadowBase_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_BtlShadowBase.BP_BtlShadowBase_C.On Summon Emerge With Index
// 0x0004 (0x0004 - 0x0000)
struct BP_BtlShadowBase_C_On_Summon_Emerge_With_Index final
{
public:
	int32                                         EmergeIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlShadowBase_C_On_Summon_Emerge_With_Index) == 0x000004, "Wrong alignment on BP_BtlShadowBase_C_On_Summon_Emerge_With_Index");
static_assert(sizeof(BP_BtlShadowBase_C_On_Summon_Emerge_With_Index) == 0x000004, "Wrong size on BP_BtlShadowBase_C_On_Summon_Emerge_With_Index");
static_assert(offsetof(BP_BtlShadowBase_C_On_Summon_Emerge_With_Index, EmergeIndex) == 0x000000, "Member 'BP_BtlShadowBase_C_On_Summon_Emerge_With_Index::EmergeIndex' has a wrong offset!");

// Function BP_BtlShadowBase.BP_BtlShadowBase_C.OnLoaded_323D325F4FDCD44EFD2EFBB62B30685F
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlShadowBase_C_OnLoaded_323D325F4FDCD44EFD2EFBB62B30685F final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlShadowBase_C_OnLoaded_323D325F4FDCD44EFD2EFBB62B30685F) == 0x000008, "Wrong alignment on BP_BtlShadowBase_C_OnLoaded_323D325F4FDCD44EFD2EFBB62B30685F");
static_assert(sizeof(BP_BtlShadowBase_C_OnLoaded_323D325F4FDCD44EFD2EFBB62B30685F) == 0x000008, "Wrong size on BP_BtlShadowBase_C_OnLoaded_323D325F4FDCD44EFD2EFBB62B30685F");
static_assert(offsetof(BP_BtlShadowBase_C_OnLoaded_323D325F4FDCD44EFD2EFBB62B30685F, Loaded) == 0x000000, "Member 'BP_BtlShadowBase_C_OnLoaded_323D325F4FDCD44EFD2EFBB62B30685F::Loaded' has a wrong offset!");

// Function BP_BtlShadowBase.BP_BtlShadowBase_C.CreateCharacter
// 0x0018 (0x0018 - 0x0000)
struct BP_BtlShadowBase_C_CreateCharacter final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ShadowBase_C*                       K2Node_DynamicCast_AsBP_Shadow_Base;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlShadowBase_C_CreateCharacter) == 0x000008, "Wrong alignment on BP_BtlShadowBase_C_CreateCharacter");
static_assert(sizeof(BP_BtlShadowBase_C_CreateCharacter) == 0x000018, "Wrong size on BP_BtlShadowBase_C_CreateCharacter");
static_assert(offsetof(BP_BtlShadowBase_C_CreateCharacter, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_BtlShadowBase_C_CreateCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_CreateCharacter, K2Node_DynamicCast_AsBP_Shadow_Base) == 0x000008, "Member 'BP_BtlShadowBase_C_CreateCharacter::K2Node_DynamicCast_AsBP_Shadow_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_CreateCharacter, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_BtlShadowBase_C_CreateCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BtlShadowBase.BP_BtlShadowBase_C.GetCharacterRoot
// 0x0028 (0x0028 - 0x0000)
struct BP_BtlShadowBase_C_GetCharacterRoot final
{
public:
	class USceneComponent*                        Scene;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ShadowBase_C*                       K2Node_DynamicCast_AsBP_Shadow_Base;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlShadowBase_C_GetCharacterRoot) == 0x000008, "Wrong alignment on BP_BtlShadowBase_C_GetCharacterRoot");
static_assert(sizeof(BP_BtlShadowBase_C_GetCharacterRoot) == 0x000028, "Wrong size on BP_BtlShadowBase_C_GetCharacterRoot");
static_assert(offsetof(BP_BtlShadowBase_C_GetCharacterRoot, Scene) == 0x000000, "Member 'BP_BtlShadowBase_C_GetCharacterRoot::Scene' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_GetCharacterRoot, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000008, "Member 'BP_BtlShadowBase_C_GetCharacterRoot::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_GetCharacterRoot, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_BtlShadowBase_C_GetCharacterRoot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_GetCharacterRoot, K2Node_DynamicCast_AsBP_Shadow_Base) == 0x000018, "Member 'BP_BtlShadowBase_C_GetCharacterRoot::K2Node_DynamicCast_AsBP_Shadow_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_GetCharacterRoot, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_BtlShadowBase_C_GetCharacterRoot::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BtlShadowBase.BP_BtlShadowBase_C.GetShowActor
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlShadowBase_C_GetShowActor final
{
public:
	class AActor*                                 Showing_Actor;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlShadowBase_C_GetShowActor) == 0x000008, "Wrong alignment on BP_BtlShadowBase_C_GetShowActor");
static_assert(sizeof(BP_BtlShadowBase_C_GetShowActor) == 0x000008, "Wrong size on BP_BtlShadowBase_C_GetShowActor");
static_assert(offsetof(BP_BtlShadowBase_C_GetShowActor, Showing_Actor) == 0x000000, "Member 'BP_BtlShadowBase_C_GetShowActor::Showing_Actor' has a wrong offset!");

// Function BP_BtlShadowBase.BP_BtlShadowBase_C.GetSkeletalMesh
// 0x0010 (0x0010 - 0x0000)
struct BP_BtlShadowBase_C_GetSkeletalMesh final
{
public:
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlShadowBase_C_GetSkeletalMesh) == 0x000008, "Wrong alignment on BP_BtlShadowBase_C_GetSkeletalMesh");
static_assert(sizeof(BP_BtlShadowBase_C_GetSkeletalMesh) == 0x000010, "Wrong size on BP_BtlShadowBase_C_GetSkeletalMesh");
static_assert(offsetof(BP_BtlShadowBase_C_GetSkeletalMesh, SkeletalMesh) == 0x000000, "Member 'BP_BtlShadowBase_C_GetSkeletalMesh::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_GetSkeletalMesh, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_BtlShadowBase_C_GetSkeletalMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlShadowBase.BP_BtlShadowBase_C.CheckReadyCharacterBP
// 0x0001 (0x0001 - 0x0000)
struct BP_BtlShadowBase_C_CheckReadyCharacterBP final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlShadowBase_C_CheckReadyCharacterBP) == 0x000001, "Wrong alignment on BP_BtlShadowBase_C_CheckReadyCharacterBP");
static_assert(sizeof(BP_BtlShadowBase_C_CheckReadyCharacterBP) == 0x000001, "Wrong size on BP_BtlShadowBase_C_CheckReadyCharacterBP");
static_assert(offsetof(BP_BtlShadowBase_C_CheckReadyCharacterBP, ReturnValue) == 0x000000, "Member 'BP_BtlShadowBase_C_CheckReadyCharacterBP::ReturnValue' has a wrong offset!");

// Function BP_BtlShadowBase.BP_BtlShadowBase_C.GetAttackMontageName
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlShadowBase_C_GetAttackMontageName final
{
public:
	class FName                                   Attack;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlShadowBase_C_GetAttackMontageName) == 0x000004, "Wrong alignment on BP_BtlShadowBase_C_GetAttackMontageName");
static_assert(sizeof(BP_BtlShadowBase_C_GetAttackMontageName) == 0x000008, "Wrong size on BP_BtlShadowBase_C_GetAttackMontageName");
static_assert(offsetof(BP_BtlShadowBase_C_GetAttackMontageName, Attack) == 0x000000, "Member 'BP_BtlShadowBase_C_GetAttackMontageName::Attack' has a wrong offset!");

// Function BP_BtlShadowBase.BP_BtlShadowBase_C.CreateMID
// 0x0050 (0x0050 - 0x0000)
struct BP_BtlShadowBase_C_CreateMID final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMesh_SkeletalMesh;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlShadowBase_C_CreateMID) == 0x000008, "Wrong alignment on BP_BtlShadowBase_C_CreateMID");
static_assert(sizeof(BP_BtlShadowBase_C_CreateMID) == 0x000050, "Wrong size on BP_BtlShadowBase_C_CreateMID");
static_assert(offsetof(BP_BtlShadowBase_C_CreateMID, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_BtlShadowBase_C_CreateMID::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_CreateMID, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_BtlShadowBase_C_CreateMID::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_CreateMID, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_BtlShadowBase_C_CreateMID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_CreateMID, CallFunc_GetSkeletalMesh_SkeletalMesh) == 0x000010, "Member 'BP_BtlShadowBase_C_CreateMID::CallFunc_GetSkeletalMesh_SkeletalMesh' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_CreateMID, CallFunc_GetMaterials_ReturnValue) == 0x000018, "Member 'BP_BtlShadowBase_C_CreateMID::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_CreateMID, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_BtlShadowBase_C_CreateMID::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_CreateMID, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_BtlShadowBase_C_CreateMID::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_CreateMID, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_BtlShadowBase_C_CreateMID::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_CreateMID, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000040, "Member 'BP_BtlShadowBase_C_CreateMID::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_CreateMID, CallFunc_Array_Add_ReturnValue) == 0x000048, "Member 'BP_BtlShadowBase_C_CreateMID::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_BtlShadowBase.BP_BtlShadowBase_C.SetDeadBubblePower
// 0x0030 (0x0030 - 0x0000)
struct BP_BtlShadowBase_C_SetDeadBubblePower final
{
public:
	float                                         Power;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlShadowBase_C_SetDeadBubblePower) == 0x000008, "Wrong alignment on BP_BtlShadowBase_C_SetDeadBubblePower");
static_assert(sizeof(BP_BtlShadowBase_C_SetDeadBubblePower) == 0x000030, "Wrong size on BP_BtlShadowBase_C_SetDeadBubblePower");
static_assert(offsetof(BP_BtlShadowBase_C_SetDeadBubblePower, Power) == 0x000000, "Member 'BP_BtlShadowBase_C_SetDeadBubblePower::Power' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_SetDeadBubblePower, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_BtlShadowBase_C_SetDeadBubblePower::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_SetDeadBubblePower, CallFunc_FClamp_ReturnValue) == 0x000008, "Member 'BP_BtlShadowBase_C_SetDeadBubblePower::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_SetDeadBubblePower, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_BtlShadowBase_C_SetDeadBubblePower::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_SetDeadBubblePower, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_BtlShadowBase_C_SetDeadBubblePower::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_SetDeadBubblePower, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_BtlShadowBase_C_SetDeadBubblePower::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_SetDeadBubblePower, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_BtlShadowBase_C_SetDeadBubblePower::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_SetDeadBubblePower, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_BtlShadowBase_C_SetDeadBubblePower::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_SetDeadBubblePower, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_BtlShadowBase_C_SetDeadBubblePower::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BtlShadowBase.BP_BtlShadowBase_C.BeginDeadPhase
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlShadowBase_C_BeginDeadPhase final
{
public:
	bool                                          IsDown_0;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Scale;                                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlShadowBase_C_BeginDeadPhase) == 0x000004, "Wrong alignment on BP_BtlShadowBase_C_BeginDeadPhase");
static_assert(sizeof(BP_BtlShadowBase_C_BeginDeadPhase) == 0x000008, "Wrong size on BP_BtlShadowBase_C_BeginDeadPhase");
static_assert(offsetof(BP_BtlShadowBase_C_BeginDeadPhase, IsDown_0) == 0x000000, "Member 'BP_BtlShadowBase_C_BeginDeadPhase::IsDown_0' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_BeginDeadPhase, Scale) == 0x000004, "Member 'BP_BtlShadowBase_C_BeginDeadPhase::Scale' has a wrong offset!");

// Function BP_BtlShadowBase.BP_BtlShadowBase_C.Shift Skill Phase
// 0x0010 (0x0010 - 0x0000)
struct BP_BtlShadowBase_C_Shift_Skill_Phase final
{
public:
	bool                                          CallFunc_IsUsingOffensiveSkill_ReturnValue;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSkillEffective_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckShadowExChantCamMustPlay_ReturnValue; // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingOffensiveSkill_ReturnValue_1;      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlShadowBase_C_Shift_Skill_Phase) == 0x000004, "Wrong alignment on BP_BtlShadowBase_C_Shift_Skill_Phase");
static_assert(sizeof(BP_BtlShadowBase_C_Shift_Skill_Phase) == 0x000010, "Wrong size on BP_BtlShadowBase_C_Shift_Skill_Phase");
static_assert(offsetof(BP_BtlShadowBase_C_Shift_Skill_Phase, CallFunc_IsUsingOffensiveSkill_ReturnValue) == 0x000000, "Member 'BP_BtlShadowBase_C_Shift_Skill_Phase::CallFunc_IsUsingOffensiveSkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_Shift_Skill_Phase, CallFunc_IsSkillEffective_ReturnValue) == 0x000001, "Member 'BP_BtlShadowBase_C_Shift_Skill_Phase::CallFunc_IsSkillEffective_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_Shift_Skill_Phase, CallFunc_CheckShadowExChantCamMustPlay_ReturnValue) == 0x000002, "Member 'BP_BtlShadowBase_C_Shift_Skill_Phase::CallFunc_CheckShadowExChantCamMustPlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_Shift_Skill_Phase, CallFunc_IsUsingOffensiveSkill_ReturnValue_1) == 0x000003, "Member 'BP_BtlShadowBase_C_Shift_Skill_Phase::CallFunc_IsUsingOffensiveSkill_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_Shift_Skill_Phase, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'BP_BtlShadowBase_C_Shift_Skill_Phase::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_Shift_Skill_Phase, CallFunc_RandomInteger_ReturnValue) == 0x000008, "Member 'BP_BtlShadowBase_C_Shift_Skill_Phase::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_Shift_Skill_Phase, CallFunc_Less_IntInt_ReturnValue) == 0x00000C, "Member 'BP_BtlShadowBase_C_Shift_Skill_Phase::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_Shift_Skill_Phase, CallFunc_BooleanOR_ReturnValue) == 0x00000D, "Member 'BP_BtlShadowBase_C_Shift_Skill_Phase::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_Shift_Skill_Phase, CallFunc_IsValid_ReturnValue) == 0x00000E, "Member 'BP_BtlShadowBase_C_Shift_Skill_Phase::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlShadowBase.BP_BtlShadowBase_C.Finalize Skill Phase
// 0x0003 (0x0003 - 0x0000)
struct BP_BtlShadowBase_C_Finalize_Skill_Phase final
{
public:
	bool                                          CallFunc_CheckSkipSkillEndAnim_ReturnValue;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlShadowBase_C_Finalize_Skill_Phase) == 0x000001, "Wrong alignment on BP_BtlShadowBase_C_Finalize_Skill_Phase");
static_assert(sizeof(BP_BtlShadowBase_C_Finalize_Skill_Phase) == 0x000003, "Wrong size on BP_BtlShadowBase_C_Finalize_Skill_Phase");
static_assert(offsetof(BP_BtlShadowBase_C_Finalize_Skill_Phase, CallFunc_CheckSkipSkillEndAnim_ReturnValue) == 0x000000, "Member 'BP_BtlShadowBase_C_Finalize_Skill_Phase::CallFunc_CheckSkipSkillEndAnim_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_Finalize_Skill_Phase, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_BtlShadowBase_C_Finalize_Skill_Phase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_Finalize_Skill_Phase, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'BP_BtlShadowBase_C_Finalize_Skill_Phase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_BtlShadowBase.BP_BtlShadowBase_C.SetOpacity
// 0x0014 (0x0014 - 0x0000)
struct BP_BtlShadowBase_C_SetOpacity final
{
public:
	float                                         Power;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ControlWithVisible;                                // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckUseQuickEncount_ReturnValue;         // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlShadowBase_C_SetOpacity) == 0x000004, "Wrong alignment on BP_BtlShadowBase_C_SetOpacity");
static_assert(sizeof(BP_BtlShadowBase_C_SetOpacity) == 0x000014, "Wrong size on BP_BtlShadowBase_C_SetOpacity");
static_assert(offsetof(BP_BtlShadowBase_C_SetOpacity, Power) == 0x000000, "Member 'BP_BtlShadowBase_C_SetOpacity::Power' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_SetOpacity, ControlWithVisible) == 0x000004, "Member 'BP_BtlShadowBase_C_SetOpacity::ControlWithVisible' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_SetOpacity, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'BP_BtlShadowBase_C_SetOpacity::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_SetOpacity, CallFunc_CheckUseQuickEncount_ReturnValue) == 0x000006, "Member 'BP_BtlShadowBase_C_SetOpacity::CallFunc_CheckUseQuickEncount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_SetOpacity, CallFunc_BooleanAND_ReturnValue) == 0x000007, "Member 'BP_BtlShadowBase_C_SetOpacity::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_SetOpacity, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'BP_BtlShadowBase_C_SetOpacity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_SetOpacity, CallFunc_FClamp_ReturnValue) == 0x00000C, "Member 'BP_BtlShadowBase_C_SetOpacity::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_SetOpacity, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_BtlShadowBase_C_SetOpacity::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_BtlShadowBase.BP_BtlShadowBase_C.GetCharacterScale
// 0x0018 (0x0018 - 0x0000)
struct BP_BtlShadowBase_C_GetCharacterScale final
{
public:
	struct FVector                                Scale;                                             // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlShadowBase_C_GetCharacterScale) == 0x000004, "Wrong alignment on BP_BtlShadowBase_C_GetCharacterScale");
static_assert(sizeof(BP_BtlShadowBase_C_GetCharacterScale) == 0x000018, "Wrong size on BP_BtlShadowBase_C_GetCharacterScale");
static_assert(offsetof(BP_BtlShadowBase_C_GetCharacterScale, Scale) == 0x000000, "Member 'BP_BtlShadowBase_C_GetCharacterScale::Scale' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_GetCharacterScale, CallFunc_K2_GetComponentScale_ReturnValue) == 0x00000C, "Member 'BP_BtlShadowBase_C_GetCharacterScale::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");

// Function BP_BtlShadowBase.BP_BtlShadowBase_C.Set Color
// 0x0048 (0x0048 - 0x0000)
struct BP_BtlShadowBase_C_Set_Color final
{
public:
	struct FColor                                 Color;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Power;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_ByteToFloat_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_ByteToFloat_ReturnValue_1;           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_ByteToFloat_ReturnValue_2;           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlShadowBase_C_Set_Color) == 0x000008, "Wrong alignment on BP_BtlShadowBase_C_Set_Color");
static_assert(sizeof(BP_BtlShadowBase_C_Set_Color) == 0x000048, "Wrong size on BP_BtlShadowBase_C_Set_Color");
static_assert(offsetof(BP_BtlShadowBase_C_Set_Color, Color) == 0x000000, "Member 'BP_BtlShadowBase_C_Set_Color::Color' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_Set_Color, Power) == 0x000004, "Member 'BP_BtlShadowBase_C_Set_Color::Power' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_Set_Color, CallFunc_FClamp_ReturnValue) == 0x000008, "Member 'BP_BtlShadowBase_C_Set_Color::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_Set_Color, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_BtlShadowBase_C_Set_Color::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_Set_Color, CallFunc_Conv_ByteToFloat_ReturnValue) == 0x000010, "Member 'BP_BtlShadowBase_C_Set_Color::CallFunc_Conv_ByteToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_Set_Color, CallFunc_Conv_ByteToFloat_ReturnValue_1) == 0x000014, "Member 'BP_BtlShadowBase_C_Set_Color::CallFunc_Conv_ByteToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_Set_Color, CallFunc_Conv_ByteToFloat_ReturnValue_2) == 0x000018, "Member 'BP_BtlShadowBase_C_Set_Color::CallFunc_Conv_ByteToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_Set_Color, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_BtlShadowBase_C_Set_Color::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_Set_Color, CallFunc_MakeColor_ReturnValue) == 0x000020, "Member 'BP_BtlShadowBase_C_Set_Color::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_Set_Color, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_BtlShadowBase_C_Set_Color::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_Set_Color, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_BtlShadowBase_C_Set_Color::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_Set_Color, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_BtlShadowBase_C_Set_Color::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_Set_Color, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_BtlShadowBase_C_Set_Color::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BtlShadowBase.BP_BtlShadowBase_C.GetMaterials
// 0x0010 (0x0010 - 0x0000)
struct BP_BtlShadowBase_C_GetMaterials final
{
public:
	TArray<class UMaterialInstanceDynamic*>       MaterialInstance;                                  // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_BtlShadowBase_C_GetMaterials) == 0x000008, "Wrong alignment on BP_BtlShadowBase_C_GetMaterials");
static_assert(sizeof(BP_BtlShadowBase_C_GetMaterials) == 0x000010, "Wrong size on BP_BtlShadowBase_C_GetMaterials");
static_assert(offsetof(BP_BtlShadowBase_C_GetMaterials, MaterialInstance) == 0x000000, "Member 'BP_BtlShadowBase_C_GetMaterials::MaterialInstance' has a wrong offset!");

// Function BP_BtlShadowBase.BP_BtlShadowBase_C.GetDeadCurveValue
// 0x001C (0x001C - 0x0000)
struct BP_BtlShadowBase_C_GetDeadCurveValue final
{
public:
	float                                         InTime;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShortMode;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Work;                                              // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlShadowBase_C_GetDeadCurveValue) == 0x000004, "Wrong alignment on BP_BtlShadowBase_C_GetDeadCurveValue");
static_assert(sizeof(BP_BtlShadowBase_C_GetDeadCurveValue) == 0x00001C, "Wrong size on BP_BtlShadowBase_C_GetDeadCurveValue");
static_assert(offsetof(BP_BtlShadowBase_C_GetDeadCurveValue, InTime) == 0x000000, "Member 'BP_BtlShadowBase_C_GetDeadCurveValue::InTime' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_GetDeadCurveValue, ShortMode) == 0x000004, "Member 'BP_BtlShadowBase_C_GetDeadCurveValue::ShortMode' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_GetDeadCurveValue, ReturnValue) == 0x000008, "Member 'BP_BtlShadowBase_C_GetDeadCurveValue::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_GetDeadCurveValue, Work) == 0x00000C, "Member 'BP_BtlShadowBase_C_GetDeadCurveValue::Work' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_GetDeadCurveValue, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_BtlShadowBase_C_GetDeadCurveValue::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_GetDeadCurveValue, CallFunc_GetFloatValue_ReturnValue) == 0x000014, "Member 'BP_BtlShadowBase_C_GetDeadCurveValue::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_GetDeadCurveValue, CallFunc_GetFloatValue_ReturnValue_1) == 0x000018, "Member 'BP_BtlShadowBase_C_GetDeadCurveValue::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");

// Function BP_BtlShadowBase.BP_BtlShadowBase_C.SetCharacterEffectOpacity
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlShadowBase_C_SetCharacterEffectOpacity final
{
public:
	float                                         Opacity_0;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlShadowBase_C_SetCharacterEffectOpacity) == 0x000004, "Wrong alignment on BP_BtlShadowBase_C_SetCharacterEffectOpacity");
static_assert(sizeof(BP_BtlShadowBase_C_SetCharacterEffectOpacity) == 0x000008, "Wrong size on BP_BtlShadowBase_C_SetCharacterEffectOpacity");
static_assert(offsetof(BP_BtlShadowBase_C_SetCharacterEffectOpacity, Opacity_0) == 0x000000, "Member 'BP_BtlShadowBase_C_SetCharacterEffectOpacity::Opacity_0' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_SetCharacterEffectOpacity, CallFunc_FClamp_ReturnValue) == 0x000004, "Member 'BP_BtlShadowBase_C_SetCharacterEffectOpacity::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BP_BtlShadowBase.BP_BtlShadowBase_C.SetVisible
// 0x0003 (0x0003 - 0x0000)
struct BP_BtlShadowBase_C_SetVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          KeepAnim;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlShadowBase_C_SetVisible) == 0x000001, "Wrong alignment on BP_BtlShadowBase_C_SetVisible");
static_assert(sizeof(BP_BtlShadowBase_C_SetVisible) == 0x000003, "Wrong size on BP_BtlShadowBase_C_SetVisible");
static_assert(offsetof(BP_BtlShadowBase_C_SetVisible, Visible) == 0x000000, "Member 'BP_BtlShadowBase_C_SetVisible::Visible' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_SetVisible, KeepAnim) == 0x000001, "Member 'BP_BtlShadowBase_C_SetVisible::KeepAnim' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_SetVisible, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000002, "Member 'BP_BtlShadowBase_C_SetVisible::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_BtlShadowBase.BP_BtlShadowBase_C.GetOpacity
// 0x000C (0x000C - 0x0000)
struct BP_BtlShadowBase_C_GetOpacity final
{
public:
	float                                         Opacity_0;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetOpacity_Opacity;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlShadowBase_C_GetOpacity) == 0x000004, "Wrong alignment on BP_BtlShadowBase_C_GetOpacity");
static_assert(sizeof(BP_BtlShadowBase_C_GetOpacity) == 0x00000C, "Wrong size on BP_BtlShadowBase_C_GetOpacity");
static_assert(offsetof(BP_BtlShadowBase_C_GetOpacity, Opacity_0) == 0x000000, "Member 'BP_BtlShadowBase_C_GetOpacity::Opacity_0' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_GetOpacity, CallFunc_GetOpacity_Opacity) == 0x000004, "Member 'BP_BtlShadowBase_C_GetOpacity::CallFunc_GetOpacity_Opacity' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_GetOpacity, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_BtlShadowBase_C_GetOpacity::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_BtlShadowBase.BP_BtlShadowBase_C.PlaySkillShotCam
// 0x0010 (0x0010 - 0x0000)
struct BP_BtlShadowBase_C_PlaySkillShotCam final
{
public:
	class ALevelSequenceActor*                    CallFunc_CreateLevelSequencePlayer_OutActor;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_CreateLevelSequencePlayer_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlShadowBase_C_PlaySkillShotCam) == 0x000008, "Wrong alignment on BP_BtlShadowBase_C_PlaySkillShotCam");
static_assert(sizeof(BP_BtlShadowBase_C_PlaySkillShotCam) == 0x000010, "Wrong size on BP_BtlShadowBase_C_PlaySkillShotCam");
static_assert(offsetof(BP_BtlShadowBase_C_PlaySkillShotCam, CallFunc_CreateLevelSequencePlayer_OutActor) == 0x000000, "Member 'BP_BtlShadowBase_C_PlaySkillShotCam::CallFunc_CreateLevelSequencePlayer_OutActor' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_PlaySkillShotCam, CallFunc_CreateLevelSequencePlayer_ReturnValue) == 0x000008, "Member 'BP_BtlShadowBase_C_PlaySkillShotCam::CallFunc_CreateLevelSequencePlayer_ReturnValue' has a wrong offset!");

// Function BP_BtlShadowBase.BP_BtlShadowBase_C.SetupEventAnimation
// 0x0001 (0x0001 - 0x0000)
struct BP_BtlShadowBase_C_SetupEventAnimation final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlShadowBase_C_SetupEventAnimation) == 0x000001, "Wrong alignment on BP_BtlShadowBase_C_SetupEventAnimation");
static_assert(sizeof(BP_BtlShadowBase_C_SetupEventAnimation) == 0x000001, "Wrong size on BP_BtlShadowBase_C_SetupEventAnimation");
static_assert(offsetof(BP_BtlShadowBase_C_SetupEventAnimation, Enable) == 0x000000, "Member 'BP_BtlShadowBase_C_SetupEventAnimation::Enable' has a wrong offset!");

// Function BP_BtlShadowBase.BP_BtlShadowBase_C.GetSummonEmergeEffect
// 0x0028 (0x0028 - 0x0000)
struct BP_BtlShadowBase_C_GetSummonEmergeEffect final
{
public:
	TSoftObjectPtr<class UNiagaraSystem>          SummonEmergeEffect;                                // 0x0000(0x0028)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlShadowBase_C_GetSummonEmergeEffect) == 0x000008, "Wrong alignment on BP_BtlShadowBase_C_GetSummonEmergeEffect");
static_assert(sizeof(BP_BtlShadowBase_C_GetSummonEmergeEffect) == 0x000028, "Wrong size on BP_BtlShadowBase_C_GetSummonEmergeEffect");
static_assert(offsetof(BP_BtlShadowBase_C_GetSummonEmergeEffect, SummonEmergeEffect) == 0x000000, "Member 'BP_BtlShadowBase_C_GetSummonEmergeEffect::SummonEmergeEffect' has a wrong offset!");

// Function BP_BtlShadowBase.BP_BtlShadowBase_C.GetDeadFloorEffectScale
// 0x001C (0x001C - 0x0000)
struct BP_BtlShadowBase_C_GetDeadFloorEffectScale final
{
public:
	struct FVector                                Scale;                                             // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCharacterEffectScale_ScaleValue;       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlShadowBase_C_GetDeadFloorEffectScale) == 0x000004, "Wrong alignment on BP_BtlShadowBase_C_GetDeadFloorEffectScale");
static_assert(sizeof(BP_BtlShadowBase_C_GetDeadFloorEffectScale) == 0x00001C, "Wrong size on BP_BtlShadowBase_C_GetDeadFloorEffectScale");
static_assert(offsetof(BP_BtlShadowBase_C_GetDeadFloorEffectScale, Scale) == 0x000000, "Member 'BP_BtlShadowBase_C_GetDeadFloorEffectScale::Scale' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_GetDeadFloorEffectScale, CallFunc_GetCharacterEffectScale_ScaleValue) == 0x00000C, "Member 'BP_BtlShadowBase_C_GetDeadFloorEffectScale::CallFunc_GetCharacterEffectScale_ScaleValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_GetDeadFloorEffectScale, CallFunc_MakeVector_ReturnValue) == 0x000010, "Member 'BP_BtlShadowBase_C_GetDeadFloorEffectScale::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_BtlShadowBase.BP_BtlShadowBase_C.TellEnemySpawnedToFadeManager
// 0x0010 (0x0010 - 0x0000)
struct BP_BtlShadowBase_C_TellEnemySpawnedToFadeManager final
{
public:
	class ABP_BtlEncountAssistant_C*              CallFunc_GetActorOfClass_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlShadowBase_C_TellEnemySpawnedToFadeManager) == 0x000008, "Wrong alignment on BP_BtlShadowBase_C_TellEnemySpawnedToFadeManager");
static_assert(sizeof(BP_BtlShadowBase_C_TellEnemySpawnedToFadeManager) == 0x000010, "Wrong size on BP_BtlShadowBase_C_TellEnemySpawnedToFadeManager");
static_assert(offsetof(BP_BtlShadowBase_C_TellEnemySpawnedToFadeManager, CallFunc_GetActorOfClass_ReturnValue) == 0x000000, "Member 'BP_BtlShadowBase_C_TellEnemySpawnedToFadeManager::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlShadowBase_C_TellEnemySpawnedToFadeManager, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_BtlShadowBase_C_TellEnemySpawnedToFadeManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlShadowBase.BP_BtlShadowBase_C.GetSizeCategory
// 0x0001 (0x0001 - 0x0000)
struct BP_BtlShadowBase_C_GetSizeCategory final
{
public:
	EBtlSizeCategoryType                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlShadowBase_C_GetSizeCategory) == 0x000001, "Wrong alignment on BP_BtlShadowBase_C_GetSizeCategory");
static_assert(sizeof(BP_BtlShadowBase_C_GetSizeCategory) == 0x000001, "Wrong size on BP_BtlShadowBase_C_GetSizeCategory");
static_assert(offsetof(BP_BtlShadowBase_C_GetSizeCategory, ReturnValue) == 0x000000, "Member 'BP_BtlShadowBase_C_GetSizeCategory::ReturnValue' has a wrong offset!");

}

