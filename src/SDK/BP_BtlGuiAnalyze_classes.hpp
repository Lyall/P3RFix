#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtlGuiAnalyze

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Xrd777_structs.hpp"
#include "BP_BtlGuiBaseActor_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BtlGuiAnalyze.BP_BtlGuiAnalyze_C
// 0x0590 (0x08E0 - 0x0350)
class ABP_BtlGuiAnalyze_C final : public ABP_BtlGuiBaseActor_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_BtlGuiAnalyze_C;                 // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBtlGuiResources*                       BtlGuiResources;                                   // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiAnalyzeComponent*                BtlGuiAnalyze;                                     // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBtlDataBaseComponent*                  BtlDataBase;                                       // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawComponent*                   BtlGuiDraw;                                        // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Detail_Out_Anime_2_RationBGLength_480AC96A490C26B01A5AAE80EABF9F6D; // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Detail_Out_Anime_1__AlphaText_480AC96A490C26B01A5AAE80EABF9F6D; // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Detail_Out_Anime__Direction_480AC96A490C26B01A5AAE80EABF9F6D; // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Detail_Out_Anime;                                  // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Detail_In_Anime_2_RationBGLength_BFB50F034B39C89F70CD068175F5E6E5; // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Detail_In_Anime_1_AlphaText_BFB50F034B39C89F70CD068175F5E6E5; // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Detail_In_Anime__Direction_BFB50F034B39C89F70CD068175F5E6E5; // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Detail_In_Anime;                                   // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LR_Anime_2__Ration_Skill_Item_F10382A14672F09DA5020FB71565B21F; // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LR_Anime_1_Ration_Status_F10382A14672F09DA5020FB71565B21F; // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            LR_Anime__Direction_F10382A14672F09DA5020FB71565B21F; // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     LR_Anime;                                          // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HighAnalyze_Anime_8_AlphaScanGreenBG_33E0AC1E425CC16914A79E94E89CBFB1; // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HighAnalyze_Anime_7_AlphaScan2Gradation_33E0AC1E425CC16914A79E94E89CBFB1; // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HighAnalyze_Anime_6_RationScan2_33E0AC1E425CC16914A79E94E89CBFB1; // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HighAnalyze_Anime_5_AlphaScan1Gradation_33E0AC1E425CC16914A79E94E89CBFB1; // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HighAnalyze_Anime_4_RationScan1_33E0AC1E425CC16914A79E94E89CBFB1; // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HighAnalyze_Anime_3_AlphaBlackBG_33E0AC1E425CC16914A79E94E89CBFB1; // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HighAnalyze_Anime_2_AlphaLuminusHightAnalyzeIcon_33E0AC1E425CC16914A79E94E89CBFB1; // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HighAnalyze_Anime_1_RationIconPrimitive_33E0AC1E425CC16914A79E94E89CBFB1; // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            HighAnalyze_Anime__Direction_33E0AC1E425CC16914A79E94E89CBFB1; // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E1[0x7];                                      // 0x03E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     HighAnalyze_Anime;                                 // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartOutAnime_7_MoveYFukaFukidashi_3EF042D942266B0C484134A6ADBFF1F4; // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartOutAnime_6_MoveYItemList_3EF042D942266B0C484134A6ADBFF1F4; // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartOutAnime_5_MoveYSkillList_3EF042D942266B0C484134A6ADBFF1F4; // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartOutAnime_4_MoveYStatus_3EF042D942266B0C484134A6ADBFF1F4; // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartOutAnime_3_AlphaAllInfo_3EF042D942266B0C484134A6ADBFF1F4; // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartOutAnime_2_BackGroundAlpha_3EF042D942266B0C484134A6ADBFF1F4; // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartOutAnime_1_BackGround_Size_3EF042D942266B0C484134A6ADBFF1F4; // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            StartOutAnime__Direction_3EF042D942266B0C484134A6ADBFF1F4; // 0x040C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40D[0x3];                                      // 0x040D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     StartOutAnime;                                     // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L1R1_LoopAnime_1_L1R1Ration_F8CC37FC4817064D07FE8990BB9FB221; // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            L1R1_LoopAnime__Direction_F8CC37FC4817064D07FE8990BB9FB221; // 0x041C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41D[0x3];                                      // 0x041D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     L1R1_LoopAnime;                                    // 0x0420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HighAnalyze_LoopAnime_1_Luminus_HighAnalyze_6A8EC2974E6C71E08C27329A65B89300; // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            HighAnalyze_LoopAnime__Direction_6A8EC2974E6C71E08C27329A65B89300; // 0x042C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42D[0x3];                                      // 0x042D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     HighAnalyze_LoopAnime;                             // 0x0430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Fuka_Info_In_Anime_4_MoveYFukidashi_B085F9F44F4882F3589873AFD7F1CAA0; // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Fuka_Info_In_Anime_3_AlphaFukidashi_B085F9F44F4882F3589873AFD7F1CAA0; // 0x043C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Fuka_Info_In_Anime_2_LuminousHighAnalyze_B085F9F44F4882F3589873AFD7F1CAA0; // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Fuka_Info_In_Anime_1_AlphaHighAnalyze_B085F9F44F4882F3589873AFD7F1CAA0; // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Fuka_Info_In_Anime__Direction_B085F9F44F4882F3589873AFD7F1CAA0; // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_449[0x7];                                      // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Fuka_Info_In_Anime;                                // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAnime_11_MoveYItemList_57BED40A4EB382DE7CB7D497420EF025; // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAnime_10_MoveYSkillList_57BED40A4EB382DE7CB7D497420EF025; // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAnime_9_MoveYStatus_57BED40A4EB382DE7CB7D497420EF025; // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAnime_8__ScaleRectSkillList_57BED40A4EB382DE7CB7D497420EF025; // 0x0464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAnime_7_ScaleRectRed_57BED40A4EB382DE7CB7D497420EF025; // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAnime_6_ScaleRectBlack_57BED40A4EB382DE7CB7D497420EF025; // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAnime_5_AlphaRohombusDupuli_57BED40A4EB382DE7CB7D497420EF025; // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAnime_4_ScaleRohombusDupuli_57BED40A4EB382DE7CB7D497420EF025; // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAnime_3_ScaleRectMask_57BED40A4EB382DE7CB7D497420EF025; // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAnime_2_ScaleRohombus_57BED40A4EB382DE7CB7D497420EF025; // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAnime_1_ScaleRohombusMask_57BED40A4EB382DE7CB7D497420EF025; // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            InAnime__Direction_57BED40A4EB382DE7CB7D497420EF025; // 0x0484(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_485[0x3];                                      // 0x0485(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     InAnime;                                           // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABtlActor*>                      EnemyList;                                         // 0x0490(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	int32                                         TargetIndex;                                       // 0x04A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStartInAnimeAttr;                                // 0x04A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsFukidashiXOver255;                               // 0x04A5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsFukidashiYOver2Line;                             // 0x04A6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsStartAnimeScan1;                                 // 0x04A7(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsStartAnimeScanAll;                               // 0x04A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsSelectHighAnalyze;                               // 0x04A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4AA[0x6];                                      // 0x04AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBtlGuiDrawObjectText*                  TextObj;                                           // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectIndex;                                       // 0x04B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BC[0x4];                                      // 0x04BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBtlGuiDrawObjectPrimitive*             BGRhombusMsk;                                      // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectPrimitive*             BGRhombusClear;                                    // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectPrimitive*             BGRectMask;                                        // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectPrimitive*             BGRectBlack;                                       // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectPrimitive*             BGSkillList;                                       // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectPrimitive*             BGRectRed;                                         // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectPrimitive*             BGRhombus;                                         // 0x04F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PosA_Status;                                       // 0x04F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                HpTitle;                                           // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                HpTitleMax;                                        // 0x0508(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBtlGuiDrawObjectSprite*>        HpNum;                                             // 0x0510(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UBtlGuiDrawObjectSprite*                SpTitle;                                           // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                SpTitleMax;                                        // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBtlGuiDrawObjectSprite*>        SpNum;                                             // 0x0530(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UBtlGuiDrawObjectSprite*>        LevelNum;                                          // 0x0540(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UBtlGuiDrawObjectSprite*                LevelTitle;                                        // 0x0550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                ArcanaTItle;                                       // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                ArcanaSpr;                                         // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectText*                  NameInitial;                                       // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectText*                  NameInitialMask;                                   // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectText*                  NameFullMask;                                      // 0x0578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectText*                  NameFull;                                          // 0x0580(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FBtlAnalyzeAffinityIcon>        AffinityIcons;                                     // 0x0588(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FBtlAnalyzeSkillSpace>          SkillSpaceInfo;                                    // 0x0598(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UBtlGuiDrawObjectRoundRect*             SkillRoundRect;                                    // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                SkillUnknownIcon;                                  // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                SkillUnknownTextSpr;                               // 0x05B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                SkillAttackBG;                                     // 0x05C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                SkillAttackIcon;                                   // 0x05C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectText*                  SkillAttackText;                                   // 0x05D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                SkillTitle;                                        // 0x05D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FBtlAnalyzeItemSpace>           ItemSpaceInfo;                                     // 0x05E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FBtlAnalyzeHighAnalyzePrimitive> AnalyzePrimi;                                      // 0x05F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector2D                              PosB_SkillList;                                    // 0x0600(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PosC_Item;                                         // 0x0608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USprAsset*                              SprAsset;                                          // 0x0610(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USprAsset*                              SprCampAsset;                                      // 0x0618(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBmdAsset*                              BmdAsset;                                          // 0x0620(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlgAsset*                              PlgAsset;                                          // 0x0628(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USprAsset*                              SprItemIcon;                                       // 0x0630(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PosD_HighAnalyze;                                  // 0x0638(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PosF_BG;                                           // 0x0640(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimeScaleBGRectMask;                              // 0x0648(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimeScaleBGRectRed;                               // 0x064C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimeScaleRohombusDupuli;                          // 0x0650(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimeScaleRhombusMask;                             // 0x0654(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimeScaleBGRectBlack;                             // 0x0658(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimeScaleBGRectSkillList;                         // 0x065C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimeAlphaRohombusDupuli;                          // 0x0660(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimeMoveYStatus;                                  // 0x0664(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimeMoveYSkillList;                               // 0x0668(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimeMoveYItemList;                                // 0x066C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimeAlphaHighAnalyze;                             // 0x0670(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimeAlphaHighAnalyzeDupuli;                       // 0x0674(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimeMoveYFukidashi;                               // 0x0678(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimeAlphaFukidashi;                               // 0x067C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimeL1R1Ration;                                   // 0x0680(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimeAlphaAllInfo;                                 // 0x0684(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimeAlphaRohombus;                                // 0x0688(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimeScaleRohombus;                                // 0x068C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectPrimitive*             BGRhombusDupuli;                                   // 0x0690(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectPrimitive*             BGRhombusDupuliAlpha;                              // 0x0698(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectPrimitive*             BGRectMask2;                                       // 0x06A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                IconR1;                                            // 0x06A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                IconR1Arrow;                                       // 0x06B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                ItemTitle;                                         // 0x06B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                IconL1;                                            // 0x06C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                IconL1Arrow;                                       // 0x06C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ParamTimeInAnimeAttrDif;                           // 0x06D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ParamFrameScan1UnknownIconAppera;                  // 0x06D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                HighAnalyzeBG;                                     // 0x06D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                HighAnalyzeBGDupuli;                               // 0x06E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                HighAnalyzeTabIcon;                                // 0x06E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                HighAnalyzeIcon;                                   // 0x06F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                HighAnalyzeCostTitle;                              // 0x06F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                HighAnalyzeCostSpTitle;                            // 0x0700(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                HighAnalyzeCost1keta;                              // 0x0708(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                HighAnalyzeCost2keta;                              // 0x0710(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectRoundRect*             FukidashiBG;                                       // 0x0718(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                FukidashiFrame;                                    // 0x0720(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectMsg*                   FukidashiMsg1Line;                                 // 0x0728(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectMsg*                   FukidashiMsg2Line;                                 // 0x0730(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                EffectHighAnalyzeIconLuminous;                     // 0x0738(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectPrimitive*             HighAnalyzeBGClean;                                // 0x0740(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBtlGuiDrawObjectPrimitive*>     EffectHighAnalyzeIconPrimitive;                    // 0x0748(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UBtlGuiDrawObjectRect*                  ScanBlackBG;                                       // 0x0758(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectPrimitive*             Scan1BG;                                           // 0x0760(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                Scan1Gradation;                                    // 0x0768(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBtlGuiDrawObjectPrimitive*>     Scan1FollowPrimitive;                              // 0x0770(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<float>                                 TimeScan1FollowPrimitive;                          // 0x0780(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         AddIndexScan1FollowPrimitive;                      // 0x0790(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumScanFollowPrimitive;                            // 0x0794(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                Scan2Gradation;                                    // 0x0798(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scan2AddPosY;                                      // 0x07A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A4[0x4];                                      // 0x07A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector2D>                      EffectHighAnalyzeIconPrimitivePosMoveTo;           // 0x07A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         AnimeAlphaScan1Gradation;                          // 0x07B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scan1Deltatime;                                    // 0x07BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scan1AddPosY;                                      // 0x07C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimeLuminusAlphaEffectHighAnalyzeIcon;            // 0x07C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimeRationEffectHighanalyzeIconPrimi;             // 0x07C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scan1BGAddPosY;                                    // 0x07CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimeAlphaScanBlackBG;                             // 0x07D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ParamFraneFollowPrimitive;                         // 0x07D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ParamFrameScan2UnknownIconVanish;                  // 0x07D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ParamFrameScan2ResitIconAppear;                    // 0x07DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ParamFrameScan2RippleEffectIcon;                   // 0x07E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ParamFrameScan2Primitive;                          // 0x07E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimeAlphaScanBG;                                  // 0x07E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimeAlphaScan2Gradation;                          // 0x07EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            AlphaResistIcon;                                   // 0x07F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 ColorHighAnalyzeCostTitle;                         // 0x07F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 ColorHighAnalyzeCost;                              // 0x07FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimeRLRationStatus;                               // 0x0800(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AnimeRightLR;                                      // 0x0804(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_805[0x3];                                      // 0x0805(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AnimeRLRationSkillItem;                            // 0x0808(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimeOutMoveYStatus;                               // 0x080C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimeOutMoveYSkillList;                            // 0x0810(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimeOutMoveYItemList;                             // 0x0814(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimeOutMoveYFukidashi;                            // 0x0818(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimeOutAlphaHighAnalyze;                          // 0x081C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ParamFrameDetailMove;                              // 0x0820(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ParamFrameDetailDifferent;                         // 0x0824(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimeAlphaDetailText;                              // 0x0828(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDetailMode;                                      // 0x082C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsShowStatus;                                      // 0x082D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsShowSkill;                                       // 0x082E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsShowItem;                                        // 0x082F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsShowLR;                                          // 0x0830(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsShowHighAnalyze;                                 // 0x0831(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsEnableHighAnalyze;                               // 0x0832(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_833[0x5];                                      // 0x0833(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  IsColorLevelGray;                                  // 0x0838(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<bool>                                  IsColorHpGray;                                     // 0x0848(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<bool>                                  IsColorSpGray;                                     // 0x0858(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsPlayOutAnime;                                    // 0x0868(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsShowAttackAttr;                                  // 0x0869(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsShowArcana;                                      // 0x086A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsStartHighAnalyzeEvent;                           // 0x086B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsSkipUpdate;                                      // 0x086C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsStartDetailInAnime;                              // 0x086D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsStartDetailOutAnime;                             // 0x086E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86F[0x1];                                      // 0x086F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PrevEnemyID;                                       // 0x0870(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PrevMsgID;                                         // 0x0874(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectText*                  NameBaseMask;                                      // 0x0878(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectPrimitive*             BGRectMask3;                                       // 0x0880(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectPrimitive*             BGRectMaskDetail;                                  // 0x0888(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimeWidthDetalBG;                                 // 0x0890(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHpDigitOver3;                                    // 0x0894(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsDrawScan1;                                       // 0x0895(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsDrawScan2;                                       // 0x0896(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsPlayHighAnalyze;                                 // 0x0897(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsPlayScanHighAnalyzeIcon;                         // 0x0898(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsPlayOnlyFukidashi;                               // 0x0899(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsPlayWaitAnimeAfterKnownEffect;                   // 0x089A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89B[0x1];                                      // 0x089B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeKnownIcon;                                     // 0x089C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectRect*                  BGNameClearA;                                      // 0x08A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectPrimitive*             MaskBGRectBlack;                                   // 0x08A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectPrimitive*             MaskBGRectRed;                                     // 0x08B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectPrimitive*             BGRhombusDupliClear;                               // 0x08B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectPrimitive*             MaskBGSkillList;                                   // 0x08C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEndSceneEmperorEmpress;                          // 0x08C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C9[0x3];                                      // 0x08C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ParamDifLv1keta;                                   // 0x08CC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ParamDifSP;                                        // 0x08D4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_BtlGuiAnalyze(int32 EntryPoint);
	void GuiActorEncountEnd();
	void GuiActorEncountStart();
	void EndCloseAnime();
	void GuiActorStateInit(bool Flag, int32 Param);
	void ChangeStateTargetSelect();
	void GuiActorUnbindAction();
	void GuiActorBindAction();
	void GuiActorUpdate(float DeltaTime);
	void GuiActorBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void PushTouch();
	void Push_RL();
	void PushCancel();
	void PushOk();
	void PushL1();
	void PushR1();
	void CreateKariMessage();
	void Start_Detail_Out_Anime();
	void Start_Detail_In_Anime();
	void Stop_InAnime();
	void Start_HighAnalyze_Anime();
	void Start_LR_Anime();
	void Start_Out_Anime();
	void Stop_L1R1_LoopAnime();
	void Start_L1R1_LoopAnime();
	void Stop_Highanalyze_LoopAnime();
	void Start_Highanalyze_Loop_Anime_();
	void Start_Fuka_Info_In_Anime();
	void Start_InAnime();
	void Detail_Out_Anime__UpdateFunc();
	void Detail_Out_Anime__FinishedFunc();
	void Detail_In_Anime__UpdateFunc();
	void Detail_In_Anime__FinishedFunc();
	void LR_Anime__3_StartAttrAnim__EventFunc();
	void LR_Anime__UpdateFunc();
	void LR_Anime__FinishedFunc();
	void HighAnalyze_Anime__9_ChangeHighAnalyzeIcon__EventFunc();
	void HighAnalyze_Anime__10_HiddenScan1Primitive__EventFunc();
	void HighAnalyze_Anime__11__ChangeFukidashi__EventFunc();
	void HighAnalyze_Anime__UpdateFunc();
	void HighAnalyze_Anime__FinishedFunc();
	void StartOutAnime__UpdateFunc();
	void StartOutAnime__FinishedFunc();
	void L1R1_LoopAnime__UpdateFunc();
	void L1R1_LoopAnime__FinishedFunc();
	void HighAnalyze_LoopAnime__UpdateFunc();
	void HighAnalyze_LoopAnime__FinishedFunc();
	void Fuka_Info_In_Anime__UpdateFunc();
	void Fuka_Info_In_Anime__FinishedFunc();
	void InAnime__12_Start_Attr_Anime__EventFunc();
	void InAnime__13_Start_Fuka_InAnime__EventFunc();
	void InAnime__UpdateFunc();
	void InAnime__FinishedFunc();
	void Kari_Draw();
	void Calc_Alpha_Color(const struct FColor& InColor, float Lerp, struct FColor* CalcedAlpha);
	void Create();
	void SetShowEnemy(class ABtlActor* Enemy);
	void CloseAnalyze();
	void CloseHighAnalyze();
	void ChangeAnalyzeTarget();
	void StartHighAnalyze();
	void ListControll(bool IsMoveAhead);
	void BehindTarget();
	void NextTarget();
	void Open_High_Anlyze();
	void CreateHighAnalyze();
	void CreateFukaFukidasi();
	void Create_ItemList();
	void Create_Status();
	void Create_AttrIcons(class USprAsset*& SprCampAsset_0);
	void Create_SkillList();
	void Create_BG();
	void Make_Primitive_Rect(float Width, float High, TArray<struct FBtlGuiVertex>* Out);
	void Init_Cost(int32 Cost);
	void Init_Status();
	void InitDetailMode();
	void SetAsset();
	void Add_Highanalyze_Primitive(float X, float Y, bool Reflect);
	void Setting_Attr_Icon_Param(class ABtlActor* Actor, int32 InputPin);
	void SetupScan1FollowPrimitive(const struct FVector2D& Pos);
	void InitAnimeParam();
	void Set_Status_Attr(class ABtlActor* NewParam);
	void Set_Status_Skill(class ABtlActor* Target);
	void SetStatusItem(class ABtlActor* Target);
	void Set_Status_Number(int32 Num, TArray<class UBtlGuiDrawObjectSprite*>& SetSprs, int32 MaxKeta, bool IsShowNumber, TArray<bool>& IsColorGrayList);
	void Create_Highanalyze_Primitive_Vector(TArray<struct FBtlGuiVertex>* Array);
	void CalcPosRotation(const struct FVector2D& In, const struct FVector2D& Base, float Rotation, struct FVector2D* Out);
	void Update(float DeltaTime);
	void UpdateEffeceHighanalyze();
	void UpdateAnimeScan(float DeltaTime);
	void UpdateHighanalyzeWaitPrimitive(float DeltaTime);
	void UpdateFukaInfo();
	void UpdateStatus();
	void Update_Status_HpSP(float InMoveY, const struct FVector2D& InChangeMove, const struct FColor& InTmpBasicColor);
	void UpdateItemList();
	void UpdateSkill();
	void UpdateBG(float DeltaTime);
	void UpdateAttrInAnime(float DeltaTime);
	void UpdateAnimeDetail(float DeltaTime);
	void UpdateWhenChangeTarget();
	void StartInAnimeAttr();
	void Change_Support(bool MuteVoice);
	void ChangeFukidashiMsg(int32 MsgNo);
	void CreateEffectHighAnalyze();
	void MakeScan2PrimitiveSize(TArray<struct FBtlGuiVertex>* NewParam);
	void MakeEffectHighanalyze1PrimitiveSize(TArray<struct FBtlGuiVertex>* NewParam);
	void CreateScan1FollowPrimitive();
	void ChangeAttrDetailMode(bool Value);
	void Change_Enable_High_Analyze_Butoon(bool Enable);
	void CloseKnownIcon();
	void SetShowHighAnalyze(bool Show);
	void CalcColorStatus(bool In, struct FColor* Out);
	void Calc_Battle_Attr(int32 AnalyzeIndex, int32* Attr);
	void PlaySupportMsg(EBtlAnalyzeSupportType InputPin, bool IsMute, bool IsOnlyHighAnalyze);
	void CreateEnemyList(class ABtlActor* PriorityActor);
	void EndHighAnalyze();
	void SetShowKeyHelp(bool Isshow);
	void SetShowFukidashi(bool Isshow);
	void HidePartyPanel();
	void SetShowAnalyzeUI(bool Visible);
	void SoundOpen();
	void SoundActionHighAnalyze();
	void Init_HpSp_Pos_Visible(int32 Hp);
	void EndScan1Draw();
	void StartScan1Draw();
	void EndScan2Draw();
	void StartScan2Draw();
	void ChangeResitText();
	void InvisibleHighAnalyze();
	void Invisible_Scan_Follow_Primitive();
	void SetVisibleScan1Icon(struct FBtlAnalyzeAffinityIcon& In, bool Visible);
	void SetVisibleScan2Icon(struct FBtlAnalyzeAffinityIcon& In, bool Visible, int32 Index_0);
	void ChangePosAttrHighAnalyzePrimitive();
	void ChangePosAttrHighAnalyzeIcon();
	void SetVisibleInAnime(bool Visible);
	void InitBmd();
	void SetSkillBGVisible();
	void ChangeFukidashiByHighAnalyze();
	void UpdateWaitAnimeKnownEffect(float DeltaTime);
	EBtlDataAnalyze Get_Attr_By_Index(int32 AnalyzeIndex);
	void Set_Visible_Fukidashi(bool Visible);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BtlGuiAnalyze_C">();
	}
	static class ABP_BtlGuiAnalyze_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BtlGuiAnalyze_C>();
	}
};
static_assert(alignof(ABP_BtlGuiAnalyze_C) == 0x000008, "Wrong alignment on ABP_BtlGuiAnalyze_C");
static_assert(sizeof(ABP_BtlGuiAnalyze_C) == 0x0008E0, "Wrong size on ABP_BtlGuiAnalyze_C");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, UberGraphFrame_BP_BtlGuiAnalyze_C) == 0x000350, "Member 'ABP_BtlGuiAnalyze_C::UberGraphFrame_BP_BtlGuiAnalyze_C' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, BtlGuiResources) == 0x000358, "Member 'ABP_BtlGuiAnalyze_C::BtlGuiResources' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, BtlGuiAnalyze) == 0x000360, "Member 'ABP_BtlGuiAnalyze_C::BtlGuiAnalyze' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, BtlDataBase) == 0x000368, "Member 'ABP_BtlGuiAnalyze_C::BtlDataBase' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, BtlGuiDraw) == 0x000370, "Member 'ABP_BtlGuiAnalyze_C::BtlGuiDraw' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, Detail_Out_Anime_2_RationBGLength_480AC96A490C26B01A5AAE80EABF9F6D) == 0x000378, "Member 'ABP_BtlGuiAnalyze_C::Detail_Out_Anime_2_RationBGLength_480AC96A490C26B01A5AAE80EABF9F6D' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, Detail_Out_Anime_1__AlphaText_480AC96A490C26B01A5AAE80EABF9F6D) == 0x00037C, "Member 'ABP_BtlGuiAnalyze_C::Detail_Out_Anime_1__AlphaText_480AC96A490C26B01A5AAE80EABF9F6D' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, Detail_Out_Anime__Direction_480AC96A490C26B01A5AAE80EABF9F6D) == 0x000380, "Member 'ABP_BtlGuiAnalyze_C::Detail_Out_Anime__Direction_480AC96A490C26B01A5AAE80EABF9F6D' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, Detail_Out_Anime) == 0x000388, "Member 'ABP_BtlGuiAnalyze_C::Detail_Out_Anime' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, Detail_In_Anime_2_RationBGLength_BFB50F034B39C89F70CD068175F5E6E5) == 0x000390, "Member 'ABP_BtlGuiAnalyze_C::Detail_In_Anime_2_RationBGLength_BFB50F034B39C89F70CD068175F5E6E5' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, Detail_In_Anime_1_AlphaText_BFB50F034B39C89F70CD068175F5E6E5) == 0x000394, "Member 'ABP_BtlGuiAnalyze_C::Detail_In_Anime_1_AlphaText_BFB50F034B39C89F70CD068175F5E6E5' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, Detail_In_Anime__Direction_BFB50F034B39C89F70CD068175F5E6E5) == 0x000398, "Member 'ABP_BtlGuiAnalyze_C::Detail_In_Anime__Direction_BFB50F034B39C89F70CD068175F5E6E5' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, Detail_In_Anime) == 0x0003A0, "Member 'ABP_BtlGuiAnalyze_C::Detail_In_Anime' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, LR_Anime_2__Ration_Skill_Item_F10382A14672F09DA5020FB71565B21F) == 0x0003A8, "Member 'ABP_BtlGuiAnalyze_C::LR_Anime_2__Ration_Skill_Item_F10382A14672F09DA5020FB71565B21F' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, LR_Anime_1_Ration_Status_F10382A14672F09DA5020FB71565B21F) == 0x0003AC, "Member 'ABP_BtlGuiAnalyze_C::LR_Anime_1_Ration_Status_F10382A14672F09DA5020FB71565B21F' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, LR_Anime__Direction_F10382A14672F09DA5020FB71565B21F) == 0x0003B0, "Member 'ABP_BtlGuiAnalyze_C::LR_Anime__Direction_F10382A14672F09DA5020FB71565B21F' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, LR_Anime) == 0x0003B8, "Member 'ABP_BtlGuiAnalyze_C::LR_Anime' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, HighAnalyze_Anime_8_AlphaScanGreenBG_33E0AC1E425CC16914A79E94E89CBFB1) == 0x0003C0, "Member 'ABP_BtlGuiAnalyze_C::HighAnalyze_Anime_8_AlphaScanGreenBG_33E0AC1E425CC16914A79E94E89CBFB1' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, HighAnalyze_Anime_7_AlphaScan2Gradation_33E0AC1E425CC16914A79E94E89CBFB1) == 0x0003C4, "Member 'ABP_BtlGuiAnalyze_C::HighAnalyze_Anime_7_AlphaScan2Gradation_33E0AC1E425CC16914A79E94E89CBFB1' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, HighAnalyze_Anime_6_RationScan2_33E0AC1E425CC16914A79E94E89CBFB1) == 0x0003C8, "Member 'ABP_BtlGuiAnalyze_C::HighAnalyze_Anime_6_RationScan2_33E0AC1E425CC16914A79E94E89CBFB1' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, HighAnalyze_Anime_5_AlphaScan1Gradation_33E0AC1E425CC16914A79E94E89CBFB1) == 0x0003CC, "Member 'ABP_BtlGuiAnalyze_C::HighAnalyze_Anime_5_AlphaScan1Gradation_33E0AC1E425CC16914A79E94E89CBFB1' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, HighAnalyze_Anime_4_RationScan1_33E0AC1E425CC16914A79E94E89CBFB1) == 0x0003D0, "Member 'ABP_BtlGuiAnalyze_C::HighAnalyze_Anime_4_RationScan1_33E0AC1E425CC16914A79E94E89CBFB1' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, HighAnalyze_Anime_3_AlphaBlackBG_33E0AC1E425CC16914A79E94E89CBFB1) == 0x0003D4, "Member 'ABP_BtlGuiAnalyze_C::HighAnalyze_Anime_3_AlphaBlackBG_33E0AC1E425CC16914A79E94E89CBFB1' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, HighAnalyze_Anime_2_AlphaLuminusHightAnalyzeIcon_33E0AC1E425CC16914A79E94E89CBFB1) == 0x0003D8, "Member 'ABP_BtlGuiAnalyze_C::HighAnalyze_Anime_2_AlphaLuminusHightAnalyzeIcon_33E0AC1E425CC16914A79E94E89CBFB1' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, HighAnalyze_Anime_1_RationIconPrimitive_33E0AC1E425CC16914A79E94E89CBFB1) == 0x0003DC, "Member 'ABP_BtlGuiAnalyze_C::HighAnalyze_Anime_1_RationIconPrimitive_33E0AC1E425CC16914A79E94E89CBFB1' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, HighAnalyze_Anime__Direction_33E0AC1E425CC16914A79E94E89CBFB1) == 0x0003E0, "Member 'ABP_BtlGuiAnalyze_C::HighAnalyze_Anime__Direction_33E0AC1E425CC16914A79E94E89CBFB1' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, HighAnalyze_Anime) == 0x0003E8, "Member 'ABP_BtlGuiAnalyze_C::HighAnalyze_Anime' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, StartOutAnime_7_MoveYFukaFukidashi_3EF042D942266B0C484134A6ADBFF1F4) == 0x0003F0, "Member 'ABP_BtlGuiAnalyze_C::StartOutAnime_7_MoveYFukaFukidashi_3EF042D942266B0C484134A6ADBFF1F4' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, StartOutAnime_6_MoveYItemList_3EF042D942266B0C484134A6ADBFF1F4) == 0x0003F4, "Member 'ABP_BtlGuiAnalyze_C::StartOutAnime_6_MoveYItemList_3EF042D942266B0C484134A6ADBFF1F4' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, StartOutAnime_5_MoveYSkillList_3EF042D942266B0C484134A6ADBFF1F4) == 0x0003F8, "Member 'ABP_BtlGuiAnalyze_C::StartOutAnime_5_MoveYSkillList_3EF042D942266B0C484134A6ADBFF1F4' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, StartOutAnime_4_MoveYStatus_3EF042D942266B0C484134A6ADBFF1F4) == 0x0003FC, "Member 'ABP_BtlGuiAnalyze_C::StartOutAnime_4_MoveYStatus_3EF042D942266B0C484134A6ADBFF1F4' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, StartOutAnime_3_AlphaAllInfo_3EF042D942266B0C484134A6ADBFF1F4) == 0x000400, "Member 'ABP_BtlGuiAnalyze_C::StartOutAnime_3_AlphaAllInfo_3EF042D942266B0C484134A6ADBFF1F4' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, StartOutAnime_2_BackGroundAlpha_3EF042D942266B0C484134A6ADBFF1F4) == 0x000404, "Member 'ABP_BtlGuiAnalyze_C::StartOutAnime_2_BackGroundAlpha_3EF042D942266B0C484134A6ADBFF1F4' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, StartOutAnime_1_BackGround_Size_3EF042D942266B0C484134A6ADBFF1F4) == 0x000408, "Member 'ABP_BtlGuiAnalyze_C::StartOutAnime_1_BackGround_Size_3EF042D942266B0C484134A6ADBFF1F4' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, StartOutAnime__Direction_3EF042D942266B0C484134A6ADBFF1F4) == 0x00040C, "Member 'ABP_BtlGuiAnalyze_C::StartOutAnime__Direction_3EF042D942266B0C484134A6ADBFF1F4' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, StartOutAnime) == 0x000410, "Member 'ABP_BtlGuiAnalyze_C::StartOutAnime' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, L1R1_LoopAnime_1_L1R1Ration_F8CC37FC4817064D07FE8990BB9FB221) == 0x000418, "Member 'ABP_BtlGuiAnalyze_C::L1R1_LoopAnime_1_L1R1Ration_F8CC37FC4817064D07FE8990BB9FB221' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, L1R1_LoopAnime__Direction_F8CC37FC4817064D07FE8990BB9FB221) == 0x00041C, "Member 'ABP_BtlGuiAnalyze_C::L1R1_LoopAnime__Direction_F8CC37FC4817064D07FE8990BB9FB221' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, L1R1_LoopAnime) == 0x000420, "Member 'ABP_BtlGuiAnalyze_C::L1R1_LoopAnime' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, HighAnalyze_LoopAnime_1_Luminus_HighAnalyze_6A8EC2974E6C71E08C27329A65B89300) == 0x000428, "Member 'ABP_BtlGuiAnalyze_C::HighAnalyze_LoopAnime_1_Luminus_HighAnalyze_6A8EC2974E6C71E08C27329A65B89300' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, HighAnalyze_LoopAnime__Direction_6A8EC2974E6C71E08C27329A65B89300) == 0x00042C, "Member 'ABP_BtlGuiAnalyze_C::HighAnalyze_LoopAnime__Direction_6A8EC2974E6C71E08C27329A65B89300' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, HighAnalyze_LoopAnime) == 0x000430, "Member 'ABP_BtlGuiAnalyze_C::HighAnalyze_LoopAnime' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, Fuka_Info_In_Anime_4_MoveYFukidashi_B085F9F44F4882F3589873AFD7F1CAA0) == 0x000438, "Member 'ABP_BtlGuiAnalyze_C::Fuka_Info_In_Anime_4_MoveYFukidashi_B085F9F44F4882F3589873AFD7F1CAA0' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, Fuka_Info_In_Anime_3_AlphaFukidashi_B085F9F44F4882F3589873AFD7F1CAA0) == 0x00043C, "Member 'ABP_BtlGuiAnalyze_C::Fuka_Info_In_Anime_3_AlphaFukidashi_B085F9F44F4882F3589873AFD7F1CAA0' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, Fuka_Info_In_Anime_2_LuminousHighAnalyze_B085F9F44F4882F3589873AFD7F1CAA0) == 0x000440, "Member 'ABP_BtlGuiAnalyze_C::Fuka_Info_In_Anime_2_LuminousHighAnalyze_B085F9F44F4882F3589873AFD7F1CAA0' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, Fuka_Info_In_Anime_1_AlphaHighAnalyze_B085F9F44F4882F3589873AFD7F1CAA0) == 0x000444, "Member 'ABP_BtlGuiAnalyze_C::Fuka_Info_In_Anime_1_AlphaHighAnalyze_B085F9F44F4882F3589873AFD7F1CAA0' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, Fuka_Info_In_Anime__Direction_B085F9F44F4882F3589873AFD7F1CAA0) == 0x000448, "Member 'ABP_BtlGuiAnalyze_C::Fuka_Info_In_Anime__Direction_B085F9F44F4882F3589873AFD7F1CAA0' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, Fuka_Info_In_Anime) == 0x000450, "Member 'ABP_BtlGuiAnalyze_C::Fuka_Info_In_Anime' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, InAnime_11_MoveYItemList_57BED40A4EB382DE7CB7D497420EF025) == 0x000458, "Member 'ABP_BtlGuiAnalyze_C::InAnime_11_MoveYItemList_57BED40A4EB382DE7CB7D497420EF025' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, InAnime_10_MoveYSkillList_57BED40A4EB382DE7CB7D497420EF025) == 0x00045C, "Member 'ABP_BtlGuiAnalyze_C::InAnime_10_MoveYSkillList_57BED40A4EB382DE7CB7D497420EF025' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, InAnime_9_MoveYStatus_57BED40A4EB382DE7CB7D497420EF025) == 0x000460, "Member 'ABP_BtlGuiAnalyze_C::InAnime_9_MoveYStatus_57BED40A4EB382DE7CB7D497420EF025' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, InAnime_8__ScaleRectSkillList_57BED40A4EB382DE7CB7D497420EF025) == 0x000464, "Member 'ABP_BtlGuiAnalyze_C::InAnime_8__ScaleRectSkillList_57BED40A4EB382DE7CB7D497420EF025' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, InAnime_7_ScaleRectRed_57BED40A4EB382DE7CB7D497420EF025) == 0x000468, "Member 'ABP_BtlGuiAnalyze_C::InAnime_7_ScaleRectRed_57BED40A4EB382DE7CB7D497420EF025' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, InAnime_6_ScaleRectBlack_57BED40A4EB382DE7CB7D497420EF025) == 0x00046C, "Member 'ABP_BtlGuiAnalyze_C::InAnime_6_ScaleRectBlack_57BED40A4EB382DE7CB7D497420EF025' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, InAnime_5_AlphaRohombusDupuli_57BED40A4EB382DE7CB7D497420EF025) == 0x000470, "Member 'ABP_BtlGuiAnalyze_C::InAnime_5_AlphaRohombusDupuli_57BED40A4EB382DE7CB7D497420EF025' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, InAnime_4_ScaleRohombusDupuli_57BED40A4EB382DE7CB7D497420EF025) == 0x000474, "Member 'ABP_BtlGuiAnalyze_C::InAnime_4_ScaleRohombusDupuli_57BED40A4EB382DE7CB7D497420EF025' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, InAnime_3_ScaleRectMask_57BED40A4EB382DE7CB7D497420EF025) == 0x000478, "Member 'ABP_BtlGuiAnalyze_C::InAnime_3_ScaleRectMask_57BED40A4EB382DE7CB7D497420EF025' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, InAnime_2_ScaleRohombus_57BED40A4EB382DE7CB7D497420EF025) == 0x00047C, "Member 'ABP_BtlGuiAnalyze_C::InAnime_2_ScaleRohombus_57BED40A4EB382DE7CB7D497420EF025' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, InAnime_1_ScaleRohombusMask_57BED40A4EB382DE7CB7D497420EF025) == 0x000480, "Member 'ABP_BtlGuiAnalyze_C::InAnime_1_ScaleRohombusMask_57BED40A4EB382DE7CB7D497420EF025' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, InAnime__Direction_57BED40A4EB382DE7CB7D497420EF025) == 0x000484, "Member 'ABP_BtlGuiAnalyze_C::InAnime__Direction_57BED40A4EB382DE7CB7D497420EF025' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, InAnime) == 0x000488, "Member 'ABP_BtlGuiAnalyze_C::InAnime' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, EnemyList) == 0x000490, "Member 'ABP_BtlGuiAnalyze_C::EnemyList' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, TargetIndex) == 0x0004A0, "Member 'ABP_BtlGuiAnalyze_C::TargetIndex' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, IsStartInAnimeAttr) == 0x0004A4, "Member 'ABP_BtlGuiAnalyze_C::IsStartInAnimeAttr' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, IsFukidashiXOver255) == 0x0004A5, "Member 'ABP_BtlGuiAnalyze_C::IsFukidashiXOver255' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, IsFukidashiYOver2Line) == 0x0004A6, "Member 'ABP_BtlGuiAnalyze_C::IsFukidashiYOver2Line' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, IsStartAnimeScan1) == 0x0004A7, "Member 'ABP_BtlGuiAnalyze_C::IsStartAnimeScan1' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, IsStartAnimeScanAll) == 0x0004A8, "Member 'ABP_BtlGuiAnalyze_C::IsStartAnimeScanAll' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, IsSelectHighAnalyze) == 0x0004A9, "Member 'ABP_BtlGuiAnalyze_C::IsSelectHighAnalyze' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, TextObj) == 0x0004B0, "Member 'ABP_BtlGuiAnalyze_C::TextObj' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, SelectIndex) == 0x0004B8, "Member 'ABP_BtlGuiAnalyze_C::SelectIndex' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, BGRhombusMsk) == 0x0004C0, "Member 'ABP_BtlGuiAnalyze_C::BGRhombusMsk' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, BGRhombusClear) == 0x0004C8, "Member 'ABP_BtlGuiAnalyze_C::BGRhombusClear' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, BGRectMask) == 0x0004D0, "Member 'ABP_BtlGuiAnalyze_C::BGRectMask' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, BGRectBlack) == 0x0004D8, "Member 'ABP_BtlGuiAnalyze_C::BGRectBlack' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, BGSkillList) == 0x0004E0, "Member 'ABP_BtlGuiAnalyze_C::BGSkillList' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, BGRectRed) == 0x0004E8, "Member 'ABP_BtlGuiAnalyze_C::BGRectRed' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, BGRhombus) == 0x0004F0, "Member 'ABP_BtlGuiAnalyze_C::BGRhombus' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, PosA_Status) == 0x0004F8, "Member 'ABP_BtlGuiAnalyze_C::PosA_Status' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, HpTitle) == 0x000500, "Member 'ABP_BtlGuiAnalyze_C::HpTitle' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, HpTitleMax) == 0x000508, "Member 'ABP_BtlGuiAnalyze_C::HpTitleMax' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, HpNum) == 0x000510, "Member 'ABP_BtlGuiAnalyze_C::HpNum' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, SpTitle) == 0x000520, "Member 'ABP_BtlGuiAnalyze_C::SpTitle' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, SpTitleMax) == 0x000528, "Member 'ABP_BtlGuiAnalyze_C::SpTitleMax' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, SpNum) == 0x000530, "Member 'ABP_BtlGuiAnalyze_C::SpNum' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, LevelNum) == 0x000540, "Member 'ABP_BtlGuiAnalyze_C::LevelNum' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, LevelTitle) == 0x000550, "Member 'ABP_BtlGuiAnalyze_C::LevelTitle' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, ArcanaTItle) == 0x000558, "Member 'ABP_BtlGuiAnalyze_C::ArcanaTItle' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, ArcanaSpr) == 0x000560, "Member 'ABP_BtlGuiAnalyze_C::ArcanaSpr' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, NameInitial) == 0x000568, "Member 'ABP_BtlGuiAnalyze_C::NameInitial' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, NameInitialMask) == 0x000570, "Member 'ABP_BtlGuiAnalyze_C::NameInitialMask' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, NameFullMask) == 0x000578, "Member 'ABP_BtlGuiAnalyze_C::NameFullMask' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, NameFull) == 0x000580, "Member 'ABP_BtlGuiAnalyze_C::NameFull' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AffinityIcons) == 0x000588, "Member 'ABP_BtlGuiAnalyze_C::AffinityIcons' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, SkillSpaceInfo) == 0x000598, "Member 'ABP_BtlGuiAnalyze_C::SkillSpaceInfo' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, SkillRoundRect) == 0x0005A8, "Member 'ABP_BtlGuiAnalyze_C::SkillRoundRect' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, SkillUnknownIcon) == 0x0005B0, "Member 'ABP_BtlGuiAnalyze_C::SkillUnknownIcon' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, SkillUnknownTextSpr) == 0x0005B8, "Member 'ABP_BtlGuiAnalyze_C::SkillUnknownTextSpr' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, SkillAttackBG) == 0x0005C0, "Member 'ABP_BtlGuiAnalyze_C::SkillAttackBG' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, SkillAttackIcon) == 0x0005C8, "Member 'ABP_BtlGuiAnalyze_C::SkillAttackIcon' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, SkillAttackText) == 0x0005D0, "Member 'ABP_BtlGuiAnalyze_C::SkillAttackText' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, SkillTitle) == 0x0005D8, "Member 'ABP_BtlGuiAnalyze_C::SkillTitle' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, ItemSpaceInfo) == 0x0005E0, "Member 'ABP_BtlGuiAnalyze_C::ItemSpaceInfo' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AnalyzePrimi) == 0x0005F0, "Member 'ABP_BtlGuiAnalyze_C::AnalyzePrimi' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, PosB_SkillList) == 0x000600, "Member 'ABP_BtlGuiAnalyze_C::PosB_SkillList' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, PosC_Item) == 0x000608, "Member 'ABP_BtlGuiAnalyze_C::PosC_Item' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, SprAsset) == 0x000610, "Member 'ABP_BtlGuiAnalyze_C::SprAsset' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, SprCampAsset) == 0x000618, "Member 'ABP_BtlGuiAnalyze_C::SprCampAsset' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, BmdAsset) == 0x000620, "Member 'ABP_BtlGuiAnalyze_C::BmdAsset' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, PlgAsset) == 0x000628, "Member 'ABP_BtlGuiAnalyze_C::PlgAsset' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, SprItemIcon) == 0x000630, "Member 'ABP_BtlGuiAnalyze_C::SprItemIcon' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, PosD_HighAnalyze) == 0x000638, "Member 'ABP_BtlGuiAnalyze_C::PosD_HighAnalyze' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, PosF_BG) == 0x000640, "Member 'ABP_BtlGuiAnalyze_C::PosF_BG' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AnimeScaleBGRectMask) == 0x000648, "Member 'ABP_BtlGuiAnalyze_C::AnimeScaleBGRectMask' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AnimeScaleBGRectRed) == 0x00064C, "Member 'ABP_BtlGuiAnalyze_C::AnimeScaleBGRectRed' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AnimeScaleRohombusDupuli) == 0x000650, "Member 'ABP_BtlGuiAnalyze_C::AnimeScaleRohombusDupuli' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AnimeScaleRhombusMask) == 0x000654, "Member 'ABP_BtlGuiAnalyze_C::AnimeScaleRhombusMask' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AnimeScaleBGRectBlack) == 0x000658, "Member 'ABP_BtlGuiAnalyze_C::AnimeScaleBGRectBlack' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AnimeScaleBGRectSkillList) == 0x00065C, "Member 'ABP_BtlGuiAnalyze_C::AnimeScaleBGRectSkillList' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AnimeAlphaRohombusDupuli) == 0x000660, "Member 'ABP_BtlGuiAnalyze_C::AnimeAlphaRohombusDupuli' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AnimeMoveYStatus) == 0x000664, "Member 'ABP_BtlGuiAnalyze_C::AnimeMoveYStatus' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AnimeMoveYSkillList) == 0x000668, "Member 'ABP_BtlGuiAnalyze_C::AnimeMoveYSkillList' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AnimeMoveYItemList) == 0x00066C, "Member 'ABP_BtlGuiAnalyze_C::AnimeMoveYItemList' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AnimeAlphaHighAnalyze) == 0x000670, "Member 'ABP_BtlGuiAnalyze_C::AnimeAlphaHighAnalyze' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AnimeAlphaHighAnalyzeDupuli) == 0x000674, "Member 'ABP_BtlGuiAnalyze_C::AnimeAlphaHighAnalyzeDupuli' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AnimeMoveYFukidashi) == 0x000678, "Member 'ABP_BtlGuiAnalyze_C::AnimeMoveYFukidashi' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AnimeAlphaFukidashi) == 0x00067C, "Member 'ABP_BtlGuiAnalyze_C::AnimeAlphaFukidashi' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AnimeL1R1Ration) == 0x000680, "Member 'ABP_BtlGuiAnalyze_C::AnimeL1R1Ration' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AnimeAlphaAllInfo) == 0x000684, "Member 'ABP_BtlGuiAnalyze_C::AnimeAlphaAllInfo' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AnimeAlphaRohombus) == 0x000688, "Member 'ABP_BtlGuiAnalyze_C::AnimeAlphaRohombus' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AnimeScaleRohombus) == 0x00068C, "Member 'ABP_BtlGuiAnalyze_C::AnimeScaleRohombus' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, BGRhombusDupuli) == 0x000690, "Member 'ABP_BtlGuiAnalyze_C::BGRhombusDupuli' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, BGRhombusDupuliAlpha) == 0x000698, "Member 'ABP_BtlGuiAnalyze_C::BGRhombusDupuliAlpha' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, BGRectMask2) == 0x0006A0, "Member 'ABP_BtlGuiAnalyze_C::BGRectMask2' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, IconR1) == 0x0006A8, "Member 'ABP_BtlGuiAnalyze_C::IconR1' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, IconR1Arrow) == 0x0006B0, "Member 'ABP_BtlGuiAnalyze_C::IconR1Arrow' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, ItemTitle) == 0x0006B8, "Member 'ABP_BtlGuiAnalyze_C::ItemTitle' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, IconL1) == 0x0006C0, "Member 'ABP_BtlGuiAnalyze_C::IconL1' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, IconL1Arrow) == 0x0006C8, "Member 'ABP_BtlGuiAnalyze_C::IconL1Arrow' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, ParamTimeInAnimeAttrDif) == 0x0006D0, "Member 'ABP_BtlGuiAnalyze_C::ParamTimeInAnimeAttrDif' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, ParamFrameScan1UnknownIconAppera) == 0x0006D4, "Member 'ABP_BtlGuiAnalyze_C::ParamFrameScan1UnknownIconAppera' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, HighAnalyzeBG) == 0x0006D8, "Member 'ABP_BtlGuiAnalyze_C::HighAnalyzeBG' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, HighAnalyzeBGDupuli) == 0x0006E0, "Member 'ABP_BtlGuiAnalyze_C::HighAnalyzeBGDupuli' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, HighAnalyzeTabIcon) == 0x0006E8, "Member 'ABP_BtlGuiAnalyze_C::HighAnalyzeTabIcon' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, HighAnalyzeIcon) == 0x0006F0, "Member 'ABP_BtlGuiAnalyze_C::HighAnalyzeIcon' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, HighAnalyzeCostTitle) == 0x0006F8, "Member 'ABP_BtlGuiAnalyze_C::HighAnalyzeCostTitle' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, HighAnalyzeCostSpTitle) == 0x000700, "Member 'ABP_BtlGuiAnalyze_C::HighAnalyzeCostSpTitle' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, HighAnalyzeCost1keta) == 0x000708, "Member 'ABP_BtlGuiAnalyze_C::HighAnalyzeCost1keta' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, HighAnalyzeCost2keta) == 0x000710, "Member 'ABP_BtlGuiAnalyze_C::HighAnalyzeCost2keta' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, FukidashiBG) == 0x000718, "Member 'ABP_BtlGuiAnalyze_C::FukidashiBG' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, FukidashiFrame) == 0x000720, "Member 'ABP_BtlGuiAnalyze_C::FukidashiFrame' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, FukidashiMsg1Line) == 0x000728, "Member 'ABP_BtlGuiAnalyze_C::FukidashiMsg1Line' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, FukidashiMsg2Line) == 0x000730, "Member 'ABP_BtlGuiAnalyze_C::FukidashiMsg2Line' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, EffectHighAnalyzeIconLuminous) == 0x000738, "Member 'ABP_BtlGuiAnalyze_C::EffectHighAnalyzeIconLuminous' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, HighAnalyzeBGClean) == 0x000740, "Member 'ABP_BtlGuiAnalyze_C::HighAnalyzeBGClean' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, EffectHighAnalyzeIconPrimitive) == 0x000748, "Member 'ABP_BtlGuiAnalyze_C::EffectHighAnalyzeIconPrimitive' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, ScanBlackBG) == 0x000758, "Member 'ABP_BtlGuiAnalyze_C::ScanBlackBG' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, Scan1BG) == 0x000760, "Member 'ABP_BtlGuiAnalyze_C::Scan1BG' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, Scan1Gradation) == 0x000768, "Member 'ABP_BtlGuiAnalyze_C::Scan1Gradation' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, Scan1FollowPrimitive) == 0x000770, "Member 'ABP_BtlGuiAnalyze_C::Scan1FollowPrimitive' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, TimeScan1FollowPrimitive) == 0x000780, "Member 'ABP_BtlGuiAnalyze_C::TimeScan1FollowPrimitive' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AddIndexScan1FollowPrimitive) == 0x000790, "Member 'ABP_BtlGuiAnalyze_C::AddIndexScan1FollowPrimitive' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, NumScanFollowPrimitive) == 0x000794, "Member 'ABP_BtlGuiAnalyze_C::NumScanFollowPrimitive' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, Scan2Gradation) == 0x000798, "Member 'ABP_BtlGuiAnalyze_C::Scan2Gradation' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, Scan2AddPosY) == 0x0007A0, "Member 'ABP_BtlGuiAnalyze_C::Scan2AddPosY' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, EffectHighAnalyzeIconPrimitivePosMoveTo) == 0x0007A8, "Member 'ABP_BtlGuiAnalyze_C::EffectHighAnalyzeIconPrimitivePosMoveTo' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AnimeAlphaScan1Gradation) == 0x0007B8, "Member 'ABP_BtlGuiAnalyze_C::AnimeAlphaScan1Gradation' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, Scan1Deltatime) == 0x0007BC, "Member 'ABP_BtlGuiAnalyze_C::Scan1Deltatime' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, Scan1AddPosY) == 0x0007C0, "Member 'ABP_BtlGuiAnalyze_C::Scan1AddPosY' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AnimeLuminusAlphaEffectHighAnalyzeIcon) == 0x0007C4, "Member 'ABP_BtlGuiAnalyze_C::AnimeLuminusAlphaEffectHighAnalyzeIcon' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AnimeRationEffectHighanalyzeIconPrimi) == 0x0007C8, "Member 'ABP_BtlGuiAnalyze_C::AnimeRationEffectHighanalyzeIconPrimi' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, Scan1BGAddPosY) == 0x0007CC, "Member 'ABP_BtlGuiAnalyze_C::Scan1BGAddPosY' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AnimeAlphaScanBlackBG) == 0x0007D0, "Member 'ABP_BtlGuiAnalyze_C::AnimeAlphaScanBlackBG' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, ParamFraneFollowPrimitive) == 0x0007D4, "Member 'ABP_BtlGuiAnalyze_C::ParamFraneFollowPrimitive' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, ParamFrameScan2UnknownIconVanish) == 0x0007D8, "Member 'ABP_BtlGuiAnalyze_C::ParamFrameScan2UnknownIconVanish' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, ParamFrameScan2ResitIconAppear) == 0x0007DC, "Member 'ABP_BtlGuiAnalyze_C::ParamFrameScan2ResitIconAppear' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, ParamFrameScan2RippleEffectIcon) == 0x0007E0, "Member 'ABP_BtlGuiAnalyze_C::ParamFrameScan2RippleEffectIcon' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, ParamFrameScan2Primitive) == 0x0007E4, "Member 'ABP_BtlGuiAnalyze_C::ParamFrameScan2Primitive' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AnimeAlphaScanBG) == 0x0007E8, "Member 'ABP_BtlGuiAnalyze_C::AnimeAlphaScanBG' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AnimeAlphaScan2Gradation) == 0x0007EC, "Member 'ABP_BtlGuiAnalyze_C::AnimeAlphaScan2Gradation' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AlphaResistIcon) == 0x0007F0, "Member 'ABP_BtlGuiAnalyze_C::AlphaResistIcon' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, ColorHighAnalyzeCostTitle) == 0x0007F8, "Member 'ABP_BtlGuiAnalyze_C::ColorHighAnalyzeCostTitle' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, ColorHighAnalyzeCost) == 0x0007FC, "Member 'ABP_BtlGuiAnalyze_C::ColorHighAnalyzeCost' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AnimeRLRationStatus) == 0x000800, "Member 'ABP_BtlGuiAnalyze_C::AnimeRLRationStatus' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AnimeRightLR) == 0x000804, "Member 'ABP_BtlGuiAnalyze_C::AnimeRightLR' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AnimeRLRationSkillItem) == 0x000808, "Member 'ABP_BtlGuiAnalyze_C::AnimeRLRationSkillItem' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AnimeOutMoveYStatus) == 0x00080C, "Member 'ABP_BtlGuiAnalyze_C::AnimeOutMoveYStatus' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AnimeOutMoveYSkillList) == 0x000810, "Member 'ABP_BtlGuiAnalyze_C::AnimeOutMoveYSkillList' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AnimeOutMoveYItemList) == 0x000814, "Member 'ABP_BtlGuiAnalyze_C::AnimeOutMoveYItemList' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AnimeOutMoveYFukidashi) == 0x000818, "Member 'ABP_BtlGuiAnalyze_C::AnimeOutMoveYFukidashi' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AnimeOutAlphaHighAnalyze) == 0x00081C, "Member 'ABP_BtlGuiAnalyze_C::AnimeOutAlphaHighAnalyze' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, ParamFrameDetailMove) == 0x000820, "Member 'ABP_BtlGuiAnalyze_C::ParamFrameDetailMove' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, ParamFrameDetailDifferent) == 0x000824, "Member 'ABP_BtlGuiAnalyze_C::ParamFrameDetailDifferent' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AnimeAlphaDetailText) == 0x000828, "Member 'ABP_BtlGuiAnalyze_C::AnimeAlphaDetailText' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, IsDetailMode) == 0x00082C, "Member 'ABP_BtlGuiAnalyze_C::IsDetailMode' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, IsShowStatus) == 0x00082D, "Member 'ABP_BtlGuiAnalyze_C::IsShowStatus' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, IsShowSkill) == 0x00082E, "Member 'ABP_BtlGuiAnalyze_C::IsShowSkill' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, IsShowItem) == 0x00082F, "Member 'ABP_BtlGuiAnalyze_C::IsShowItem' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, IsShowLR) == 0x000830, "Member 'ABP_BtlGuiAnalyze_C::IsShowLR' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, IsShowHighAnalyze) == 0x000831, "Member 'ABP_BtlGuiAnalyze_C::IsShowHighAnalyze' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, IsEnableHighAnalyze) == 0x000832, "Member 'ABP_BtlGuiAnalyze_C::IsEnableHighAnalyze' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, IsColorLevelGray) == 0x000838, "Member 'ABP_BtlGuiAnalyze_C::IsColorLevelGray' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, IsColorHpGray) == 0x000848, "Member 'ABP_BtlGuiAnalyze_C::IsColorHpGray' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, IsColorSpGray) == 0x000858, "Member 'ABP_BtlGuiAnalyze_C::IsColorSpGray' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, IsPlayOutAnime) == 0x000868, "Member 'ABP_BtlGuiAnalyze_C::IsPlayOutAnime' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, IsShowAttackAttr) == 0x000869, "Member 'ABP_BtlGuiAnalyze_C::IsShowAttackAttr' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, IsShowArcana) == 0x00086A, "Member 'ABP_BtlGuiAnalyze_C::IsShowArcana' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, IsStartHighAnalyzeEvent) == 0x00086B, "Member 'ABP_BtlGuiAnalyze_C::IsStartHighAnalyzeEvent' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, IsSkipUpdate) == 0x00086C, "Member 'ABP_BtlGuiAnalyze_C::IsSkipUpdate' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, IsStartDetailInAnime) == 0x00086D, "Member 'ABP_BtlGuiAnalyze_C::IsStartDetailInAnime' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, IsStartDetailOutAnime) == 0x00086E, "Member 'ABP_BtlGuiAnalyze_C::IsStartDetailOutAnime' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, PrevEnemyID) == 0x000870, "Member 'ABP_BtlGuiAnalyze_C::PrevEnemyID' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, PrevMsgID) == 0x000874, "Member 'ABP_BtlGuiAnalyze_C::PrevMsgID' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, NameBaseMask) == 0x000878, "Member 'ABP_BtlGuiAnalyze_C::NameBaseMask' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, BGRectMask3) == 0x000880, "Member 'ABP_BtlGuiAnalyze_C::BGRectMask3' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, BGRectMaskDetail) == 0x000888, "Member 'ABP_BtlGuiAnalyze_C::BGRectMaskDetail' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, AnimeWidthDetalBG) == 0x000890, "Member 'ABP_BtlGuiAnalyze_C::AnimeWidthDetalBG' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, IsHpDigitOver3) == 0x000894, "Member 'ABP_BtlGuiAnalyze_C::IsHpDigitOver3' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, IsDrawScan1) == 0x000895, "Member 'ABP_BtlGuiAnalyze_C::IsDrawScan1' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, IsDrawScan2) == 0x000896, "Member 'ABP_BtlGuiAnalyze_C::IsDrawScan2' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, IsPlayHighAnalyze) == 0x000897, "Member 'ABP_BtlGuiAnalyze_C::IsPlayHighAnalyze' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, IsPlayScanHighAnalyzeIcon) == 0x000898, "Member 'ABP_BtlGuiAnalyze_C::IsPlayScanHighAnalyzeIcon' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, IsPlayOnlyFukidashi) == 0x000899, "Member 'ABP_BtlGuiAnalyze_C::IsPlayOnlyFukidashi' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, IsPlayWaitAnimeAfterKnownEffect) == 0x00089A, "Member 'ABP_BtlGuiAnalyze_C::IsPlayWaitAnimeAfterKnownEffect' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, TimeKnownIcon) == 0x00089C, "Member 'ABP_BtlGuiAnalyze_C::TimeKnownIcon' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, BGNameClearA) == 0x0008A0, "Member 'ABP_BtlGuiAnalyze_C::BGNameClearA' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, MaskBGRectBlack) == 0x0008A8, "Member 'ABP_BtlGuiAnalyze_C::MaskBGRectBlack' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, MaskBGRectRed) == 0x0008B0, "Member 'ABP_BtlGuiAnalyze_C::MaskBGRectRed' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, BGRhombusDupliClear) == 0x0008B8, "Member 'ABP_BtlGuiAnalyze_C::BGRhombusDupliClear' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, MaskBGSkillList) == 0x0008C0, "Member 'ABP_BtlGuiAnalyze_C::MaskBGSkillList' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, IsEndSceneEmperorEmpress) == 0x0008C8, "Member 'ABP_BtlGuiAnalyze_C::IsEndSceneEmperorEmpress' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, ParamDifLv1keta) == 0x0008CC, "Member 'ABP_BtlGuiAnalyze_C::ParamDifLv1keta' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiAnalyze_C, ParamDifSP) == 0x0008D4, "Member 'ABP_BtlGuiAnalyze_C::ParamDifSP' has a wrong offset!");

}

