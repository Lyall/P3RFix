#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtlTacticsCheck

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Xrd777_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_BtlGuiBaseActor_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BtlTacticsCheck.BP_BtlTacticsCheck_C
// 0x01E0 (0x0530 - 0x0350)
class ABP_BtlTacticsCheck_C final : public ABP_BtlGuiBaseActor_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_BtlTacticsCheck_C;               // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Next;                                              // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Enemy5;                                            // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Enemy4;                                            // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Enemy3;                                            // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Enemy2;                                            // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Enemy1;                                            // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Player4;                                           // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Player3;                                           // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Player2;                                           // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Player1;                                           // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiResources*                       BtlGuiResources;                                   // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBtlDataBaseComponent*                  BtlDataBase;                                       // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawComponent*                   BtlGuiDraw;                                        // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         NextCursorTimeline_Speed_C2032995481B3F794095B580EAAB8D38; // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            NextCursorTimeline__Direction_C2032995481B3F794095B580EAAB8D38; // 0x03C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C5[0x3];                                      // 0x03C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     NextCursorTimeline;                                // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndTimeline_butonScale_55957B444DA81E3708E3DEB240AD8888; // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndTimeline_Rate_55957B444DA81E3708E3DEB240AD8888; // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            EndTimeline__Direction_55957B444DA81E3708E3DEB240AD8888; // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D9[0x7];                                      // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     EndTimeline;                                       // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartTimeline_Scale_098BFDA24326A6E40B104D959DA6BD14; // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartTimeline_Rate_098BFDA24326A6E40B104D959DA6BD14; // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            StartTimeline__Direction_098BFDA24326A6E40B104D959DA6BD14; // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F1[0x7];                                      // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     StartTimeline;                                     // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABtlActor*>                      TempList;                                          // 0x0400(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ABtlActor*>                      TargetList;                                        // 0x0410(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          ListMoveAhead;                                     // 0x0420(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_421[0x3];                                      // 0x0421(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TargetIndexTemp;                                   // 0x0424(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectText*                  NextTextObj;                                       // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PartyPanelEnable;                                  // 0x0430(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_431[0x3];                                      // 0x0431(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TargetIndex;                                       // 0x0434(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PosB;                                              // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PosA;                                              // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector2D>                      LeftUpList;                                        // 0x0448(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FVector2D>                      RightDownList;                                     // 0x0458(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         Rate;                                              // 0x0468(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C[0x4];                                      // 0x046C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBtlGuiDrawObjectPlg*>           TextObjList;                                       // 0x0470(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<float>                                 RateList;                                          // 0x0480(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         TextRate;                                          // 0x0490(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_494[0x4];                                      // 0x0494(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 RateListTemp;                                      // 0x0498(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         AutoAngle;                                         // 0x04A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ThreeDCkale;                                       // 0x04AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x04B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Update3DAnimation;                                 // 0x04B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          OpenTheurgiaWindow;                                // 0x04B5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          KeyhelpTypeEnemy;                                  // 0x04B6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B7[0x1];                                      // 0x04B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      PlayerTargetList;                                  // 0x04B8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ABtlActor*>                      EnemyTargetList;                                   // 0x04C8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          IsEnemyTargetList;                                 // 0x04D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsEnemyNextTarget;                                 // 0x04D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DA[0x6];                                      // 0x04DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CursorList;                                        // 0x04E0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	int32                                         NextTargetIdx;                                     // 0x04F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F4[0x4];                                      // 0x04F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        DebugPosCursor;                                    // 0x04F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FVector2D>                      DebugPos2DCursor;                                  // 0x0508(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsShowDebug;                                       // 0x0518(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_519[0x7];                                      // 0x0519(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlSimpleTextureDraw_C*             BackCapture;                                       // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMoveCursor;                                      // 0x0528(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_BtlTacticsCheck(int32 EntryPoint);
	void SetDebugKill();
	void GuiActorUpdate(float DeltaTime);
	void GuiActorStateExit();
	void GuiActorStateInit(bool Flag, int32 Param);
	void GuiActorBeginPlay();
	void _________0(const struct FBtlInputKey& InputKey);
	void PushLD();
	void PushLU();
	void PushR2();
	void PushRL();
	void PushLR();
	void PushLL();
	void PushL1();
	void GuiActorUnbindAction();
	void GuiActorBindAction();
	void PushCancel();
	void PushOk();
	void CallNextTimeline();
	void CallStartTimeline();
	void CallEndTimeline();
	void NextCursorTimeline__UpdateFunc();
	void NextCursorTimeline__FinishedFunc();
	void EndTimeline__UpdateFunc();
	void EndTimeline__FinishedFunc();
	void StartTimeline__UpdateFunc();
	void StartTimeline__FinishedFunc();
	void CheckTargetInTopUI(TArray<class ABtlActor*>& Actor, bool* Bool);
	void MakeText(class UPlgAsset* Plg, const float NewItem);
	void GetSize(class ABtlActor* Actor, float* Size);
	void GetNextSize(class ABtlActor* Actor, float* Size);
	void Update3D(float A);
	void CreatePlayerTargetList();
	void CreateEnemyTargetList();
	void SetTargetCursor();
	void ToggleTargetList();
	void CreateAllTargetList();
	void MoveCursor(class ABtlActor* In);
	void MakePosCursor(TArray<class ABtlActor*>& In, TArray<struct FVector2D>* Out);
	void DebugShowPosCursor(TArray<struct FVector2D>& In);
	float Cal_Degree_2Vec(const struct FVector2D& Vec1, const struct FVector2D& Vec2, float Vec1Length, float Vec2Length);
	void ChecPushkCursor(bool Pres, bool Rep, bool* Out);
	void Cal_MovePosOffsetVec(struct FVector* Start, struct FVector* End);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BtlTacticsCheck_C">();
	}
	static class ABP_BtlTacticsCheck_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BtlTacticsCheck_C>();
	}
};
static_assert(alignof(ABP_BtlTacticsCheck_C) == 0x000008, "Wrong alignment on ABP_BtlTacticsCheck_C");
static_assert(sizeof(ABP_BtlTacticsCheck_C) == 0x000530, "Wrong size on ABP_BtlTacticsCheck_C");
static_assert(offsetof(ABP_BtlTacticsCheck_C, UberGraphFrame_BP_BtlTacticsCheck_C) == 0x000350, "Member 'ABP_BtlTacticsCheck_C::UberGraphFrame_BP_BtlTacticsCheck_C' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, Next) == 0x000358, "Member 'ABP_BtlTacticsCheck_C::Next' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, Enemy5) == 0x000360, "Member 'ABP_BtlTacticsCheck_C::Enemy5' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, Enemy4) == 0x000368, "Member 'ABP_BtlTacticsCheck_C::Enemy4' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, Enemy3) == 0x000370, "Member 'ABP_BtlTacticsCheck_C::Enemy3' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, Enemy2) == 0x000378, "Member 'ABP_BtlTacticsCheck_C::Enemy2' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, Enemy1) == 0x000380, "Member 'ABP_BtlTacticsCheck_C::Enemy1' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, Player4) == 0x000388, "Member 'ABP_BtlTacticsCheck_C::Player4' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, Player3) == 0x000390, "Member 'ABP_BtlTacticsCheck_C::Player3' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, Player2) == 0x000398, "Member 'ABP_BtlTacticsCheck_C::Player2' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, Player1) == 0x0003A0, "Member 'ABP_BtlTacticsCheck_C::Player1' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, BtlGuiResources) == 0x0003A8, "Member 'ABP_BtlTacticsCheck_C::BtlGuiResources' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, BtlDataBase) == 0x0003B0, "Member 'ABP_BtlTacticsCheck_C::BtlDataBase' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, BtlGuiDraw) == 0x0003B8, "Member 'ABP_BtlTacticsCheck_C::BtlGuiDraw' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, NextCursorTimeline_Speed_C2032995481B3F794095B580EAAB8D38) == 0x0003C0, "Member 'ABP_BtlTacticsCheck_C::NextCursorTimeline_Speed_C2032995481B3F794095B580EAAB8D38' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, NextCursorTimeline__Direction_C2032995481B3F794095B580EAAB8D38) == 0x0003C4, "Member 'ABP_BtlTacticsCheck_C::NextCursorTimeline__Direction_C2032995481B3F794095B580EAAB8D38' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, NextCursorTimeline) == 0x0003C8, "Member 'ABP_BtlTacticsCheck_C::NextCursorTimeline' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, EndTimeline_butonScale_55957B444DA81E3708E3DEB240AD8888) == 0x0003D0, "Member 'ABP_BtlTacticsCheck_C::EndTimeline_butonScale_55957B444DA81E3708E3DEB240AD8888' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, EndTimeline_Rate_55957B444DA81E3708E3DEB240AD8888) == 0x0003D4, "Member 'ABP_BtlTacticsCheck_C::EndTimeline_Rate_55957B444DA81E3708E3DEB240AD8888' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, EndTimeline__Direction_55957B444DA81E3708E3DEB240AD8888) == 0x0003D8, "Member 'ABP_BtlTacticsCheck_C::EndTimeline__Direction_55957B444DA81E3708E3DEB240AD8888' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, EndTimeline) == 0x0003E0, "Member 'ABP_BtlTacticsCheck_C::EndTimeline' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, StartTimeline_Scale_098BFDA24326A6E40B104D959DA6BD14) == 0x0003E8, "Member 'ABP_BtlTacticsCheck_C::StartTimeline_Scale_098BFDA24326A6E40B104D959DA6BD14' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, StartTimeline_Rate_098BFDA24326A6E40B104D959DA6BD14) == 0x0003EC, "Member 'ABP_BtlTacticsCheck_C::StartTimeline_Rate_098BFDA24326A6E40B104D959DA6BD14' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, StartTimeline__Direction_098BFDA24326A6E40B104D959DA6BD14) == 0x0003F0, "Member 'ABP_BtlTacticsCheck_C::StartTimeline__Direction_098BFDA24326A6E40B104D959DA6BD14' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, StartTimeline) == 0x0003F8, "Member 'ABP_BtlTacticsCheck_C::StartTimeline' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, TempList) == 0x000400, "Member 'ABP_BtlTacticsCheck_C::TempList' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, TargetList) == 0x000410, "Member 'ABP_BtlTacticsCheck_C::TargetList' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, ListMoveAhead) == 0x000420, "Member 'ABP_BtlTacticsCheck_C::ListMoveAhead' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, TargetIndexTemp) == 0x000424, "Member 'ABP_BtlTacticsCheck_C::TargetIndexTemp' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, NextTextObj) == 0x000428, "Member 'ABP_BtlTacticsCheck_C::NextTextObj' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, PartyPanelEnable) == 0x000430, "Member 'ABP_BtlTacticsCheck_C::PartyPanelEnable' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, TargetIndex) == 0x000434, "Member 'ABP_BtlTacticsCheck_C::TargetIndex' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, PosB) == 0x000438, "Member 'ABP_BtlTacticsCheck_C::PosB' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, PosA) == 0x000440, "Member 'ABP_BtlTacticsCheck_C::PosA' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, LeftUpList) == 0x000448, "Member 'ABP_BtlTacticsCheck_C::LeftUpList' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, RightDownList) == 0x000458, "Member 'ABP_BtlTacticsCheck_C::RightDownList' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, Rate) == 0x000468, "Member 'ABP_BtlTacticsCheck_C::Rate' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, TextObjList) == 0x000470, "Member 'ABP_BtlTacticsCheck_C::TextObjList' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, RateList) == 0x000480, "Member 'ABP_BtlTacticsCheck_C::RateList' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, TextRate) == 0x000490, "Member 'ABP_BtlTacticsCheck_C::TextRate' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, RateListTemp) == 0x000498, "Member 'ABP_BtlTacticsCheck_C::RateListTemp' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, AutoAngle) == 0x0004A8, "Member 'ABP_BtlTacticsCheck_C::AutoAngle' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, ThreeDCkale) == 0x0004AC, "Member 'ABP_BtlTacticsCheck_C::ThreeDCkale' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, Speed) == 0x0004B0, "Member 'ABP_BtlTacticsCheck_C::Speed' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, Update3DAnimation) == 0x0004B4, "Member 'ABP_BtlTacticsCheck_C::Update3DAnimation' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, OpenTheurgiaWindow) == 0x0004B5, "Member 'ABP_BtlTacticsCheck_C::OpenTheurgiaWindow' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, KeyhelpTypeEnemy) == 0x0004B6, "Member 'ABP_BtlTacticsCheck_C::KeyhelpTypeEnemy' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, PlayerTargetList) == 0x0004B8, "Member 'ABP_BtlTacticsCheck_C::PlayerTargetList' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, EnemyTargetList) == 0x0004C8, "Member 'ABP_BtlTacticsCheck_C::EnemyTargetList' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, IsEnemyTargetList) == 0x0004D8, "Member 'ABP_BtlTacticsCheck_C::IsEnemyTargetList' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, IsEnemyNextTarget) == 0x0004D9, "Member 'ABP_BtlTacticsCheck_C::IsEnemyNextTarget' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, CursorList) == 0x0004E0, "Member 'ABP_BtlTacticsCheck_C::CursorList' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, NextTargetIdx) == 0x0004F0, "Member 'ABP_BtlTacticsCheck_C::NextTargetIdx' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, DebugPosCursor) == 0x0004F8, "Member 'ABP_BtlTacticsCheck_C::DebugPosCursor' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, DebugPos2DCursor) == 0x000508, "Member 'ABP_BtlTacticsCheck_C::DebugPos2DCursor' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, IsShowDebug) == 0x000518, "Member 'ABP_BtlTacticsCheck_C::IsShowDebug' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, BackCapture) == 0x000520, "Member 'ABP_BtlTacticsCheck_C::BackCapture' has a wrong offset!");
static_assert(offsetof(ABP_BtlTacticsCheck_C, IsMoveCursor) == 0x000528, "Member 'ABP_BtlTacticsCheck_C::IsMoveCursor' has a wrong offset!");

}

