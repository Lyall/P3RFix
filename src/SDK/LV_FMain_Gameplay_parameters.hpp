#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LV_FMain_Gameplay

#include "Basic.hpp"


namespace SDK::Params
{

// Function LV_FMain_Gameplay.LV_FMain_Gameplay_C.ExecuteUbergraph_LV_FMain_Gameplay
// 0x0010 (0x0010 - 0x0000)
struct LV_FMain_Gameplay_C_ExecuteUbergraph_LV_FMain_Gameplay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFldManagerSubsystem*                   CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LV_FMain_Gameplay_C_ExecuteUbergraph_LV_FMain_Gameplay) == 0x000008, "Wrong alignment on LV_FMain_Gameplay_C_ExecuteUbergraph_LV_FMain_Gameplay");
static_assert(sizeof(LV_FMain_Gameplay_C_ExecuteUbergraph_LV_FMain_Gameplay) == 0x000010, "Wrong size on LV_FMain_Gameplay_C_ExecuteUbergraph_LV_FMain_Gameplay");
static_assert(offsetof(LV_FMain_Gameplay_C_ExecuteUbergraph_LV_FMain_Gameplay, EntryPoint) == 0x000000, "Member 'LV_FMain_Gameplay_C_ExecuteUbergraph_LV_FMain_Gameplay::EntryPoint' has a wrong offset!");
static_assert(offsetof(LV_FMain_Gameplay_C_ExecuteUbergraph_LV_FMain_Gameplay, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'LV_FMain_Gameplay_C_ExecuteUbergraph_LV_FMain_Gameplay::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");

// Function LV_FMain_Gameplay.LV_FMain_Gameplay_C.CheckDebugShortcut
// 0x0028 (0x0028 - 0x0000)
struct LV_FMain_Gameplay_C_CheckDebugShortcut final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDebug_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFldManagerSubsystem*                   CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckKeyFree_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsProcField_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInputKeyDown_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInputKeyDown_ReturnValue_1;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LV_FMain_Gameplay_C_CheckDebugShortcut) == 0x000008, "Wrong alignment on LV_FMain_Gameplay_C_CheckDebugShortcut");
static_assert(sizeof(LV_FMain_Gameplay_C_CheckDebugShortcut) == 0x000028, "Wrong size on LV_FMain_Gameplay_C_CheckDebugShortcut");
static_assert(offsetof(LV_FMain_Gameplay_C_CheckDebugShortcut, Return) == 0x000000, "Member 'LV_FMain_Gameplay_C_CheckDebugShortcut::Return' has a wrong offset!");
static_assert(offsetof(LV_FMain_Gameplay_C_CheckDebugShortcut, CallFunc_IsDebug_ReturnValue) == 0x000001, "Member 'LV_FMain_Gameplay_C_CheckDebugShortcut::CallFunc_IsDebug_ReturnValue' has a wrong offset!");
static_assert(offsetof(LV_FMain_Gameplay_C_CheckDebugShortcut, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'LV_FMain_Gameplay_C_CheckDebugShortcut::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(LV_FMain_Gameplay_C_CheckDebugShortcut, CallFunc_CheckKeyFree_ReturnValue) == 0x000010, "Member 'LV_FMain_Gameplay_C_CheckDebugShortcut::CallFunc_CheckKeyFree_ReturnValue' has a wrong offset!");
static_assert(offsetof(LV_FMain_Gameplay_C_CheckDebugShortcut, CallFunc_IsProcField_ReturnValue) == 0x000011, "Member 'LV_FMain_Gameplay_C_CheckDebugShortcut::CallFunc_IsProcField_ReturnValue' has a wrong offset!");
static_assert(offsetof(LV_FMain_Gameplay_C_CheckDebugShortcut, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'LV_FMain_Gameplay_C_CheckDebugShortcut::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(LV_FMain_Gameplay_C_CheckDebugShortcut, CallFunc_IsInputKeyDown_ReturnValue) == 0x000020, "Member 'LV_FMain_Gameplay_C_CheckDebugShortcut::CallFunc_IsInputKeyDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(LV_FMain_Gameplay_C_CheckDebugShortcut, CallFunc_IsInputKeyDown_ReturnValue_1) == 0x000021, "Member 'LV_FMain_Gameplay_C_CheckDebugShortcut::CallFunc_IsInputKeyDown_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LV_FMain_Gameplay_C_CheckDebugShortcut, CallFunc_BooleanOR_ReturnValue) == 0x000022, "Member 'LV_FMain_Gameplay_C_CheckDebugShortcut::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function LV_FMain_Gameplay.LV_FMain_Gameplay_C.CheckEventDebugShortcut
// 0x0028 (0x0028 - 0x0000)
struct LV_FMain_Gameplay_C_CheckEventDebugShortcut final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAtlEvtSubsystem*                       CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDebug_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingEvent_ReturnValue;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInputKeyDown_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInputKeyDown_ReturnValue_1;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LV_FMain_Gameplay_C_CheckEventDebugShortcut) == 0x000008, "Wrong alignment on LV_FMain_Gameplay_C_CheckEventDebugShortcut");
static_assert(sizeof(LV_FMain_Gameplay_C_CheckEventDebugShortcut) == 0x000028, "Wrong size on LV_FMain_Gameplay_C_CheckEventDebugShortcut");
static_assert(offsetof(LV_FMain_Gameplay_C_CheckEventDebugShortcut, Return) == 0x000000, "Member 'LV_FMain_Gameplay_C_CheckEventDebugShortcut::Return' has a wrong offset!");
static_assert(offsetof(LV_FMain_Gameplay_C_CheckEventDebugShortcut, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'LV_FMain_Gameplay_C_CheckEventDebugShortcut::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(LV_FMain_Gameplay_C_CheckEventDebugShortcut, CallFunc_IsDebug_ReturnValue) == 0x000010, "Member 'LV_FMain_Gameplay_C_CheckEventDebugShortcut::CallFunc_IsDebug_ReturnValue' has a wrong offset!");
static_assert(offsetof(LV_FMain_Gameplay_C_CheckEventDebugShortcut, CallFunc_IsPlayingEvent_ReturnValue) == 0x000011, "Member 'LV_FMain_Gameplay_C_CheckEventDebugShortcut::CallFunc_IsPlayingEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(LV_FMain_Gameplay_C_CheckEventDebugShortcut, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'LV_FMain_Gameplay_C_CheckEventDebugShortcut::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(LV_FMain_Gameplay_C_CheckEventDebugShortcut, CallFunc_IsInputKeyDown_ReturnValue) == 0x000020, "Member 'LV_FMain_Gameplay_C_CheckEventDebugShortcut::CallFunc_IsInputKeyDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(LV_FMain_Gameplay_C_CheckEventDebugShortcut, CallFunc_IsInputKeyDown_ReturnValue_1) == 0x000021, "Member 'LV_FMain_Gameplay_C_CheckEventDebugShortcut::CallFunc_IsInputKeyDown_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LV_FMain_Gameplay_C_CheckEventDebugShortcut, CallFunc_BooleanOR_ReturnValue) == 0x000022, "Member 'LV_FMain_Gameplay_C_CheckEventDebugShortcut::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

