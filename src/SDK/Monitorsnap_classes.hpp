#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Monitorsnap

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class monitorsnap.MonitorBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UMonitorBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void ApplyMonitorSettings(const struct FMonitorResolution& Resolution, EWindowMode ScreenMode, const struct FMonitorHandle& Monitor, bool bCheckForCommandLineOverrides, float Duration);
	static bool EqualEqual_MonitorHandleMonitorHandle(const struct FMonitorHandle& A, const struct FMonitorHandle& B);
	static bool EqualEqual_MonitorResolutionMonitorResolution(const struct FMonitorResolution& Left, const struct FMonitorResolution& Right);
	static TArray<struct FMonitorHandle> GetAvailableMonitors();
	static struct FMonitorResolution GetClosestEnclosingResolution(const struct FMonitorHandle& MonitorHandle, const struct FIntPoint& DesiredSize);
	static struct FMonitorHandle GetCurrentMonitor();
	static class FString GetMonitorName(const struct FMonitorHandle& MonitorHandle);
	static struct FIntPoint GetMonitorPosition(const struct FMonitorHandle& MonitorHandle);
	static void GetMonitorSize(const struct FMonitorHandle& MonitorHandle, int32* Width, int32* Height);
	static struct FMonitorHandle GetPrimaryMonitor();
	static float GetRefreshRate(const struct FMonitorResolution& Resolution);
	static bool GetSupportedFullscreenResolutions(const struct FMonitorHandle& MonitorHandle, TArray<struct FMonitorResolution>* OutResolutions);
	static bool GetSupportedFullscreenResolutionsUniqueOnly(const struct FMonitorHandle& MonitorHandle, TArray<struct FMonitorResolution>* OutResolutions);
	static bool IsSupportedFullscreen(const struct FMonitorHandle& MonitorHandle);
	static bool IsValid(const struct FMonitorHandle& MonitorHandle);
	static bool NotEqual_MonitorHandleMonitorHandle(const struct FMonitorHandle& A, const struct FMonitorHandle& B);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MonitorBlueprintLibrary">();
	}
	static class UMonitorBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMonitorBlueprintLibrary>();
	}
};
static_assert(alignof(UMonitorBlueprintLibrary) == 0x000008, "Wrong alignment on UMonitorBlueprintLibrary");
static_assert(sizeof(UMonitorBlueprintLibrary) == 0x000028, "Wrong size on UMonitorBlueprintLibrary");

}

