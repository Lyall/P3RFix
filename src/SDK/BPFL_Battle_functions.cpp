#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_Battle

#include "Basic.hpp"

#include "BPFL_Battle_classes.hpp"
#include "BPFL_Battle_parameters.hpp"


namespace SDK
{

// Function BPFL_Battle.BPFL_Battle_C.MakeCylinder
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class ABtlActor*>                Targets                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    UseCommonCylinder                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ModeSizeWeightingCylinder                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Bottom_Center                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Radius                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Height                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_Battle_C::MakeCylinder(TArray<class ABtlActor*>& Targets, bool UseCommonCylinder, bool ModeSizeWeightingCylinder, class UObject* __WorldContext, struct FVector* Bottom_Center, float* Radius, float* Height)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Battle_C", "MakeCylinder");

	Params::BPFL_Battle_C_MakeCylinder Parms{};

	Parms.Targets = std::move(Targets);
	Parms.UseCommonCylinder = UseCommonCylinder;
	Parms.ModeSizeWeightingCylinder = ModeSizeWeightingCylinder;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Targets = std::move(Parms.Targets);

	if (Bottom_Center != nullptr)
		*Bottom_Center = std::move(Parms.Bottom_Center);

	if (Radius != nullptr)
		*Radius = Parms.Radius;

	if (Height != nullptr)
		*Height = Parms.Height;
}


// Function BPFL_Battle.BPFL_Battle_C.GetInitialTransform
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       Trans                                                  (Parm, OutParm, IsPlainOldData, NoDestructor)

void UBPFL_Battle_C::GetInitialTransform(class UObject* __WorldContext, struct FTransform* Trans)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Battle_C", "GetInitialTransform");

	Params::BPFL_Battle_C_GetInitialTransform Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Trans != nullptr)
		*Trans = std::move(Parms.Trans);
}


// Function BPFL_Battle.BPFL_Battle_C.AddInt
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Add_Value                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_Battle_C::AddInt(int32& Value, int32 Add_Value, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Battle_C", "AddInt");

	Params::BPFL_Battle_C_AddInt Parms{};

	Parms.Value = Value;
	Parms.Add_Value = Add_Value;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Value = Parms.Value;
}


// Function BPFL_Battle.BPFL_Battle_C.AddFloat
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AddValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_Battle_C::AddFloat(float& Value, float AddValue, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Battle_C", "AddFloat");

	Params::BPFL_Battle_C_AddFloat Parms{};

	Parms.Value = Value;
	Parms.AddValue = AddValue;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Value = Parms.Value;
}


// Function BPFL_Battle.BPFL_Battle_C.Conv Vec to CSV string
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           String                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBPFL_Battle_C::Conv_Vec_to_CSV_string(const struct FVector& Location, class UObject* __WorldContext, class FString* String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Battle_C", "Conv Vec to CSV string");

	Params::BPFL_Battle_C_Conv_Vec_to_CSV_string Parms{};

	Parms.Location = std::move(Location);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (String != nullptr)
		*String = std::move(Parms.String);
}


// Function BPFL_Battle.BPFL_Battle_C.Battle Print Error String
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           String                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_Battle_C::Battle_Print_Error_String(const class FString& String, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Battle_C", "Battle Print Error String");

	Params::BPFL_Battle_C_Battle_Print_Error_String Parms{};

	Parms.String = std::move(String);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_Battle.BPFL_Battle_C.Battle Print Warning String
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           String                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_Battle_C::Battle_Print_Warning_String(const class FString& String, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Battle_C", "Battle Print Warning String");

	Params::BPFL_Battle_C_Battle_Print_Warning_String Parms{};

	Parms.String = std::move(String);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_Battle.BPFL_Battle_C.Battle Print Note String
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           String                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_Battle_C::Battle_Print_Note_String(const class FString& String, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Battle_C", "Battle Print Note String");

	Params::BPFL_Battle_C_Battle_Print_Note_String Parms{};

	Parms.String = std::move(String);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_Battle.BPFL_Battle_C.CalculateCylinderLocation
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_BtlCharacterBase_C*>   Character_List                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// float                                   Radius_Ratio                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Height_Ratio                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Rotate_Degree                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Use_Common_Cylinder                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_Battle_C::CalculateCylinderLocation(TArray<class ABP_BtlCharacterBase_C*>& Character_List, float Radius_Ratio, float Height_Ratio, float Rotate_Degree, bool Use_Common_Cylinder, class UObject* __WorldContext, struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Battle_C", "CalculateCylinderLocation");

	Params::BPFL_Battle_C_CalculateCylinderLocation Parms{};

	Parms.Character_List = std::move(Character_List);
	Parms.Radius_Ratio = Radius_Ratio;
	Parms.Height_Ratio = Height_Ratio;
	Parms.Rotate_Degree = Rotate_Degree;
	Parms.Use_Common_Cylinder = Use_Common_Cylinder;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Character_List = std::move(Parms.Character_List);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BPFL_Battle.BPFL_Battle_C.CalcLoopIndex
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Max                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   LoopIndex                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_Battle_C::CalcLoopIndex(int32 Value, int32 Max, class UObject* __WorldContext, int32* LoopIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Battle_C", "CalcLoopIndex");

	Params::BPFL_Battle_C_CalcLoopIndex Parms{};

	Parms.Value = Value;
	Parms.Max = Max;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (LoopIndex != nullptr)
		*LoopIndex = Parms.LoopIndex;
}


// Function BPFL_Battle.BPFL_Battle_C.Battle Print Log
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           String                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_Battle_C::Battle_Print_Log(const class FString& String, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Battle_C", "Battle Print Log");

	Params::BPFL_Battle_C_Battle_Print_Log Parms{};

	Parms.String = std::move(String);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_Battle.BPFL_Battle_C.BtlFindLookAtRotationFlat
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_BtlCharacterBase_C*           Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_BtlCharacterBase_C*           LookatCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

struct FRotator UBPFL_Battle_C::BtlFindLookAtRotationFlat(class ABP_BtlCharacterBase_C* Character, class ABP_BtlCharacterBase_C* LookatCharacter, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Battle_C", "BtlFindLookAtRotationFlat");

	Params::BPFL_Battle_C_BtlFindLookAtRotationFlat Parms{};

	Parms.Character = Character;
	Parms.LookatCharacter = LookatCharacter;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPFL_Battle.BPFL_Battle_C.Get Human Notify
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBtlAnimNotify                          Selection                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             DefaultNotifyName                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Notify_Name                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_Battle_C::Get_Human_Notify(EBtlAnimNotify Selection, class FName DefaultNotifyName, class UObject* __WorldContext, class FName* Notify_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Battle_C", "Get Human Notify");

	Params::BPFL_Battle_C_Get_Human_Notify Parms{};

	Parms.Selection = Selection;
	Parms.DefaultNotifyName = DefaultNotifyName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Notify_Name != nullptr)
		*Notify_Name = Parms.Notify_Name;
}


// Function BPFL_Battle.BPFL_Battle_C.Get Persona Notify
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBtlAnimNotifyPersona                   Selection                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             DefaultNotifyName                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Notify_Name                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_Battle_C::Get_Persona_Notify(EBtlAnimNotifyPersona Selection, class FName DefaultNotifyName, class UObject* __WorldContext, class FName* Notify_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Battle_C", "Get Persona Notify");

	Params::BPFL_Battle_C_Get_Persona_Notify Parms{};

	Parms.Selection = Selection;
	Parms.DefaultNotifyName = DefaultNotifyName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Notify_Name != nullptr)
		*Notify_Name = Parms.Notify_Name;
}


// Function BPFL_Battle.BPFL_Battle_C.Get Shadow Notify
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBtlAnimNotifyShadow                    Selection                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             DefaultNotifyName                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Notify_Name                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_Battle_C::Get_Shadow_Notify(EBtlAnimNotifyShadow Selection, class FName DefaultNotifyName, class UObject* __WorldContext, class FName* Notify_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Battle_C", "Get Shadow Notify");

	Params::BPFL_Battle_C_Get_Shadow_Notify Parms{};

	Parms.Selection = Selection;
	Parms.DefaultNotifyName = DefaultNotifyName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Notify_Name != nullptr)
		*Notify_Name = Parms.Notify_Name;
}


// Function BPFL_Battle.BPFL_Battle_C.VectorAnim
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Vec0                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Vec1                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Alpha                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Vec                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_Battle_C::VectorAnim(const struct FVector& Vec0, const struct FVector& Vec1, float Alpha, class UObject* __WorldContext, struct FVector* Vec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Battle_C", "VectorAnim");

	Params::BPFL_Battle_C_VectorAnim Parms{};

	Parms.Vec0 = std::move(Vec0);
	Parms.Vec1 = std::move(Vec1);
	Parms.Alpha = Alpha;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Vec != nullptr)
		*Vec = std::move(Parms.Vec);
}


// Function BPFL_Battle.BPFL_Battle_C.BtlFindLookAtPosRotationFlat
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_BtlCharacterBase_C*           Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LookAtLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

struct FRotator UBPFL_Battle_C::BtlFindLookAtPosRotationFlat(class ABP_BtlCharacterBase_C* Character, const struct FVector& LookAtLocation, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Battle_C", "BtlFindLookAtPosRotationFlat");

	Params::BPFL_Battle_C_BtlFindLookAtPosRotationFlat Parms{};

	Parms.Character = Character;
	Parms.LookAtLocation = std::move(LookAtLocation);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPFL_Battle.BPFL_Battle_C.BtlRotateTurningTable
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBtlCoreComponent*                BtlCore                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABtlActor*                        MainCharacter                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    TurntableForceReset                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_Battle_C::BtlRotateTurningTable(class UBtlCoreComponent* BtlCore, class ABtlActor* MainCharacter, bool TurntableForceReset, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Battle_C", "BtlRotateTurningTable");

	Params::BPFL_Battle_C_BtlRotateTurningTable Parms{};

	Parms.BtlCore = BtlCore;
	Parms.MainCharacter = MainCharacter;
	Parms.TurntableForceReset = TurntableForceReset;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_Battle.BPFL_Battle_C.BtlRotateTurningTableRequest
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBtlCoreComponent*                BtlCore                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABtlActor*                        MainCharacter                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    TurntableForceReset                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_Battle_C::BtlRotateTurningTableRequest(class UBtlCoreComponent* BtlCore, class ABtlActor* MainCharacter, bool TurntableForceReset, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Battle_C", "BtlRotateTurningTableRequest");

	Params::BPFL_Battle_C_BtlRotateTurningTableRequest Parms{};

	Parms.BtlCore = BtlCore;
	Parms.MainCharacter = MainCharacter;
	Parms.TurntableForceReset = TurntableForceReset;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_Battle.BPFL_Battle_C.BtlRotateEnemiesLookatMainChara
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBtlCoreComponent*                BtlCore                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABtlActor*                        MainCharacter                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_Battle_C::BtlRotateEnemiesLookatMainChara(class UBtlCoreComponent* BtlCore, class ABtlActor* MainCharacter, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Battle_C", "BtlRotateEnemiesLookatMainChara");

	Params::BPFL_Battle_C_BtlRotateEnemiesLookatMainChara Parms{};

	Parms.BtlCore = BtlCore;
	Parms.MainCharacter = MainCharacter;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_Battle.BPFL_Battle_C.CalcLevelSequencePlayTime
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ALevelSequenceActor*              LS_Actor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AnimTime                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_Battle_C::CalcLevelSequencePlayTime(class ALevelSequenceActor* LS_Actor, class UObject* __WorldContext, float* AnimTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Battle_C", "CalcLevelSequencePlayTime");

	Params::BPFL_Battle_C_CalcLevelSequencePlayTime Parms{};

	Parms.LS_Actor = LS_Actor;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (AnimTime != nullptr)
		*AnimTime = Parms.AnimTime;
}


// Function BPFL_Battle.BPFL_Battle_C.Battle Coordinate Close Formation
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBtlCoreComponent*                BtlCore                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DependsOnEnemyTarget                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_Battle_C::Battle_Coordinate_Close_Formation(class UBtlCoreComponent* BtlCore, bool DependsOnEnemyTarget, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Battle_C", "Battle Coordinate Close Formation");

	Params::BPFL_Battle_C_Battle_Coordinate_Close_Formation Parms{};

	Parms.BtlCore = BtlCore;
	Parms.DependsOnEnemyTarget = DependsOnEnemyTarget;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_Battle.BPFL_Battle_C.CalcCylinderCenter
// (Static, Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABtlActor*>                TargetList                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    UseCommonCylinder                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CylinderCenter                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          SizeWeightingCenter                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_Battle_C::CalcCylinderCenter(TArray<class ABtlActor*>& TargetList, bool UseCommonCylinder, class UObject* __WorldContext, struct FVector* CylinderCenter, struct FVector* SizeWeightingCenter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Battle_C", "CalcCylinderCenter");

	Params::BPFL_Battle_C_CalcCylinderCenter Parms{};

	Parms.TargetList = std::move(TargetList);
	Parms.UseCommonCylinder = UseCommonCylinder;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	TargetList = std::move(Parms.TargetList);

	if (CylinderCenter != nullptr)
		*CylinderCenter = std::move(Parms.CylinderCenter);

	if (SizeWeightingCenter != nullptr)
		*SizeWeightingCenter = std::move(Parms.SizeWeightingCenter);
}


// Function BPFL_Battle.BPFL_Battle_C.Get Hit Notify Name
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBtlAnimNotifyHitEffect                 Selection                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Notify_Name                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_Battle_C::Get_Hit_Notify_Name(EBtlAnimNotifyHitEffect Selection, class UObject* __WorldContext, class FName* Notify_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Battle_C", "Get Hit Notify Name");

	Params::BPFL_Battle_C_Get_Hit_Notify_Name Parms{};

	Parms.Selection = Selection;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Notify_Name != nullptr)
		*Notify_Name = Parms.Notify_Name;
}


// Function BPFL_Battle.BPFL_Battle_C.Get Hit Notify From Name
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           HitTypeName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBtlAnimNotifyHitEffect                 Notify_Name                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_Battle_C::Get_Hit_Notify_From_Name(const class FString& HitTypeName, class UObject* __WorldContext, EBtlAnimNotifyHitEffect* Notify_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_Battle_C", "Get Hit Notify From Name");

	Params::BPFL_Battle_C_Get_Hit_Notify_From_Name Parms{};

	Parms.HitTypeName = std::move(HitTypeName);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Notify_Name != nullptr)
		*Notify_Name = Parms.Notify_Name;
}

}

