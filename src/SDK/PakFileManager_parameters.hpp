#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PakFileManager

#include "Basic.hpp"


namespace SDK::Params
{

// Function PakFileManager.PakFile.syncReadFile
// 0x0001 (0x0001 - 0x0000)
struct PakFile_SyncReadFile final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PakFile_SyncReadFile) == 0x000001, "Wrong alignment on PakFile_SyncReadFile");
static_assert(sizeof(PakFile_SyncReadFile) == 0x000001, "Wrong size on PakFile_SyncReadFile");
static_assert(offsetof(PakFile_SyncReadFile, ReturnValue) == 0x000000, "Member 'PakFile_SyncReadFile::ReturnValue' has a wrong offset!");

// Function PakFileManager.PakFileManagerControl.requestReadFile
// 0x0018 (0x0018 - 0x0000)
struct PakFileManagerControl_RequestReadFile final
{
public:
	class FString                                 Filename;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPakFile*                               ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PakFileManagerControl_RequestReadFile) == 0x000008, "Wrong alignment on PakFileManagerControl_RequestReadFile");
static_assert(sizeof(PakFileManagerControl_RequestReadFile) == 0x000018, "Wrong size on PakFileManagerControl_RequestReadFile");
static_assert(offsetof(PakFileManagerControl_RequestReadFile, Filename) == 0x000000, "Member 'PakFileManagerControl_RequestReadFile::Filename' has a wrong offset!");
static_assert(offsetof(PakFileManagerControl_RequestReadFile, ReturnValue) == 0x000010, "Member 'PakFileManagerControl_RequestReadFile::ReturnValue' has a wrong offset!");

// Function PakFileManager.PakFiledManagerGameInstanceSubSystem.GetFileManagerControl
// 0x0008 (0x0008 - 0x0000)
struct PakFiledManagerGameInstanceSubSystem_GetFileManagerControl final
{
public:
	class UPakFileManagerControl*                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PakFiledManagerGameInstanceSubSystem_GetFileManagerControl) == 0x000008, "Wrong alignment on PakFiledManagerGameInstanceSubSystem_GetFileManagerControl");
static_assert(sizeof(PakFiledManagerGameInstanceSubSystem_GetFileManagerControl) == 0x000008, "Wrong size on PakFiledManagerGameInstanceSubSystem_GetFileManagerControl");
static_assert(offsetof(PakFiledManagerGameInstanceSubSystem_GetFileManagerControl, ReturnValue) == 0x000000, "Member 'PakFiledManagerGameInstanceSubSystem_GetFileManagerControl::ReturnValue' has a wrong offset!");

}

