#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_EventSkipWidget

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_EventSkipWidget.WBP_EventSkipWidget_C.ExecuteUbergraph_WBP_EventSkipWidget
// 0x0068 (0x0068 - 0x0000)
struct WBP_EventSkipWidget_C_ExecuteUbergraph_WBP_EventSkipWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bSetEffect)>              K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_CustomEvent_bSetEffect;                     // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEventSkipEffect*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0028(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventSkipWidget_C_ExecuteUbergraph_WBP_EventSkipWidget) == 0x000008, "Wrong alignment on WBP_EventSkipWidget_C_ExecuteUbergraph_WBP_EventSkipWidget");
static_assert(sizeof(WBP_EventSkipWidget_C_ExecuteUbergraph_WBP_EventSkipWidget) == 0x000068, "Wrong size on WBP_EventSkipWidget_C_ExecuteUbergraph_WBP_EventSkipWidget");
static_assert(offsetof(WBP_EventSkipWidget_C_ExecuteUbergraph_WBP_EventSkipWidget, EntryPoint) == 0x000000, "Member 'WBP_EventSkipWidget_C_ExecuteUbergraph_WBP_EventSkipWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_EventSkipWidget_C_ExecuteUbergraph_WBP_EventSkipWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_EventSkipWidget_C_ExecuteUbergraph_WBP_EventSkipWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_EventSkipWidget_C_ExecuteUbergraph_WBP_EventSkipWidget, K2Node_CustomEvent_bSetEffect) == 0x000014, "Member 'WBP_EventSkipWidget_C_ExecuteUbergraph_WBP_EventSkipWidget::K2Node_CustomEvent_bSetEffect' has a wrong offset!");
static_assert(offsetof(WBP_EventSkipWidget_C_ExecuteUbergraph_WBP_EventSkipWidget, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000018, "Member 'WBP_EventSkipWidget_C_ExecuteUbergraph_WBP_EventSkipWidget::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EventSkipWidget_C_ExecuteUbergraph_WBP_EventSkipWidget, CallFunc_FinishSpawningActor_ReturnValue) == 0x000020, "Member 'WBP_EventSkipWidget_C_ExecuteUbergraph_WBP_EventSkipWidget::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EventSkipWidget_C_ExecuteUbergraph_WBP_EventSkipWidget, K2Node_Event_MyGeometry) == 0x000028, "Member 'WBP_EventSkipWidget_C_ExecuteUbergraph_WBP_EventSkipWidget::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_EventSkipWidget_C_ExecuteUbergraph_WBP_EventSkipWidget, K2Node_Event_InDeltaTime) == 0x000060, "Member 'WBP_EventSkipWidget_C_ExecuteUbergraph_WBP_EventSkipWidget::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function WBP_EventSkipWidget.WBP_EventSkipWidget_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_EventSkipWidget_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventSkipWidget_C_Tick) == 0x000004, "Wrong alignment on WBP_EventSkipWidget_C_Tick");
static_assert(sizeof(WBP_EventSkipWidget_C_Tick) == 0x00003C, "Wrong size on WBP_EventSkipWidget_C_Tick");
static_assert(offsetof(WBP_EventSkipWidget_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_EventSkipWidget_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_EventSkipWidget_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_EventSkipWidget_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_EventSkipWidget.WBP_EventSkipWidget_C.OnEventDispatcher
// 0x0001 (0x0001 - 0x0000)
struct WBP_EventSkipWidget_C_OnEventDispatcher final
{
public:
	bool                                          bSetEffect;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_EventSkipWidget_C_OnEventDispatcher) == 0x000001, "Wrong alignment on WBP_EventSkipWidget_C_OnEventDispatcher");
static_assert(sizeof(WBP_EventSkipWidget_C_OnEventDispatcher) == 0x000001, "Wrong size on WBP_EventSkipWidget_C_OnEventDispatcher");
static_assert(offsetof(WBP_EventSkipWidget_C_OnEventDispatcher, bSetEffect) == 0x000000, "Member 'WBP_EventSkipWidget_C_OnEventDispatcher::bSetEffect' has a wrong offset!");

}

