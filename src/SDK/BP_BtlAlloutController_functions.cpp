#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtlAlloutController

#include "Basic.hpp"

#include "BP_BtlAlloutController_classes.hpp"
#include "BP_BtlAlloutController_parameters.hpp"


namespace SDK
{

// Function BP_BtlAlloutController.BP_BtlAlloutController_C.Has Finished Loading__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_BtlAlloutController_C::Has_Finished_Loading__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlAlloutController_C", "Has Finished Loading__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlAlloutController.BP_BtlAlloutController_C.Has Finished Unloading__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_BtlAlloutController_C::Has_Finished_Unloading__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlAlloutController_C", "Has Finished Unloading__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlAlloutController.BP_BtlAlloutController_C.Has Finished Startup Sequence__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_BtlAlloutController_C::Has_Finished_Startup_Sequence__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlAlloutController_C", "Has Finished Startup Sequence__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlAlloutController.BP_BtlAlloutController_C.Has Finished Before Shuffle Sequence__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_BtlAlloutController_C::Has_Finished_Before_Shuffle_Sequence__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlAlloutController_C", "Has Finished Before Shuffle Sequence__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlAlloutController.BP_BtlAlloutController_C.Has Finished After Shuffle Sequence__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_BtlAlloutController_C::Has_Finished_After_Shuffle_Sequence__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlAlloutController_C", "Has Finished After Shuffle Sequence__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlAlloutController.BP_BtlAlloutController_C.ExecuteUbergraph_BP_BtlAlloutController
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlAlloutController_C::ExecuteUbergraph_BP_BtlAlloutController(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlAlloutController_C", "ExecuteUbergraph_BP_BtlAlloutController");

	Params::BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlAlloutController.BP_BtlAlloutController_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlAlloutController_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlAlloutController_C", "ReceiveEndPlay");

	Params::BP_BtlAlloutController_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlAlloutController.BP_BtlAlloutController_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_BtlAlloutController_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlAlloutController_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlAlloutController.BP_BtlAlloutController_C.Has Finished Loading tex
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlAlloutController_C::Has_Finished_Loading_tex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlAlloutController_C", "Has Finished Loading tex");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlAlloutController.BP_BtlAlloutController_C.On Finished Sequence After Shuffle
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlAlloutController_C::On_Finished_Sequence_After_Shuffle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlAlloutController_C", "On Finished Sequence After Shuffle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlAlloutController.BP_BtlAlloutController_C.On Finished Sequence Before Shuffle
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlAlloutController_C::On_Finished_Sequence_Before_Shuffle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlAlloutController_C", "On Finished Sequence Before Shuffle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlAlloutController.BP_BtlAlloutController_C.On Finished Single Performance
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlAlloutController_C::On_Finished_Single_Performance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlAlloutController_C", "On Finished Single Performance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlAlloutController.BP_BtlAlloutController_C.Has Finished Playing Start Seq
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlAlloutController_C::Has_Finished_Playing_Start_Seq()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlAlloutController_C", "Has Finished Playing Start Seq");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlAlloutController.BP_BtlAlloutController_C.Has Finished Loading Stuff
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlAlloutController_C::Has_Finished_Loading_Stuff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlAlloutController_C", "Has Finished Loading Stuff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlAlloutController.BP_BtlAlloutController_C.Has Finished Loading Level
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlAlloutController_C::Has_Finished_Loading_Level()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlAlloutController_C", "Has Finished Loading Level");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlAlloutController.BP_BtlAlloutController_C.On Unload Resource
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlAlloutController_C::On_Unload_Resource()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlAlloutController_C", "On Unload Resource");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlAlloutController.BP_BtlAlloutController_C.On Load Resource
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlAlloutController_C::On_Load_Resource()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlAlloutController_C", "On Load Resource");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlAlloutController.BP_BtlAlloutController_C.OnLoaded_8A46DB4444D35F946B17A2966A1BE30A
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlAlloutController_C::OnLoaded_8A46DB4444D35F946B17A2966A1BE30A(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlAlloutController_C", "OnLoaded_8A46DB4444D35F946B17A2966A1BE30A");

	Params::BP_BtlAlloutController_C_OnLoaded_8A46DB4444D35F946B17A2966A1BE30A Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlAlloutController.BP_BtlAlloutController_C.OnLoaded_B41915304C41D101349591ABD3C3600E
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlAlloutController_C::OnLoaded_B41915304C41D101349591ABD3C3600E(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlAlloutController_C", "OnLoaded_B41915304C41D101349591ABD3C3600E");

	Params::BP_BtlAlloutController_C_OnLoaded_B41915304C41D101349591ABD3C3600E Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlAlloutController.BP_BtlAlloutController_C.OnLoaded_A90C9119438CAE6B812937BD67180638
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlAlloutController_C::OnLoaded_A90C9119438CAE6B812937BD67180638(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlAlloutController_C", "OnLoaded_A90C9119438CAE6B812937BD67180638");

	Params::BP_BtlAlloutController_C_OnLoaded_A90C9119438CAE6B812937BD67180638 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlAlloutController.BP_BtlAlloutController_C.GetAlloutLevelName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             LevelName                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlAlloutController_C::GetAlloutLevelName(class FName* LevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlAlloutController_C", "GetAlloutLevelName");

	Params::BP_BtlAlloutController_C_GetAlloutLevelName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LevelName != nullptr)
		*LevelName = Parms.LevelName;
}


// Function BP_BtlAlloutController.BP_BtlAlloutController_C.PlayAlloutStartupSequence
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlAlloutController_C::PlayAlloutStartupSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlAlloutController_C", "PlayAlloutStartupSequence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlAlloutController.BP_BtlAlloutController_C.PlayAllout2ndSequence
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlAlloutController_C::PlayAllout2ndSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlAlloutController_C", "PlayAllout2ndSequence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlAlloutController.BP_BtlAlloutController_C.PlayAllout3rdSequence
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlAlloutController_C::PlayAllout3rdSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlAlloutController_C", "PlayAllout3rdSequence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlAlloutController.BP_BtlAlloutController_C.Setup
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlAlloutController_C::Setup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlAlloutController_C", "Setup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlAlloutController.BP_BtlAlloutController_C.AllocateMembers
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlAlloutController_C::AllocateMembers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlAlloutController_C", "AllocateMembers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlAlloutController.BP_BtlAlloutController_C.ClearAlloutAttack
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlAlloutController_C::ClearAlloutAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlAlloutController_C", "ClearAlloutAttack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlAlloutController.BP_BtlAlloutController_C.ChoiceSequence
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class ULevelSequence>    Start                                                  (Parm, OutParm, HasGetValueTypeHash)
// TSoftObjectPtr<class ULevelSequence>    BeforeShuffle                                          (Parm, OutParm, HasGetValueTypeHash)
// TSoftObjectPtr<class ULevelSequence>    AfterShuffle                                           (Parm, OutParm, HasGetValueTypeHash)

void ABP_BtlAlloutController_C::ChoiceSequence(TSoftObjectPtr<class ULevelSequence>* Start, TSoftObjectPtr<class ULevelSequence>* BeforeShuffle, TSoftObjectPtr<class ULevelSequence>* AfterShuffle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlAlloutController_C", "ChoiceSequence");

	Params::BP_BtlAlloutController_C_ChoiceSequence Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Start != nullptr)
		*Start = Parms.Start;

	if (BeforeShuffle != nullptr)
		*BeforeShuffle = Parms.BeforeShuffle;

	if (AfterShuffle != nullptr)
		*AfterShuffle = Parms.AfterShuffle;
}


// Function BP_BtlAlloutController.BP_BtlAlloutController_C.StopAllSequence
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlAlloutController_C::StopAllSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlAlloutController_C", "StopAllSequence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlAlloutController.BP_BtlAlloutController_C.StopASequence
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ALevelSequenceActor*              Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlAlloutController_C::StopASequence(class ALevelSequenceActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlAlloutController_C", "StopASequence");

	Params::BP_BtlAlloutController_C_StopASequence Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlAlloutController.BP_BtlAlloutController_C.SetupMembersEventMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BtlAlloutController_C::SetupMembersEventMode(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlAlloutController_C", "SetupMembersEventMode");

	Params::BP_BtlAlloutController_C_SetupMembersEventMode Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlAlloutController.BP_BtlAlloutController_C.PlayAlloutFinish
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlAlloutController_C::PlayAlloutFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlAlloutController_C", "PlayAlloutFinish");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlAlloutController.BP_BtlAlloutController_C.Check Model Load Finished
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsLoadEnded                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BtlAlloutController_C::Check_Model_Load_Finished(bool* IsLoadEnded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlAlloutController_C", "Check Model Load Finished");

	Params::BP_BtlAlloutController_C_Check_Model_Load_Finished Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsLoadEnded != nullptr)
		*IsLoadEnded = Parms.IsLoadEnded;
}


// Function BP_BtlAlloutController.BP_BtlAlloutController_C.Load Character Specific Model For Allout
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlAlloutController_C::Load_Character_Specific_Model_For_Allout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlAlloutController_C", "Load Character Specific Model For Allout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlAlloutController.BP_BtlAlloutController_C.SetupMembersForAllout
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlAlloutController_C::SetupMembersForAllout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlAlloutController_C", "SetupMembersForAllout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlAlloutController.BP_BtlAlloutController_C.PlayVoiceRunIntoEnemy
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlAlloutController_C::PlayVoiceRunIntoEnemy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlAlloutController_C", "PlayVoiceRunIntoEnemy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlAlloutController.BP_BtlAlloutController_C.DestroySequence
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlAlloutController_C::DestroySequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlAlloutController_C", "DestroySequence");

	UObject::ProcessEvent(Func, nullptr);
}

}

