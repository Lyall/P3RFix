#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtlMontageNotifyHuman

#include "Basic.hpp"

#include "Xrd777_structs.hpp"
#include "Xrd777_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BtlMontageNotifyHuman.BP_BtlMontageNotifyHuman_C
// 0x0010 (0x0050 - 0x0040)
class UBP_BtlMontageNotifyHuman_C final : public UAnimNotify_BtlPlayMontageNotify
{
public:
	EBtlAnimNotify                                Notify_Type;                                       // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Notify_Value;                                      // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EBtlAnimNotifyHitEffect                       Hit_Effect_Type;                                   // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	class FString GetNotifyName() const;
	class FName GetBattleNotifyName() const;
	void GetHitStrFromNotify(EBtlAnimNotifyHitEffect HitType, class FString* Str) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BtlMontageNotifyHuman_C">();
	}
	static class UBP_BtlMontageNotifyHuman_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_BtlMontageNotifyHuman_C>();
	}
};
static_assert(alignof(UBP_BtlMontageNotifyHuman_C) == 0x000008, "Wrong alignment on UBP_BtlMontageNotifyHuman_C");
static_assert(sizeof(UBP_BtlMontageNotifyHuman_C) == 0x000050, "Wrong size on UBP_BtlMontageNotifyHuman_C");
static_assert(offsetof(UBP_BtlMontageNotifyHuman_C, Notify_Type) == 0x000040, "Member 'UBP_BtlMontageNotifyHuman_C::Notify_Type' has a wrong offset!");
static_assert(offsetof(UBP_BtlMontageNotifyHuman_C, Notify_Value) == 0x000044, "Member 'UBP_BtlMontageNotifyHuman_C::Notify_Value' has a wrong offset!");
static_assert(offsetof(UBP_BtlMontageNotifyHuman_C, Hit_Effect_Type) == 0x000048, "Member 'UBP_BtlMontageNotifyHuman_C::Hit_Effect_Type' has a wrong offset!");

}

