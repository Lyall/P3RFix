#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtlStrategyInstruct

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_BtlGuiBaseActor_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BtlStrategyInstruct.BP_BtlStrategyInstruct_C
// 0x03D8 (0x0728 - 0x0350)
class ABP_BtlStrategyInstruct_C final : public ABP_BtlGuiBaseActor_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_BtlStrategyInstruct_C;           // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBtlGuiDrawComponent*                   BtlGuiDrawCaustics;                                // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawComponent*                   BtlGuiDraw1;                                       // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiResources*                       BtlGuiResources;                                   // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiListComponent*                   BtlGuiList2;                                       // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiListComponent*                   BtlGuiList1;                                       // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiListComponent*                   BtlGuiList;                                        // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBtlDataBaseComponent*                  BtlDataBase;                                       // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawComponent*                   BtlGuiDraw;                                        // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         AlreadyEscapeAnimation_AlreadyEscape_F994A1B04698C41041ADD890AA9FDE70; // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            AlreadyEscapeAnimation__Direction_F994A1B04698C41041ADD890AA9FDE70; // 0x039C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D[0x3];                                      // 0x039D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     AlreadyEscapeAnimation;                            // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         List2Check2Animation_Scale_191B92D74A9E8024C2105F85F018EE9E; // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            List2Check2Animation__Direction_191B92D74A9E8024C2105F85F018EE9E; // 0x03AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AD[0x3];                                      // 0x03AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     List2Check2Animation;                              // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                List2Animation_CircleOpen_30188D6344C2C6C2007865A986A6FE88; // 0x03B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            List2Animation__Direction_30188D6344C2C6C2007865A986A6FE88; // 0x03C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C5[0x3];                                      // 0x03C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     List2Animation;                                    // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         List1Animation_List1CursorFadein_D8042E6848C957067D431995CEFFD5EC; // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         List1Animation_ListFadein_D8042E6848C957067D431995CEFFD5EC; // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         List1Animation_TitleMoveRate_D8042E6848C957067D431995CEFFD5EC; // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         List1Animation_BaclCircleRate_D8042E6848C957067D431995CEFFD5EC; // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         List1Animation_BackPanelRate_D8042E6848C957067D431995CEFFD5EC; // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         List1Animation_CursorRate_D8042E6848C957067D431995CEFFD5EC; // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            List1Animation__Direction_D8042E6848C957067D431995CEFFD5EC; // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     List1Animation;                                    // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutAnimation_illhouetteRate_DE8166754F1662BE4AF79F8C853961E7; // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutAnimation_PanelRate_DE8166754F1662BE4AF79F8C853961E7; // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutAnimation_OutTitleRate_DE8166754F1662BE4AF79F8C853961E7; // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutAnimation_CursorRate_DE8166754F1662BE4AF79F8C853961E7; // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            OutAnimation__Direction_DE8166754F1662BE4AF79F8C853961E7; // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     OutAnimation;                                      // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CursorLoop_CursorScale_BA31B6D541FCBC581AE4288A44B6933E; // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            CursorLoop__Direction_BA31B6D541FCBC581AE4288A44B6933E; // 0x041C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41D[0x3];                                      // 0x041D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     CursorLoop;                                        // 0x0420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CursorUpdate_CursorRate_DC80B6D542202BEECC9502BBF49BDDED; // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            CursorUpdate__Direction_DC80B6D542202BEECC9502BBF49BDDED; // 0x042C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42D[0x3];                                      // 0x042D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     CursorUpdate;                                      // 0x0430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAnimation_SillhouetteRate_5C7FC2A743E4B87EDE57AEAA8AF61EBA; // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAnimation_MainListRate_5C7FC2A743E4B87EDE57AEAA8AF61EBA; // 0x043C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAnimation_AlreadyEscapeRate_5C7FC2A743E4B87EDE57AEAA8AF61EBA; // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAnimation_TitleHelp_5C7FC2A743E4B87EDE57AEAA8AF61EBA; // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAnimation_CursorRate_5C7FC2A743E4B87EDE57AEAA8AF61EBA; // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAnimation_TitleRate_5C7FC2A743E4B87EDE57AEAA8AF61EBA; // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAnimation_BackPanelRate_5C7FC2A743E4B87EDE57AEAA8AF61EBA; // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            InAnimation__Direction_5C7FC2A743E4B87EDE57AEAA8AF61EBA; // 0x0454(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_455[0x3];                                      // 0x0455(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     InAnimation;                                       // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CursorIndex;                                       // 0x0460(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<int32>                                 TopIndex;                                          // 0x0470(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<int32>                                 CurrentIndex;                                      // 0x0480(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         ForIndex;                                          // 0x0490(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_494[0x4];                                      // 0x0494(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      PlayerList;                                        // 0x0498(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          EnableStrategyChange;                              // 0x04A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A9[0x7];                                      // 0x04A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  Lise1Enable;                                       // 0x04B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         InputState;                                        // 0x04C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C4[0x4];                                      // 0x04C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         OperationNameList;                                 // 0x04C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector2D                              OffsetA;                                           // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              OffsetB;                                           // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              OffsetC;                                           // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Back_Panel_Rate;                                   // 0x04F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F4[0x4];                                      // 0x04F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBtlGuiDrawObjectRoundRect*             BackPanel;                                         // 0x04F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Title_Rate;                                        // 0x0500(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_504[0x4];                                      // 0x0504(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBtlGuiDrawObjectPlg*>           Title;                                             // 0x0508(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         Cursor_Rate;                                       // 0x0518(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51C[0x4];                                      // 0x051C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBtlGuiDrawObjectPrimitive*>     Cursor;                                            // 0x0520(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UBtlGuiDrawObjectSprite*>        MainList;                                          // 0x0530(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         Title_Help;                                        // 0x0540(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_544[0x4];                                      // 0x0544(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBtlGuiDrawObjectSprite*>        TitleHelp;                                         // 0x0548(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UBtlGuiDrawObjectCore*>          AlreadyEscape;                                     // 0x0558(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         Already_Escape_Rate;                               // 0x0568(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56C[0x4];                                      // 0x056C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector2D>                      MainListPos;                                       // 0x0570(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FVector2D>                      AlreadyEscapePos;                                  // 0x0580(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         PrevMainCursor;                                    // 0x0590(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cursor_Movement;                                   // 0x0594(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cursor_Scale;                                      // 0x0598(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Main_List_Rate;                                    // 0x059C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutCursorRate;                                     // 0x05A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Out_Title_Rate;                                    // 0x05A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutPanel_Rate;                                     // 0x05A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AC[0x4];                                      // 0x05AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBtlGuiDrawObjectRect*                  Sillhouette;                                       // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Sillhouette_Rate;                                  // 0x05B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutTitleHelpRate;                                  // 0x05BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutBack_Panel_Rate;                                // 0x05C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              OffsetA2;                                          // 0x05C4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CC[0x4];                                      // 0x05CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBtlGuiDrawObjectPrimitive*             BaclCircle;                                        // 0x05D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Back_Circle_Rate;                                  // 0x05D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         List1TitleRate;                                    // 0x05DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              OffsetD;                                           // 0x05E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                FullMenber;                                        // 0x05E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBtlGuiDrawObjectText*>          List1Name;                                         // 0x05F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UBtlGuiDrawObjectRoundRect*>     BackStrategy;                                      // 0x0600(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UBtlGuiDrawObjectText*>          Strategy;                                          // 0x0610(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FVector2D>                      List1Pos;                                          // 0x0620(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector2D                              List1PrevPos;                                      // 0x0630(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              List1PrevPosBack;                                  // 0x0638(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         List1PrevFrame;                                    // 0x0640(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         List1PrevFrameBack;                                // 0x0644(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectRoundRect*             List1CursorBack;                                   // 0x0648(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectRoundRect*             List1Cursor;                                       // 0x0650(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         List_FadeinRate;                                   // 0x0658(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         List_1Cursor_Fadein;                               // 0x065C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              OffsetC2;                                          // 0x0660(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawComponent*                   Btl_Gui_Draw_1;                                    // 0x0668(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         List2CircleBlack;                                  // 0x0670(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         List2Circle;                                       // 0x0674(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectPrimitive*             List2LircleBack;                                   // 0x0678(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectPrimitive*             List2CircleMask;                                   // 0x0680(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector2D>                      List2Pos;                                          // 0x0688(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UBtlGuiDrawObjectText*                  List2Name;                                         // 0x0698(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                List2FullMenber;                                   // 0x06A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectRoundRect*             List2CursorBack;                                   // 0x06A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectRoundRect*             List2Cursor;                                       // 0x06B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              List2PrevPos;                                      // 0x06B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              List2PrevPosBack;                                  // 0x06C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         List2PrevFrame;                                    // 0x06C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         List2PrevFrameBack;                                // 0x06CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBtlGuiDrawObjectText*>          List2Operation;                                    // 0x06D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UBtlGuiDrawObjectSprite*                List2Check;                                        // 0x06E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumWork;                                           // 0x06E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         List2CheckScale;                                   // 0x06EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PermissionEscape;                                  // 0x06F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          KeyBindCompleted;                                  // 0x06F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F2[0x6];                                      // 0x06F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Caustics;                                          // 0x06F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectImage*                 Out_Item;                                          // 0x0700(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBtlGuiDrawObjectRect*>          MouseCollisionList1;                               // 0x0708(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UBtlGuiDrawObjectRect*>          MouseCollisionList2;                               // 0x0718(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_BtlStrategyInstruct(int32 EntryPoint);
	void CursorUpdate3();
	void CursorUpdate2();
	void CursorUpdate1();
	void GuiActorBeginPlay();
	void GuiActorStateInit(bool Flag, int32 Param);
	void CallCANCEL();
	void CallOK();
	void GuiActorUnbindAction();
	void GuiActorBindAction();
	void GuiActorUpdate(float DeltaTime);
	void MainCursorUpdate();
	void List2CursorSetup();
	void CallList2CursorUpdate();
	void List1CursorSetup();
	void CallList1CursorUpdate();
	void UpdateAnimation();
	void StartAlreadyEscape();
	void EndList2AnimationSlow();
	void StartCheckAnimation();
	void EndList2Animation();
	void StartList2Animation();
	void EndList1Animation();
	void StartList1Animation();
	void StartOutAnimation();
	void StartCursorMovement();
	void StartInAnimation();
	void AlreadyEscapeAnimation__UpdateFunc();
	void AlreadyEscapeAnimation__FinishedFunc();
	void List2Check2Animation__UpdateFunc();
	void List2Check2Animation__FinishedFunc();
	void List2Animation__UpdateFunc();
	void List2Animation__FinishedFunc();
	void List1Animation__UpdateFunc();
	void List1Animation__FinishedFunc();
	void OutAnimation__MoveTorUI__EventFunc();
	void OutAnimation__UpdateFunc();
	void OutAnimation__FinishedFunc();
	void CursorLoop__UpdateFunc();
	void CursorLoop__FinishedFunc();
	void CursorUpdate__UpdateFunc();
	void CursorUpdate__FinishedFunc();
	void InAnimation__UpdateFunc();
	void InAnimation__FinishedFunc();
	struct FVector2D LerpMainCursor(int32 Cursor_0, int32 PrevCursor, float Lerp, struct FVector2D* ReturnValue1, TArray<struct FBtlGuiVertex>* ReturnValue2);
	void UpdateList1Cursor();
	void UpdateList2Cursor();
	void AllParamInit();
	void RefrectLocalizeData();
	void SetMouseCollisionVisible(int32 Num, bool OnVisible);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BtlStrategyInstruct_C">();
	}
	static class ABP_BtlStrategyInstruct_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BtlStrategyInstruct_C>();
	}
};
static_assert(alignof(ABP_BtlStrategyInstruct_C) == 0x000008, "Wrong alignment on ABP_BtlStrategyInstruct_C");
static_assert(sizeof(ABP_BtlStrategyInstruct_C) == 0x000728, "Wrong size on ABP_BtlStrategyInstruct_C");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, UberGraphFrame_BP_BtlStrategyInstruct_C) == 0x000350, "Member 'ABP_BtlStrategyInstruct_C::UberGraphFrame_BP_BtlStrategyInstruct_C' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, BtlGuiDrawCaustics) == 0x000358, "Member 'ABP_BtlStrategyInstruct_C::BtlGuiDrawCaustics' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, BtlGuiDraw1) == 0x000360, "Member 'ABP_BtlStrategyInstruct_C::BtlGuiDraw1' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, BtlGuiResources) == 0x000368, "Member 'ABP_BtlStrategyInstruct_C::BtlGuiResources' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, BtlGuiList2) == 0x000370, "Member 'ABP_BtlStrategyInstruct_C::BtlGuiList2' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, BtlGuiList1) == 0x000378, "Member 'ABP_BtlStrategyInstruct_C::BtlGuiList1' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, BtlGuiList) == 0x000380, "Member 'ABP_BtlStrategyInstruct_C::BtlGuiList' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, BtlDataBase) == 0x000388, "Member 'ABP_BtlStrategyInstruct_C::BtlDataBase' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, BtlGuiDraw) == 0x000390, "Member 'ABP_BtlStrategyInstruct_C::BtlGuiDraw' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, AlreadyEscapeAnimation_AlreadyEscape_F994A1B04698C41041ADD890AA9FDE70) == 0x000398, "Member 'ABP_BtlStrategyInstruct_C::AlreadyEscapeAnimation_AlreadyEscape_F994A1B04698C41041ADD890AA9FDE70' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, AlreadyEscapeAnimation__Direction_F994A1B04698C41041ADD890AA9FDE70) == 0x00039C, "Member 'ABP_BtlStrategyInstruct_C::AlreadyEscapeAnimation__Direction_F994A1B04698C41041ADD890AA9FDE70' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, AlreadyEscapeAnimation) == 0x0003A0, "Member 'ABP_BtlStrategyInstruct_C::AlreadyEscapeAnimation' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List2Check2Animation_Scale_191B92D74A9E8024C2105F85F018EE9E) == 0x0003A8, "Member 'ABP_BtlStrategyInstruct_C::List2Check2Animation_Scale_191B92D74A9E8024C2105F85F018EE9E' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List2Check2Animation__Direction_191B92D74A9E8024C2105F85F018EE9E) == 0x0003AC, "Member 'ABP_BtlStrategyInstruct_C::List2Check2Animation__Direction_191B92D74A9E8024C2105F85F018EE9E' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List2Check2Animation) == 0x0003B0, "Member 'ABP_BtlStrategyInstruct_C::List2Check2Animation' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List2Animation_CircleOpen_30188D6344C2C6C2007865A986A6FE88) == 0x0003B8, "Member 'ABP_BtlStrategyInstruct_C::List2Animation_CircleOpen_30188D6344C2C6C2007865A986A6FE88' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List2Animation__Direction_30188D6344C2C6C2007865A986A6FE88) == 0x0003C4, "Member 'ABP_BtlStrategyInstruct_C::List2Animation__Direction_30188D6344C2C6C2007865A986A6FE88' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List2Animation) == 0x0003C8, "Member 'ABP_BtlStrategyInstruct_C::List2Animation' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List1Animation_List1CursorFadein_D8042E6848C957067D431995CEFFD5EC) == 0x0003D0, "Member 'ABP_BtlStrategyInstruct_C::List1Animation_List1CursorFadein_D8042E6848C957067D431995CEFFD5EC' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List1Animation_ListFadein_D8042E6848C957067D431995CEFFD5EC) == 0x0003D4, "Member 'ABP_BtlStrategyInstruct_C::List1Animation_ListFadein_D8042E6848C957067D431995CEFFD5EC' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List1Animation_TitleMoveRate_D8042E6848C957067D431995CEFFD5EC) == 0x0003D8, "Member 'ABP_BtlStrategyInstruct_C::List1Animation_TitleMoveRate_D8042E6848C957067D431995CEFFD5EC' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List1Animation_BaclCircleRate_D8042E6848C957067D431995CEFFD5EC) == 0x0003DC, "Member 'ABP_BtlStrategyInstruct_C::List1Animation_BaclCircleRate_D8042E6848C957067D431995CEFFD5EC' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List1Animation_BackPanelRate_D8042E6848C957067D431995CEFFD5EC) == 0x0003E0, "Member 'ABP_BtlStrategyInstruct_C::List1Animation_BackPanelRate_D8042E6848C957067D431995CEFFD5EC' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List1Animation_CursorRate_D8042E6848C957067D431995CEFFD5EC) == 0x0003E4, "Member 'ABP_BtlStrategyInstruct_C::List1Animation_CursorRate_D8042E6848C957067D431995CEFFD5EC' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List1Animation__Direction_D8042E6848C957067D431995CEFFD5EC) == 0x0003E8, "Member 'ABP_BtlStrategyInstruct_C::List1Animation__Direction_D8042E6848C957067D431995CEFFD5EC' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List1Animation) == 0x0003F0, "Member 'ABP_BtlStrategyInstruct_C::List1Animation' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, OutAnimation_illhouetteRate_DE8166754F1662BE4AF79F8C853961E7) == 0x0003F8, "Member 'ABP_BtlStrategyInstruct_C::OutAnimation_illhouetteRate_DE8166754F1662BE4AF79F8C853961E7' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, OutAnimation_PanelRate_DE8166754F1662BE4AF79F8C853961E7) == 0x0003FC, "Member 'ABP_BtlStrategyInstruct_C::OutAnimation_PanelRate_DE8166754F1662BE4AF79F8C853961E7' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, OutAnimation_OutTitleRate_DE8166754F1662BE4AF79F8C853961E7) == 0x000400, "Member 'ABP_BtlStrategyInstruct_C::OutAnimation_OutTitleRate_DE8166754F1662BE4AF79F8C853961E7' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, OutAnimation_CursorRate_DE8166754F1662BE4AF79F8C853961E7) == 0x000404, "Member 'ABP_BtlStrategyInstruct_C::OutAnimation_CursorRate_DE8166754F1662BE4AF79F8C853961E7' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, OutAnimation__Direction_DE8166754F1662BE4AF79F8C853961E7) == 0x000408, "Member 'ABP_BtlStrategyInstruct_C::OutAnimation__Direction_DE8166754F1662BE4AF79F8C853961E7' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, OutAnimation) == 0x000410, "Member 'ABP_BtlStrategyInstruct_C::OutAnimation' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, CursorLoop_CursorScale_BA31B6D541FCBC581AE4288A44B6933E) == 0x000418, "Member 'ABP_BtlStrategyInstruct_C::CursorLoop_CursorScale_BA31B6D541FCBC581AE4288A44B6933E' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, CursorLoop__Direction_BA31B6D541FCBC581AE4288A44B6933E) == 0x00041C, "Member 'ABP_BtlStrategyInstruct_C::CursorLoop__Direction_BA31B6D541FCBC581AE4288A44B6933E' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, CursorLoop) == 0x000420, "Member 'ABP_BtlStrategyInstruct_C::CursorLoop' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, CursorUpdate_CursorRate_DC80B6D542202BEECC9502BBF49BDDED) == 0x000428, "Member 'ABP_BtlStrategyInstruct_C::CursorUpdate_CursorRate_DC80B6D542202BEECC9502BBF49BDDED' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, CursorUpdate__Direction_DC80B6D542202BEECC9502BBF49BDDED) == 0x00042C, "Member 'ABP_BtlStrategyInstruct_C::CursorUpdate__Direction_DC80B6D542202BEECC9502BBF49BDDED' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, CursorUpdate) == 0x000430, "Member 'ABP_BtlStrategyInstruct_C::CursorUpdate' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, InAnimation_SillhouetteRate_5C7FC2A743E4B87EDE57AEAA8AF61EBA) == 0x000438, "Member 'ABP_BtlStrategyInstruct_C::InAnimation_SillhouetteRate_5C7FC2A743E4B87EDE57AEAA8AF61EBA' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, InAnimation_MainListRate_5C7FC2A743E4B87EDE57AEAA8AF61EBA) == 0x00043C, "Member 'ABP_BtlStrategyInstruct_C::InAnimation_MainListRate_5C7FC2A743E4B87EDE57AEAA8AF61EBA' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, InAnimation_AlreadyEscapeRate_5C7FC2A743E4B87EDE57AEAA8AF61EBA) == 0x000440, "Member 'ABP_BtlStrategyInstruct_C::InAnimation_AlreadyEscapeRate_5C7FC2A743E4B87EDE57AEAA8AF61EBA' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, InAnimation_TitleHelp_5C7FC2A743E4B87EDE57AEAA8AF61EBA) == 0x000444, "Member 'ABP_BtlStrategyInstruct_C::InAnimation_TitleHelp_5C7FC2A743E4B87EDE57AEAA8AF61EBA' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, InAnimation_CursorRate_5C7FC2A743E4B87EDE57AEAA8AF61EBA) == 0x000448, "Member 'ABP_BtlStrategyInstruct_C::InAnimation_CursorRate_5C7FC2A743E4B87EDE57AEAA8AF61EBA' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, InAnimation_TitleRate_5C7FC2A743E4B87EDE57AEAA8AF61EBA) == 0x00044C, "Member 'ABP_BtlStrategyInstruct_C::InAnimation_TitleRate_5C7FC2A743E4B87EDE57AEAA8AF61EBA' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, InAnimation_BackPanelRate_5C7FC2A743E4B87EDE57AEAA8AF61EBA) == 0x000450, "Member 'ABP_BtlStrategyInstruct_C::InAnimation_BackPanelRate_5C7FC2A743E4B87EDE57AEAA8AF61EBA' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, InAnimation__Direction_5C7FC2A743E4B87EDE57AEAA8AF61EBA) == 0x000454, "Member 'ABP_BtlStrategyInstruct_C::InAnimation__Direction_5C7FC2A743E4B87EDE57AEAA8AF61EBA' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, InAnimation) == 0x000458, "Member 'ABP_BtlStrategyInstruct_C::InAnimation' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, CursorIndex) == 0x000460, "Member 'ABP_BtlStrategyInstruct_C::CursorIndex' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, TopIndex) == 0x000470, "Member 'ABP_BtlStrategyInstruct_C::TopIndex' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, CurrentIndex) == 0x000480, "Member 'ABP_BtlStrategyInstruct_C::CurrentIndex' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, ForIndex) == 0x000490, "Member 'ABP_BtlStrategyInstruct_C::ForIndex' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, PlayerList) == 0x000498, "Member 'ABP_BtlStrategyInstruct_C::PlayerList' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, EnableStrategyChange) == 0x0004A8, "Member 'ABP_BtlStrategyInstruct_C::EnableStrategyChange' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, Lise1Enable) == 0x0004B0, "Member 'ABP_BtlStrategyInstruct_C::Lise1Enable' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, InputState) == 0x0004C0, "Member 'ABP_BtlStrategyInstruct_C::InputState' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, OperationNameList) == 0x0004C8, "Member 'ABP_BtlStrategyInstruct_C::OperationNameList' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, OffsetA) == 0x0004D8, "Member 'ABP_BtlStrategyInstruct_C::OffsetA' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, OffsetB) == 0x0004E0, "Member 'ABP_BtlStrategyInstruct_C::OffsetB' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, OffsetC) == 0x0004E8, "Member 'ABP_BtlStrategyInstruct_C::OffsetC' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, Back_Panel_Rate) == 0x0004F0, "Member 'ABP_BtlStrategyInstruct_C::Back_Panel_Rate' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, BackPanel) == 0x0004F8, "Member 'ABP_BtlStrategyInstruct_C::BackPanel' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, Title_Rate) == 0x000500, "Member 'ABP_BtlStrategyInstruct_C::Title_Rate' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, Title) == 0x000508, "Member 'ABP_BtlStrategyInstruct_C::Title' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, Cursor_Rate) == 0x000518, "Member 'ABP_BtlStrategyInstruct_C::Cursor_Rate' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, Cursor) == 0x000520, "Member 'ABP_BtlStrategyInstruct_C::Cursor' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, MainList) == 0x000530, "Member 'ABP_BtlStrategyInstruct_C::MainList' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, Title_Help) == 0x000540, "Member 'ABP_BtlStrategyInstruct_C::Title_Help' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, TitleHelp) == 0x000548, "Member 'ABP_BtlStrategyInstruct_C::TitleHelp' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, AlreadyEscape) == 0x000558, "Member 'ABP_BtlStrategyInstruct_C::AlreadyEscape' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, Already_Escape_Rate) == 0x000568, "Member 'ABP_BtlStrategyInstruct_C::Already_Escape_Rate' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, MainListPos) == 0x000570, "Member 'ABP_BtlStrategyInstruct_C::MainListPos' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, AlreadyEscapePos) == 0x000580, "Member 'ABP_BtlStrategyInstruct_C::AlreadyEscapePos' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, PrevMainCursor) == 0x000590, "Member 'ABP_BtlStrategyInstruct_C::PrevMainCursor' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, Cursor_Movement) == 0x000594, "Member 'ABP_BtlStrategyInstruct_C::Cursor_Movement' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, Cursor_Scale) == 0x000598, "Member 'ABP_BtlStrategyInstruct_C::Cursor_Scale' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, Main_List_Rate) == 0x00059C, "Member 'ABP_BtlStrategyInstruct_C::Main_List_Rate' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, OutCursorRate) == 0x0005A0, "Member 'ABP_BtlStrategyInstruct_C::OutCursorRate' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, Out_Title_Rate) == 0x0005A4, "Member 'ABP_BtlStrategyInstruct_C::Out_Title_Rate' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, OutPanel_Rate) == 0x0005A8, "Member 'ABP_BtlStrategyInstruct_C::OutPanel_Rate' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, Sillhouette) == 0x0005B0, "Member 'ABP_BtlStrategyInstruct_C::Sillhouette' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, Sillhouette_Rate) == 0x0005B8, "Member 'ABP_BtlStrategyInstruct_C::Sillhouette_Rate' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, OutTitleHelpRate) == 0x0005BC, "Member 'ABP_BtlStrategyInstruct_C::OutTitleHelpRate' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, OutBack_Panel_Rate) == 0x0005C0, "Member 'ABP_BtlStrategyInstruct_C::OutBack_Panel_Rate' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, OffsetA2) == 0x0005C4, "Member 'ABP_BtlStrategyInstruct_C::OffsetA2' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, BaclCircle) == 0x0005D0, "Member 'ABP_BtlStrategyInstruct_C::BaclCircle' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, Back_Circle_Rate) == 0x0005D8, "Member 'ABP_BtlStrategyInstruct_C::Back_Circle_Rate' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List1TitleRate) == 0x0005DC, "Member 'ABP_BtlStrategyInstruct_C::List1TitleRate' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, OffsetD) == 0x0005E0, "Member 'ABP_BtlStrategyInstruct_C::OffsetD' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, FullMenber) == 0x0005E8, "Member 'ABP_BtlStrategyInstruct_C::FullMenber' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List1Name) == 0x0005F0, "Member 'ABP_BtlStrategyInstruct_C::List1Name' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, BackStrategy) == 0x000600, "Member 'ABP_BtlStrategyInstruct_C::BackStrategy' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, Strategy) == 0x000610, "Member 'ABP_BtlStrategyInstruct_C::Strategy' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List1Pos) == 0x000620, "Member 'ABP_BtlStrategyInstruct_C::List1Pos' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List1PrevPos) == 0x000630, "Member 'ABP_BtlStrategyInstruct_C::List1PrevPos' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List1PrevPosBack) == 0x000638, "Member 'ABP_BtlStrategyInstruct_C::List1PrevPosBack' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List1PrevFrame) == 0x000640, "Member 'ABP_BtlStrategyInstruct_C::List1PrevFrame' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List1PrevFrameBack) == 0x000644, "Member 'ABP_BtlStrategyInstruct_C::List1PrevFrameBack' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List1CursorBack) == 0x000648, "Member 'ABP_BtlStrategyInstruct_C::List1CursorBack' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List1Cursor) == 0x000650, "Member 'ABP_BtlStrategyInstruct_C::List1Cursor' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List_FadeinRate) == 0x000658, "Member 'ABP_BtlStrategyInstruct_C::List_FadeinRate' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List_1Cursor_Fadein) == 0x00065C, "Member 'ABP_BtlStrategyInstruct_C::List_1Cursor_Fadein' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, OffsetC2) == 0x000660, "Member 'ABP_BtlStrategyInstruct_C::OffsetC2' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, Btl_Gui_Draw_1) == 0x000668, "Member 'ABP_BtlStrategyInstruct_C::Btl_Gui_Draw_1' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List2CircleBlack) == 0x000670, "Member 'ABP_BtlStrategyInstruct_C::List2CircleBlack' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List2Circle) == 0x000674, "Member 'ABP_BtlStrategyInstruct_C::List2Circle' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List2LircleBack) == 0x000678, "Member 'ABP_BtlStrategyInstruct_C::List2LircleBack' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List2CircleMask) == 0x000680, "Member 'ABP_BtlStrategyInstruct_C::List2CircleMask' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List2Pos) == 0x000688, "Member 'ABP_BtlStrategyInstruct_C::List2Pos' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List2Name) == 0x000698, "Member 'ABP_BtlStrategyInstruct_C::List2Name' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List2FullMenber) == 0x0006A0, "Member 'ABP_BtlStrategyInstruct_C::List2FullMenber' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List2CursorBack) == 0x0006A8, "Member 'ABP_BtlStrategyInstruct_C::List2CursorBack' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List2Cursor) == 0x0006B0, "Member 'ABP_BtlStrategyInstruct_C::List2Cursor' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List2PrevPos) == 0x0006B8, "Member 'ABP_BtlStrategyInstruct_C::List2PrevPos' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List2PrevPosBack) == 0x0006C0, "Member 'ABP_BtlStrategyInstruct_C::List2PrevPosBack' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List2PrevFrame) == 0x0006C8, "Member 'ABP_BtlStrategyInstruct_C::List2PrevFrame' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List2PrevFrameBack) == 0x0006CC, "Member 'ABP_BtlStrategyInstruct_C::List2PrevFrameBack' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List2Operation) == 0x0006D0, "Member 'ABP_BtlStrategyInstruct_C::List2Operation' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List2Check) == 0x0006E0, "Member 'ABP_BtlStrategyInstruct_C::List2Check' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, NumWork) == 0x0006E8, "Member 'ABP_BtlStrategyInstruct_C::NumWork' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, List2CheckScale) == 0x0006EC, "Member 'ABP_BtlStrategyInstruct_C::List2CheckScale' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, PermissionEscape) == 0x0006F0, "Member 'ABP_BtlStrategyInstruct_C::PermissionEscape' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, KeyBindCompleted) == 0x0006F1, "Member 'ABP_BtlStrategyInstruct_C::KeyBindCompleted' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, Caustics) == 0x0006F8, "Member 'ABP_BtlStrategyInstruct_C::Caustics' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, Out_Item) == 0x000700, "Member 'ABP_BtlStrategyInstruct_C::Out_Item' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, MouseCollisionList1) == 0x000708, "Member 'ABP_BtlStrategyInstruct_C::MouseCollisionList1' has a wrong offset!");
static_assert(offsetof(ABP_BtlStrategyInstruct_C, MouseCollisionList2) == 0x000718, "Member 'ABP_BtlStrategyInstruct_C::MouseCollisionList2' has a wrong offset!");

}

