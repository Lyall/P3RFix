#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_ModulerCharacterSet

#include "Basic.hpp"

#include "BPI_ModulerCharacterSet_classes.hpp"
#include "BPI_ModulerCharacterSet_parameters.hpp"


namespace SDK
{

// Function BPI_ModulerCharacterSet.BPI_ModulerCharacterSet_C.SetSinkingDistance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   SinkingDistance                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ModulerCharacterSet_C::SetSinkingDistance(float SinkingDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ModulerCharacterSet_C", "SetSinkingDistance");

	Params::BPI_ModulerCharacterSet_C_SetSinkingDistance Parms{};

	Parms.SinkingDistance = SinkingDistance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_ModulerCharacterSet.BPI_ModulerCharacterSet_C.UnlinkPhysics
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_ModulerCharacterSet_C::UnlinkPhysics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ModulerCharacterSet_C", "UnlinkPhysics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_ModulerCharacterSet.BPI_ModulerCharacterSet_C.LinkPhysics
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_ModulerCharacterSet_C::LinkPhysics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ModulerCharacterSet_C", "LinkPhysics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_ModulerCharacterSet.BPI_ModulerCharacterSet_C.GetWalkRunBlend
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   OutWalkRunBlend                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OutPreviousWalkRunBlend                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ModulerCharacterSet_C::GetWalkRunBlend(float* OutWalkRunBlend, float* OutPreviousWalkRunBlend)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ModulerCharacterSet_C", "GetWalkRunBlend");

	Params::BPI_ModulerCharacterSet_C_GetWalkRunBlend Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutWalkRunBlend != nullptr)
		*OutWalkRunBlend = Parms.OutWalkRunBlend;

	if (OutPreviousWalkRunBlend != nullptr)
		*OutPreviousWalkRunBlend = Parms.OutPreviousWalkRunBlend;
}


// Function BPI_ModulerCharacterSet.BPI_ModulerCharacterSet_C.GetLocomotionState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_LocomotionState                    OutLocomotionState                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ModulerCharacterSet_C::GetLocomotionState(Enum_LocomotionState* OutLocomotionState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ModulerCharacterSet_C", "GetLocomotionState");

	Params::BPI_ModulerCharacterSet_C_GetLocomotionState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutLocomotionState != nullptr)
		*OutLocomotionState = Parms.OutLocomotionState;
}


// Function BPI_ModulerCharacterSet.BPI_ModulerCharacterSet_C.Set No Blink
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ModulerCharacterSet_C::Set_No_Blink(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ModulerCharacterSet_C", "Set No Blink");

	Params::BPI_ModulerCharacterSet_C_Set_No_Blink Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_ModulerCharacterSet.BPI_ModulerCharacterSet_C.Set Saccade
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ModulerCharacterSet_C::Set_Saccade(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ModulerCharacterSet_C", "Set Saccade");

	Params::BPI_ModulerCharacterSet_C_Set_Saccade Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}

}

