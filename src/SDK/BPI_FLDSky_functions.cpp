#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_FLDSky

#include "Basic.hpp"

#include "BPI_FLDSky_classes.hpp"
#include "BPI_FLDSky_parameters.hpp"


namespace SDK
{

// Function BPI_FLDSky.BPI_FLDSky_C.GetDirectionalLightMoon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ULightComponent*                  LightComponent                                         (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_FLDSky_C::GetDirectionalLightMoon(class ULightComponent** LightComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_FLDSky_C", "GetDirectionalLightMoon");

	Params::BPI_FLDSky_C_GetDirectionalLightMoon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LightComponent != nullptr)
		*LightComponent = Parms.LightComponent;
}


// Function BPI_FLDSky.BPI_FLDSky_C.FLDSkyReset
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_FLDSky_C::FLDSkyReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_FLDSky_C", "FLDSkyReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_FLDSky.BPI_FLDSky_C.GetExposureCompensation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Exposure                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_FLDSky_C::GetExposureCompensation(float* Exposure)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_FLDSky_C", "GetExposureCompensation");

	Params::BPI_FLDSky_C_GetExposureCompensation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Exposure != nullptr)
		*Exposure = Parms.Exposure;
}


// Function BPI_FLDSky.BPI_FLDSky_C.SetExposureCompensation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Exposure                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_FLDSky_C::SetExposureCompensation(float Exposure)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_FLDSky_C", "SetExposureCompensation");

	Params::BPI_FLDSky_C_SetExposureCompensation Parms{};

	Parms.Exposure = Exposure;

	UObject::ProcessEvent(Func, &Parms);
}

}

