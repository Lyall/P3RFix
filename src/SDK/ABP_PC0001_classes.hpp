#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_PC0001

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ABP_CH_MeshBase_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_PC0001.ABP_PC0001_C
// 0x0070 (0xFCA0 - 0xFC30)
class UABP_PC0001_C final : public UABP_CH_MeshBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_ABP_PC0001_C;                       // 0xFC30(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          IsEventABP;                                        // 0xFC38(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor)
	bool                                          IsDungeonABP;                                      // 0xFC39(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Is_PlayingDefault;                                 // 0xFC3A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Is_PlayingArm_L;                                   // 0xFC3B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Is_PlayingBattle;                                  // 0xFC3C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FC3D[0x3];                                     // 0xFC3D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          SkeletalMesh;                                      // 0xFC40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceAttachPocket;                                 // 0xFC48(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FC49[0x7];                                     // 0xFC49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Montage_OutPocket;                                 // 0xFC50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Montage_InPocket;                                  // 0xFC58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OverrideForceAttachPocket;                         // 0xFC60(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FC61[0x7];                                     // 0xFC61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Anim_MoveToMain;                                   // 0xFC68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Anim_WalkInPocket;                                 // 0xFC70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Curve_Running;                                     // 0xFC78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_AttachedTravelBag;                              // 0xFC80(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NotUpdate_AttachPocket;                            // 0xFC81(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsTurned;                                          // 0xFC82(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FC83[0x1];                                     // 0xFC83(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AttachPocket_L_Alpha;                              // 0xFC84(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttachPocket_R_Alpha;                              // 0xFC88(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_PlayMoveToMain;                                 // 0xFC8C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FC8D[0x3];                                     // 0xFC8D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UAnimInstance>              ACL_AttachPocket;                                  // 0xFC90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Disable_ForceAttachPocket_InEventHaveBag;          // 0xFC98(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor)
	bool                                          Event_NoAttach_Pocket_L;                           // 0xFC99(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor)

public:
	void ExecuteUbergraph_ABP_PC0001(int32 EntryPoint);
	void BlueprintInitializeAnimation();
	void UnlinkPhysics();
	void LinkPhysics();
	void PlayMainToMove();
	void PlayMoveToMain();
	void AnimNotify_EnterMoving();
	void ResetStopAnimation();
	void LoadEnd_ABP();
	void BlueprintUpdateAnimation(float DeltaTimeX_0);
	void IsInPocketWalking(bool* OutIsInPocketWalking);
	bool Is_Walk_and_in_Pocket();
	void Disable_ForceAttachPocket();
	void Set_ForceAttachPocket();
	void Set_IsInPocket();
	void Set_MeandelingOffset();
	void Modify_LocomotionState();
	void Set_DisableUpperBodyLayer();
	void Set_NoCopyAttachShoulder();
	void Set_Not_Update_Enable_Attach_Pocket();
	void Set_AttachPocketAlpha();
	void Set_IsTurned();
	void Disable_FnAttachPocket();
	void Link_AttachPocket(bool IsLink);
	void Get_Is_Dungeon_And_Event(bool* Out_IsDungeon, bool* Out_IsEvent);
	void Is_EventPlayAndHaveBag(bool* Out_Result);
	void Get_ForceAttachPocket(bool* Out_ForceAttachPocket);
	void Get_IsAttachedBostonBag(bool* Out_IsAttachedBostonBag);
	void Get_NotUpdateAttachPocket(bool* Out_NotUpdateEnableAttachPocket);
	void Get_AttachPocketAlpha(float* Out_AttachPocket_L_Alpha, float* Out_AttachPocket_R_Alpha);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_PC0001_C">();
	}
	static class UABP_PC0001_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_PC0001_C>();
	}
};
static_assert(alignof(UABP_PC0001_C) == 0x000010, "Wrong alignment on UABP_PC0001_C");
static_assert(sizeof(UABP_PC0001_C) == 0x00FCA0, "Wrong size on UABP_PC0001_C");
static_assert(offsetof(UABP_PC0001_C, UberGraphFrame_ABP_PC0001_C) == 0x00FC30, "Member 'UABP_PC0001_C::UberGraphFrame_ABP_PC0001_C' has a wrong offset!");
static_assert(offsetof(UABP_PC0001_C, IsEventABP) == 0x00FC38, "Member 'UABP_PC0001_C::IsEventABP' has a wrong offset!");
static_assert(offsetof(UABP_PC0001_C, IsDungeonABP) == 0x00FC39, "Member 'UABP_PC0001_C::IsDungeonABP' has a wrong offset!");
static_assert(offsetof(UABP_PC0001_C, Is_PlayingDefault) == 0x00FC3A, "Member 'UABP_PC0001_C::Is_PlayingDefault' has a wrong offset!");
static_assert(offsetof(UABP_PC0001_C, Is_PlayingArm_L) == 0x00FC3B, "Member 'UABP_PC0001_C::Is_PlayingArm_L' has a wrong offset!");
static_assert(offsetof(UABP_PC0001_C, Is_PlayingBattle) == 0x00FC3C, "Member 'UABP_PC0001_C::Is_PlayingBattle' has a wrong offset!");
static_assert(offsetof(UABP_PC0001_C, SkeletalMesh) == 0x00FC40, "Member 'UABP_PC0001_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(UABP_PC0001_C, ForceAttachPocket) == 0x00FC48, "Member 'UABP_PC0001_C::ForceAttachPocket' has a wrong offset!");
static_assert(offsetof(UABP_PC0001_C, Montage_OutPocket) == 0x00FC50, "Member 'UABP_PC0001_C::Montage_OutPocket' has a wrong offset!");
static_assert(offsetof(UABP_PC0001_C, Montage_InPocket) == 0x00FC58, "Member 'UABP_PC0001_C::Montage_InPocket' has a wrong offset!");
static_assert(offsetof(UABP_PC0001_C, OverrideForceAttachPocket) == 0x00FC60, "Member 'UABP_PC0001_C::OverrideForceAttachPocket' has a wrong offset!");
static_assert(offsetof(UABP_PC0001_C, Anim_MoveToMain) == 0x00FC68, "Member 'UABP_PC0001_C::Anim_MoveToMain' has a wrong offset!");
static_assert(offsetof(UABP_PC0001_C, Anim_WalkInPocket) == 0x00FC70, "Member 'UABP_PC0001_C::Anim_WalkInPocket' has a wrong offset!");
static_assert(offsetof(UABP_PC0001_C, Curve_Running) == 0x00FC78, "Member 'UABP_PC0001_C::Curve_Running' has a wrong offset!");
static_assert(offsetof(UABP_PC0001_C, Is_AttachedTravelBag) == 0x00FC80, "Member 'UABP_PC0001_C::Is_AttachedTravelBag' has a wrong offset!");
static_assert(offsetof(UABP_PC0001_C, NotUpdate_AttachPocket) == 0x00FC81, "Member 'UABP_PC0001_C::NotUpdate_AttachPocket' has a wrong offset!");
static_assert(offsetof(UABP_PC0001_C, IsTurned) == 0x00FC82, "Member 'UABP_PC0001_C::IsTurned' has a wrong offset!");
static_assert(offsetof(UABP_PC0001_C, AttachPocket_L_Alpha) == 0x00FC84, "Member 'UABP_PC0001_C::AttachPocket_L_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_PC0001_C, AttachPocket_R_Alpha) == 0x00FC88, "Member 'UABP_PC0001_C::AttachPocket_R_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_PC0001_C, Is_PlayMoveToMain) == 0x00FC8C, "Member 'UABP_PC0001_C::Is_PlayMoveToMain' has a wrong offset!");
static_assert(offsetof(UABP_PC0001_C, ACL_AttachPocket) == 0x00FC90, "Member 'UABP_PC0001_C::ACL_AttachPocket' has a wrong offset!");
static_assert(offsetof(UABP_PC0001_C, Disable_ForceAttachPocket_InEventHaveBag) == 0x00FC98, "Member 'UABP_PC0001_C::Disable_ForceAttachPocket_InEventHaveBag' has a wrong offset!");
static_assert(offsetof(UABP_PC0001_C, Event_NoAttach_Pocket_L) == 0x00FC99, "Member 'UABP_PC0001_C::Event_NoAttach_Pocket_L' has a wrong offset!");

}

