#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FLDSky

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_FLDSky.BP_FLDSky_C.GetExposureCompensation
// 0x0018 (0x0018 - 0x0000)
struct BP_FLDSky_C_GetExposureCompensation final
{
public:
	float                                         Exposure;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLDSky_C_GetExposureCompensation) == 0x000004, "Wrong alignment on BP_FLDSky_C_GetExposureCompensation");
static_assert(sizeof(BP_FLDSky_C_GetExposureCompensation) == 0x000018, "Wrong size on BP_FLDSky_C_GetExposureCompensation");
static_assert(offsetof(BP_FLDSky_C_GetExposureCompensation, Exposure) == 0x000000, "Member 'BP_FLDSky_C_GetExposureCompensation::Exposure' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_GetExposureCompensation, Temp_bool_Variable) == 0x000004, "Member 'BP_FLDSky_C_GetExposureCompensation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_GetExposureCompensation, Temp_float_Variable) == 0x000008, "Member 'BP_FLDSky_C_GetExposureCompensation::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_GetExposureCompensation, Temp_float_Variable_1) == 0x00000C, "Member 'BP_FLDSky_C_GetExposureCompensation::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_GetExposureCompensation, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_FLDSky_C_GetExposureCompensation::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_GetExposureCompensation, K2Node_Select_Default) == 0x000014, "Member 'BP_FLDSky_C_GetExposureCompensation::K2Node_Select_Default' has a wrong offset!");

// Function BP_FLDSky.BP_FLDSky_C.GetDirectionalLightMoon
// 0x0008 (0x0008 - 0x0000)
struct BP_FLDSky_C_GetDirectionalLightMoon final
{
public:
	class ULightComponent*                        LightComponent;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLDSky_C_GetDirectionalLightMoon) == 0x000008, "Wrong alignment on BP_FLDSky_C_GetDirectionalLightMoon");
static_assert(sizeof(BP_FLDSky_C_GetDirectionalLightMoon) == 0x000008, "Wrong size on BP_FLDSky_C_GetDirectionalLightMoon");
static_assert(offsetof(BP_FLDSky_C_GetDirectionalLightMoon, LightComponent) == 0x000000, "Member 'BP_FLDSky_C_GetDirectionalLightMoon::LightComponent' has a wrong offset!");

// Function BP_FLDSky.BP_FLDSky_C.UpdateNowMoonAge
// 0x000C (0x000C - 0x0000)
struct BP_FLDSky_C_UpdateNowMoonAge final
{
public:
	int32                                         CallFunc_GetNowMoonAge_ReturnValue;                // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLDSky_C_UpdateNowMoonAge) == 0x000004, "Wrong alignment on BP_FLDSky_C_UpdateNowMoonAge");
static_assert(sizeof(BP_FLDSky_C_UpdateNowMoonAge) == 0x00000C, "Wrong size on BP_FLDSky_C_UpdateNowMoonAge");
static_assert(offsetof(BP_FLDSky_C_UpdateNowMoonAge, CallFunc_GetNowMoonAge_ReturnValue) == 0x000000, "Member 'BP_FLDSky_C_UpdateNowMoonAge::CallFunc_GetNowMoonAge_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_UpdateNowMoonAge, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_FLDSky_C_UpdateNowMoonAge::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_UpdateNowMoonAge, CallFunc_Percent_IntInt_ReturnValue) == 0x000008, "Member 'BP_FLDSky_C_UpdateNowMoonAge::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");

// Function BP_FLDSky.BP_FLDSky_C.MoonCloud
// 0x00A8 (0x00A8 - 0x0000)
struct BP_FLDSky_C_MoonCloud final
{
public:
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue;   // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_2;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_MapRangeUnclamped_ReturnValue;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_3;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLDSky_C_MoonCloud) == 0x000008, "Wrong alignment on BP_FLDSky_C_MoonCloud");
static_assert(sizeof(BP_FLDSky_C_MoonCloud) == 0x0000A8, "Wrong size on BP_FLDSky_C_MoonCloud");
static_assert(offsetof(BP_FLDSky_C_MoonCloud, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000000, "Member 'BP_FLDSky_C_MoonCloud::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_MoonCloud, CallFunc_GetClampedLinearColorValue_ReturnValue) == 0x000004, "Member 'BP_FLDSky_C_MoonCloud::CallFunc_GetClampedLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_MoonCloud, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000014, "Member 'BP_FLDSky_C_MoonCloud::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_MoonCloud, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000018, "Member 'BP_FLDSky_C_MoonCloud::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_MoonCloud, CallFunc_MapRangeClamped_ReturnValue) == 0x000020, "Member 'BP_FLDSky_C_MoonCloud::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_MoonCloud, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000024, "Member 'BP_FLDSky_C_MoonCloud::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_MoonCloud, CallFunc_GetFloatValue_ReturnValue) == 0x000028, "Member 'BP_FLDSky_C_MoonCloud::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_MoonCloud, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x00002C, "Member 'BP_FLDSky_C_MoonCloud::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_MoonCloud, CallFunc_GetFloatValue_ReturnValue_1) == 0x000030, "Member 'BP_FLDSky_C_MoonCloud::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_MoonCloud, CallFunc_GetFloatValue_ReturnValue_2) == 0x000034, "Member 'BP_FLDSky_C_MoonCloud::CallFunc_GetFloatValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_MoonCloud, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000038, "Member 'BP_FLDSky_C_MoonCloud::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_MoonCloud, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000040, "Member 'BP_FLDSky_C_MoonCloud::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_MoonCloud, CallFunc_MapRangeUnclamped_ReturnValue) == 0x00004C, "Member 'BP_FLDSky_C_MoonCloud::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_MoonCloud, CallFunc_BreakRotator_Roll) == 0x000050, "Member 'BP_FLDSky_C_MoonCloud::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_MoonCloud, CallFunc_BreakRotator_Pitch) == 0x000054, "Member 'BP_FLDSky_C_MoonCloud::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_MoonCloud, CallFunc_BreakRotator_Yaw) == 0x000058, "Member 'BP_FLDSky_C_MoonCloud::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_MoonCloud, CallFunc_MakeRotator_ReturnValue) == 0x00005C, "Member 'BP_FLDSky_C_MoonCloud::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_MoonCloud, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000068, "Member 'BP_FLDSky_C_MoonCloud::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_MoonCloud, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000074, "Member 'BP_FLDSky_C_MoonCloud::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_MoonCloud, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x000088, "Member 'BP_FLDSky_C_MoonCloud::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_MoonCloud, CallFunc_GetFloatValue_ReturnValue_3) == 0x000090, "Member 'BP_FLDSky_C_MoonCloud::CallFunc_GetFloatValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_MoonCloud, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000094, "Member 'BP_FLDSky_C_MoonCloud::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_MoonCloud, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000098, "Member 'BP_FLDSky_C_MoonCloud::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");

// Function BP_FLDSky.BP_FLDSky_C.FLD EN P
// 0x0080 (0x0080 - 0x0000)
struct BP_FLDSky_C_FLD_EN_P final
{
public:
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue;   // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_2;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_3;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue_1; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue_2; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue_3; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue_4; // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue_5; // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLDSky_C_FLD_EN_P) == 0x000004, "Wrong alignment on BP_FLDSky_C_FLD_EN_P");
static_assert(sizeof(BP_FLDSky_C_FLD_EN_P) == 0x000080, "Wrong size on BP_FLDSky_C_FLD_EN_P");
static_assert(offsetof(BP_FLDSky_C_FLD_EN_P, CallFunc_GetFloatValue_ReturnValue) == 0x000000, "Member 'BP_FLDSky_C_FLD_EN_P::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_FLD_EN_P, CallFunc_GetFloatValue_ReturnValue_1) == 0x000004, "Member 'BP_FLDSky_C_FLD_EN_P::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_FLD_EN_P, CallFunc_GetClampedLinearColorValue_ReturnValue) == 0x000008, "Member 'BP_FLDSky_C_FLD_EN_P::CallFunc_GetClampedLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_FLD_EN_P, CallFunc_GetFloatValue_ReturnValue_2) == 0x000018, "Member 'BP_FLDSky_C_FLD_EN_P::CallFunc_GetFloatValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_FLD_EN_P, CallFunc_GetFloatValue_ReturnValue_3) == 0x00001C, "Member 'BP_FLDSky_C_FLD_EN_P::CallFunc_GetFloatValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_FLD_EN_P, CallFunc_GetClampedLinearColorValue_ReturnValue_1) == 0x000020, "Member 'BP_FLDSky_C_FLD_EN_P::CallFunc_GetClampedLinearColorValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_FLD_EN_P, CallFunc_GetClampedLinearColorValue_ReturnValue_2) == 0x000030, "Member 'BP_FLDSky_C_FLD_EN_P::CallFunc_GetClampedLinearColorValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_FLD_EN_P, CallFunc_GetClampedLinearColorValue_ReturnValue_3) == 0x000040, "Member 'BP_FLDSky_C_FLD_EN_P::CallFunc_GetClampedLinearColorValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_FLD_EN_P, CallFunc_GetClampedLinearColorValue_ReturnValue_4) == 0x000050, "Member 'BP_FLDSky_C_FLD_EN_P::CallFunc_GetClampedLinearColorValue_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_FLD_EN_P, CallFunc_GetClampedLinearColorValue_ReturnValue_5) == 0x000060, "Member 'BP_FLDSky_C_FLD_EN_P::CallFunc_GetClampedLinearColorValue_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_FLD_EN_P, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000070, "Member 'BP_FLDSky_C_FLD_EN_P::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");

// Function BP_FLDSky.BP_FLDSky_C.RefreshMaterial
// 0x0308 (0x0308 - 0x0000)
struct BP_FLDSky_C_RefreshMaterial final
{
public:
	class UCurveVector*                           NewLocalVar_1;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeUnclamped_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult;       // 0x001C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue;   // 0x00A4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult_1;     // 0x00C4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue_1; // 0x014C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue_2; // 0x015C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult_2;     // 0x0178(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue_3; // 0x0200(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue_4; // 0x0214(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x3];                                      // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeUnclamped_ReturnValue_1;          // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x0250(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x025C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0274(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeUnclamped_ReturnValue_2;          // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0284(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue_5; // 0x0294(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue_6; // 0x02A4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x02BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x02CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DD[0x3];                                      // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_2;        // 0x02E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue_1;       // 0x02EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x02F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLDSky_C_RefreshMaterial) == 0x000008, "Wrong alignment on BP_FLDSky_C_RefreshMaterial");
static_assert(sizeof(BP_FLDSky_C_RefreshMaterial) == 0x000308, "Wrong size on BP_FLDSky_C_RefreshMaterial");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, NewLocalVar_1) == 0x000000, "Member 'BP_FLDSky_C_RefreshMaterial::NewLocalVar_1' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_MapRangeUnclamped_ReturnValue) == 0x00000C, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_MakeRotator_ReturnValue) == 0x000010, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_K2_AddLocalRotation_SweepHitResult) == 0x00001C, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_K2_AddLocalRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_GetClampedLinearColorValue_ReturnValue) == 0x0000A4, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_GetClampedLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0000B4, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_MakeRotator_ReturnValue_1) == 0x0000B8, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_K2_AddLocalRotation_SweepHitResult_1) == 0x0000C4, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_K2_AddLocalRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_GetClampedLinearColorValue_ReturnValue_1) == 0x00014C, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_GetClampedLinearColorValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_GetClampedLinearColorValue_ReturnValue_2) == 0x00015C, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_GetClampedLinearColorValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_MakeRotator_ReturnValue_2) == 0x00016C, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_K2_AddLocalRotation_SweepHitResult_2) == 0x000178, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_K2_AddLocalRotation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_GetClampedLinearColorValue_ReturnValue_3) == 0x000200, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_GetClampedLinearColorValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_Abs_ReturnValue) == 0x000210, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_GetClampedLinearColorValue_ReturnValue_4) == 0x000214, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_GetClampedLinearColorValue_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_Lerp_ReturnValue) == 0x000224, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_Less_FloatFloat_ReturnValue) == 0x000228, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_Abs_ReturnValue_1) == 0x00022C, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_SelectFloat_ReturnValue) == 0x000230, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_MapRangeUnclamped_ReturnValue_1) == 0x000234, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_MapRangeUnclamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000238, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_BreakRotator_Roll) == 0x000244, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_BreakRotator_Pitch) == 0x000248, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_BreakRotator_Yaw) == 0x00024C, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x000250, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_MakeRotator_ReturnValue_3) == 0x00025C, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_BreakRotator_Roll_1) == 0x000268, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_BreakRotator_Pitch_1) == 0x00026C, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_BreakRotator_Yaw_1) == 0x000270, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000274, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_MapRangeUnclamped_ReturnValue_2) == 0x000280, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_MapRangeUnclamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000284, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_GetClampedLinearColorValue_ReturnValue_5) == 0x000294, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_GetClampedLinearColorValue_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_GetClampedLinearColorValue_ReturnValue_6) == 0x0002A4, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_GetClampedLinearColorValue_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_Add_FloatFloat_ReturnValue) == 0x0002B4, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_FClamp_ReturnValue) == 0x0002B8, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_LinearColorLerp_ReturnValue) == 0x0002BC, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x0002CC, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_IsValid_ReturnValue) == 0x0002DC, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_K2_GetActorRotation_ReturnValue_2) == 0x0002E0, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_K2_GetActorRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_Conv_RotatorToVector_ReturnValue_1) == 0x0002EC, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_Conv_RotatorToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_RefreshMaterial, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x0002F8, "Member 'BP_FLDSky_C_RefreshMaterial::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");

// Function BP_FLDSky.BP_FLDSky_C.UpdateSunDirection
// 0x0098 (0x0098 - 0x0000)
struct BP_FLDSky_C_UpdateSunDirection final
{
public:
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeUnclamped_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue;   // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue_1; // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue_2; // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLDSky_C_UpdateSunDirection) == 0x000004, "Wrong alignment on BP_FLDSky_C_UpdateSunDirection");
static_assert(sizeof(BP_FLDSky_C_UpdateSunDirection) == 0x000098, "Wrong size on BP_FLDSky_C_UpdateSunDirection");
static_assert(offsetof(BP_FLDSky_C_UpdateSunDirection, CallFunc_Less_FloatFloat_ReturnValue) == 0x000000, "Member 'BP_FLDSky_C_UpdateSunDirection::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_UpdateSunDirection, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000004, "Member 'BP_FLDSky_C_UpdateSunDirection::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_UpdateSunDirection, CallFunc_Abs_ReturnValue) == 0x000010, "Member 'BP_FLDSky_C_UpdateSunDirection::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_UpdateSunDirection, CallFunc_BreakRotator_Roll) == 0x000014, "Member 'BP_FLDSky_C_UpdateSunDirection::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_UpdateSunDirection, CallFunc_BreakRotator_Pitch) == 0x000018, "Member 'BP_FLDSky_C_UpdateSunDirection::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_UpdateSunDirection, CallFunc_BreakRotator_Yaw) == 0x00001C, "Member 'BP_FLDSky_C_UpdateSunDirection::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_UpdateSunDirection, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'BP_FLDSky_C_UpdateSunDirection::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_UpdateSunDirection, CallFunc_MapRangeUnclamped_ReturnValue) == 0x000024, "Member 'BP_FLDSky_C_UpdateSunDirection::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_UpdateSunDirection, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x000028, "Member 'BP_FLDSky_C_UpdateSunDirection::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_UpdateSunDirection, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x000034, "Member 'BP_FLDSky_C_UpdateSunDirection::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_UpdateSunDirection, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000044, "Member 'BP_FLDSky_C_UpdateSunDirection::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_UpdateSunDirection, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000050, "Member 'BP_FLDSky_C_UpdateSunDirection::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_UpdateSunDirection, CallFunc_Abs_ReturnValue_1) == 0x000060, "Member 'BP_FLDSky_C_UpdateSunDirection::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_UpdateSunDirection, CallFunc_GetClampedLinearColorValue_ReturnValue) == 0x000064, "Member 'BP_FLDSky_C_UpdateSunDirection::CallFunc_GetClampedLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_UpdateSunDirection, CallFunc_Lerp_ReturnValue) == 0x000074, "Member 'BP_FLDSky_C_UpdateSunDirection::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_UpdateSunDirection, CallFunc_GetClampedLinearColorValue_ReturnValue_1) == 0x000078, "Member 'BP_FLDSky_C_UpdateSunDirection::CallFunc_GetClampedLinearColorValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_UpdateSunDirection, CallFunc_GetClampedLinearColorValue_ReturnValue_2) == 0x000088, "Member 'BP_FLDSky_C_UpdateSunDirection::CallFunc_GetClampedLinearColorValue_ReturnValue_2' has a wrong offset!");

// Function BP_FLDSky.BP_FLDSky_C.UserConstructionScript
// 0x0010 (0x0010 - 0x0000)
struct BP_FLDSky_C_UserConstructionScript final
{
public:
	class UPostProcessComponent*                  NewLocalVar_0;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLDSky_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_FLDSky_C_UserConstructionScript");
static_assert(sizeof(BP_FLDSky_C_UserConstructionScript) == 0x000010, "Wrong size on BP_FLDSky_C_UserConstructionScript");
static_assert(offsetof(BP_FLDSky_C_UserConstructionScript, NewLocalVar_0) == 0x000000, "Member 'BP_FLDSky_C_UserConstructionScript::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'BP_FLDSky_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function BP_FLDSky.BP_FLDSky_C.SetExposureCompensation
// 0x0004 (0x0004 - 0x0000)
struct BP_FLDSky_C_SetExposureCompensation final
{
public:
	float                                         Exposure;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLDSky_C_SetExposureCompensation) == 0x000004, "Wrong alignment on BP_FLDSky_C_SetExposureCompensation");
static_assert(sizeof(BP_FLDSky_C_SetExposureCompensation) == 0x000004, "Wrong size on BP_FLDSky_C_SetExposureCompensation");
static_assert(offsetof(BP_FLDSky_C_SetExposureCompensation, Exposure) == 0x000000, "Member 'BP_FLDSky_C_SetExposureCompensation::Exposure' has a wrong offset!");

// Function BP_FLDSky.BP_FLDSky_C.ExecuteUbergraph_BP_FLDSky
// 0x0008 (0x0008 - 0x0000)
struct BP_FLDSky_C_ExecuteUbergraph_BP_FLDSky final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Exposure;                             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLDSky_C_ExecuteUbergraph_BP_FLDSky) == 0x000004, "Wrong alignment on BP_FLDSky_C_ExecuteUbergraph_BP_FLDSky");
static_assert(sizeof(BP_FLDSky_C_ExecuteUbergraph_BP_FLDSky) == 0x000008, "Wrong size on BP_FLDSky_C_ExecuteUbergraph_BP_FLDSky");
static_assert(offsetof(BP_FLDSky_C_ExecuteUbergraph_BP_FLDSky, EntryPoint) == 0x000000, "Member 'BP_FLDSky_C_ExecuteUbergraph_BP_FLDSky::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FLDSky_C_ExecuteUbergraph_BP_FLDSky, K2Node_Event_Exposure) == 0x000004, "Member 'BP_FLDSky_C_ExecuteUbergraph_BP_FLDSky::K2Node_Event_Exposure' has a wrong offset!");

}

