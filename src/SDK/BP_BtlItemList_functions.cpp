#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtlItemList

#include "Basic.hpp"

#include "BP_BtlItemList_classes.hpp"
#include "BP_BtlItemList_parameters.hpp"


namespace SDK
{

// Function BP_BtlItemList.BP_BtlItemList_C.EndOutAnime__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_BtlItemList_C::EndOutAnime__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "EndOutAnime__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlItemList.BP_BtlItemList_C.ExecuteUbergraph_BP_BtlItemList
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlItemList_C::ExecuteUbergraph_BP_BtlItemList(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "ExecuteUbergraph_BP_BtlItemList");

	Params::BP_BtlItemList_C_ExecuteUbergraph_BP_BtlItemList Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlItemList.BP_BtlItemList_C.GuiActorStateExit
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlItemList_C::GuiActorStateExit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "GuiActorStateExit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlItemList.BP_BtlItemList_C.PlsyCursorSE
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlItemList_C::PlsyCursorSE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "PlsyCursorSE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlItemList.BP_BtlItemList_C.EntryChangeState
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlItemList_C::EntryChangeState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "EntryChangeState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlItemList.BP_BtlItemList_C.GuiActorUpdate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlItemList_C::GuiActorUpdate(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "GuiActorUpdate");

	Params::BP_BtlItemList_C_GuiActorUpdate Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlItemList.BP_BtlItemList_C.GuiActorBeginPlay
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlItemList_C::GuiActorBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "GuiActorBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlItemList.BP_BtlItemList_C.GuiActorStateInit
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlItemList_C::GuiActorStateInit(bool Flag, int32 Param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "GuiActorStateInit");

	Params::BP_BtlItemList_C_GuiActorStateInit Parms{};

	Parms.Flag = Flag;
	Parms.Param = Param;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlItemList.BP_BtlItemList_C.StateChangeTargetSelect
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlItemList_C::StateChangeTargetSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "StateChangeTargetSelect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlItemList.BP_BtlItemList_C.StateChangeTop
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlItemList_C::StateChangeTop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "StateChangeTop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlItemList.BP_BtlItemList_C.DebugOutAnime
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlItemList_C::DebugOutAnime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "DebugOutAnime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlItemList.BP_BtlItemList_C.DebugInAnime
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlItemList_C::DebugInAnime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "DebugInAnime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlItemList.BP_BtlItemList_C.CallCANCEL
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlItemList_C::CallCANCEL()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "CallCANCEL");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlItemList.BP_BtlItemList_C.CallOK
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlItemList_C::CallOK()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "CallOK");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlItemList.BP_BtlItemList_C.GuiActorUnbindAction
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlItemList_C::GuiActorUnbindAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "GuiActorUnbindAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlItemList.BP_BtlItemList_C.GuiActorBindAction
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlItemList_C::GuiActorBindAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "GuiActorBindAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlItemList.BP_BtlItemList_C.outAnime
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlItemList_C::OutAnime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "outAnime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlItemList.BP_BtlItemList_C.InAnime
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlItemList_C::InAnime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "InAnime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlItemList.BP_BtlItemList_C.ChangeCursor
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlItemList_C::ChangeCursor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "ChangeCursor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlItemList.BP_BtlItemList_C.OutAnimeTimeline__UpdateFunc
// (BlueprintEvent)

void ABP_BtlItemList_C::OutAnimeTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "OutAnimeTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlItemList.BP_BtlItemList_C.OutAnimeTimeline__FinishedFunc
// (BlueprintEvent)

void ABP_BtlItemList_C::OutAnimeTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "OutAnimeTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlItemList.BP_BtlItemList_C.InAnimeTimeline__UpdateFunc
// (BlueprintEvent)

void ABP_BtlItemList_C::InAnimeTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "InAnimeTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlItemList.BP_BtlItemList_C.InAnimeTimeline__FinishedFunc
// (BlueprintEvent)

void ABP_BtlItemList_C::InAnimeTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "InAnimeTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlItemList.BP_BtlItemList_C.CreateRectPrimitive
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector2D                        Size                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FColor                           Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FBtlGuiVertex>            NewParam                                               (Parm, OutParm)

void ABP_BtlItemList_C::CreateRectPrimitive(const struct FVector2D& Size, const struct FColor& Color, TArray<struct FBtlGuiVertex>* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "CreateRectPrimitive");

	Params::BP_BtlItemList_C_CreateRectPrimitive Parms{};

	Parms.Size = std::move(Size);
	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = std::move(Parms.NewParam);
}


// Function BP_BtlItemList.BP_BtlItemList_C.Draw Caustics
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_BtlItemList_C::Draw_Caustics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "Draw Caustics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlItemList.BP_BtlItemList_C.ClearAplha
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBtlGuiDrawComponent*             Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlItemList_C::ClearAplha(class UBtlGuiDrawComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "ClearAplha");

	Params::BP_BtlItemList_C_ClearAplha Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlItemList.BP_BtlItemList_C.Update ItemList
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_BtlItemList_C::Update_ItemList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "Update ItemList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlItemList.BP_BtlItemList_C.Update Item Num
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Num                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBtlGuiDrawObjectSprite*          Oneketa                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBtlGuiDrawObjectSprite*          TwoketaL                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBtlGuiDrawObjectSprite*          TwoketaR                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlItemList_C::Update_Item_Num(int32 Num, class UBtlGuiDrawObjectSprite* Oneketa, class UBtlGuiDrawObjectSprite* TwoketaL, class UBtlGuiDrawObjectSprite* TwoketaR)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "Update Item Num");

	Params::BP_BtlItemList_C_Update_Item_Num Parms{};

	Parms.Num = Num;
	Parms.Oneketa = Oneketa;
	Parms.TwoketaL = TwoketaL;
	Parms.TwoketaR = TwoketaR;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlItemList.BP_BtlItemList_C.Update Cursor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlItemList_C::Update_Cursor(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "Update Cursor");

	Params::BP_BtlItemList_C_Update_Cursor Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlItemList.BP_BtlItemList_C.Update Detail Text
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_BtlItemList_C::Update_Detail_Text(const class FString& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "Update Detail Text");

	Params::BP_BtlItemList_C_Update_Detail_Text Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlItemList.BP_BtlItemList_C.Update NoItem
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlItemList_C::Update_NoItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "Update NoItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlItemList.BP_BtlItemList_C.Update Scrolbar
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_BtlItemList_C::Update_Scrolbar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "Update Scrolbar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlItemList.BP_BtlItemList_C.Update BackGround
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlItemList_C::Update_BackGround()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "Update BackGround");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlItemList.BP_BtlItemList_C.Ancher Get Pos
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector2D                        ObjectPos                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        AncherPos                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Degree                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector2D ABP_BtlItemList_C::Ancher_Get_Pos(const struct FVector2D& ObjectPos, const struct FVector2D& AncherPos, float Degree)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "Ancher Get Pos");

	Params::BP_BtlItemList_C_Ancher_Get_Pos Parms{};

	Parms.ObjectPos = std::move(ObjectPos);
	Parms.AncherPos = std::move(AncherPos);
	Parms.Degree = Degree;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BtlItemList.BP_BtlItemList_C.Update
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlItemList_C::Update(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "Update");

	Params::BP_BtlItemList_C_Update Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlItemList.BP_BtlItemList_C.Calc Alpha
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Alpha                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

uint8 ABP_BtlItemList_C::Calc_Alpha(int32 Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "Calc Alpha");

	Params::BP_BtlItemList_C_Calc_Alpha Parms{};

	Parms.Alpha = Alpha;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BtlItemList.BP_BtlItemList_C.JumpCursorItemID
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlItemList_C::JumpCursorItemID(int32 ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "JumpCursorItemID");

	Params::BP_BtlItemList_C_JumpCursorItemID Parms{};

	Parms.ItemId = ItemId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlItemList.BP_BtlItemList_C.CalcAlphaColor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FColor                           In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FColor                           Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlItemList_C::CalcAlphaColor(const struct FColor& In, float Value, struct FColor* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "CalcAlphaColor");

	Params::BP_BtlItemList_C_CalcAlphaColor Parms{};

	Parms.In = std::move(In);
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = std::move(Parms.Out);
}


// Function BP_BtlItemList.BP_BtlItemList_C.CalcColorItemString
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsUsable                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsSelect                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FColor                           Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlItemList_C::CalcColorItemString(bool IsUsable, bool IsSelect, struct FColor* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "CalcColorItemString");

	Params::BP_BtlItemList_C_CalcColorItemString Parms{};

	Parms.IsUsable = IsUsable;
	Parms.IsSelect = IsSelect;

	UObject::ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = std::move(Parms.Out);
}


// Function BP_BtlItemList.BP_BtlItemList_C.CalcColorItemIcon
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsUsable                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsSelect                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FColor                           Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FBtlBlendState                   blendState                                             (Parm, OutParm, NoDestructor)

void ABP_BtlItemList_C::CalcColorItemIcon(bool IsUsable, bool IsSelect, struct FColor* Out, struct FBtlBlendState* blendState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "CalcColorItemIcon");

	Params::BP_BtlItemList_C_CalcColorItemIcon Parms{};

	Parms.IsUsable = IsUsable;
	Parms.IsSelect = IsSelect;

	UObject::ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = std::move(Parms.Out);

	if (blendState != nullptr)
		*blendState = std::move(Parms.blendState);
}


// Function BP_BtlItemList.BP_BtlItemList_C.CalcColorCostString
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsUsable                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsSelect                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FColor                           Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlItemList_C::CalcColorCostString(bool IsUsable, bool IsSelect, struct FColor* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "CalcColorCostString");

	Params::BP_BtlItemList_C_CalcColorCostString Parms{};

	Parms.IsUsable = IsUsable;
	Parms.IsSelect = IsSelect;

	UObject::ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = std::move(Parms.Out);
}


// Function BP_BtlItemList.BP_BtlItemList_C.RefrectLocalizeData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_BtlItemList_C::RefrectLocalizeData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlItemList_C", "RefrectLocalizeData");

	UObject::ProcessEvent(Func, nullptr);
}

}

