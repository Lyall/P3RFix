#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtlCameraCalc

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Xrd777_structs.hpp"
#include "FBtlCamCalcAddparam_structs.hpp"


namespace SDK::Params
{

// Function BP_BtlCameraCalc.BP_BtlCameraCalc_C.GetEnchanterCylinder
// 0x0038 (0x0038 - 0x0000)
struct BP_BtlCameraCalc_C_GetEnchanterCylinder final
{
public:
	bool                                          UseCommonCylinder;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ExceptPersona;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Bottom_Center;                                     // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Height;                                            // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMainCharacterCylinder_Bottom_Center;   // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMainCharacterCylinder_Radius;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMainCharacterCylinder_Height;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMainCharacterCylinder_Cylinder_Center; // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCameraCalc_C_GetEnchanterCylinder) == 0x000004, "Wrong alignment on BP_BtlCameraCalc_C_GetEnchanterCylinder");
static_assert(sizeof(BP_BtlCameraCalc_C_GetEnchanterCylinder) == 0x000038, "Wrong size on BP_BtlCameraCalc_C_GetEnchanterCylinder");
static_assert(offsetof(BP_BtlCameraCalc_C_GetEnchanterCylinder, UseCommonCylinder) == 0x000000, "Member 'BP_BtlCameraCalc_C_GetEnchanterCylinder::UseCommonCylinder' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetEnchanterCylinder, ExceptPersona) == 0x000001, "Member 'BP_BtlCameraCalc_C_GetEnchanterCylinder::ExceptPersona' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetEnchanterCylinder, Bottom_Center) == 0x000004, "Member 'BP_BtlCameraCalc_C_GetEnchanterCylinder::Bottom_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetEnchanterCylinder, Radius) == 0x000010, "Member 'BP_BtlCameraCalc_C_GetEnchanterCylinder::Radius' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetEnchanterCylinder, Height) == 0x000014, "Member 'BP_BtlCameraCalc_C_GetEnchanterCylinder::Height' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetEnchanterCylinder, CallFunc_GetMainCharacterCylinder_Bottom_Center) == 0x000018, "Member 'BP_BtlCameraCalc_C_GetEnchanterCylinder::CallFunc_GetMainCharacterCylinder_Bottom_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetEnchanterCylinder, CallFunc_GetMainCharacterCylinder_Radius) == 0x000024, "Member 'BP_BtlCameraCalc_C_GetEnchanterCylinder::CallFunc_GetMainCharacterCylinder_Radius' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetEnchanterCylinder, CallFunc_GetMainCharacterCylinder_Height) == 0x000028, "Member 'BP_BtlCameraCalc_C_GetEnchanterCylinder::CallFunc_GetMainCharacterCylinder_Height' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetEnchanterCylinder, CallFunc_GetMainCharacterCylinder_Cylinder_Center) == 0x00002C, "Member 'BP_BtlCameraCalc_C_GetEnchanterCylinder::CallFunc_GetMainCharacterCylinder_Cylinder_Center' has a wrong offset!");

// Function BP_BtlCameraCalc.BP_BtlCameraCalc_C.GetTargetsCylinder
// 0x0038 (0x0038 - 0x0000)
struct BP_BtlCameraCalc_C_GetTargetsCylinder final
{
public:
	bool                                          UseCommonCylinder;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Bottom_Center;                                     // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Height;                                            // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetsCylinder_Bottom_Center;         // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTargetsCylinder_Radius;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTargetsCylinder_Height;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetsCylinder_Cylinder_Center;       // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCameraCalc_C_GetTargetsCylinder) == 0x000004, "Wrong alignment on BP_BtlCameraCalc_C_GetTargetsCylinder");
static_assert(sizeof(BP_BtlCameraCalc_C_GetTargetsCylinder) == 0x000038, "Wrong size on BP_BtlCameraCalc_C_GetTargetsCylinder");
static_assert(offsetof(BP_BtlCameraCalc_C_GetTargetsCylinder, UseCommonCylinder) == 0x000000, "Member 'BP_BtlCameraCalc_C_GetTargetsCylinder::UseCommonCylinder' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetTargetsCylinder, Bottom_Center) == 0x000004, "Member 'BP_BtlCameraCalc_C_GetTargetsCylinder::Bottom_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetTargetsCylinder, Radius) == 0x000010, "Member 'BP_BtlCameraCalc_C_GetTargetsCylinder::Radius' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetTargetsCylinder, Height) == 0x000014, "Member 'BP_BtlCameraCalc_C_GetTargetsCylinder::Height' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetTargetsCylinder, CallFunc_GetTargetsCylinder_Bottom_Center) == 0x000018, "Member 'BP_BtlCameraCalc_C_GetTargetsCylinder::CallFunc_GetTargetsCylinder_Bottom_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetTargetsCylinder, CallFunc_GetTargetsCylinder_Radius) == 0x000024, "Member 'BP_BtlCameraCalc_C_GetTargetsCylinder::CallFunc_GetTargetsCylinder_Radius' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetTargetsCylinder, CallFunc_GetTargetsCylinder_Height) == 0x000028, "Member 'BP_BtlCameraCalc_C_GetTargetsCylinder::CallFunc_GetTargetsCylinder_Height' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetTargetsCylinder, CallFunc_GetTargetsCylinder_Cylinder_Center) == 0x00002C, "Member 'BP_BtlCameraCalc_C_GetTargetsCylinder::CallFunc_GetTargetsCylinder_Cylinder_Center' has a wrong offset!");

// Function BP_BtlCameraCalc.BP_BtlCameraCalc_C.CalcCylinderCamPos
// 0x0170 (0x0170 - 0x0000)
struct BP_BtlCameraCalc_C_CalcCylinderCamPos final
{
public:
	struct FBtlCalcCameraPosParam                 CalcParam;                                         // 0x0000(0x0080)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FFBtlCamCalcAddParam                   AddParam;                                          // 0x0080(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0084(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Work;                                              // 0x0090(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetFieldCylinder_Bottom_Center;           // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFieldCylinder_Radius;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFieldCylinder_Height;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEnchanterRotate_Z__Yaw_;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Calc_Direct_Rotate;                       // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcCylinderLocation_Location;            // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetAllCylinder_Bottom_Center;             // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAllCylinder_Radius;                    // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAllCylinder_Height;                    // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetTargetsCylinder_Bottom_Center;         // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTargetsCylinder_Radius;                // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTargetsCylinder_Height;                // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEnchanterCylinder_Bottom_Center;       // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEnchanterCylinder_Radius;              // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEnchanterCylinder_Height;              // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEnchanterRotate_Z__Yaw__1;             // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTargetsRotate_Z__Yaw_;                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Calc_Direct_Rotate_1;                     // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Calc_Direct_Rotate_2;                     // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcCylinderLocation_Location_1;          // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcCylinderLocation_Location_2;          // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEnchanterRotate_Z__Yaw__2;             // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Calc_Direct_Rotate_3;                     // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcCylinderLocation_Location_3;          // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCameraCalc_C_CalcCylinderCamPos) == 0x000010, "Wrong alignment on BP_BtlCameraCalc_C_CalcCylinderCamPos");
static_assert(sizeof(BP_BtlCameraCalc_C_CalcCylinderCamPos) == 0x000170, "Wrong size on BP_BtlCameraCalc_C_CalcCylinderCamPos");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderCamPos, CalcParam) == 0x000000, "Member 'BP_BtlCameraCalc_C_CalcCylinderCamPos::CalcParam' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderCamPos, AddParam) == 0x000080, "Member 'BP_BtlCameraCalc_C_CalcCylinderCamPos::AddParam' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderCamPos, Location) == 0x000084, "Member 'BP_BtlCameraCalc_C_CalcCylinderCamPos::Location' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderCamPos, Work) == 0x000090, "Member 'BP_BtlCameraCalc_C_CalcCylinderCamPos::Work' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderCamPos, CallFunc_GetFieldCylinder_Bottom_Center) == 0x00009C, "Member 'BP_BtlCameraCalc_C_CalcCylinderCamPos::CallFunc_GetFieldCylinder_Bottom_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderCamPos, CallFunc_GetFieldCylinder_Radius) == 0x0000A8, "Member 'BP_BtlCameraCalc_C_CalcCylinderCamPos::CallFunc_GetFieldCylinder_Radius' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderCamPos, CallFunc_GetFieldCylinder_Height) == 0x0000AC, "Member 'BP_BtlCameraCalc_C_CalcCylinderCamPos::CallFunc_GetFieldCylinder_Height' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderCamPos, CallFunc_GetEnchanterRotate_Z__Yaw_) == 0x0000B0, "Member 'BP_BtlCameraCalc_C_CalcCylinderCamPos::CallFunc_GetEnchanterRotate_Z__Yaw_' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderCamPos, CallFunc_BreakTransform_Location) == 0x0000B4, "Member 'BP_BtlCameraCalc_C_CalcCylinderCamPos::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderCamPos, CallFunc_BreakTransform_Rotation) == 0x0000C0, "Member 'BP_BtlCameraCalc_C_CalcCylinderCamPos::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderCamPos, CallFunc_BreakTransform_Scale) == 0x0000CC, "Member 'BP_BtlCameraCalc_C_CalcCylinderCamPos::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderCamPos, CallFunc_Calc_Direct_Rotate) == 0x0000D8, "Member 'BP_BtlCameraCalc_C_CalcCylinderCamPos::CallFunc_Calc_Direct_Rotate' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderCamPos, CallFunc_CalcCylinderLocation_Location) == 0x0000DC, "Member 'BP_BtlCameraCalc_C_CalcCylinderCamPos::CallFunc_CalcCylinderLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderCamPos, CallFunc_BooleanOR_ReturnValue) == 0x0000E8, "Member 'BP_BtlCameraCalc_C_CalcCylinderCamPos::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderCamPos, CallFunc_GetAllCylinder_Bottom_Center) == 0x0000EC, "Member 'BP_BtlCameraCalc_C_CalcCylinderCamPos::CallFunc_GetAllCylinder_Bottom_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderCamPos, CallFunc_GetAllCylinder_Radius) == 0x0000F8, "Member 'BP_BtlCameraCalc_C_CalcCylinderCamPos::CallFunc_GetAllCylinder_Radius' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderCamPos, CallFunc_GetAllCylinder_Height) == 0x0000FC, "Member 'BP_BtlCameraCalc_C_CalcCylinderCamPos::CallFunc_GetAllCylinder_Height' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderCamPos, CallFunc_BooleanOR_ReturnValue_1) == 0x000100, "Member 'BP_BtlCameraCalc_C_CalcCylinderCamPos::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderCamPos, CallFunc_GetTargetsCylinder_Bottom_Center) == 0x000104, "Member 'BP_BtlCameraCalc_C_CalcCylinderCamPos::CallFunc_GetTargetsCylinder_Bottom_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderCamPos, CallFunc_GetTargetsCylinder_Radius) == 0x000110, "Member 'BP_BtlCameraCalc_C_CalcCylinderCamPos::CallFunc_GetTargetsCylinder_Radius' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderCamPos, CallFunc_GetTargetsCylinder_Height) == 0x000114, "Member 'BP_BtlCameraCalc_C_CalcCylinderCamPos::CallFunc_GetTargetsCylinder_Height' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderCamPos, CallFunc_GetEnchanterCylinder_Bottom_Center) == 0x000118, "Member 'BP_BtlCameraCalc_C_CalcCylinderCamPos::CallFunc_GetEnchanterCylinder_Bottom_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderCamPos, CallFunc_GetEnchanterCylinder_Radius) == 0x000124, "Member 'BP_BtlCameraCalc_C_CalcCylinderCamPos::CallFunc_GetEnchanterCylinder_Radius' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderCamPos, CallFunc_GetEnchanterCylinder_Height) == 0x000128, "Member 'BP_BtlCameraCalc_C_CalcCylinderCamPos::CallFunc_GetEnchanterCylinder_Height' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderCamPos, K2Node_SwitchEnum_CmpSuccess) == 0x00012C, "Member 'BP_BtlCameraCalc_C_CalcCylinderCamPos::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderCamPos, CallFunc_GetEnchanterRotate_Z__Yaw__1) == 0x000130, "Member 'BP_BtlCameraCalc_C_CalcCylinderCamPos::CallFunc_GetEnchanterRotate_Z__Yaw__1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderCamPos, CallFunc_GetTargetsRotate_Z__Yaw_) == 0x000134, "Member 'BP_BtlCameraCalc_C_CalcCylinderCamPos::CallFunc_GetTargetsRotate_Z__Yaw_' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderCamPos, CallFunc_Calc_Direct_Rotate_1) == 0x000138, "Member 'BP_BtlCameraCalc_C_CalcCylinderCamPos::CallFunc_Calc_Direct_Rotate_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderCamPos, CallFunc_Calc_Direct_Rotate_2) == 0x00013C, "Member 'BP_BtlCameraCalc_C_CalcCylinderCamPos::CallFunc_Calc_Direct_Rotate_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderCamPos, CallFunc_CalcCylinderLocation_Location_1) == 0x000140, "Member 'BP_BtlCameraCalc_C_CalcCylinderCamPos::CallFunc_CalcCylinderLocation_Location_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderCamPos, CallFunc_CalcCylinderLocation_Location_2) == 0x00014C, "Member 'BP_BtlCameraCalc_C_CalcCylinderCamPos::CallFunc_CalcCylinderLocation_Location_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderCamPos, CallFunc_GetEnchanterRotate_Z__Yaw__2) == 0x000158, "Member 'BP_BtlCameraCalc_C_CalcCylinderCamPos::CallFunc_GetEnchanterRotate_Z__Yaw__2' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderCamPos, CallFunc_Calc_Direct_Rotate_3) == 0x00015C, "Member 'BP_BtlCameraCalc_C_CalcCylinderCamPos::CallFunc_Calc_Direct_Rotate_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderCamPos, CallFunc_CalcCylinderLocation_Location_3) == 0x000160, "Member 'BP_BtlCameraCalc_C_CalcCylinderCamPos::CallFunc_CalcCylinderLocation_Location_3' has a wrong offset!");

// Function BP_BtlCameraCalc.BP_BtlCameraCalc_C.CalcCylinderLocation
// 0x00EC (0x00EC - 0x0000)
struct BP_BtlCameraCalc_C_CalcCylinderLocation final
{
public:
	struct FVector                                BottomCenter;                                      // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Height;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CylinderRotate;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Degree;                                            // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RadiusRatio;                                       // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RadiusAdd;                                         // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RadiusAddHeightRatio;                              // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HeightRatio;                                       // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HeightBlendToDefault;                              // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HeightAddRadiusRatio;                              // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HeightDefault;                                     // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0038(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DefaultVec;                                        // 0x0044(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HeightVec;                                         // 0x0050(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Work;                                              // 0x005C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VectorAnim_vec;                           // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCameraCalc_C_CalcCylinderLocation) == 0x000004, "Wrong alignment on BP_BtlCameraCalc_C_CalcCylinderLocation");
static_assert(sizeof(BP_BtlCameraCalc_C_CalcCylinderLocation) == 0x0000EC, "Wrong size on BP_BtlCameraCalc_C_CalcCylinderLocation");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderLocation, BottomCenter) == 0x000000, "Member 'BP_BtlCameraCalc_C_CalcCylinderLocation::BottomCenter' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderLocation, Radius) == 0x00000C, "Member 'BP_BtlCameraCalc_C_CalcCylinderLocation::Radius' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderLocation, Height) == 0x000010, "Member 'BP_BtlCameraCalc_C_CalcCylinderLocation::Height' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderLocation, CylinderRotate) == 0x000014, "Member 'BP_BtlCameraCalc_C_CalcCylinderLocation::CylinderRotate' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderLocation, Degree) == 0x000018, "Member 'BP_BtlCameraCalc_C_CalcCylinderLocation::Degree' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderLocation, RadiusRatio) == 0x00001C, "Member 'BP_BtlCameraCalc_C_CalcCylinderLocation::RadiusRatio' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderLocation, RadiusAdd) == 0x000020, "Member 'BP_BtlCameraCalc_C_CalcCylinderLocation::RadiusAdd' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderLocation, RadiusAddHeightRatio) == 0x000024, "Member 'BP_BtlCameraCalc_C_CalcCylinderLocation::RadiusAddHeightRatio' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderLocation, HeightRatio) == 0x000028, "Member 'BP_BtlCameraCalc_C_CalcCylinderLocation::HeightRatio' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderLocation, HeightBlendToDefault) == 0x00002C, "Member 'BP_BtlCameraCalc_C_CalcCylinderLocation::HeightBlendToDefault' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderLocation, HeightAddRadiusRatio) == 0x000030, "Member 'BP_BtlCameraCalc_C_CalcCylinderLocation::HeightAddRadiusRatio' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderLocation, HeightDefault) == 0x000034, "Member 'BP_BtlCameraCalc_C_CalcCylinderLocation::HeightDefault' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderLocation, Location) == 0x000038, "Member 'BP_BtlCameraCalc_C_CalcCylinderLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderLocation, DefaultVec) == 0x000044, "Member 'BP_BtlCameraCalc_C_CalcCylinderLocation::DefaultVec' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderLocation, HeightVec) == 0x000050, "Member 'BP_BtlCameraCalc_C_CalcCylinderLocation::HeightVec' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderLocation, Work) == 0x00005C, "Member 'BP_BtlCameraCalc_C_CalcCylinderLocation::Work' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderLocation, CallFunc_MakeVector_ReturnValue) == 0x000068, "Member 'BP_BtlCameraCalc_C_CalcCylinderLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderLocation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000074, "Member 'BP_BtlCameraCalc_C_CalcCylinderLocation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderLocation, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000078, "Member 'BP_BtlCameraCalc_C_CalcCylinderLocation::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderLocation, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00007C, "Member 'BP_BtlCameraCalc_C_CalcCylinderLocation::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderLocation, CallFunc_Add_FloatFloat_ReturnValue) == 0x000080, "Member 'BP_BtlCameraCalc_C_CalcCylinderLocation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderLocation, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000084, "Member 'BP_BtlCameraCalc_C_CalcCylinderLocation::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderLocation, CallFunc_MakeVector_ReturnValue_1) == 0x000088, "Member 'BP_BtlCameraCalc_C_CalcCylinderLocation::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderLocation, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000094, "Member 'BP_BtlCameraCalc_C_CalcCylinderLocation::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderLocation, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000098, "Member 'BP_BtlCameraCalc_C_CalcCylinderLocation::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderLocation, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x00009C, "Member 'BP_BtlCameraCalc_C_CalcCylinderLocation::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderLocation, CallFunc_MakeVector_ReturnValue_2) == 0x0000A0, "Member 'BP_BtlCameraCalc_C_CalcCylinderLocation::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderLocation, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x0000AC, "Member 'BP_BtlCameraCalc_C_CalcCylinderLocation::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderLocation, CallFunc_MakeRotator_ReturnValue) == 0x0000B0, "Member 'BP_BtlCameraCalc_C_CalcCylinderLocation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderLocation, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0000BC, "Member 'BP_BtlCameraCalc_C_CalcCylinderLocation::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderLocation, CallFunc_VectorAnim_vec) == 0x0000C8, "Member 'BP_BtlCameraCalc_C_CalcCylinderLocation::CallFunc_VectorAnim_vec' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x0000D4, "Member 'BP_BtlCameraCalc_C_CalcCylinderLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderLocation, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000E0, "Member 'BP_BtlCameraCalc_C_CalcCylinderLocation::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");

// Function BP_BtlCameraCalc.BP_BtlCameraCalc_C.CalcCylinderRotation
// 0x0060 (0x0060 - 0x0000)
struct BP_BtlCameraCalc_C_CalcCylinderRotation final
{
public:
	EBtlCalcCameraCylinderType                    CylinderType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBtlCalcCameraCylinderType                    TargetType;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Work;                                              // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CallFunc_GetTargets_ReturnValue;                   // 0x0010(0x0010)(ReferenceParm)
	class ABtlActor*                              CallFunc_GetMainCharacter_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCameraCalc_C_CalcCylinderRotation) == 0x000008, "Wrong alignment on BP_BtlCameraCalc_C_CalcCylinderRotation");
static_assert(sizeof(BP_BtlCameraCalc_C_CalcCylinderRotation) == 0x000060, "Wrong size on BP_BtlCameraCalc_C_CalcCylinderRotation");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderRotation, CylinderType) == 0x000000, "Member 'BP_BtlCameraCalc_C_CalcCylinderRotation::CylinderType' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderRotation, TargetType) == 0x000001, "Member 'BP_BtlCameraCalc_C_CalcCylinderRotation::TargetType' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderRotation, Work) == 0x000004, "Member 'BP_BtlCameraCalc_C_CalcCylinderRotation::Work' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderRotation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000008, "Member 'BP_BtlCameraCalc_C_CalcCylinderRotation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderRotation, K2Node_SwitchEnum_CmpSuccess) == 0x000009, "Member 'BP_BtlCameraCalc_C_CalcCylinderRotation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderRotation, CallFunc_GetTargets_ReturnValue) == 0x000010, "Member 'BP_BtlCameraCalc_C_CalcCylinderRotation::CallFunc_GetTargets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderRotation, CallFunc_GetMainCharacter_ReturnValue) == 0x000020, "Member 'BP_BtlCameraCalc_C_CalcCylinderRotation::CallFunc_GetMainCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderRotation, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_BtlCameraCalc_C_CalcCylinderRotation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderRotation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000030, "Member 'BP_BtlCameraCalc_C_CalcCylinderRotation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderRotation, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x00003C, "Member 'BP_BtlCameraCalc_C_CalcCylinderRotation::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderRotation, CallFunc_BreakRotator_Roll) == 0x000048, "Member 'BP_BtlCameraCalc_C_CalcCylinderRotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderRotation, CallFunc_BreakRotator_Pitch) == 0x00004C, "Member 'BP_BtlCameraCalc_C_CalcCylinderRotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderRotation, CallFunc_BreakRotator_Yaw) == 0x000050, "Member 'BP_BtlCameraCalc_C_CalcCylinderRotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderRotation, CallFunc_BreakRotator_Roll_1) == 0x000054, "Member 'BP_BtlCameraCalc_C_CalcCylinderRotation::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderRotation, CallFunc_BreakRotator_Pitch_1) == 0x000058, "Member 'BP_BtlCameraCalc_C_CalcCylinderRotation::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCylinderRotation, CallFunc_BreakRotator_Yaw_1) == 0x00005C, "Member 'BP_BtlCameraCalc_C_CalcCylinderRotation::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");

// Function BP_BtlCameraCalc.BP_BtlCameraCalc_C.GetEnchanterRotate
// 0x0028 (0x0028 - 0x0000)
struct BP_BtlCameraCalc_C_GetEnchanterRotate final
{
public:
	float                                         Z__Yaw_;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_GetMainCharacter_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCameraCalc_C_GetEnchanterRotate) == 0x000008, "Wrong alignment on BP_BtlCameraCalc_C_GetEnchanterRotate");
static_assert(sizeof(BP_BtlCameraCalc_C_GetEnchanterRotate) == 0x000028, "Wrong size on BP_BtlCameraCalc_C_GetEnchanterRotate");
static_assert(offsetof(BP_BtlCameraCalc_C_GetEnchanterRotate, Z__Yaw_) == 0x000000, "Member 'BP_BtlCameraCalc_C_GetEnchanterRotate::Z__Yaw_' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetEnchanterRotate, CallFunc_GetMainCharacter_ReturnValue) == 0x000008, "Member 'BP_BtlCameraCalc_C_GetEnchanterRotate::CallFunc_GetMainCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetEnchanterRotate, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000010, "Member 'BP_BtlCameraCalc_C_GetEnchanterRotate::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetEnchanterRotate, CallFunc_BreakRotator_Roll) == 0x00001C, "Member 'BP_BtlCameraCalc_C_GetEnchanterRotate::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetEnchanterRotate, CallFunc_BreakRotator_Pitch) == 0x000020, "Member 'BP_BtlCameraCalc_C_GetEnchanterRotate::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetEnchanterRotate, CallFunc_BreakRotator_Yaw) == 0x000024, "Member 'BP_BtlCameraCalc_C_GetEnchanterRotate::CallFunc_BreakRotator_Yaw' has a wrong offset!");

// Function BP_BtlCameraCalc.BP_BtlCameraCalc_C.GetAllCylinder
// 0x0038 (0x0038 - 0x0000)
struct BP_BtlCameraCalc_C_GetAllCylinder final
{
public:
	bool                                          UseCommonCylinder;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ExceptPersonaCylinder;                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Bottom_Center;                                     // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Height;                                            // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCombineCylinder_Bottom_Center;         // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCombineCylinder_Radius;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCombineCylinder_Height;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCombineCylinder_Cylinder_Center;       // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCameraCalc_C_GetAllCylinder) == 0x000004, "Wrong alignment on BP_BtlCameraCalc_C_GetAllCylinder");
static_assert(sizeof(BP_BtlCameraCalc_C_GetAllCylinder) == 0x000038, "Wrong size on BP_BtlCameraCalc_C_GetAllCylinder");
static_assert(offsetof(BP_BtlCameraCalc_C_GetAllCylinder, UseCommonCylinder) == 0x000000, "Member 'BP_BtlCameraCalc_C_GetAllCylinder::UseCommonCylinder' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetAllCylinder, ExceptPersonaCylinder) == 0x000001, "Member 'BP_BtlCameraCalc_C_GetAllCylinder::ExceptPersonaCylinder' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetAllCylinder, Bottom_Center) == 0x000004, "Member 'BP_BtlCameraCalc_C_GetAllCylinder::Bottom_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetAllCylinder, Radius) == 0x000010, "Member 'BP_BtlCameraCalc_C_GetAllCylinder::Radius' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetAllCylinder, Height) == 0x000014, "Member 'BP_BtlCameraCalc_C_GetAllCylinder::Height' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetAllCylinder, CallFunc_GetCombineCylinder_Bottom_Center) == 0x000018, "Member 'BP_BtlCameraCalc_C_GetAllCylinder::CallFunc_GetCombineCylinder_Bottom_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetAllCylinder, CallFunc_GetCombineCylinder_Radius) == 0x000024, "Member 'BP_BtlCameraCalc_C_GetAllCylinder::CallFunc_GetCombineCylinder_Radius' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetAllCylinder, CallFunc_GetCombineCylinder_Height) == 0x000028, "Member 'BP_BtlCameraCalc_C_GetAllCylinder::CallFunc_GetCombineCylinder_Height' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetAllCylinder, CallFunc_GetCombineCylinder_Cylinder_Center) == 0x00002C, "Member 'BP_BtlCameraCalc_C_GetAllCylinder::CallFunc_GetCombineCylinder_Cylinder_Center' has a wrong offset!");

// Function BP_BtlCameraCalc.BP_BtlCameraCalc_C.LookAtLine
// 0x0240 (0x0240 - 0x0000)
struct BP_BtlCameraCalc_C_LookAtLine final
{
public:
	float                                         Alpha;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlCalcCameraPosParam                 Param;                                             // 0x0010(0x0080)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FFBtlCamCalcAddParam                   AddParam;                                          // 0x0090(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LookAtLocation;                                    // 0x0094(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LookAtHeightRatio;                                 // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Vec1_Center;                                       // 0x00A4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Vec0_Center;                                       // 0x00B0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AlphaLine;                                         // 0x00BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendRatio;                                        // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBtlCalcCameraLookAtType                      LookAtType;                                        // 0x00C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Vec1;                                              // 0x00C8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Vec0;                                              // 0x00D4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_122[0x2];                                      // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetFieldCylinder_Bottom_Center;           // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFieldCylinder_Radius;                  // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFieldCylinder_Height;                  // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 CallFunc_GetMain_Character;                        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckHidingPersonaForSkillScene_ReturnValue; // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VectorAnim_vec;                           // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlCharacterBase_C*                 CallFunc_GetMain_Character_1;                      // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_BtlCharacterBase_C*>         K2Node_MakeArray_Array;                            // 0x0178(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_CalcLookAtPos_Location;                   // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VectorAnim_vec_1;                         // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VectorAnim_vec_2;                         // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_BtlCharacterBase_C*>         CallFunc_GetMainWithPersona_Character;             // 0x01B0(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_CalcLookAtPos_Location_1;                 // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetsCylinder_Bottom_Center;         // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTargetsCylinder_Radius;                // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTargetsCylinder_Height;                // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetsCylinder_Cylinder_Center;       // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VectorAnim_vec_3;                         // 0x01EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_BtlCharacterBase_C*>         CallFunc_GetTargetsCharacters_Characters;          // 0x01F8(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_CalcLookAtPos_Location_2;                 // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMainCharacterCylinder_Bottom_Center;   // 0x0214(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMainCharacterCylinder_Radius;          // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMainCharacterCylinder_Height;          // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMainCharacterCylinder_Cylinder_Center; // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCameraCalc_C_LookAtLine) == 0x000010, "Wrong alignment on BP_BtlCameraCalc_C_LookAtLine");
static_assert(sizeof(BP_BtlCameraCalc_C_LookAtLine) == 0x000240, "Wrong size on BP_BtlCameraCalc_C_LookAtLine");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, Alpha) == 0x000000, "Member 'BP_BtlCameraCalc_C_LookAtLine::Alpha' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, Param) == 0x000010, "Member 'BP_BtlCameraCalc_C_LookAtLine::Param' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, AddParam) == 0x000090, "Member 'BP_BtlCameraCalc_C_LookAtLine::AddParam' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, LookAtLocation) == 0x000094, "Member 'BP_BtlCameraCalc_C_LookAtLine::LookAtLocation' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, LookAtHeightRatio) == 0x0000A0, "Member 'BP_BtlCameraCalc_C_LookAtLine::LookAtHeightRatio' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, Vec1_Center) == 0x0000A4, "Member 'BP_BtlCameraCalc_C_LookAtLine::Vec1_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, Vec0_Center) == 0x0000B0, "Member 'BP_BtlCameraCalc_C_LookAtLine::Vec0_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, AlphaLine) == 0x0000BC, "Member 'BP_BtlCameraCalc_C_LookAtLine::AlphaLine' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, BlendRatio) == 0x0000C0, "Member 'BP_BtlCameraCalc_C_LookAtLine::BlendRatio' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, LookAtType) == 0x0000C4, "Member 'BP_BtlCameraCalc_C_LookAtLine::LookAtType' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, Vec1) == 0x0000C8, "Member 'BP_BtlCameraCalc_C_LookAtLine::Vec1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, Vec0) == 0x0000D4, "Member 'BP_BtlCameraCalc_C_LookAtLine::Vec0' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, CallFunc_BreakTransform_Location) == 0x0000E0, "Member 'BP_BtlCameraCalc_C_LookAtLine::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, CallFunc_BreakTransform_Rotation) == 0x0000EC, "Member 'BP_BtlCameraCalc_C_LookAtLine::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, CallFunc_BreakTransform_Scale) == 0x0000F8, "Member 'BP_BtlCameraCalc_C_LookAtLine::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, CallFunc_BooleanOR_ReturnValue) == 0x000104, "Member 'BP_BtlCameraCalc_C_LookAtLine::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000108, "Member 'BP_BtlCameraCalc_C_LookAtLine::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, CallFunc_Add_VectorVector_ReturnValue) == 0x000114, "Member 'BP_BtlCameraCalc_C_LookAtLine::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000120, "Member 'BP_BtlCameraCalc_C_LookAtLine::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000121, "Member 'BP_BtlCameraCalc_C_LookAtLine::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, CallFunc_GetFieldCylinder_Bottom_Center) == 0x000124, "Member 'BP_BtlCameraCalc_C_LookAtLine::CallFunc_GetFieldCylinder_Bottom_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, CallFunc_GetFieldCylinder_Radius) == 0x000130, "Member 'BP_BtlCameraCalc_C_LookAtLine::CallFunc_GetFieldCylinder_Radius' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, CallFunc_GetFieldCylinder_Height) == 0x000134, "Member 'BP_BtlCameraCalc_C_LookAtLine::CallFunc_GetFieldCylinder_Height' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000138, "Member 'BP_BtlCameraCalc_C_LookAtLine::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, CallFunc_GetMain_Character) == 0x000140, "Member 'BP_BtlCameraCalc_C_LookAtLine::CallFunc_GetMain_Character' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, CallFunc_MakeVector_ReturnValue) == 0x000148, "Member 'BP_BtlCameraCalc_C_LookAtLine::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, CallFunc_CheckHidingPersonaForSkillScene_ReturnValue) == 0x000154, "Member 'BP_BtlCameraCalc_C_LookAtLine::CallFunc_CheckHidingPersonaForSkillScene_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000158, "Member 'BP_BtlCameraCalc_C_LookAtLine::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, CallFunc_VectorAnim_vec) == 0x000164, "Member 'BP_BtlCameraCalc_C_LookAtLine::CallFunc_VectorAnim_vec' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, CallFunc_GetMain_Character_1) == 0x000170, "Member 'BP_BtlCameraCalc_C_LookAtLine::CallFunc_GetMain_Character_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, K2Node_MakeArray_Array) == 0x000178, "Member 'BP_BtlCameraCalc_C_LookAtLine::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, CallFunc_CalcLookAtPos_Location) == 0x000188, "Member 'BP_BtlCameraCalc_C_LookAtLine::CallFunc_CalcLookAtPos_Location' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, CallFunc_VectorAnim_vec_1) == 0x000194, "Member 'BP_BtlCameraCalc_C_LookAtLine::CallFunc_VectorAnim_vec_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, CallFunc_VectorAnim_vec_2) == 0x0001A0, "Member 'BP_BtlCameraCalc_C_LookAtLine::CallFunc_VectorAnim_vec_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, CallFunc_GetMainWithPersona_Character) == 0x0001B0, "Member 'BP_BtlCameraCalc_C_LookAtLine::CallFunc_GetMainWithPersona_Character' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, CallFunc_CalcLookAtPos_Location_1) == 0x0001C0, "Member 'BP_BtlCameraCalc_C_LookAtLine::CallFunc_CalcLookAtPos_Location_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, CallFunc_GetTargetsCylinder_Bottom_Center) == 0x0001CC, "Member 'BP_BtlCameraCalc_C_LookAtLine::CallFunc_GetTargetsCylinder_Bottom_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, CallFunc_GetTargetsCylinder_Radius) == 0x0001D8, "Member 'BP_BtlCameraCalc_C_LookAtLine::CallFunc_GetTargetsCylinder_Radius' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, CallFunc_GetTargetsCylinder_Height) == 0x0001DC, "Member 'BP_BtlCameraCalc_C_LookAtLine::CallFunc_GetTargetsCylinder_Height' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, CallFunc_GetTargetsCylinder_Cylinder_Center) == 0x0001E0, "Member 'BP_BtlCameraCalc_C_LookAtLine::CallFunc_GetTargetsCylinder_Cylinder_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, CallFunc_VectorAnim_vec_3) == 0x0001EC, "Member 'BP_BtlCameraCalc_C_LookAtLine::CallFunc_VectorAnim_vec_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, CallFunc_GetTargetsCharacters_Characters) == 0x0001F8, "Member 'BP_BtlCameraCalc_C_LookAtLine::CallFunc_GetTargetsCharacters_Characters' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, CallFunc_CalcLookAtPos_Location_2) == 0x000208, "Member 'BP_BtlCameraCalc_C_LookAtLine::CallFunc_CalcLookAtPos_Location_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, CallFunc_GetMainCharacterCylinder_Bottom_Center) == 0x000214, "Member 'BP_BtlCameraCalc_C_LookAtLine::CallFunc_GetMainCharacterCylinder_Bottom_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, CallFunc_GetMainCharacterCylinder_Radius) == 0x000220, "Member 'BP_BtlCameraCalc_C_LookAtLine::CallFunc_GetMainCharacterCylinder_Radius' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, CallFunc_GetMainCharacterCylinder_Height) == 0x000224, "Member 'BP_BtlCameraCalc_C_LookAtLine::CallFunc_GetMainCharacterCylinder_Height' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_LookAtLine, CallFunc_GetMainCharacterCylinder_Cylinder_Center) == 0x000228, "Member 'BP_BtlCameraCalc_C_LookAtLine::CallFunc_GetMainCharacterCylinder_Cylinder_Center' has a wrong offset!");

// Function BP_BtlCameraCalc.BP_BtlCameraCalc_C.MakeCameraTrans
// 0x0180 (0x0180 - 0x0000)
struct BP_BtlCameraCalc_C_MakeCameraTrans final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lookat;                                            // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Roll;                                              // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pan;                                               // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pan_V;                                             // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SlideX;                                            // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Trans;                                             // 0x0030(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FTransform                             Work;                                              // 0x0060(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E8[0x8];                                       // 0x00E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00F0(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_144[0xC];                                      // 0x0144(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0150(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraCalc_C_MakeCameraTrans) == 0x000010, "Wrong alignment on BP_BtlCameraCalc_C_MakeCameraTrans");
static_assert(sizeof(BP_BtlCameraCalc_C_MakeCameraTrans) == 0x000180, "Wrong size on BP_BtlCameraCalc_C_MakeCameraTrans");
static_assert(offsetof(BP_BtlCameraCalc_C_MakeCameraTrans, Location) == 0x000000, "Member 'BP_BtlCameraCalc_C_MakeCameraTrans::Location' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_MakeCameraTrans, Lookat) == 0x00000C, "Member 'BP_BtlCameraCalc_C_MakeCameraTrans::Lookat' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_MakeCameraTrans, Roll) == 0x000018, "Member 'BP_BtlCameraCalc_C_MakeCameraTrans::Roll' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_MakeCameraTrans, Pan) == 0x00001C, "Member 'BP_BtlCameraCalc_C_MakeCameraTrans::Pan' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_MakeCameraTrans, Pan_V) == 0x000020, "Member 'BP_BtlCameraCalc_C_MakeCameraTrans::Pan_V' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_MakeCameraTrans, SlideX) == 0x000024, "Member 'BP_BtlCameraCalc_C_MakeCameraTrans::SlideX' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_MakeCameraTrans, Trans) == 0x000030, "Member 'BP_BtlCameraCalc_C_MakeCameraTrans::Trans' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_MakeCameraTrans, Work) == 0x000060, "Member 'BP_BtlCameraCalc_C_MakeCameraTrans::Work' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_MakeCameraTrans, CallFunc_MakeVector_ReturnValue) == 0x000090, "Member 'BP_BtlCameraCalc_C_MakeCameraTrans::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_MakeCameraTrans, CallFunc_BreakTransform_Location) == 0x00009C, "Member 'BP_BtlCameraCalc_C_MakeCameraTrans::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_MakeCameraTrans, CallFunc_BreakTransform_Rotation) == 0x0000A8, "Member 'BP_BtlCameraCalc_C_MakeCameraTrans::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_MakeCameraTrans, CallFunc_BreakTransform_Scale) == 0x0000B4, "Member 'BP_BtlCameraCalc_C_MakeCameraTrans::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_MakeCameraTrans, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x0000C0, "Member 'BP_BtlCameraCalc_C_MakeCameraTrans::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_MakeCameraTrans, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0000C4, "Member 'BP_BtlCameraCalc_C_MakeCameraTrans::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_MakeCameraTrans, CallFunc_Add_VectorVector_ReturnValue) == 0x0000D0, "Member 'BP_BtlCameraCalc_C_MakeCameraTrans::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_MakeCameraTrans, CallFunc_FindLookAtRotation_ReturnValue) == 0x0000DC, "Member 'BP_BtlCameraCalc_C_MakeCameraTrans::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_MakeCameraTrans, CallFunc_MakeTransform_ReturnValue) == 0x0000F0, "Member 'BP_BtlCameraCalc_C_MakeCameraTrans::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_MakeCameraTrans, CallFunc_BreakRotator_Roll) == 0x000120, "Member 'BP_BtlCameraCalc_C_MakeCameraTrans::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_MakeCameraTrans, CallFunc_BreakRotator_Pitch) == 0x000124, "Member 'BP_BtlCameraCalc_C_MakeCameraTrans::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_MakeCameraTrans, CallFunc_BreakRotator_Yaw) == 0x000128, "Member 'BP_BtlCameraCalc_C_MakeCameraTrans::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_MakeCameraTrans, CallFunc_Add_FloatFloat_ReturnValue) == 0x00012C, "Member 'BP_BtlCameraCalc_C_MakeCameraTrans::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_MakeCameraTrans, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000130, "Member 'BP_BtlCameraCalc_C_MakeCameraTrans::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_MakeCameraTrans, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000134, "Member 'BP_BtlCameraCalc_C_MakeCameraTrans::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_MakeCameraTrans, CallFunc_MakeRotator_ReturnValue) == 0x000138, "Member 'BP_BtlCameraCalc_C_MakeCameraTrans::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_MakeCameraTrans, CallFunc_MakeTransform_ReturnValue_1) == 0x000150, "Member 'BP_BtlCameraCalc_C_MakeCameraTrans::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");

// Function BP_BtlCameraCalc.BP_BtlCameraCalc_C.SetStartCameraPosition
// 0x0060 (0x0060 - 0x0000)
struct BP_BtlCameraCalc_C_SetStartCameraPosition final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lookat;                                            // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Roll;                                              // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pan;                                               // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pan_V;                                             // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SlideX;                                            // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeCameraTrans_Trans;                    // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraCalc_C_SetStartCameraPosition) == 0x000010, "Wrong alignment on BP_BtlCameraCalc_C_SetStartCameraPosition");
static_assert(sizeof(BP_BtlCameraCalc_C_SetStartCameraPosition) == 0x000060, "Wrong size on BP_BtlCameraCalc_C_SetStartCameraPosition");
static_assert(offsetof(BP_BtlCameraCalc_C_SetStartCameraPosition, Location) == 0x000000, "Member 'BP_BtlCameraCalc_C_SetStartCameraPosition::Location' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_SetStartCameraPosition, Lookat) == 0x00000C, "Member 'BP_BtlCameraCalc_C_SetStartCameraPosition::Lookat' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_SetStartCameraPosition, Roll) == 0x000018, "Member 'BP_BtlCameraCalc_C_SetStartCameraPosition::Roll' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_SetStartCameraPosition, Pan) == 0x00001C, "Member 'BP_BtlCameraCalc_C_SetStartCameraPosition::Pan' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_SetStartCameraPosition, Pan_V) == 0x000020, "Member 'BP_BtlCameraCalc_C_SetStartCameraPosition::Pan_V' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_SetStartCameraPosition, SlideX) == 0x000024, "Member 'BP_BtlCameraCalc_C_SetStartCameraPosition::SlideX' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_SetStartCameraPosition, CallFunc_MakeCameraTrans_Trans) == 0x000030, "Member 'BP_BtlCameraCalc_C_SetStartCameraPosition::CallFunc_MakeCameraTrans_Trans' has a wrong offset!");

// Function BP_BtlCameraCalc.BP_BtlCameraCalc_C.SetGoalCameraPosition
// 0x0060 (0x0060 - 0x0000)
struct BP_BtlCameraCalc_C_SetGoalCameraPosition final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lookat;                                            // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Roll;                                              // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pan;                                               // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pan_V;                                             // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SlideX;                                            // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeCameraTrans_Trans;                    // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraCalc_C_SetGoalCameraPosition) == 0x000010, "Wrong alignment on BP_BtlCameraCalc_C_SetGoalCameraPosition");
static_assert(sizeof(BP_BtlCameraCalc_C_SetGoalCameraPosition) == 0x000060, "Wrong size on BP_BtlCameraCalc_C_SetGoalCameraPosition");
static_assert(offsetof(BP_BtlCameraCalc_C_SetGoalCameraPosition, Location) == 0x000000, "Member 'BP_BtlCameraCalc_C_SetGoalCameraPosition::Location' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_SetGoalCameraPosition, Lookat) == 0x00000C, "Member 'BP_BtlCameraCalc_C_SetGoalCameraPosition::Lookat' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_SetGoalCameraPosition, Roll) == 0x000018, "Member 'BP_BtlCameraCalc_C_SetGoalCameraPosition::Roll' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_SetGoalCameraPosition, Pan) == 0x00001C, "Member 'BP_BtlCameraCalc_C_SetGoalCameraPosition::Pan' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_SetGoalCameraPosition, Pan_V) == 0x000020, "Member 'BP_BtlCameraCalc_C_SetGoalCameraPosition::Pan_V' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_SetGoalCameraPosition, SlideX) == 0x000024, "Member 'BP_BtlCameraCalc_C_SetGoalCameraPosition::SlideX' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_SetGoalCameraPosition, CallFunc_MakeCameraTrans_Trans) == 0x000030, "Member 'BP_BtlCameraCalc_C_SetGoalCameraPosition::CallFunc_MakeCameraTrans_Trans' has a wrong offset!");

// Function BP_BtlCameraCalc.BP_BtlCameraCalc_C.GetCalculatedTrans
// 0x0060 (0x0060 - 0x0000)
struct BP_BtlCameraCalc_C_GetCalculatedTrans final
{
public:
	struct FTransform                             CameraStart_0;                                     // 0x0000(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CameraGoal_0;                                      // 0x0030(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraCalc_C_GetCalculatedTrans) == 0x000010, "Wrong alignment on BP_BtlCameraCalc_C_GetCalculatedTrans");
static_assert(sizeof(BP_BtlCameraCalc_C_GetCalculatedTrans) == 0x000060, "Wrong size on BP_BtlCameraCalc_C_GetCalculatedTrans");
static_assert(offsetof(BP_BtlCameraCalc_C_GetCalculatedTrans, CameraStart_0) == 0x000000, "Member 'BP_BtlCameraCalc_C_GetCalculatedTrans::CameraStart_0' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetCalculatedTrans, CameraGoal_0) == 0x000030, "Member 'BP_BtlCameraCalc_C_GetCalculatedTrans::CameraGoal_0' has a wrong offset!");

// Function BP_BtlCameraCalc.BP_BtlCameraCalc_C.GetLookAtRatio
// 0x0090 (0x0090 - 0x0000)
struct BP_BtlCameraCalc_C_GetLookAtRatio final
{
public:
	struct FBtlCalcCameraPosParam                 Param;                                             // 0x0000(0x0080)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         Alpha;                                             // 0x0080(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Work;                                              // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCameraCalc_C_GetLookAtRatio) == 0x000010, "Wrong alignment on BP_BtlCameraCalc_C_GetLookAtRatio");
static_assert(sizeof(BP_BtlCameraCalc_C_GetLookAtRatio) == 0x000090, "Wrong size on BP_BtlCameraCalc_C_GetLookAtRatio");
static_assert(offsetof(BP_BtlCameraCalc_C_GetLookAtRatio, Param) == 0x000000, "Member 'BP_BtlCameraCalc_C_GetLookAtRatio::Param' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetLookAtRatio, Alpha) == 0x000080, "Member 'BP_BtlCameraCalc_C_GetLookAtRatio::Alpha' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetLookAtRatio, Work) == 0x000084, "Member 'BP_BtlCameraCalc_C_GetLookAtRatio::Work' has a wrong offset!");

// Function BP_BtlCameraCalc.BP_BtlCameraCalc_C.CalcCamData
// 0x08C0 (0x08C0 - 0x0000)
struct BP_BtlCameraCalc_C_CalcCamData final
{
public:
	class FName                                   RowName;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseLastCamData;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBtlCoreComponent*                      BtlCore_0;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBtlCamCalcAddParam                   AddParam;                                          // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AnimTime;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBtlCamCalcAddParam                   CamAddData;                                        // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0xF];                                       // 0x0021(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlCalcCameraData                     Table;                                             // 0x0030(0x0120)(Edit, BlueprintVisible)
	struct FBtlCalcCameraData                     CamData;                                           // 0x0150(0x0120)(Edit, BlueprintVisible)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_GetBossCameraTable_ReturnValue;           // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlCalcCameraData                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0280(0x0120)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x03A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A2[0x6];                                      // 0x03A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x03A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x03B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingAstrea_ReturnValue;              // 0x03C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CA[0x6];                                      // 0x03CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlCalcCameraData                     CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x03D0(0x0120)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingAstrea_ReturnValue_1;            // 0x04F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F2[0xE];                                      // 0x04F2(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlCalcCameraData                     CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x0500(0x0120)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x0620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_621[0xF];                                      // 0x0621(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlCalcCameraData                     CallFunc_GetDataTableRowFromName_OutRow_3;         // 0x0630(0x0120)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_3;    // 0x0750(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_751[0xF];                                      // 0x0751(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlCalcCameraData                     CallFunc_GetDataTableRowFromName_OutRow_4;         // 0x0760(0x0120)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_4;    // 0x0880(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_881[0x3];                                      // 0x0881(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetLookAtRatio_Alpha;                     // 0x0884(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcCylinderCamPos_Location;              // 0x0888(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LookAtLine_LookatLocation;                // 0x0894(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLookAtRatio_Alpha_1;                   // 0x08A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcCylinderCamPos_Location_1;            // 0x08A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LookAtLine_LookatLocation_1;              // 0x08B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCameraCalc_C_CalcCamData) == 0x000010, "Wrong alignment on BP_BtlCameraCalc_C_CalcCamData");
static_assert(sizeof(BP_BtlCameraCalc_C_CalcCamData) == 0x0008C0, "Wrong size on BP_BtlCameraCalc_C_CalcCamData");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCamData, RowName) == 0x000000, "Member 'BP_BtlCameraCalc_C_CalcCamData::RowName' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCamData, UseLastCamData) == 0x000008, "Member 'BP_BtlCameraCalc_C_CalcCamData::UseLastCamData' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCamData, BtlCore_0) == 0x000010, "Member 'BP_BtlCameraCalc_C_CalcCamData::BtlCore_0' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCamData, AddParam) == 0x000018, "Member 'BP_BtlCameraCalc_C_CalcCamData::AddParam' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCamData, AnimTime) == 0x00001C, "Member 'BP_BtlCameraCalc_C_CalcCamData::AnimTime' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCamData, CamAddData) == 0x000020, "Member 'BP_BtlCameraCalc_C_CalcCamData::CamAddData' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCamData, Table) == 0x000030, "Member 'BP_BtlCameraCalc_C_CalcCamData::Table' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCamData, CamData) == 0x000150, "Member 'BP_BtlCameraCalc_C_CalcCamData::CamData' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCamData, CallFunc_IsValid_ReturnValue) == 0x000270, "Member 'BP_BtlCameraCalc_C_CalcCamData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCamData, CallFunc_GetBossCameraTable_ReturnValue) == 0x000278, "Member 'BP_BtlCameraCalc_C_CalcCamData::CallFunc_GetBossCameraTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCamData, CallFunc_GetDataTableRowFromName_OutRow) == 0x000280, "Member 'BP_BtlCameraCalc_C_CalcCamData::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCamData, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0003A0, "Member 'BP_BtlCameraCalc_C_CalcCamData::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCamData, CallFunc_IsValid_ReturnValue_1) == 0x0003A1, "Member 'BP_BtlCameraCalc_C_CalcCamData::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCamData, CallFunc_Conv_NameToString_ReturnValue) == 0x0003A8, "Member 'BP_BtlCameraCalc_C_CalcCamData::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCamData, CallFunc_Conv_NameToString_ReturnValue_1) == 0x0003B8, "Member 'BP_BtlCameraCalc_C_CalcCamData::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCamData, CallFunc_Contains_ReturnValue) == 0x0003C8, "Member 'BP_BtlCameraCalc_C_CalcCamData::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCamData, CallFunc_IsPlayingAstrea_ReturnValue) == 0x0003C9, "Member 'BP_BtlCameraCalc_C_CalcCamData::CallFunc_IsPlayingAstrea_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCamData, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0003D0, "Member 'BP_BtlCameraCalc_C_CalcCamData::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCamData, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0004F0, "Member 'BP_BtlCameraCalc_C_CalcCamData::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCamData, CallFunc_IsPlayingAstrea_ReturnValue_1) == 0x0004F1, "Member 'BP_BtlCameraCalc_C_CalcCamData::CallFunc_IsPlayingAstrea_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCamData, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x000500, "Member 'BP_BtlCameraCalc_C_CalcCamData::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCamData, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x000620, "Member 'BP_BtlCameraCalc_C_CalcCamData::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCamData, CallFunc_GetDataTableRowFromName_OutRow_3) == 0x000630, "Member 'BP_BtlCameraCalc_C_CalcCamData::CallFunc_GetDataTableRowFromName_OutRow_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCamData, CallFunc_GetDataTableRowFromName_ReturnValue_3) == 0x000750, "Member 'BP_BtlCameraCalc_C_CalcCamData::CallFunc_GetDataTableRowFromName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCamData, CallFunc_GetDataTableRowFromName_OutRow_4) == 0x000760, "Member 'BP_BtlCameraCalc_C_CalcCamData::CallFunc_GetDataTableRowFromName_OutRow_4' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCamData, CallFunc_GetDataTableRowFromName_ReturnValue_4) == 0x000880, "Member 'BP_BtlCameraCalc_C_CalcCamData::CallFunc_GetDataTableRowFromName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCamData, CallFunc_GetLookAtRatio_Alpha) == 0x000884, "Member 'BP_BtlCameraCalc_C_CalcCamData::CallFunc_GetLookAtRatio_Alpha' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCamData, CallFunc_CalcCylinderCamPos_Location) == 0x000888, "Member 'BP_BtlCameraCalc_C_CalcCamData::CallFunc_CalcCylinderCamPos_Location' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCamData, CallFunc_LookAtLine_LookatLocation) == 0x000894, "Member 'BP_BtlCameraCalc_C_CalcCamData::CallFunc_LookAtLine_LookatLocation' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCamData, CallFunc_GetLookAtRatio_Alpha_1) == 0x0008A0, "Member 'BP_BtlCameraCalc_C_CalcCamData::CallFunc_GetLookAtRatio_Alpha_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCamData, CallFunc_CalcCylinderCamPos_Location_1) == 0x0008A4, "Member 'BP_BtlCameraCalc_C_CalcCamData::CallFunc_CalcCylinderCamPos_Location_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcCamData, CallFunc_LookAtLine_LookatLocation_1) == 0x0008B0, "Member 'BP_BtlCameraCalc_C_CalcCamData::CallFunc_LookAtLine_LookatLocation_1' has a wrong offset!");

// Function BP_BtlCameraCalc.BP_BtlCameraCalc_C.CalcLookAtPos
// 0x01D0 (0x01D0 - 0x0000)
struct BP_BtlCameraCalc_C_CalcLookAtPos final
{
public:
	TArray<class ABP_BtlCharacterBase_C*>         Chara;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	EBtlCalcCameraLookAtType                      Type;                                              // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HeightRatio;                                       // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseCommonCylinder;                                 // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x001C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlCharacterBase_C*                 Target;                                            // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Work;                                              // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeCylinder_Bottom_Center;               // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeCylinder_Radius;                      // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeCylinder_Height;                      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeCylinder_Bottom_Center_1;             // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeCylinder_Radius_1;                    // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeCylinder_Height_1;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlCharacterBase_C*                 CallFunc_Array_Get_Item;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0xF];                                      // 0x0101(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_1;         // 0x0110(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0xC];                                      // 0x0164(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_2;         // 0x0170(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCameraCalc_C_CalcLookAtPos) == 0x000010, "Wrong alignment on BP_BtlCameraCalc_C_CalcLookAtPos");
static_assert(sizeof(BP_BtlCameraCalc_C_CalcLookAtPos) == 0x0001D0, "Wrong size on BP_BtlCameraCalc_C_CalcLookAtPos");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcLookAtPos, Chara) == 0x000000, "Member 'BP_BtlCameraCalc_C_CalcLookAtPos::Chara' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcLookAtPos, Type) == 0x000010, "Member 'BP_BtlCameraCalc_C_CalcLookAtPos::Type' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcLookAtPos, HeightRatio) == 0x000014, "Member 'BP_BtlCameraCalc_C_CalcLookAtPos::HeightRatio' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcLookAtPos, UseCommonCylinder) == 0x000018, "Member 'BP_BtlCameraCalc_C_CalcLookAtPos::UseCommonCylinder' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcLookAtPos, Location) == 0x00001C, "Member 'BP_BtlCameraCalc_C_CalcLookAtPos::Location' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcLookAtPos, Target) == 0x000028, "Member 'BP_BtlCameraCalc_C_CalcLookAtPos::Target' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcLookAtPos, Work) == 0x000030, "Member 'BP_BtlCameraCalc_C_CalcLookAtPos::Work' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcLookAtPos, CallFunc_MakeCylinder_Bottom_Center) == 0x00003C, "Member 'BP_BtlCameraCalc_C_CalcLookAtPos::CallFunc_MakeCylinder_Bottom_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcLookAtPos, CallFunc_MakeCylinder_Radius) == 0x000048, "Member 'BP_BtlCameraCalc_C_CalcLookAtPos::CallFunc_MakeCylinder_Radius' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcLookAtPos, CallFunc_MakeCylinder_Height) == 0x00004C, "Member 'BP_BtlCameraCalc_C_CalcLookAtPos::CallFunc_MakeCylinder_Height' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcLookAtPos, CallFunc_GetSocketTransform_ReturnValue) == 0x000050, "Member 'BP_BtlCameraCalc_C_CalcLookAtPos::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcLookAtPos, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000080, "Member 'BP_BtlCameraCalc_C_CalcLookAtPos::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcLookAtPos, CallFunc_BreakTransform_Location) == 0x000084, "Member 'BP_BtlCameraCalc_C_CalcLookAtPos::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcLookAtPos, CallFunc_BreakTransform_Rotation) == 0x000090, "Member 'BP_BtlCameraCalc_C_CalcLookAtPos::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcLookAtPos, CallFunc_BreakTransform_Scale) == 0x00009C, "Member 'BP_BtlCameraCalc_C_CalcLookAtPos::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcLookAtPos, CallFunc_MakeVector_ReturnValue) == 0x0000A8, "Member 'BP_BtlCameraCalc_C_CalcLookAtPos::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcLookAtPos, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B4, "Member 'BP_BtlCameraCalc_C_CalcLookAtPos::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcLookAtPos, CallFunc_MakeCylinder_Bottom_Center_1) == 0x0000C0, "Member 'BP_BtlCameraCalc_C_CalcLookAtPos::CallFunc_MakeCylinder_Bottom_Center_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcLookAtPos, CallFunc_MakeCylinder_Radius_1) == 0x0000CC, "Member 'BP_BtlCameraCalc_C_CalcLookAtPos::CallFunc_MakeCylinder_Radius_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcLookAtPos, CallFunc_MakeCylinder_Height_1) == 0x0000D0, "Member 'BP_BtlCameraCalc_C_CalcLookAtPos::CallFunc_MakeCylinder_Height_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcLookAtPos, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000D4, "Member 'BP_BtlCameraCalc_C_CalcLookAtPos::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcLookAtPos, K2Node_SwitchEnum_CmpSuccess) == 0x0000D8, "Member 'BP_BtlCameraCalc_C_CalcLookAtPos::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcLookAtPos, CallFunc_MakeVector_ReturnValue_1) == 0x0000DC, "Member 'BP_BtlCameraCalc_C_CalcLookAtPos::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcLookAtPos, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'BP_BtlCameraCalc_C_CalcLookAtPos::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcLookAtPos, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000F0, "Member 'BP_BtlCameraCalc_C_CalcLookAtPos::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcLookAtPos, CallFunc_Array_Length_ReturnValue) == 0x0000FC, "Member 'BP_BtlCameraCalc_C_CalcLookAtPos::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcLookAtPos, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000100, "Member 'BP_BtlCameraCalc_C_CalcLookAtPos::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcLookAtPos, CallFunc_GetSocketTransform_ReturnValue_1) == 0x000110, "Member 'BP_BtlCameraCalc_C_CalcLookAtPos::CallFunc_GetSocketTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcLookAtPos, CallFunc_BreakTransform_Location_1) == 0x000140, "Member 'BP_BtlCameraCalc_C_CalcLookAtPos::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcLookAtPos, CallFunc_BreakTransform_Rotation_1) == 0x00014C, "Member 'BP_BtlCameraCalc_C_CalcLookAtPos::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcLookAtPos, CallFunc_BreakTransform_Scale_1) == 0x000158, "Member 'BP_BtlCameraCalc_C_CalcLookAtPos::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcLookAtPos, CallFunc_GetSocketTransform_ReturnValue_2) == 0x000170, "Member 'BP_BtlCameraCalc_C_CalcLookAtPos::CallFunc_GetSocketTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcLookAtPos, CallFunc_BreakTransform_Location_2) == 0x0001A0, "Member 'BP_BtlCameraCalc_C_CalcLookAtPos::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcLookAtPos, CallFunc_BreakTransform_Rotation_2) == 0x0001AC, "Member 'BP_BtlCameraCalc_C_CalcLookAtPos::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_CalcLookAtPos, CallFunc_BreakTransform_Scale_2) == 0x0001B8, "Member 'BP_BtlCameraCalc_C_CalcLookAtPos::CallFunc_BreakTransform_Scale_2' has a wrong offset!");

// Function BP_BtlCameraCalc.BP_BtlCameraCalc_C.CheckNeedToReflesh
// 0x0001 (0x0001 - 0x0000)
struct BP_BtlCameraCalc_C_CheckNeedToReflesh final
{
public:
	bool                                          Need;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraCalc_C_CheckNeedToReflesh) == 0x000001, "Wrong alignment on BP_BtlCameraCalc_C_CheckNeedToReflesh");
static_assert(sizeof(BP_BtlCameraCalc_C_CheckNeedToReflesh) == 0x000001, "Wrong size on BP_BtlCameraCalc_C_CheckNeedToReflesh");
static_assert(offsetof(BP_BtlCameraCalc_C_CheckNeedToReflesh, Need) == 0x000000, "Member 'BP_BtlCameraCalc_C_CheckNeedToReflesh::Need' has a wrong offset!");

// Function BP_BtlCameraCalc.BP_BtlCameraCalc_C.GetTargetsRotate
// 0x0048 (0x0048 - 0x0000)
struct BP_BtlCameraCalc_C_GetTargetsRotate final
{
public:
	float                                         Z__Yaw_;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rotate;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_BtlCharacterBase_C*>         CallFunc_GetTargetsCharacters_Characters;          // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCameraCalc_C_GetTargetsRotate) == 0x000008, "Wrong alignment on BP_BtlCameraCalc_C_GetTargetsRotate");
static_assert(sizeof(BP_BtlCameraCalc_C_GetTargetsRotate) == 0x000048, "Wrong size on BP_BtlCameraCalc_C_GetTargetsRotate");
static_assert(offsetof(BP_BtlCameraCalc_C_GetTargetsRotate, Z__Yaw_) == 0x000000, "Member 'BP_BtlCameraCalc_C_GetTargetsRotate::Z__Yaw_' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetTargetsRotate, Rotate) == 0x000004, "Member 'BP_BtlCameraCalc_C_GetTargetsRotate::Rotate' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetTargetsRotate, CallFunc_GetTargetsCharacters_Characters) == 0x000008, "Member 'BP_BtlCameraCalc_C_GetTargetsRotate::CallFunc_GetTargetsCharacters_Characters' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetTargetsRotate, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_BtlCameraCalc_C_GetTargetsRotate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetTargetsRotate, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_BtlCameraCalc_C_GetTargetsRotate::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetTargetsRotate, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000028, "Member 'BP_BtlCameraCalc_C_GetTargetsRotate::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetTargetsRotate, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00002C, "Member 'BP_BtlCameraCalc_C_GetTargetsRotate::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetTargetsRotate, CallFunc_BreakRotator_Roll) == 0x000038, "Member 'BP_BtlCameraCalc_C_GetTargetsRotate::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetTargetsRotate, CallFunc_BreakRotator_Pitch) == 0x00003C, "Member 'BP_BtlCameraCalc_C_GetTargetsRotate::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetTargetsRotate, CallFunc_BreakRotator_Yaw) == 0x000040, "Member 'BP_BtlCameraCalc_C_GetTargetsRotate::CallFunc_BreakRotator_Yaw' has a wrong offset!");

// Function BP_BtlCameraCalc.BP_BtlCameraCalc_C.GetCamAnimCurve
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlCameraCalc_C_GetCamAnimCurve final
{
public:
	class UCurveFloat*                            Curve;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCameraCalc_C_GetCamAnimCurve) == 0x000008, "Wrong alignment on BP_BtlCameraCalc_C_GetCamAnimCurve");
static_assert(sizeof(BP_BtlCameraCalc_C_GetCamAnimCurve) == 0x000008, "Wrong size on BP_BtlCameraCalc_C_GetCamAnimCurve");
static_assert(offsetof(BP_BtlCameraCalc_C_GetCamAnimCurve, Curve) == 0x000000, "Member 'BP_BtlCameraCalc_C_GetCamAnimCurve::Curve' has a wrong offset!");

// Function BP_BtlCameraCalc.BP_BtlCameraCalc_C.GetFieldCylinder
// 0x0014 (0x0014 - 0x0000)
struct BP_BtlCameraCalc_C_GetFieldCylinder final
{
public:
	struct FVector                                Bottom_Center;                                     // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Height;                                            // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCameraCalc_C_GetFieldCylinder) == 0x000004, "Wrong alignment on BP_BtlCameraCalc_C_GetFieldCylinder");
static_assert(sizeof(BP_BtlCameraCalc_C_GetFieldCylinder) == 0x000014, "Wrong size on BP_BtlCameraCalc_C_GetFieldCylinder");
static_assert(offsetof(BP_BtlCameraCalc_C_GetFieldCylinder, Bottom_Center) == 0x000000, "Member 'BP_BtlCameraCalc_C_GetFieldCylinder::Bottom_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetFieldCylinder, Radius) == 0x00000C, "Member 'BP_BtlCameraCalc_C_GetFieldCylinder::Radius' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_GetFieldCylinder, Height) == 0x000010, "Member 'BP_BtlCameraCalc_C_GetFieldCylinder::Height' has a wrong offset!");

// Function BP_BtlCameraCalc.BP_BtlCameraCalc_C.Calc Direct
// 0x0074 (0x0074 - 0x0000)
struct BP_BtlCameraCalc_C_Calc_Direct final
{
public:
	bool                                          DirectToOrigin;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CylinderCenter;                                    // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CylinderRotate;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DirectToLookedAtChara;                             // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Rotate;                                            // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocOrigin;                                         // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue_1;         // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCameraCalc_C_Calc_Direct) == 0x000004, "Wrong alignment on BP_BtlCameraCalc_C_Calc_Direct");
static_assert(sizeof(BP_BtlCameraCalc_C_Calc_Direct) == 0x000074, "Wrong size on BP_BtlCameraCalc_C_Calc_Direct");
static_assert(offsetof(BP_BtlCameraCalc_C_Calc_Direct, DirectToOrigin) == 0x000000, "Member 'BP_BtlCameraCalc_C_Calc_Direct::DirectToOrigin' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_Calc_Direct, CylinderCenter) == 0x000004, "Member 'BP_BtlCameraCalc_C_Calc_Direct::CylinderCenter' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_Calc_Direct, CylinderRotate) == 0x000010, "Member 'BP_BtlCameraCalc_C_Calc_Direct::CylinderRotate' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_Calc_Direct, DirectToLookedAtChara) == 0x000014, "Member 'BP_BtlCameraCalc_C_Calc_Direct::DirectToLookedAtChara' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_Calc_Direct, Rotate) == 0x000018, "Member 'BP_BtlCameraCalc_C_Calc_Direct::Rotate' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_Calc_Direct, LocOrigin) == 0x00001C, "Member 'BP_BtlCameraCalc_C_Calc_Direct::LocOrigin' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_Calc_Direct, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'BP_BtlCameraCalc_C_Calc_Direct::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_Calc_Direct, CallFunc_FindLookAtRotation_ReturnValue) == 0x000034, "Member 'BP_BtlCameraCalc_C_Calc_Direct::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_Calc_Direct, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_BtlCameraCalc_C_Calc_Direct::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_Calc_Direct, CallFunc_BreakRotator_Roll) == 0x000044, "Member 'BP_BtlCameraCalc_C_Calc_Direct::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_Calc_Direct, CallFunc_BreakRotator_Pitch) == 0x000048, "Member 'BP_BtlCameraCalc_C_Calc_Direct::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_Calc_Direct, CallFunc_BreakRotator_Yaw) == 0x00004C, "Member 'BP_BtlCameraCalc_C_Calc_Direct::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_Calc_Direct, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000050, "Member 'BP_BtlCameraCalc_C_Calc_Direct::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_Calc_Direct, CallFunc_FindLookAtRotation_ReturnValue_1) == 0x00005C, "Member 'BP_BtlCameraCalc_C_Calc_Direct::CallFunc_FindLookAtRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_Calc_Direct, CallFunc_BreakRotator_Roll_1) == 0x000068, "Member 'BP_BtlCameraCalc_C_Calc_Direct::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_Calc_Direct, CallFunc_BreakRotator_Pitch_1) == 0x00006C, "Member 'BP_BtlCameraCalc_C_Calc_Direct::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_Calc_Direct, CallFunc_BreakRotator_Yaw_1) == 0x000070, "Member 'BP_BtlCameraCalc_C_Calc_Direct::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");

// Function BP_BtlCameraCalc.BP_BtlCameraCalc_C.SearchBossCamera
// 0x0280 (0x0280 - 0x0000)
struct BP_BtlCameraCalc_C_SearchBossCamera final
{
public:
	class FName                                   SearchCamera;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlCoreComponent*                      BtlCore_0;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0xF];                                       // 0x0011(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlCalcCameraData                     Work;                                              // 0x0020(0x0120)(Edit, BlueprintVisible)
	class UDataTable*                             CallFunc_GetBossCameraTable_ReturnValue;           // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_148[0x8];                                      // 0x0148(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlCalcCameraData                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0150(0x0120)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraCalc_C_SearchBossCamera) == 0x000010, "Wrong alignment on BP_BtlCameraCalc_C_SearchBossCamera");
static_assert(sizeof(BP_BtlCameraCalc_C_SearchBossCamera) == 0x000280, "Wrong size on BP_BtlCameraCalc_C_SearchBossCamera");
static_assert(offsetof(BP_BtlCameraCalc_C_SearchBossCamera, SearchCamera) == 0x000000, "Member 'BP_BtlCameraCalc_C_SearchBossCamera::SearchCamera' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_SearchBossCamera, BtlCore_0) == 0x000008, "Member 'BP_BtlCameraCalc_C_SearchBossCamera::BtlCore_0' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_SearchBossCamera, Found) == 0x000010, "Member 'BP_BtlCameraCalc_C_SearchBossCamera::Found' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_SearchBossCamera, Work) == 0x000020, "Member 'BP_BtlCameraCalc_C_SearchBossCamera::Work' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_SearchBossCamera, CallFunc_GetBossCameraTable_ReturnValue) == 0x000140, "Member 'BP_BtlCameraCalc_C_SearchBossCamera::CallFunc_GetBossCameraTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_SearchBossCamera, CallFunc_GetDataTableRowFromName_OutRow) == 0x000150, "Member 'BP_BtlCameraCalc_C_SearchBossCamera::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_SearchBossCamera, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000270, "Member 'BP_BtlCameraCalc_C_SearchBossCamera::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraCalc_C_SearchBossCamera, CallFunc_IsValid_ReturnValue) == 0x000271, "Member 'BP_BtlCameraCalc_C_SearchBossCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

