#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtlGuiJyokyoHelp

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_BtlGuiBaseActor_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BtlGuiJyokyoHelp.BP_BtlGuiJyokyoHelp_C
// 0x0158 (0x04A8 - 0x0350)
class ABP_BtlGuiJyokyoHelp_C final : public ABP_BtlGuiBaseActor_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_BtlGuiJyokyoHelp_C;              // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBtlGuiResources*                       BtlGuiResources;                                   // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawComponent*                   BtlGuiDraw;                                        // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Fade_out________1_____28DCAE3644AC3194CB1499B59D02D1F7; // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Fade_out_________X_28DCAE3644AC3194CB1499B59D02D1F7; // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Fade_out__Direction_28DCAE3644AC3194CB1499B59D02D1F7; // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Fade_out;                                          // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Fade_In________1_____4248CC4443EE052690AF929A1C2BEE38; // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Fade_In_________X_4248CC4443EE052690AF929A1C2BEE38; // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Fade_In__Direction_4248CC4443EE052690AF929A1C2BEE38; // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Fade_In;                                           // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStart;                                           // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_399[0x3];                                      // 0x0399(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RenderTime;                                        // 0x039C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayTime;                                         // 0x03A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Var1;                                              // 0x03A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlGuiIcon_C*                       BtlGuiIcon;                                        // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MsgNo;                                             // 0x03B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Genus;                                             // 0x03B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ID;                                                // 0x03B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Var2;                                              // 0x03BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Flags_0;                                           // 0x03C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PosA;                                              // 0x03C4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GradationScaleW;                                   // 0x03CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TextNum;                                           // 0x03D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TextLine;                                          // 0x03D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TextMinimumNum;                                    // 0x03D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TextMaxNum;                                        // 0x03DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GradationScaleMin;                                 // 0x03E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GradationScaleMax;                                 // 0x03E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectPrimitive*             OutRectObject;                                     // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectPrimitive*             InRectOjbject;                                     // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                GradationSpriteObj;                                // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                PlateAlphaObj;                                     // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                PlateDrawObj;                                      // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WindowWidth;                                       // 0x0410(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WindowHeight;                                      // 0x0414(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WindowDiag;                                        // 0x0418(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimMoveX;                                         // 0x041C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ANIMFADE;                                          // 0x0420(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_424[0x4];                                      // 0x0424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBtlGuiDrawObjectMsg*                   MsgObj;                                            // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStartFadeOut;                                    // 0x0430(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_431[0x3];                                      // 0x0431(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Text_Height;                                       // 0x0434(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TextWidth;                                         // 0x0438(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GradationScaleH;                                   // 0x043C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                Gradation_Sprite_Mask_Obj;                         // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectPrimitive*             Out_Rect_Mask_Object;                              // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ThresholdTextWidth;                                // 0x0450(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ThresholdTextHeight;                               // 0x0454(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxWindowWidth;                                    // 0x0458(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinWindowWidth;                                    // 0x045C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectMsg*                   MsgObj2;                                           // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PosDif2LineMsg;                                    // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PosDifMsg;                                         // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 ColorWindowOut;                                    // 0x0478(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 ColorWindowIn;                                     // 0x047C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 ColorGradation;                                    // 0x0480(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 ColorPlate;                                        // 0x0484(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCenterMsg;                                       // 0x0488(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_489[0x3];                                      // 0x0489(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AnimeFadeOut;                                      // 0x048C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectPrimitive*             InRectMaskObj;                                     // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectPrimitive*             OutRectAlphaObject;                                // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 ColorText;                                         // 0x04A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_BtlGuiJyokyoHelp(int32 EntryPoint);
	void Start();
	void GuiActorUpdate(float DeltaTime);
	void StartFadeOUT();
	void Start_Fade_In();
	void Fade_out__UpdateFunc();
	void Fade_out__FinishedFunc();
	void Fade_In__UpdateFunc();
	void Fade_In__FinishedFunc();
	void SetParam(class ABP_BtlGuiIcon_C* BtlGuiIcon_0, int32 Genus_0, int32 ID_0, int32 MsgNo_0, int32 Var1_0, int32 Var2_0, float RenderTime_0, float DelayTime_0, int32 Flags_0);
	void Update();
	void ClearAlpha();
	void ChangeWindow();
	void CalcAlpha(float Alpha, float FadeParam, uint8* CalcedAlpha);
	void Calc_Alpha_by_Color(const struct FColor& In, float FadeParam, struct FColor* Out);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BtlGuiJyokyoHelp_C">();
	}
	static class ABP_BtlGuiJyokyoHelp_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BtlGuiJyokyoHelp_C>();
	}
};
static_assert(alignof(ABP_BtlGuiJyokyoHelp_C) == 0x000008, "Wrong alignment on ABP_BtlGuiJyokyoHelp_C");
static_assert(sizeof(ABP_BtlGuiJyokyoHelp_C) == 0x0004A8, "Wrong size on ABP_BtlGuiJyokyoHelp_C");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, UberGraphFrame_BP_BtlGuiJyokyoHelp_C) == 0x000350, "Member 'ABP_BtlGuiJyokyoHelp_C::UberGraphFrame_BP_BtlGuiJyokyoHelp_C' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, BtlGuiResources) == 0x000358, "Member 'ABP_BtlGuiJyokyoHelp_C::BtlGuiResources' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, BtlGuiDraw) == 0x000360, "Member 'ABP_BtlGuiJyokyoHelp_C::BtlGuiDraw' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, Fade_out________1_____28DCAE3644AC3194CB1499B59D02D1F7) == 0x000368, "Member 'ABP_BtlGuiJyokyoHelp_C::Fade_out________1_____28DCAE3644AC3194CB1499B59D02D1F7' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, Fade_out_________X_28DCAE3644AC3194CB1499B59D02D1F7) == 0x00036C, "Member 'ABP_BtlGuiJyokyoHelp_C::Fade_out_________X_28DCAE3644AC3194CB1499B59D02D1F7' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, Fade_out__Direction_28DCAE3644AC3194CB1499B59D02D1F7) == 0x000370, "Member 'ABP_BtlGuiJyokyoHelp_C::Fade_out__Direction_28DCAE3644AC3194CB1499B59D02D1F7' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, Fade_out) == 0x000378, "Member 'ABP_BtlGuiJyokyoHelp_C::Fade_out' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, Fade_In________1_____4248CC4443EE052690AF929A1C2BEE38) == 0x000380, "Member 'ABP_BtlGuiJyokyoHelp_C::Fade_In________1_____4248CC4443EE052690AF929A1C2BEE38' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, Fade_In_________X_4248CC4443EE052690AF929A1C2BEE38) == 0x000384, "Member 'ABP_BtlGuiJyokyoHelp_C::Fade_In_________X_4248CC4443EE052690AF929A1C2BEE38' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, Fade_In__Direction_4248CC4443EE052690AF929A1C2BEE38) == 0x000388, "Member 'ABP_BtlGuiJyokyoHelp_C::Fade_In__Direction_4248CC4443EE052690AF929A1C2BEE38' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, Fade_In) == 0x000390, "Member 'ABP_BtlGuiJyokyoHelp_C::Fade_In' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, IsStart) == 0x000398, "Member 'ABP_BtlGuiJyokyoHelp_C::IsStart' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, RenderTime) == 0x00039C, "Member 'ABP_BtlGuiJyokyoHelp_C::RenderTime' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, DelayTime) == 0x0003A0, "Member 'ABP_BtlGuiJyokyoHelp_C::DelayTime' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, Var1) == 0x0003A4, "Member 'ABP_BtlGuiJyokyoHelp_C::Var1' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, BtlGuiIcon) == 0x0003A8, "Member 'ABP_BtlGuiJyokyoHelp_C::BtlGuiIcon' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, MsgNo) == 0x0003B0, "Member 'ABP_BtlGuiJyokyoHelp_C::MsgNo' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, Genus) == 0x0003B4, "Member 'ABP_BtlGuiJyokyoHelp_C::Genus' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, ID) == 0x0003B8, "Member 'ABP_BtlGuiJyokyoHelp_C::ID' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, Var2) == 0x0003BC, "Member 'ABP_BtlGuiJyokyoHelp_C::Var2' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, Flags_0) == 0x0003C0, "Member 'ABP_BtlGuiJyokyoHelp_C::Flags_0' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, PosA) == 0x0003C4, "Member 'ABP_BtlGuiJyokyoHelp_C::PosA' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, GradationScaleW) == 0x0003CC, "Member 'ABP_BtlGuiJyokyoHelp_C::GradationScaleW' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, TextNum) == 0x0003D0, "Member 'ABP_BtlGuiJyokyoHelp_C::TextNum' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, TextLine) == 0x0003D4, "Member 'ABP_BtlGuiJyokyoHelp_C::TextLine' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, TextMinimumNum) == 0x0003D8, "Member 'ABP_BtlGuiJyokyoHelp_C::TextMinimumNum' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, TextMaxNum) == 0x0003DC, "Member 'ABP_BtlGuiJyokyoHelp_C::TextMaxNum' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, GradationScaleMin) == 0x0003E0, "Member 'ABP_BtlGuiJyokyoHelp_C::GradationScaleMin' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, GradationScaleMax) == 0x0003E4, "Member 'ABP_BtlGuiJyokyoHelp_C::GradationScaleMax' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, OutRectObject) == 0x0003E8, "Member 'ABP_BtlGuiJyokyoHelp_C::OutRectObject' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, InRectOjbject) == 0x0003F0, "Member 'ABP_BtlGuiJyokyoHelp_C::InRectOjbject' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, GradationSpriteObj) == 0x0003F8, "Member 'ABP_BtlGuiJyokyoHelp_C::GradationSpriteObj' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, PlateAlphaObj) == 0x000400, "Member 'ABP_BtlGuiJyokyoHelp_C::PlateAlphaObj' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, PlateDrawObj) == 0x000408, "Member 'ABP_BtlGuiJyokyoHelp_C::PlateDrawObj' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, WindowWidth) == 0x000410, "Member 'ABP_BtlGuiJyokyoHelp_C::WindowWidth' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, WindowHeight) == 0x000414, "Member 'ABP_BtlGuiJyokyoHelp_C::WindowHeight' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, WindowDiag) == 0x000418, "Member 'ABP_BtlGuiJyokyoHelp_C::WindowDiag' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, AnimMoveX) == 0x00041C, "Member 'ABP_BtlGuiJyokyoHelp_C::AnimMoveX' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, ANIMFADE) == 0x000420, "Member 'ABP_BtlGuiJyokyoHelp_C::ANIMFADE' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, MsgObj) == 0x000428, "Member 'ABP_BtlGuiJyokyoHelp_C::MsgObj' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, IsStartFadeOut) == 0x000430, "Member 'ABP_BtlGuiJyokyoHelp_C::IsStartFadeOut' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, Text_Height) == 0x000434, "Member 'ABP_BtlGuiJyokyoHelp_C::Text_Height' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, TextWidth) == 0x000438, "Member 'ABP_BtlGuiJyokyoHelp_C::TextWidth' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, GradationScaleH) == 0x00043C, "Member 'ABP_BtlGuiJyokyoHelp_C::GradationScaleH' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, Gradation_Sprite_Mask_Obj) == 0x000440, "Member 'ABP_BtlGuiJyokyoHelp_C::Gradation_Sprite_Mask_Obj' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, Out_Rect_Mask_Object) == 0x000448, "Member 'ABP_BtlGuiJyokyoHelp_C::Out_Rect_Mask_Object' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, ThresholdTextWidth) == 0x000450, "Member 'ABP_BtlGuiJyokyoHelp_C::ThresholdTextWidth' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, ThresholdTextHeight) == 0x000454, "Member 'ABP_BtlGuiJyokyoHelp_C::ThresholdTextHeight' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, MaxWindowWidth) == 0x000458, "Member 'ABP_BtlGuiJyokyoHelp_C::MaxWindowWidth' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, MinWindowWidth) == 0x00045C, "Member 'ABP_BtlGuiJyokyoHelp_C::MinWindowWidth' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, MsgObj2) == 0x000460, "Member 'ABP_BtlGuiJyokyoHelp_C::MsgObj2' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, PosDif2LineMsg) == 0x000468, "Member 'ABP_BtlGuiJyokyoHelp_C::PosDif2LineMsg' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, PosDifMsg) == 0x000470, "Member 'ABP_BtlGuiJyokyoHelp_C::PosDifMsg' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, ColorWindowOut) == 0x000478, "Member 'ABP_BtlGuiJyokyoHelp_C::ColorWindowOut' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, ColorWindowIn) == 0x00047C, "Member 'ABP_BtlGuiJyokyoHelp_C::ColorWindowIn' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, ColorGradation) == 0x000480, "Member 'ABP_BtlGuiJyokyoHelp_C::ColorGradation' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, ColorPlate) == 0x000484, "Member 'ABP_BtlGuiJyokyoHelp_C::ColorPlate' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, IsCenterMsg) == 0x000488, "Member 'ABP_BtlGuiJyokyoHelp_C::IsCenterMsg' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, AnimeFadeOut) == 0x00048C, "Member 'ABP_BtlGuiJyokyoHelp_C::AnimeFadeOut' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, InRectMaskObj) == 0x000490, "Member 'ABP_BtlGuiJyokyoHelp_C::InRectMaskObj' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, OutRectAlphaObject) == 0x000498, "Member 'ABP_BtlGuiJyokyoHelp_C::OutRectAlphaObject' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiJyokyoHelp_C, ColorText) == 0x0004A0, "Member 'ABP_BtlGuiJyokyoHelp_C::ColorText' has a wrong offset!");

}

