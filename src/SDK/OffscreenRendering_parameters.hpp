#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OffscreenRendering

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// DelegateFunction OffscreenRendering.PreviewWorldUpdater.OnSetTargetActor__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PreviewWorldUpdater_OnSetTargetActor__DelegateSignature final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PreviewWorldUpdater_OnSetTargetActor__DelegateSignature) == 0x000008, "Wrong alignment on PreviewWorldUpdater_OnSetTargetActor__DelegateSignature");
static_assert(sizeof(PreviewWorldUpdater_OnSetTargetActor__DelegateSignature) == 0x000008, "Wrong size on PreviewWorldUpdater_OnSetTargetActor__DelegateSignature");
static_assert(offsetof(PreviewWorldUpdater_OnSetTargetActor__DelegateSignature, Actor) == 0x000000, "Member 'PreviewWorldUpdater_OnSetTargetActor__DelegateSignature::Actor' has a wrong offset!");

// Function OffscreenRendering.PreviewWorldUpdater.SetCameraAngle
// 0x000C (0x000C - 0x0000)
struct PreviewWorldUpdater_SetCameraAngle final
{
public:
	struct FRotator                               NewCameraAngle;                                    // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PreviewWorldUpdater_SetCameraAngle) == 0x000004, "Wrong alignment on PreviewWorldUpdater_SetCameraAngle");
static_assert(sizeof(PreviewWorldUpdater_SetCameraAngle) == 0x00000C, "Wrong size on PreviewWorldUpdater_SetCameraAngle");
static_assert(offsetof(PreviewWorldUpdater_SetCameraAngle, NewCameraAngle) == 0x000000, "Member 'PreviewWorldUpdater_SetCameraAngle::NewCameraAngle' has a wrong offset!");

// Function OffscreenRendering.PreviewWorldUpdater.SetCameraPosBoneName
// 0x0010 (0x0010 - 0x0000)
struct PreviewWorldUpdater_SetCameraPosBoneName final
{
public:
	class FString                                 NewCameraPosBoneName;                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PreviewWorldUpdater_SetCameraPosBoneName) == 0x000008, "Wrong alignment on PreviewWorldUpdater_SetCameraPosBoneName");
static_assert(sizeof(PreviewWorldUpdater_SetCameraPosBoneName) == 0x000010, "Wrong size on PreviewWorldUpdater_SetCameraPosBoneName");
static_assert(offsetof(PreviewWorldUpdater_SetCameraPosBoneName, NewCameraPosBoneName) == 0x000000, "Member 'PreviewWorldUpdater_SetCameraPosBoneName::NewCameraPosBoneName' has a wrong offset!");

// Function OffscreenRendering.PreviewWorldUpdater.SetCameraPosition
// 0x000C (0x000C - 0x0000)
struct PreviewWorldUpdater_SetCameraPosition final
{
public:
	struct FVector                                NewCameraPosition;                                 // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PreviewWorldUpdater_SetCameraPosition) == 0x000004, "Wrong alignment on PreviewWorldUpdater_SetCameraPosition");
static_assert(sizeof(PreviewWorldUpdater_SetCameraPosition) == 0x00000C, "Wrong size on PreviewWorldUpdater_SetCameraPosition");
static_assert(offsetof(PreviewWorldUpdater_SetCameraPosition, NewCameraPosition) == 0x000000, "Member 'PreviewWorldUpdater_SetCameraPosition::NewCameraPosition' has a wrong offset!");

// Function OffscreenRendering.PreviewWorldUpdater.SetCameraTransform
// 0x0030 (0x0030 - 0x0000)
struct PreviewWorldUpdater_SetCameraTransform final
{
public:
	struct FTransform                             NewCameraTransform;                                // 0x0000(0x0030)(Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PreviewWorldUpdater_SetCameraTransform) == 0x000010, "Wrong alignment on PreviewWorldUpdater_SetCameraTransform");
static_assert(sizeof(PreviewWorldUpdater_SetCameraTransform) == 0x000030, "Wrong size on PreviewWorldUpdater_SetCameraTransform");
static_assert(offsetof(PreviewWorldUpdater_SetCameraTransform, NewCameraTransform) == 0x000000, "Member 'PreviewWorldUpdater_SetCameraTransform::NewCameraTransform' has a wrong offset!");

// Function OffscreenRendering.PreviewWorldUpdater.SetFoV
// 0x0004 (0x0004 - 0x0000)
struct PreviewWorldUpdater_SetFoV final
{
public:
	float                                         NewFOV;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PreviewWorldUpdater_SetFoV) == 0x000004, "Wrong alignment on PreviewWorldUpdater_SetFoV");
static_assert(sizeof(PreviewWorldUpdater_SetFoV) == 0x000004, "Wrong size on PreviewWorldUpdater_SetFoV");
static_assert(offsetof(PreviewWorldUpdater_SetFoV, NewFOV) == 0x000000, "Member 'PreviewWorldUpdater_SetFoV::NewFOV' has a wrong offset!");

// Function OffscreenRendering.PreviewWorldUpdater.SetGazeMode
// 0x0001 (0x0001 - 0x0000)
struct PreviewWorldUpdater_SetGazeMode final
{
public:
	bool                                          NewGazeMode;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PreviewWorldUpdater_SetGazeMode) == 0x000001, "Wrong alignment on PreviewWorldUpdater_SetGazeMode");
static_assert(sizeof(PreviewWorldUpdater_SetGazeMode) == 0x000001, "Wrong size on PreviewWorldUpdater_SetGazeMode");
static_assert(offsetof(PreviewWorldUpdater_SetGazeMode, NewGazeMode) == 0x000000, "Member 'PreviewWorldUpdater_SetGazeMode::NewGazeMode' has a wrong offset!");

// Function OffscreenRendering.PreviewWorldUpdater.SetGazeOffset
// 0x000C (0x000C - 0x0000)
struct PreviewWorldUpdater_SetGazeOffset final
{
public:
	struct FVector                                NewGazeOffset;                                     // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PreviewWorldUpdater_SetGazeOffset) == 0x000004, "Wrong alignment on PreviewWorldUpdater_SetGazeOffset");
static_assert(sizeof(PreviewWorldUpdater_SetGazeOffset) == 0x00000C, "Wrong size on PreviewWorldUpdater_SetGazeOffset");
static_assert(offsetof(PreviewWorldUpdater_SetGazeOffset, NewGazeOffset) == 0x000000, "Member 'PreviewWorldUpdater_SetGazeOffset::NewGazeOffset' has a wrong offset!");

// Function OffscreenRendering.PreviewWorldUpdater.SetGazeOffsetBoneName
// 0x0010 (0x0010 - 0x0000)
struct PreviewWorldUpdater_SetGazeOffsetBoneName final
{
public:
	class FString                                 NewGazeOffsetBoneName;                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PreviewWorldUpdater_SetGazeOffsetBoneName) == 0x000008, "Wrong alignment on PreviewWorldUpdater_SetGazeOffsetBoneName");
static_assert(sizeof(PreviewWorldUpdater_SetGazeOffsetBoneName) == 0x000010, "Wrong size on PreviewWorldUpdater_SetGazeOffsetBoneName");
static_assert(offsetof(PreviewWorldUpdater_SetGazeOffsetBoneName, NewGazeOffsetBoneName) == 0x000000, "Member 'PreviewWorldUpdater_SetGazeOffsetBoneName::NewGazeOffsetBoneName' has a wrong offset!");

// Function OffscreenRendering.PreviewWorldUpdater.SetTargetActor
// 0x0018 (0x0018 - 0x0000)
struct PreviewWorldUpdater_SetTargetActor final
{
public:
	TSubclassOf<class AActor>                     ActorClass;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsResetCamera;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PreviewWorldUpdater_SetTargetActor) == 0x000008, "Wrong alignment on PreviewWorldUpdater_SetTargetActor");
static_assert(sizeof(PreviewWorldUpdater_SetTargetActor) == 0x000018, "Wrong size on PreviewWorldUpdater_SetTargetActor");
static_assert(offsetof(PreviewWorldUpdater_SetTargetActor, ActorClass) == 0x000000, "Member 'PreviewWorldUpdater_SetTargetActor::ActorClass' has a wrong offset!");
static_assert(offsetof(PreviewWorldUpdater_SetTargetActor, IsResetCamera) == 0x000008, "Member 'PreviewWorldUpdater_SetTargetActor::IsResetCamera' has a wrong offset!");
static_assert(offsetof(PreviewWorldUpdater_SetTargetActor, ReturnValue) == 0x000010, "Member 'PreviewWorldUpdater_SetTargetActor::ReturnValue' has a wrong offset!");

// Function OffscreenRendering.PreviewWorldUpdater.SpawnAttachedActor
// 0x0010 (0x0010 - 0x0000)
struct PreviewWorldUpdater_SpawnAttachedActor final
{
public:
	TSubclassOf<class AActor>                     ActorClass;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PreviewWorldUpdater_SpawnAttachedActor) == 0x000008, "Wrong alignment on PreviewWorldUpdater_SpawnAttachedActor");
static_assert(sizeof(PreviewWorldUpdater_SpawnAttachedActor) == 0x000010, "Wrong size on PreviewWorldUpdater_SpawnAttachedActor");
static_assert(offsetof(PreviewWorldUpdater_SpawnAttachedActor, ActorClass) == 0x000000, "Member 'PreviewWorldUpdater_SpawnAttachedActor::ActorClass' has a wrong offset!");
static_assert(offsetof(PreviewWorldUpdater_SpawnAttachedActor, ReturnValue) == 0x000008, "Member 'PreviewWorldUpdater_SpawnAttachedActor::ReturnValue' has a wrong offset!");

// Function OffscreenRendering.PreviewWorldUpdater.GetPreviewWorld
// 0x0008 (0x0008 - 0x0000)
struct PreviewWorldUpdater_GetPreviewWorld final
{
public:
	class UWorld*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PreviewWorldUpdater_GetPreviewWorld) == 0x000008, "Wrong alignment on PreviewWorldUpdater_GetPreviewWorld");
static_assert(sizeof(PreviewWorldUpdater_GetPreviewWorld) == 0x000008, "Wrong size on PreviewWorldUpdater_GetPreviewWorld");
static_assert(offsetof(PreviewWorldUpdater_GetPreviewWorld, ReturnValue) == 0x000000, "Member 'PreviewWorldUpdater_GetPreviewWorld::ReturnValue' has a wrong offset!");

// Function OffscreenRendering.PreviewWorldUpdater.GetSceneCaptureActor
// 0x0008 (0x0008 - 0x0000)
struct PreviewWorldUpdater_GetSceneCaptureActor final
{
public:
	class ASceneCapture2D*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PreviewWorldUpdater_GetSceneCaptureActor) == 0x000008, "Wrong alignment on PreviewWorldUpdater_GetSceneCaptureActor");
static_assert(sizeof(PreviewWorldUpdater_GetSceneCaptureActor) == 0x000008, "Wrong size on PreviewWorldUpdater_GetSceneCaptureActor");
static_assert(offsetof(PreviewWorldUpdater_GetSceneCaptureActor, ReturnValue) == 0x000000, "Member 'PreviewWorldUpdater_GetSceneCaptureActor::ReturnValue' has a wrong offset!");

// Function OffscreenRendering.PreviewWorldUpdater.GetTargetActor
// 0x0008 (0x0008 - 0x0000)
struct PreviewWorldUpdater_GetTargetActor final
{
public:
	class AActor*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PreviewWorldUpdater_GetTargetActor) == 0x000008, "Wrong alignment on PreviewWorldUpdater_GetTargetActor");
static_assert(sizeof(PreviewWorldUpdater_GetTargetActor) == 0x000008, "Wrong size on PreviewWorldUpdater_GetTargetActor");
static_assert(offsetof(PreviewWorldUpdater_GetTargetActor, ReturnValue) == 0x000000, "Member 'PreviewWorldUpdater_GetTargetActor::ReturnValue' has a wrong offset!");

}

