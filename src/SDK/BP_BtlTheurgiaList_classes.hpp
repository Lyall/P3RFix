#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtlTheurgiaList

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Xrd777_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_BtlGuiBaseActor_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BtlTheurgiaList.BP_BtlTheurgiaList_C
// 0x05D0 (0x0920 - 0x0350)
class ABP_BtlTheurgiaList_C final : public ABP_BtlGuiBaseActor_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_BtlTheurgiaList_C;               // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBtlGuiDrawComponent*                   BtlGuiDraw1;                                       // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiResources*                       BtlGuiResources;                                   // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiListComponent*                   BtlGuiList;                                        // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBtlDataBaseComponent*                  BtlDataBase;                                       // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawComponent*                   BtlGuiDraw;                                        // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         LiR1CursorPushTimeline_rate_B0EAE8204EF7E15F31ECDA8D3FA2183C; // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            LiR1CursorPushTimeline__Direction_B0EAE8204EF7E15F31ECDA8D3FA2183C; // 0x0384(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_385[0x3];                                      // 0x0385(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     LiR1CursorPushTimeline;                            // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentCursorLineLoopAnim_Rate_B6AE3D7148FFEC6DD1C5128317DD76CA; // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            CurrentCursorLineLoopAnim__Direction_B6AE3D7148FFEC6DD1C5128317DD76CA; // 0x0394(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_395[0x3];                                      // 0x0395(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     CurrentCursorLineLoopAnim;                         // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentCusorLineFirstAnim_Rate_A3DC5CB449C083C3D8EEAC8E360739AE; // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            CurrentCusorLineFirstAnim__Direction_A3DC5CB449C083C3D8EEAC8E360739AE; // 0x03A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A5[0x3];                                      // 0x03A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     CurrentCusorLineFirstAnim;                         // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GunKiraAnimation_GunKiraAngle_16DA204D4249515A1A762B8634CD630F; // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GunKiraAnimation_GunKiraScale_16DA204D4249515A1A762B8634CD630F; // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            GunKiraAnimation__Direction_16DA204D4249515A1A762B8634CD630F; // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B9[0x7];                                      // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     GunKiraAnimation;                                  // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         End2Timeline_TheugiaText_0746B7364D1827179AE9FDB77DC05AA6; // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         End2Timeline_BlackOut_0746B7364D1827179AE9FDB77DC05AA6; // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         End2Timeline_BackPanel_0746B7364D1827179AE9FDB77DC05AA6; // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            End2Timeline__Direction_0746B7364D1827179AE9FDB77DC05AA6; // 0x03D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D5[0x3];                                      // 0x03D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     End2Timeline;                                      // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndTimeline_L1R1Rate_DBBA9D8C4FA2EECC86B728939DB3793A; // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndTimeline_L1R1Alpha_DBBA9D8C4FA2EECC86B728939DB3793A; // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndTimeline_SkillRate_DBBA9D8C4FA2EECC86B728939DB3793A; // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndTimeline_CursorRate_DBBA9D8C4FA2EECC86B728939DB3793A; // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndTimeline_DerailTextOut_DBBA9D8C4FA2EECC86B728939DB3793A; // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndTimeline_CharaSillhouette_DBBA9D8C4FA2EECC86B728939DB3793A; // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            EndTimeline__Direction_DBBA9D8C4FA2EECC86B728939DB3793A; // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     EndTimeline;                                       // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartTimeline_L1R1Alpha_53B5554142B17FE4A448E8B74720436C; // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartTimeline_LiR1Rate_53B5554142B17FE4A448E8B74720436C; // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartTimeline_CursorListRate_53B5554142B17FE4A448E8B74720436C; // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartTimeline_CursorRate_53B5554142B17FE4A448E8B74720436C; // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartTimeline_SkillHelpText_53B5554142B17FE4A448E8B74720436C; // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartTimeline_DetailTextIn_53B5554142B17FE4A448E8B74720436C; // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartTimeline_KiraRate_53B5554142B17FE4A448E8B74720436C; // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartTimeline_TheurgiaText_53B5554142B17FE4A448E8B74720436C; // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartTimeline_CharaSillhuette_53B5554142B17FE4A448E8B74720436C; // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartTimeline_BackNumber_53B5554142B17FE4A448E8B74720436C; // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartTimeline_BackPanel_53B5554142B17FE4A448E8B74720436C; // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartTimeline_BlackOut_53B5554142B17FE4A448E8B74720436C; // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            StartTimeline__Direction_53B5554142B17FE4A448E8B74720436C; // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_439[0x7];                                      // 0x0439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     StartTimeline;                                     // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LiR1CursorTimeline_Rate_30129F824B1D197A3CFF9CBFB446C1F7; // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            LiR1CursorTimeline__Direction_30129F824B1D197A3CFF9CBFB446C1F7; // 0x044C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44D[0x3];                                      // 0x044D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     LiR1CursorTimeline;                                // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentCursorOutAnim_Rate_23AE08D1424BF5AEBA06968357E268C2; // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            CurrentCursorOutAnim__Direction_23AE08D1424BF5AEBA06968357E268C2; // 0x045C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45D[0x3];                                      // 0x045D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     CurrentCursorOutAnim;                              // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentCursorInTimeline_Rate_032CF2104D2EB2A02B7CB896DCDDF7B7; // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            CurrentCursorInTimeline__Direction_032CF2104D2EB2A02B7CB896DCDDF7B7; // 0x046C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46D[0x3];                                      // 0x046D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     CurrentCursorInTimeline;                           // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentCursorAlwaysTimeline_ChangeTiming_FA1072F14AD880E5F760D1A18C6F3489; // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentCursorAlwaysTimeline_Persona_FA1072F14AD880E5F760D1A18C6F3489; // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentCursorAlwaysTimeline_Light_FA1072F14AD880E5F760D1A18C6F3489; // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            CurrentCursorAlwaysTimeline__Direction_FA1072F14AD880E5F760D1A18C6F3489; // 0x0484(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_485[0x3];                                      // 0x0485(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     CurrentCursorAlwaysTimeline;                       // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CursorMoveTimeline_CursorMove_9DA1705347736F9C704B3F8E64709C25; // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            CursorMoveTimeline__Direction_9DA1705347736F9C704B3F8E64709C25; // 0x0494(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_495[0x3];                                      // 0x0495(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     CursorMoveTimeline;                                // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DetailEndTimeline_CloseDetailMovementRate_D5875183492CEB1B7F13E7BDED6174ED; // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DetailEndTimeline_CloseDetailAddText_D5875183492CEB1B7F13E7BDED6174ED; // 0x04A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DetailEndTimeline_CloseNormalPersonalityRate_D5875183492CEB1B7F13E7BDED6174ED; // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DetailEndTimeline_CloseDetailTheurgiaRate_D5875183492CEB1B7F13E7BDED6174ED; // 0x04AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DetailEndTimeline_CloseCircleScale_D5875183492CEB1B7F13E7BDED6174ED; // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DetailEndTimeline_CloseCirclePos_D5875183492CEB1B7F13E7BDED6174ED; // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            DetailEndTimeline__Direction_D5875183492CEB1B7F13E7BDED6174ED; // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B9[0x7];                                      // 0x04B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     DetailEndTimeline;                                 // 0x04C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DetailStartTimeline_DetailKira_13E1156D45CDDACBB1FE8B83FF8ABAC8; // 0x04C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DetailStartTimeline_DetailMovementRate_13E1156D45CDDACBB1FE8B83FF8ABAC8; // 0x04D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DetailStartTimeline_DetailAddText_13E1156D45CDDACBB1FE8B83FF8ABAC8; // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DetailStartTimeline_DetailNormalPersonalityRate_13E1156D45CDDACBB1FE8B83FF8ABAC8; // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DetailStartTimeline_DetailPersonalityRate_13E1156D45CDDACBB1FE8B83FF8ABAC8; // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DetailStartTimeline_CircleScale_13E1156D45CDDACBB1FE8B83FF8ABAC8; // 0x04E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DetailStartTimeline_CirclePos_13E1156D45CDDACBB1FE8B83FF8ABAC8; // 0x04E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            DetailStartTimeline__Direction_13E1156D45CDDACBB1FE8B83FF8ABAC8; // 0x04EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ED[0x3];                                      // 0x04ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     DetailStartTimeline;                               // 0x04F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ListDtawMax;                                       // 0x04F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CursorIndex;                                       // 0x04FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TopIndex;                                          // 0x0500(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentIndex;                                      // 0x0504(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ForIndex;                                          // 0x0508(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50C[0x4];                                      // 0x050C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ItemNameStr;                                       // 0x0510(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 ItemNumStr;                                        // 0x0520(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<int32>                                 ItemList;                                          // 0x0530(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          TheurgiaEnable;                                    // 0x0540(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_541[0x7];                                      // 0x0541(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBtlGuiDrawObjectText*                  SkillText;                                         // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBtlGuiDrawObjectMsg*>           SkillMsg;                                          // 0x0550(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UBtlGuiDrawObjectMsg*>           FlaverText;                                        // 0x0560(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TArray<class UBtlGuiDrawObjectText*>          AutoSpecialSkillName;                              // 0x0570(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UBtlGuiDrawObjectMsg*>           AutoSpecialSkillMsg;                               // 0x0580(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          AutoSkillPower_Up;                                 // 0x0590(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          AutoSkillEnable;                                   // 0x0591(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_592[0x6];                                      // 0x0592(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBtlGuiDrawObjectPlg*                   AutoSpecialSkillPowerUp;                           // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBtlGuiDrawObjectPrimitive*>     CircleList;                                        // 0x05A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector2D                              CirclePos;                                         // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CircleScale;                                       // 0x05B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CirclePrevScale;                                   // 0x05BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectPlg*                   DetailTheurgia;                                    // 0x05C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              DetailPersonalityOffset;                           // 0x05C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Detail_Personality_Rate;                           // 0x05D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              NormalPersonalityOffset;                           // 0x05D4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DC[0x4];                                      // 0x05DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBtlGuiDrawObjectSprite*                NormalPersonality;                                 // 0x05E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NormalPersonalityRate;                             // 0x05E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EC[0x4];                                      // 0x05EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBtlGuiDrawObjectCore*>          DetailAddText;                                     // 0x05F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FVector2D>                      DetailOutTextOffset;                               // 0x0600(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         DetailAddRate;                                     // 0x0610(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              FlavorTextOffset;                                  // 0x0614(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              DetailFlavorTextOffset;                            // 0x061C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DetailMovementRate;                                // 0x0624(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBtlGuiDrawObjectPlg*>           KiraEffect;                                        // 0x0628(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector2D                              Kira1Offset;                                       // 0x0638(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              DetailKira1Offset;                                 // 0x0640(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 DetailKiraScaleOffset;                             // 0x0648(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<float>                                 DetailKiraAngleOffset;                             // 0x0658(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                DetailKiraAngle;                                   // 0x0668(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CursorOffset;                                      // 0x0674(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_67C[0x4];                                      // 0x067C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector2D>                      CursorIconPos_List;                                // 0x0680(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UBtlGuiDrawObjectSprite*>        CursorAttrList;                                    // 0x0690(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UBtlGuiDrawObjectSprite*>        CursorWeakList;                                    // 0x06A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FVector2D>                      PrevCursorIconPos_List;                            // 0x06B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         CursorMove;                                        // 0x06C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              AddAnimationOffset;                                // 0x06C4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6CC[0x4];                                      // 0x06CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 CurrentCursorAlpha;                                // 0x06D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UBtlGuiDrawObjectCore*>          CurrentCursor;                                     // 0x06E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Persona_ID1;                                       // 0x06F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Persona_ID2;                                       // 0x06F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Two_Persona;                                       // 0x06F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsPersona2;                                        // 0x06F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6FA[0x2];                                      // 0x06FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurrentCursorLight;                                // 0x06FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentCursorPersona;                              // 0x0700(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PersonaChangeTiming;                               // 0x0704(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBtlGuiDrawObjectCore*>          CurrentCursor2;                                    // 0x0708(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<float>                                 CurrentCursorAlpha2;                               // 0x0718(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         CurrentCursorMovement2;                            // 0x0728(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentCursorMovement;                             // 0x072C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CurrentCursorPos;                                  // 0x0730(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CurrentCursorPos2;                                 // 0x0738(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectLineFrame*             CursorLine;                                        // 0x0740(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                CursorLineEffect;                                  // 0x0748(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBtlGuiDrawObjectSprite*>        CurrensCursorWeak;                                 // 0x0750(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector2D                              CurrentCursorWeakPos;                              // 0x0760(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CurrentCursorWeakPos2;                             // 0x0768(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBtlGuiDrawObjectCore*>          ListBandNumber;                                    // 0x0770(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UBtlGuiDrawObjectSprite*>        L1R1Vector;                                        // 0x0780(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FVector2D>                      LiR1VectorPos;                                     // 0x0790(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          L1R1CursorLoop;                                    // 0x07A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A1[0x3];                                      // 0x07A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LiR1Rate;                                          // 0x07A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OpenDetail;                                        // 0x07A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A9[0x3];                                      // 0x07A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 L1R1Color;                                         // 0x07AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBtlGuiDrawObjectPrimitive*>     BackGround;                                        // 0x07B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         FadeinBlackOut;                                    // 0x07C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeinBackPanel;                                   // 0x07C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeinBackNumber;                                  // 0x07C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7CC[0x4];                                      // 0x07CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBtlGuiDrawObjectPrimitive*             BackBlack;                                         // 0x07D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector2D>                      BackNumberPos;                                     // 0x07D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UBtlGuiDrawObjectCore*>          CharaSillhuette;                                   // 0x07E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         Chara_Sillhuette;                                  // 0x07F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PrevChara_Sillhuette;                              // 0x07FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Theurgia_TextAnim;                                 // 0x0800(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_804[0x4];                                      // 0x0804(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBtlGuiDrawObjectPlg*                   TeurgiaText;                                       // 0x0808(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Kira_Rate;                                         // 0x0810(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Detail_Text_In;                                    // 0x0814(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Skill_Help_Text;                                   // 0x0818(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              SkillTextPos;                                      // 0x081C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStartedCursor;                                   // 0x0824(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_825[0x3];                                      // 0x0825(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Cursor_Rate;                                       // 0x0828(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CursorAutoScaling;                                 // 0x082C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82D[0x3];                                      // 0x082D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CursorAnimStartTime;                               // 0x0830(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cursor_List_Rate;                                  // 0x0834(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Vector_Rate;                                       // 0x0838(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InAnimEnd;                                         // 0x083C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_83D[0x3];                                      // 0x083D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Skill_Rate;                                        // 0x0840(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L1R1Cursor;                                        // 0x0844(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ExitingTopUI;                                      // 0x0850(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_851[0x7];                                      // 0x0851(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBtlGuiDrawObjectPlg*                   GunKira;                                           // 0x0858(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Gun_Kira_Scale;                                    // 0x0860(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L1R1Alpha;                                         // 0x0864(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Material;                                          // 0x0868(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectCore*                  SillhoetteEffect;                                  // 0x0870(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Gun_Kira_Angle;                                    // 0x0878(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GunKitaStartTime;                                  // 0x087C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GunKiraStartFlag;                                  // 0x0880(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_881[0x3];                                      // 0x0881(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Cursor_Close_Rate;                                 // 0x0884(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CursorAnimationFlag;                               // 0x0888(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_889[0x3];                                      // 0x0889(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CursorPushAnim;                                    // 0x088C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HeadLookAtHlag;                                    // 0x0890(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_891[0x7];                                      // 0x0891(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class ABtlActor*, int32>                 CursorSaveMap;                                     // 0x0898(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          CancelAnimFastEnd;                                 // 0x08E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E9[0x7];                                      // 0x08E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             LayoutData;                                        // 0x08F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             BtlTheurgiaLookatNoUseTable;                       // 0x08F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             BtlTheurgiaLookatTable;                            // 0x0900(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             BtlTheurgiaKiraOffsetTable;                        // 0x0908(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USprAsset*                              PersonaSprAsset;                                   // 0x0910(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MetisDrawPlgNo;                                    // 0x0918(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_BtlTheurgiaList(int32 EntryPoint);
	void GuiActorStateExit();
	void GuiActorUpdate(float DeltaTime);
	void GuiActorBeginPlay();
	void GuiActorStateInit(bool Flag, int32 Param);
	void CursorMoveEvent();
	void CallRL();
	void CallCANCEL();
	void CallOK();
	void GuiActorUnbindAction();
	void GuiActorBindAction();
	void CursorUpdate(int32 CursorType);
	void AnimationUpdate();
	void StartL1R1PushAnim(bool IsLeft);
	void StartGunKiraAnimation();
	void StartFadeOUT();
	void StartFadeIN();
	void StopLiR1Animation();
	void StartLiR1Animation();
	void StartCurrentCursorInAnimation(bool IsLeft);
	void StartCurrentCursorAlwaysAnimation();
	void StartCursorMoveAnimation();
	void CloseDetailAnimation();
	void OpenDetailAnimation();
	void LiR1CursorPushTimeline__UpdateFunc();
	void LiR1CursorPushTimeline__FinishedFunc();
	void CurrentCursorLineLoopAnim__UpdateFunc();
	void CurrentCursorLineLoopAnim__FinishedFunc();
	void CurrentCusorLineFirstAnim__UpdateFunc();
	void CurrentCusorLineFirstAnim__FinishedFunc();
	void GunKiraAnimation__UpdateFunc();
	void GunKiraAnimation__FinishedFunc();
	void End2Timeline__UpdateFunc();
	void End2Timeline__FinishedFunc();
	void EndTimeline__UpdateFunc();
	void EndTimeline__FinishedFunc();
	void StartTimeline__CursorLoopAnimStart__EventFunc();
	void StartTimeline__UpdateFunc();
	void StartTimeline__FinishedFunc();
	void LiR1CursorTimeline__UpdateFunc();
	void LiR1CursorTimeline__FinishedFunc();
	void CurrentCursorOutAnim__UpdateFunc();
	void CurrentCursorOutAnim__FinishedFunc();
	void CurrentCursorInTimeline__UpdateFunc();
	void CurrentCursorInTimeline__FinishedFunc();
	void CurrentCursorAlwaysTimeline__UpdateFunc();
	void CurrentCursorAlwaysTimeline__FinishedFunc();
	void CursorMoveTimeline__UpdateFunc();
	void CursorMoveTimeline__FinishedFunc();
	void DetailEndTimeline__UpdateFunc();
	void DetailEndTimeline__FinishedFunc();
	void DetailStartTimeline__UpdateFunc();
	void DetailStartTimeline__FinishedFunc();
	void GetSkillName(int32 SkillId, class FString* OutString);
	void SetSkillText();
	void SetSilhouetteMode(bool IsUIColor);
	void GetIconPosList(int32 Cursor, TArray<struct FVector2D>* PosList);
	void SetCurrentCursorParams(int32 SkillId);
	void StartSurcorAnimation(int32 Cursor, bool IsLeft);
	struct FVector2D GetGunKiraPos(class UObject* Object);
	void RefrectLocalizeData();
	void CalcMetisPlgNo(int32 PlgNo, const struct FBtlGuiDrawPlg& BtlGuiDrawPlg, class UPlgAsset** Plg);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BtlTheurgiaList_C">();
	}
	static class ABP_BtlTheurgiaList_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BtlTheurgiaList_C>();
	}
};
static_assert(alignof(ABP_BtlTheurgiaList_C) == 0x000008, "Wrong alignment on ABP_BtlTheurgiaList_C");
static_assert(sizeof(ABP_BtlTheurgiaList_C) == 0x000920, "Wrong size on ABP_BtlTheurgiaList_C");
static_assert(offsetof(ABP_BtlTheurgiaList_C, UberGraphFrame_BP_BtlTheurgiaList_C) == 0x000350, "Member 'ABP_BtlTheurgiaList_C::UberGraphFrame_BP_BtlTheurgiaList_C' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, BtlGuiDraw1) == 0x000358, "Member 'ABP_BtlTheurgiaList_C::BtlGuiDraw1' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, BtlGuiResources) == 0x000360, "Member 'ABP_BtlTheurgiaList_C::BtlGuiResources' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, BtlGuiList) == 0x000368, "Member 'ABP_BtlTheurgiaList_C::BtlGuiList' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, BtlDataBase) == 0x000370, "Member 'ABP_BtlTheurgiaList_C::BtlDataBase' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, BtlGuiDraw) == 0x000378, "Member 'ABP_BtlTheurgiaList_C::BtlGuiDraw' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, LiR1CursorPushTimeline_rate_B0EAE8204EF7E15F31ECDA8D3FA2183C) == 0x000380, "Member 'ABP_BtlTheurgiaList_C::LiR1CursorPushTimeline_rate_B0EAE8204EF7E15F31ECDA8D3FA2183C' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, LiR1CursorPushTimeline__Direction_B0EAE8204EF7E15F31ECDA8D3FA2183C) == 0x000384, "Member 'ABP_BtlTheurgiaList_C::LiR1CursorPushTimeline__Direction_B0EAE8204EF7E15F31ECDA8D3FA2183C' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, LiR1CursorPushTimeline) == 0x000388, "Member 'ABP_BtlTheurgiaList_C::LiR1CursorPushTimeline' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CurrentCursorLineLoopAnim_Rate_B6AE3D7148FFEC6DD1C5128317DD76CA) == 0x000390, "Member 'ABP_BtlTheurgiaList_C::CurrentCursorLineLoopAnim_Rate_B6AE3D7148FFEC6DD1C5128317DD76CA' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CurrentCursorLineLoopAnim__Direction_B6AE3D7148FFEC6DD1C5128317DD76CA) == 0x000394, "Member 'ABP_BtlTheurgiaList_C::CurrentCursorLineLoopAnim__Direction_B6AE3D7148FFEC6DD1C5128317DD76CA' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CurrentCursorLineLoopAnim) == 0x000398, "Member 'ABP_BtlTheurgiaList_C::CurrentCursorLineLoopAnim' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CurrentCusorLineFirstAnim_Rate_A3DC5CB449C083C3D8EEAC8E360739AE) == 0x0003A0, "Member 'ABP_BtlTheurgiaList_C::CurrentCusorLineFirstAnim_Rate_A3DC5CB449C083C3D8EEAC8E360739AE' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CurrentCusorLineFirstAnim__Direction_A3DC5CB449C083C3D8EEAC8E360739AE) == 0x0003A4, "Member 'ABP_BtlTheurgiaList_C::CurrentCusorLineFirstAnim__Direction_A3DC5CB449C083C3D8EEAC8E360739AE' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CurrentCusorLineFirstAnim) == 0x0003A8, "Member 'ABP_BtlTheurgiaList_C::CurrentCusorLineFirstAnim' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, GunKiraAnimation_GunKiraAngle_16DA204D4249515A1A762B8634CD630F) == 0x0003B0, "Member 'ABP_BtlTheurgiaList_C::GunKiraAnimation_GunKiraAngle_16DA204D4249515A1A762B8634CD630F' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, GunKiraAnimation_GunKiraScale_16DA204D4249515A1A762B8634CD630F) == 0x0003B4, "Member 'ABP_BtlTheurgiaList_C::GunKiraAnimation_GunKiraScale_16DA204D4249515A1A762B8634CD630F' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, GunKiraAnimation__Direction_16DA204D4249515A1A762B8634CD630F) == 0x0003B8, "Member 'ABP_BtlTheurgiaList_C::GunKiraAnimation__Direction_16DA204D4249515A1A762B8634CD630F' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, GunKiraAnimation) == 0x0003C0, "Member 'ABP_BtlTheurgiaList_C::GunKiraAnimation' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, End2Timeline_TheugiaText_0746B7364D1827179AE9FDB77DC05AA6) == 0x0003C8, "Member 'ABP_BtlTheurgiaList_C::End2Timeline_TheugiaText_0746B7364D1827179AE9FDB77DC05AA6' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, End2Timeline_BlackOut_0746B7364D1827179AE9FDB77DC05AA6) == 0x0003CC, "Member 'ABP_BtlTheurgiaList_C::End2Timeline_BlackOut_0746B7364D1827179AE9FDB77DC05AA6' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, End2Timeline_BackPanel_0746B7364D1827179AE9FDB77DC05AA6) == 0x0003D0, "Member 'ABP_BtlTheurgiaList_C::End2Timeline_BackPanel_0746B7364D1827179AE9FDB77DC05AA6' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, End2Timeline__Direction_0746B7364D1827179AE9FDB77DC05AA6) == 0x0003D4, "Member 'ABP_BtlTheurgiaList_C::End2Timeline__Direction_0746B7364D1827179AE9FDB77DC05AA6' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, End2Timeline) == 0x0003D8, "Member 'ABP_BtlTheurgiaList_C::End2Timeline' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, EndTimeline_L1R1Rate_DBBA9D8C4FA2EECC86B728939DB3793A) == 0x0003E0, "Member 'ABP_BtlTheurgiaList_C::EndTimeline_L1R1Rate_DBBA9D8C4FA2EECC86B728939DB3793A' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, EndTimeline_L1R1Alpha_DBBA9D8C4FA2EECC86B728939DB3793A) == 0x0003E4, "Member 'ABP_BtlTheurgiaList_C::EndTimeline_L1R1Alpha_DBBA9D8C4FA2EECC86B728939DB3793A' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, EndTimeline_SkillRate_DBBA9D8C4FA2EECC86B728939DB3793A) == 0x0003E8, "Member 'ABP_BtlTheurgiaList_C::EndTimeline_SkillRate_DBBA9D8C4FA2EECC86B728939DB3793A' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, EndTimeline_CursorRate_DBBA9D8C4FA2EECC86B728939DB3793A) == 0x0003EC, "Member 'ABP_BtlTheurgiaList_C::EndTimeline_CursorRate_DBBA9D8C4FA2EECC86B728939DB3793A' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, EndTimeline_DerailTextOut_DBBA9D8C4FA2EECC86B728939DB3793A) == 0x0003F0, "Member 'ABP_BtlTheurgiaList_C::EndTimeline_DerailTextOut_DBBA9D8C4FA2EECC86B728939DB3793A' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, EndTimeline_CharaSillhouette_DBBA9D8C4FA2EECC86B728939DB3793A) == 0x0003F4, "Member 'ABP_BtlTheurgiaList_C::EndTimeline_CharaSillhouette_DBBA9D8C4FA2EECC86B728939DB3793A' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, EndTimeline__Direction_DBBA9D8C4FA2EECC86B728939DB3793A) == 0x0003F8, "Member 'ABP_BtlTheurgiaList_C::EndTimeline__Direction_DBBA9D8C4FA2EECC86B728939DB3793A' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, EndTimeline) == 0x000400, "Member 'ABP_BtlTheurgiaList_C::EndTimeline' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, StartTimeline_L1R1Alpha_53B5554142B17FE4A448E8B74720436C) == 0x000408, "Member 'ABP_BtlTheurgiaList_C::StartTimeline_L1R1Alpha_53B5554142B17FE4A448E8B74720436C' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, StartTimeline_LiR1Rate_53B5554142B17FE4A448E8B74720436C) == 0x00040C, "Member 'ABP_BtlTheurgiaList_C::StartTimeline_LiR1Rate_53B5554142B17FE4A448E8B74720436C' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, StartTimeline_CursorListRate_53B5554142B17FE4A448E8B74720436C) == 0x000410, "Member 'ABP_BtlTheurgiaList_C::StartTimeline_CursorListRate_53B5554142B17FE4A448E8B74720436C' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, StartTimeline_CursorRate_53B5554142B17FE4A448E8B74720436C) == 0x000414, "Member 'ABP_BtlTheurgiaList_C::StartTimeline_CursorRate_53B5554142B17FE4A448E8B74720436C' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, StartTimeline_SkillHelpText_53B5554142B17FE4A448E8B74720436C) == 0x000418, "Member 'ABP_BtlTheurgiaList_C::StartTimeline_SkillHelpText_53B5554142B17FE4A448E8B74720436C' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, StartTimeline_DetailTextIn_53B5554142B17FE4A448E8B74720436C) == 0x00041C, "Member 'ABP_BtlTheurgiaList_C::StartTimeline_DetailTextIn_53B5554142B17FE4A448E8B74720436C' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, StartTimeline_KiraRate_53B5554142B17FE4A448E8B74720436C) == 0x000420, "Member 'ABP_BtlTheurgiaList_C::StartTimeline_KiraRate_53B5554142B17FE4A448E8B74720436C' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, StartTimeline_TheurgiaText_53B5554142B17FE4A448E8B74720436C) == 0x000424, "Member 'ABP_BtlTheurgiaList_C::StartTimeline_TheurgiaText_53B5554142B17FE4A448E8B74720436C' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, StartTimeline_CharaSillhuette_53B5554142B17FE4A448E8B74720436C) == 0x000428, "Member 'ABP_BtlTheurgiaList_C::StartTimeline_CharaSillhuette_53B5554142B17FE4A448E8B74720436C' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, StartTimeline_BackNumber_53B5554142B17FE4A448E8B74720436C) == 0x00042C, "Member 'ABP_BtlTheurgiaList_C::StartTimeline_BackNumber_53B5554142B17FE4A448E8B74720436C' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, StartTimeline_BackPanel_53B5554142B17FE4A448E8B74720436C) == 0x000430, "Member 'ABP_BtlTheurgiaList_C::StartTimeline_BackPanel_53B5554142B17FE4A448E8B74720436C' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, StartTimeline_BlackOut_53B5554142B17FE4A448E8B74720436C) == 0x000434, "Member 'ABP_BtlTheurgiaList_C::StartTimeline_BlackOut_53B5554142B17FE4A448E8B74720436C' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, StartTimeline__Direction_53B5554142B17FE4A448E8B74720436C) == 0x000438, "Member 'ABP_BtlTheurgiaList_C::StartTimeline__Direction_53B5554142B17FE4A448E8B74720436C' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, StartTimeline) == 0x000440, "Member 'ABP_BtlTheurgiaList_C::StartTimeline' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, LiR1CursorTimeline_Rate_30129F824B1D197A3CFF9CBFB446C1F7) == 0x000448, "Member 'ABP_BtlTheurgiaList_C::LiR1CursorTimeline_Rate_30129F824B1D197A3CFF9CBFB446C1F7' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, LiR1CursorTimeline__Direction_30129F824B1D197A3CFF9CBFB446C1F7) == 0x00044C, "Member 'ABP_BtlTheurgiaList_C::LiR1CursorTimeline__Direction_30129F824B1D197A3CFF9CBFB446C1F7' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, LiR1CursorTimeline) == 0x000450, "Member 'ABP_BtlTheurgiaList_C::LiR1CursorTimeline' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CurrentCursorOutAnim_Rate_23AE08D1424BF5AEBA06968357E268C2) == 0x000458, "Member 'ABP_BtlTheurgiaList_C::CurrentCursorOutAnim_Rate_23AE08D1424BF5AEBA06968357E268C2' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CurrentCursorOutAnim__Direction_23AE08D1424BF5AEBA06968357E268C2) == 0x00045C, "Member 'ABP_BtlTheurgiaList_C::CurrentCursorOutAnim__Direction_23AE08D1424BF5AEBA06968357E268C2' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CurrentCursorOutAnim) == 0x000460, "Member 'ABP_BtlTheurgiaList_C::CurrentCursorOutAnim' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CurrentCursorInTimeline_Rate_032CF2104D2EB2A02B7CB896DCDDF7B7) == 0x000468, "Member 'ABP_BtlTheurgiaList_C::CurrentCursorInTimeline_Rate_032CF2104D2EB2A02B7CB896DCDDF7B7' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CurrentCursorInTimeline__Direction_032CF2104D2EB2A02B7CB896DCDDF7B7) == 0x00046C, "Member 'ABP_BtlTheurgiaList_C::CurrentCursorInTimeline__Direction_032CF2104D2EB2A02B7CB896DCDDF7B7' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CurrentCursorInTimeline) == 0x000470, "Member 'ABP_BtlTheurgiaList_C::CurrentCursorInTimeline' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CurrentCursorAlwaysTimeline_ChangeTiming_FA1072F14AD880E5F760D1A18C6F3489) == 0x000478, "Member 'ABP_BtlTheurgiaList_C::CurrentCursorAlwaysTimeline_ChangeTiming_FA1072F14AD880E5F760D1A18C6F3489' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CurrentCursorAlwaysTimeline_Persona_FA1072F14AD880E5F760D1A18C6F3489) == 0x00047C, "Member 'ABP_BtlTheurgiaList_C::CurrentCursorAlwaysTimeline_Persona_FA1072F14AD880E5F760D1A18C6F3489' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CurrentCursorAlwaysTimeline_Light_FA1072F14AD880E5F760D1A18C6F3489) == 0x000480, "Member 'ABP_BtlTheurgiaList_C::CurrentCursorAlwaysTimeline_Light_FA1072F14AD880E5F760D1A18C6F3489' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CurrentCursorAlwaysTimeline__Direction_FA1072F14AD880E5F760D1A18C6F3489) == 0x000484, "Member 'ABP_BtlTheurgiaList_C::CurrentCursorAlwaysTimeline__Direction_FA1072F14AD880E5F760D1A18C6F3489' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CurrentCursorAlwaysTimeline) == 0x000488, "Member 'ABP_BtlTheurgiaList_C::CurrentCursorAlwaysTimeline' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CursorMoveTimeline_CursorMove_9DA1705347736F9C704B3F8E64709C25) == 0x000490, "Member 'ABP_BtlTheurgiaList_C::CursorMoveTimeline_CursorMove_9DA1705347736F9C704B3F8E64709C25' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CursorMoveTimeline__Direction_9DA1705347736F9C704B3F8E64709C25) == 0x000494, "Member 'ABP_BtlTheurgiaList_C::CursorMoveTimeline__Direction_9DA1705347736F9C704B3F8E64709C25' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CursorMoveTimeline) == 0x000498, "Member 'ABP_BtlTheurgiaList_C::CursorMoveTimeline' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, DetailEndTimeline_CloseDetailMovementRate_D5875183492CEB1B7F13E7BDED6174ED) == 0x0004A0, "Member 'ABP_BtlTheurgiaList_C::DetailEndTimeline_CloseDetailMovementRate_D5875183492CEB1B7F13E7BDED6174ED' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, DetailEndTimeline_CloseDetailAddText_D5875183492CEB1B7F13E7BDED6174ED) == 0x0004A4, "Member 'ABP_BtlTheurgiaList_C::DetailEndTimeline_CloseDetailAddText_D5875183492CEB1B7F13E7BDED6174ED' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, DetailEndTimeline_CloseNormalPersonalityRate_D5875183492CEB1B7F13E7BDED6174ED) == 0x0004A8, "Member 'ABP_BtlTheurgiaList_C::DetailEndTimeline_CloseNormalPersonalityRate_D5875183492CEB1B7F13E7BDED6174ED' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, DetailEndTimeline_CloseDetailTheurgiaRate_D5875183492CEB1B7F13E7BDED6174ED) == 0x0004AC, "Member 'ABP_BtlTheurgiaList_C::DetailEndTimeline_CloseDetailTheurgiaRate_D5875183492CEB1B7F13E7BDED6174ED' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, DetailEndTimeline_CloseCircleScale_D5875183492CEB1B7F13E7BDED6174ED) == 0x0004B0, "Member 'ABP_BtlTheurgiaList_C::DetailEndTimeline_CloseCircleScale_D5875183492CEB1B7F13E7BDED6174ED' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, DetailEndTimeline_CloseCirclePos_D5875183492CEB1B7F13E7BDED6174ED) == 0x0004B4, "Member 'ABP_BtlTheurgiaList_C::DetailEndTimeline_CloseCirclePos_D5875183492CEB1B7F13E7BDED6174ED' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, DetailEndTimeline__Direction_D5875183492CEB1B7F13E7BDED6174ED) == 0x0004B8, "Member 'ABP_BtlTheurgiaList_C::DetailEndTimeline__Direction_D5875183492CEB1B7F13E7BDED6174ED' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, DetailEndTimeline) == 0x0004C0, "Member 'ABP_BtlTheurgiaList_C::DetailEndTimeline' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, DetailStartTimeline_DetailKira_13E1156D45CDDACBB1FE8B83FF8ABAC8) == 0x0004C8, "Member 'ABP_BtlTheurgiaList_C::DetailStartTimeline_DetailKira_13E1156D45CDDACBB1FE8B83FF8ABAC8' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, DetailStartTimeline_DetailMovementRate_13E1156D45CDDACBB1FE8B83FF8ABAC8) == 0x0004D4, "Member 'ABP_BtlTheurgiaList_C::DetailStartTimeline_DetailMovementRate_13E1156D45CDDACBB1FE8B83FF8ABAC8' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, DetailStartTimeline_DetailAddText_13E1156D45CDDACBB1FE8B83FF8ABAC8) == 0x0004D8, "Member 'ABP_BtlTheurgiaList_C::DetailStartTimeline_DetailAddText_13E1156D45CDDACBB1FE8B83FF8ABAC8' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, DetailStartTimeline_DetailNormalPersonalityRate_13E1156D45CDDACBB1FE8B83FF8ABAC8) == 0x0004DC, "Member 'ABP_BtlTheurgiaList_C::DetailStartTimeline_DetailNormalPersonalityRate_13E1156D45CDDACBB1FE8B83FF8ABAC8' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, DetailStartTimeline_DetailPersonalityRate_13E1156D45CDDACBB1FE8B83FF8ABAC8) == 0x0004E0, "Member 'ABP_BtlTheurgiaList_C::DetailStartTimeline_DetailPersonalityRate_13E1156D45CDDACBB1FE8B83FF8ABAC8' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, DetailStartTimeline_CircleScale_13E1156D45CDDACBB1FE8B83FF8ABAC8) == 0x0004E4, "Member 'ABP_BtlTheurgiaList_C::DetailStartTimeline_CircleScale_13E1156D45CDDACBB1FE8B83FF8ABAC8' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, DetailStartTimeline_CirclePos_13E1156D45CDDACBB1FE8B83FF8ABAC8) == 0x0004E8, "Member 'ABP_BtlTheurgiaList_C::DetailStartTimeline_CirclePos_13E1156D45CDDACBB1FE8B83FF8ABAC8' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, DetailStartTimeline__Direction_13E1156D45CDDACBB1FE8B83FF8ABAC8) == 0x0004EC, "Member 'ABP_BtlTheurgiaList_C::DetailStartTimeline__Direction_13E1156D45CDDACBB1FE8B83FF8ABAC8' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, DetailStartTimeline) == 0x0004F0, "Member 'ABP_BtlTheurgiaList_C::DetailStartTimeline' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, ListDtawMax) == 0x0004F8, "Member 'ABP_BtlTheurgiaList_C::ListDtawMax' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CursorIndex) == 0x0004FC, "Member 'ABP_BtlTheurgiaList_C::CursorIndex' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, TopIndex) == 0x000500, "Member 'ABP_BtlTheurgiaList_C::TopIndex' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CurrentIndex) == 0x000504, "Member 'ABP_BtlTheurgiaList_C::CurrentIndex' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, ForIndex) == 0x000508, "Member 'ABP_BtlTheurgiaList_C::ForIndex' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, ItemNameStr) == 0x000510, "Member 'ABP_BtlTheurgiaList_C::ItemNameStr' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, ItemNumStr) == 0x000520, "Member 'ABP_BtlTheurgiaList_C::ItemNumStr' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, ItemList) == 0x000530, "Member 'ABP_BtlTheurgiaList_C::ItemList' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, TheurgiaEnable) == 0x000540, "Member 'ABP_BtlTheurgiaList_C::TheurgiaEnable' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, SkillText) == 0x000548, "Member 'ABP_BtlTheurgiaList_C::SkillText' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, SkillMsg) == 0x000550, "Member 'ABP_BtlTheurgiaList_C::SkillMsg' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, FlaverText) == 0x000560, "Member 'ABP_BtlTheurgiaList_C::FlaverText' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, AutoSpecialSkillName) == 0x000570, "Member 'ABP_BtlTheurgiaList_C::AutoSpecialSkillName' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, AutoSpecialSkillMsg) == 0x000580, "Member 'ABP_BtlTheurgiaList_C::AutoSpecialSkillMsg' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, AutoSkillPower_Up) == 0x000590, "Member 'ABP_BtlTheurgiaList_C::AutoSkillPower_Up' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, AutoSkillEnable) == 0x000591, "Member 'ABP_BtlTheurgiaList_C::AutoSkillEnable' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, AutoSpecialSkillPowerUp) == 0x000598, "Member 'ABP_BtlTheurgiaList_C::AutoSpecialSkillPowerUp' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CircleList) == 0x0005A0, "Member 'ABP_BtlTheurgiaList_C::CircleList' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CirclePos) == 0x0005B0, "Member 'ABP_BtlTheurgiaList_C::CirclePos' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CircleScale) == 0x0005B8, "Member 'ABP_BtlTheurgiaList_C::CircleScale' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CirclePrevScale) == 0x0005BC, "Member 'ABP_BtlTheurgiaList_C::CirclePrevScale' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, DetailTheurgia) == 0x0005C0, "Member 'ABP_BtlTheurgiaList_C::DetailTheurgia' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, DetailPersonalityOffset) == 0x0005C8, "Member 'ABP_BtlTheurgiaList_C::DetailPersonalityOffset' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, Detail_Personality_Rate) == 0x0005D0, "Member 'ABP_BtlTheurgiaList_C::Detail_Personality_Rate' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, NormalPersonalityOffset) == 0x0005D4, "Member 'ABP_BtlTheurgiaList_C::NormalPersonalityOffset' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, NormalPersonality) == 0x0005E0, "Member 'ABP_BtlTheurgiaList_C::NormalPersonality' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, NormalPersonalityRate) == 0x0005E8, "Member 'ABP_BtlTheurgiaList_C::NormalPersonalityRate' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, DetailAddText) == 0x0005F0, "Member 'ABP_BtlTheurgiaList_C::DetailAddText' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, DetailOutTextOffset) == 0x000600, "Member 'ABP_BtlTheurgiaList_C::DetailOutTextOffset' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, DetailAddRate) == 0x000610, "Member 'ABP_BtlTheurgiaList_C::DetailAddRate' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, FlavorTextOffset) == 0x000614, "Member 'ABP_BtlTheurgiaList_C::FlavorTextOffset' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, DetailFlavorTextOffset) == 0x00061C, "Member 'ABP_BtlTheurgiaList_C::DetailFlavorTextOffset' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, DetailMovementRate) == 0x000624, "Member 'ABP_BtlTheurgiaList_C::DetailMovementRate' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, KiraEffect) == 0x000628, "Member 'ABP_BtlTheurgiaList_C::KiraEffect' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, Kira1Offset) == 0x000638, "Member 'ABP_BtlTheurgiaList_C::Kira1Offset' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, DetailKira1Offset) == 0x000640, "Member 'ABP_BtlTheurgiaList_C::DetailKira1Offset' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, DetailKiraScaleOffset) == 0x000648, "Member 'ABP_BtlTheurgiaList_C::DetailKiraScaleOffset' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, DetailKiraAngleOffset) == 0x000658, "Member 'ABP_BtlTheurgiaList_C::DetailKiraAngleOffset' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, DetailKiraAngle) == 0x000668, "Member 'ABP_BtlTheurgiaList_C::DetailKiraAngle' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CursorOffset) == 0x000674, "Member 'ABP_BtlTheurgiaList_C::CursorOffset' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CursorIconPos_List) == 0x000680, "Member 'ABP_BtlTheurgiaList_C::CursorIconPos_List' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CursorAttrList) == 0x000690, "Member 'ABP_BtlTheurgiaList_C::CursorAttrList' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CursorWeakList) == 0x0006A0, "Member 'ABP_BtlTheurgiaList_C::CursorWeakList' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, PrevCursorIconPos_List) == 0x0006B0, "Member 'ABP_BtlTheurgiaList_C::PrevCursorIconPos_List' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CursorMove) == 0x0006C0, "Member 'ABP_BtlTheurgiaList_C::CursorMove' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, AddAnimationOffset) == 0x0006C4, "Member 'ABP_BtlTheurgiaList_C::AddAnimationOffset' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CurrentCursorAlpha) == 0x0006D0, "Member 'ABP_BtlTheurgiaList_C::CurrentCursorAlpha' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CurrentCursor) == 0x0006E0, "Member 'ABP_BtlTheurgiaList_C::CurrentCursor' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, Persona_ID1) == 0x0006F0, "Member 'ABP_BtlTheurgiaList_C::Persona_ID1' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, Persona_ID2) == 0x0006F4, "Member 'ABP_BtlTheurgiaList_C::Persona_ID2' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, Two_Persona) == 0x0006F8, "Member 'ABP_BtlTheurgiaList_C::Two_Persona' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, IsPersona2) == 0x0006F9, "Member 'ABP_BtlTheurgiaList_C::IsPersona2' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CurrentCursorLight) == 0x0006FC, "Member 'ABP_BtlTheurgiaList_C::CurrentCursorLight' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CurrentCursorPersona) == 0x000700, "Member 'ABP_BtlTheurgiaList_C::CurrentCursorPersona' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, PersonaChangeTiming) == 0x000704, "Member 'ABP_BtlTheurgiaList_C::PersonaChangeTiming' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CurrentCursor2) == 0x000708, "Member 'ABP_BtlTheurgiaList_C::CurrentCursor2' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CurrentCursorAlpha2) == 0x000718, "Member 'ABP_BtlTheurgiaList_C::CurrentCursorAlpha2' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CurrentCursorMovement2) == 0x000728, "Member 'ABP_BtlTheurgiaList_C::CurrentCursorMovement2' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CurrentCursorMovement) == 0x00072C, "Member 'ABP_BtlTheurgiaList_C::CurrentCursorMovement' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CurrentCursorPos) == 0x000730, "Member 'ABP_BtlTheurgiaList_C::CurrentCursorPos' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CurrentCursorPos2) == 0x000738, "Member 'ABP_BtlTheurgiaList_C::CurrentCursorPos2' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CursorLine) == 0x000740, "Member 'ABP_BtlTheurgiaList_C::CursorLine' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CursorLineEffect) == 0x000748, "Member 'ABP_BtlTheurgiaList_C::CursorLineEffect' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CurrensCursorWeak) == 0x000750, "Member 'ABP_BtlTheurgiaList_C::CurrensCursorWeak' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CurrentCursorWeakPos) == 0x000760, "Member 'ABP_BtlTheurgiaList_C::CurrentCursorWeakPos' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CurrentCursorWeakPos2) == 0x000768, "Member 'ABP_BtlTheurgiaList_C::CurrentCursorWeakPos2' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, ListBandNumber) == 0x000770, "Member 'ABP_BtlTheurgiaList_C::ListBandNumber' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, L1R1Vector) == 0x000780, "Member 'ABP_BtlTheurgiaList_C::L1R1Vector' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, LiR1VectorPos) == 0x000790, "Member 'ABP_BtlTheurgiaList_C::LiR1VectorPos' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, L1R1CursorLoop) == 0x0007A0, "Member 'ABP_BtlTheurgiaList_C::L1R1CursorLoop' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, LiR1Rate) == 0x0007A4, "Member 'ABP_BtlTheurgiaList_C::LiR1Rate' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, OpenDetail) == 0x0007A8, "Member 'ABP_BtlTheurgiaList_C::OpenDetail' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, L1R1Color) == 0x0007AC, "Member 'ABP_BtlTheurgiaList_C::L1R1Color' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, BackGround) == 0x0007B0, "Member 'ABP_BtlTheurgiaList_C::BackGround' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, FadeinBlackOut) == 0x0007C0, "Member 'ABP_BtlTheurgiaList_C::FadeinBlackOut' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, FadeinBackPanel) == 0x0007C4, "Member 'ABP_BtlTheurgiaList_C::FadeinBackPanel' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, FadeinBackNumber) == 0x0007C8, "Member 'ABP_BtlTheurgiaList_C::FadeinBackNumber' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, BackBlack) == 0x0007D0, "Member 'ABP_BtlTheurgiaList_C::BackBlack' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, BackNumberPos) == 0x0007D8, "Member 'ABP_BtlTheurgiaList_C::BackNumberPos' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CharaSillhuette) == 0x0007E8, "Member 'ABP_BtlTheurgiaList_C::CharaSillhuette' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, Chara_Sillhuette) == 0x0007F8, "Member 'ABP_BtlTheurgiaList_C::Chara_Sillhuette' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, PrevChara_Sillhuette) == 0x0007FC, "Member 'ABP_BtlTheurgiaList_C::PrevChara_Sillhuette' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, Theurgia_TextAnim) == 0x000800, "Member 'ABP_BtlTheurgiaList_C::Theurgia_TextAnim' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, TeurgiaText) == 0x000808, "Member 'ABP_BtlTheurgiaList_C::TeurgiaText' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, Kira_Rate) == 0x000810, "Member 'ABP_BtlTheurgiaList_C::Kira_Rate' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, Detail_Text_In) == 0x000814, "Member 'ABP_BtlTheurgiaList_C::Detail_Text_In' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, Skill_Help_Text) == 0x000818, "Member 'ABP_BtlTheurgiaList_C::Skill_Help_Text' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, SkillTextPos) == 0x00081C, "Member 'ABP_BtlTheurgiaList_C::SkillTextPos' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, IsStartedCursor) == 0x000824, "Member 'ABP_BtlTheurgiaList_C::IsStartedCursor' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, Cursor_Rate) == 0x000828, "Member 'ABP_BtlTheurgiaList_C::Cursor_Rate' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CursorAutoScaling) == 0x00082C, "Member 'ABP_BtlTheurgiaList_C::CursorAutoScaling' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CursorAnimStartTime) == 0x000830, "Member 'ABP_BtlTheurgiaList_C::CursorAnimStartTime' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, Cursor_List_Rate) == 0x000834, "Member 'ABP_BtlTheurgiaList_C::Cursor_List_Rate' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, Vector_Rate) == 0x000838, "Member 'ABP_BtlTheurgiaList_C::Vector_Rate' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, InAnimEnd) == 0x00083C, "Member 'ABP_BtlTheurgiaList_C::InAnimEnd' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, Skill_Rate) == 0x000840, "Member 'ABP_BtlTheurgiaList_C::Skill_Rate' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, L1R1Cursor) == 0x000844, "Member 'ABP_BtlTheurgiaList_C::L1R1Cursor' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, ExitingTopUI) == 0x000850, "Member 'ABP_BtlTheurgiaList_C::ExitingTopUI' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, GunKira) == 0x000858, "Member 'ABP_BtlTheurgiaList_C::GunKira' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, Gun_Kira_Scale) == 0x000860, "Member 'ABP_BtlTheurgiaList_C::Gun_Kira_Scale' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, L1R1Alpha) == 0x000864, "Member 'ABP_BtlTheurgiaList_C::L1R1Alpha' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, Material) == 0x000868, "Member 'ABP_BtlTheurgiaList_C::Material' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, SillhoetteEffect) == 0x000870, "Member 'ABP_BtlTheurgiaList_C::SillhoetteEffect' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, Gun_Kira_Angle) == 0x000878, "Member 'ABP_BtlTheurgiaList_C::Gun_Kira_Angle' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, GunKitaStartTime) == 0x00087C, "Member 'ABP_BtlTheurgiaList_C::GunKitaStartTime' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, GunKiraStartFlag) == 0x000880, "Member 'ABP_BtlTheurgiaList_C::GunKiraStartFlag' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, Cursor_Close_Rate) == 0x000884, "Member 'ABP_BtlTheurgiaList_C::Cursor_Close_Rate' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CursorAnimationFlag) == 0x000888, "Member 'ABP_BtlTheurgiaList_C::CursorAnimationFlag' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CursorPushAnim) == 0x00088C, "Member 'ABP_BtlTheurgiaList_C::CursorPushAnim' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, HeadLookAtHlag) == 0x000890, "Member 'ABP_BtlTheurgiaList_C::HeadLookAtHlag' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CursorSaveMap) == 0x000898, "Member 'ABP_BtlTheurgiaList_C::CursorSaveMap' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, CancelAnimFastEnd) == 0x0008E8, "Member 'ABP_BtlTheurgiaList_C::CancelAnimFastEnd' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, LayoutData) == 0x0008F0, "Member 'ABP_BtlTheurgiaList_C::LayoutData' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, BtlTheurgiaLookatNoUseTable) == 0x0008F8, "Member 'ABP_BtlTheurgiaList_C::BtlTheurgiaLookatNoUseTable' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, BtlTheurgiaLookatTable) == 0x000900, "Member 'ABP_BtlTheurgiaList_C::BtlTheurgiaLookatTable' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, BtlTheurgiaKiraOffsetTable) == 0x000908, "Member 'ABP_BtlTheurgiaList_C::BtlTheurgiaKiraOffsetTable' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, PersonaSprAsset) == 0x000910, "Member 'ABP_BtlTheurgiaList_C::PersonaSprAsset' has a wrong offset!");
static_assert(offsetof(ABP_BtlTheurgiaList_C, MetisDrawPlgNo) == 0x000918, "Member 'ABP_BtlTheurgiaList_C::MetisDrawPlgNo' has a wrong offset!");

}

