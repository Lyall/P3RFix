#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtlSkillList

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Xrd777_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_BtlGuiBaseActor_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BtlSkillList.BP_BtlSkillList_C
// 0x0338 (0x0688 - 0x0350)
class ABP_BtlSkillList_C final : public ABP_BtlGuiBaseActor_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_BtlSkillList_C;                  // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBtlGuiResources*                       BtlGuiResources;                                   // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawComponent*                   BtlGuiDraw1;                                       // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiPersonaStatusComponent*          BtlGuiPersonaStatus;                               // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiListComponent*                   BtlGuiListPersona;                                 // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_BtlDataBase_C*                      BP_BtlDataBase;                                    // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiListComponent*                   BtlGuiList;                                        // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawComponent*                   BtlGuiDraw;                                        // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         OutAnimTimeline_CharaAlpha_9D88AFB844EA16132BE3418E97D3FBF3; // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutAnimTimeline_OutAlpha_9D88AFB844EA16132BE3418E97D3FBF3; // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutAnimTimeline_TitleAngle_9D88AFB844EA16132BE3418E97D3FBF3; // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            OutAnimTimeline__Direction_9D88AFB844EA16132BE3418E97D3FBF3; // 0x039C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D[0x3];                                      // 0x039D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     OutAnimTimeline;                                   // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EquipIconTimeline_EquipIconAlpha_E4182B0148BED84D8615C4A21F220FB5; // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EquipIconTimeline_EquipIconAngle_E4182B0148BED84D8615C4A21F220FB5; // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EquipIconTimeline_EquipIconScale_E4182B0148BED84D8615C4A21F220FB5; // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            EquipIconTimeline__Direction_E4182B0148BED84D8615C4A21F220FB5; // 0x03B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B5[0x3];                                      // 0x03B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     EquipIconTimeline;                                 // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LiR1Timeline_L1R1Rate_3A3BB4094FD98ACF06196CB1EFE793CA; // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            LiR1Timeline__Direction_3A3BB4094FD98ACF06196CB1EFE793CA; // 0x03C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C5[0x3];                                      // 0x03C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     LiR1Timeline;                                      // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PresonaChangeTimeline_PersonaRate_752BEFB64E10A8CDCE9D7CB5FF8D64C8; // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            PresonaChangeTimeline__Direction_752BEFB64E10A8CDCE9D7CB5FF8D64C8; // 0x03D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D5[0x3];                                      // 0x03D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     PresonaChangeTimeline;                             // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAnimTimeline_CurcorRate_441558904117FA9353FD379C2D207B08; // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAnimTimeline_ListRate_441558904117FA9353FD379C2D207B08; // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAnimTimeline_WindowHelpRate_441558904117FA9353FD379C2D207B08; // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAnimTimeline_SkillHelpRate_441558904117FA9353FD379C2D207B08; // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAnimTimeline_TabRale_441558904117FA9353FD379C2D207B08; // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAnimTimeline_BackPanelRate_441558904117FA9353FD379C2D207B08; // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAnimTimeline_TitleAngle_441558904117FA9353FD379C2D207B08; // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            InAnimTimeline__Direction_441558904117FA9353FD379C2D207B08; // 0x03FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FD[0x3];                                      // 0x03FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     InAnimTimeline;                                    // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CaustikTimeline_caustik_9C3BCE06445282D8528CF68FC1141FCA; // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            CaustikTimeline__Direction_9C3BCE06445282D8528CF68FC1141FCA; // 0x040C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40D[0x3];                                      // 0x040D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     CaustikTimeline;                                   // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectCursor;                                      // 0x0418(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ListDrawMax;                                       // 0x041C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ListNameWork;                                      // 0x0420(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<struct FVector2D>                      CursorPosWork;                                     // 0x0430(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector2D                              PositionWork;                                      // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ForIndex;                                          // 0x0448(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsShowName;                                        // 0x044C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44D[0x3];                                      // 0x044D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumTemp;                                           // 0x0450(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_454[0x4];                                      // 0x0454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 SkillIDList;                                       // 0x0458(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         CursorIndex;                                       // 0x0468(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TopIndex;                                          // 0x046C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsChangingPersona;                                 // 0x0470(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_471[0x3];                                      // 0x0471(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ChangingPersonaIndex;                              // 0x0474(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 PersonaListWork;                                   // 0x0478(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<int32>                                 MajorSkillList;                                    // 0x0488(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsOneMore;                                         // 0x0498(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_499[0x3];                                      // 0x0499(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              TabPosOffset;                                      // 0x049C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A4[0x4];                                      // 0x04A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBtlGuiDrawObjectText*                  PersonaName;                                       // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectPrimitive*             CursorPrimitive;                                   // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectRoundRect*             CursorRect;                                        // 0x04B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 ColorWork;                                         // 0x04C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumTemp2;                                          // 0x04C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectMsg*                   SkillHelp;                                         // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CaustikRate;                                       // 0x04D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D4[0x4];                                      // 0x04D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Caustics;                                          // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 MajorPersonaList;                                  // 0x04E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UBtlGuiDrawObjectCore*>          LRTabList;                                         // 0x04F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsFirstCreate;                                     // 0x0500(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_501[0x7];                                      // 0x0501(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBtlGuiDrawObjectRoundRect*             CursorRectBack;                                    // 0x0508(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PrevPositionWorkBack;                              // 0x0510(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PrevPositionFrameBack;                             // 0x0518(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PrevPositionFrame;                                 // 0x051C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PrevPositionWork;                                  // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBtlGuiDrawObjectImage*>         PersonaShilluette;                                 // 0x0528(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector2D                              TitlePos;                                          // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Title_Angle;                                       // 0x0540(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              BackPanelPos;                                      // 0x0544(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              BackPanelMaskPos;                                  // 0x054C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Back_Panel_Rate;                                   // 0x0554(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector2D>                      TabPosList;                                        // 0x0558(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         Tab_Rale;                                          // 0x0568(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56C[0x4];                                      // 0x056C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector2D>                      SkillHelpList;                                     // 0x0570(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         Skill_Help_Rate;                                   // 0x0580(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_584[0x4];                                      // 0x0584(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 SkillHelpListAlpha;                                // 0x0588(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UBtlGuiDrawObjectSprite*                WindowHelp;                                        // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Window_Help_Rate;                                  // 0x05A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A4[0x4];                                      // 0x05A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 ListRate;                                          // 0x05A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         ListRateMax;                                       // 0x05B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         List_Rate;                                         // 0x05BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FloatWork;                                         // 0x05C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FloatWork2;                                        // 0x05C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Persona_Rate;                                      // 0x05C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CC[0x4];                                      // 0x05CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector2D>                      PersonaShilluettePos;                              // 0x05D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         L1R1Rate;                                          // 0x05E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E4[0x4];                                      // 0x05E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBtlGuiDrawObjectCore*>          MaskList;                                          // 0x05E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UBtlGuiDrawObjectSprite*                EquipIconEffect;                                   // 0x05F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Equip_Icon_Scale;                                  // 0x0600(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Equip_Icon_Angle;                                  // 0x0604(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PersonaSlideInPos;                                 // 0x0608(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Curcor_Rate;                                       // 0x060C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutAlpha;                                          // 0x0610(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              TitleLogoPos;                                      // 0x0614(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TitleLogoRate;                                     // 0x061C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectImage*                 CharaSilluette;                                    // 0x0620(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CharaSilluetteAlpha;                               // 0x0628(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WorkBool;                                          // 0x062C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          NyxBattle;                                         // 0x062D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsGrayOut;                                         // 0x062E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PersonaChangeFlag;                                 // 0x062F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UBtlGuiDrawObjectSprite*                EquipItem;                                         // 0x0630(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTutorialSkillList;                               // 0x0638(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsNoSkill;                                         // 0x0639(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63A[0x6];                                      // 0x063A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBtlGuiDrawObjectCore*>          NoItemList;                                        // 0x0640(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         Equip_Icon_Alpha;                                  // 0x0650(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_654[0x4];                                      // 0x0654(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBtlGuiDrawObjectImage*                 CharaSillhouette2;                                 // 0x0658(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectMsg*                   SkillHelp_1;                                       // 0x0660(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectMsg*                   SkillHelp_2;                                       // 0x0668(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectMsg*                   SkillHelp_3;                                       // 0x0670(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBtlGuiDrawObjectRect*>          MouseCollisionList;                                // 0x0678(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_BtlSkillList(int32 EntryPoint);
	void GuiActorEncountStart();
	void SetAddResources();
	void PlayCursorSE();
	void GuiActorStateExit();
	void GuiActorStateInit(bool Flag, int32 Param);
	void GuiActorBeginPlay();
	void EntryChangeState();
	void _________0(const struct FBtlInputKey& InputKey);
	void OpenPersonaStatus();
	void JumpMajorSkill();
	void ChangePersonaLeft();
	void ChangePersonaRight();
	void GuiActorUnbindAction();
	void GuiActorBindAction();
	void PushOk();
	void PushCancel();
	void CursorSetup();
	void CallCursorUpdate();
	void GuiActorUpdate(float DeltaTime);
	void StartOutTimeline();
	void StartPersonaChangeTimeline();
	void StartInTimeline();
	void OutAnimTimeline__UpdateFunc();
	void OutAnimTimeline__FinishedFunc();
	void EquipIconTimeline__UpdateFunc();
	void EquipIconTimeline__FinishedFunc();
	void LiR1Timeline__UpdateFunc();
	void LiR1Timeline__FinishedFunc();
	void PresonaChangeTimeline__UpdateFunc();
	void PresonaChangeTimeline__FinishedFunc();
	void InAnimTimeline__UpdateFunc();
	void InAnimTimeline__FinishedFunc();
	void CaustikTimeline__UpdateFunc();
	void CaustikTimeline__FinishedFunc();
	void GetSkillName(int32 SkillId, class FString* OutString);
	void SetupPosition(int32 Index_0, int32 CursorIndex_0, struct FVector2D* Pos);
	void GetParamNText(int32 SkillId, class FString* OutString);
	void SetCostNumParam(int32 Cost, bool* IsHandred1, int32* HandredNum1, struct FVector2D* HandredPos1, bool* IsTen1, int32* TenNum1, struct FVector2D* TenPos1, bool* IsNum_1, int32* Num1, struct FVector2D* Pos1);
	void BackGroundDrawEnable(bool Enable);
	void LoadPersonaAsset();
	void RefrectLocalizeData();
	void IsVisibleEquipIcon(class ABtlActor* _____, bool* bIsVisible);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BtlSkillList_C">();
	}
	static class ABP_BtlSkillList_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BtlSkillList_C>();
	}
};
static_assert(alignof(ABP_BtlSkillList_C) == 0x000008, "Wrong alignment on ABP_BtlSkillList_C");
static_assert(sizeof(ABP_BtlSkillList_C) == 0x000688, "Wrong size on ABP_BtlSkillList_C");
static_assert(offsetof(ABP_BtlSkillList_C, UberGraphFrame_BP_BtlSkillList_C) == 0x000350, "Member 'ABP_BtlSkillList_C::UberGraphFrame_BP_BtlSkillList_C' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, BtlGuiResources) == 0x000358, "Member 'ABP_BtlSkillList_C::BtlGuiResources' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, BtlGuiDraw1) == 0x000360, "Member 'ABP_BtlSkillList_C::BtlGuiDraw1' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, BtlGuiPersonaStatus) == 0x000368, "Member 'ABP_BtlSkillList_C::BtlGuiPersonaStatus' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, BtlGuiListPersona) == 0x000370, "Member 'ABP_BtlSkillList_C::BtlGuiListPersona' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, BP_BtlDataBase) == 0x000378, "Member 'ABP_BtlSkillList_C::BP_BtlDataBase' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, BtlGuiList) == 0x000380, "Member 'ABP_BtlSkillList_C::BtlGuiList' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, BtlGuiDraw) == 0x000388, "Member 'ABP_BtlSkillList_C::BtlGuiDraw' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, OutAnimTimeline_CharaAlpha_9D88AFB844EA16132BE3418E97D3FBF3) == 0x000390, "Member 'ABP_BtlSkillList_C::OutAnimTimeline_CharaAlpha_9D88AFB844EA16132BE3418E97D3FBF3' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, OutAnimTimeline_OutAlpha_9D88AFB844EA16132BE3418E97D3FBF3) == 0x000394, "Member 'ABP_BtlSkillList_C::OutAnimTimeline_OutAlpha_9D88AFB844EA16132BE3418E97D3FBF3' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, OutAnimTimeline_TitleAngle_9D88AFB844EA16132BE3418E97D3FBF3) == 0x000398, "Member 'ABP_BtlSkillList_C::OutAnimTimeline_TitleAngle_9D88AFB844EA16132BE3418E97D3FBF3' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, OutAnimTimeline__Direction_9D88AFB844EA16132BE3418E97D3FBF3) == 0x00039C, "Member 'ABP_BtlSkillList_C::OutAnimTimeline__Direction_9D88AFB844EA16132BE3418E97D3FBF3' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, OutAnimTimeline) == 0x0003A0, "Member 'ABP_BtlSkillList_C::OutAnimTimeline' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, EquipIconTimeline_EquipIconAlpha_E4182B0148BED84D8615C4A21F220FB5) == 0x0003A8, "Member 'ABP_BtlSkillList_C::EquipIconTimeline_EquipIconAlpha_E4182B0148BED84D8615C4A21F220FB5' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, EquipIconTimeline_EquipIconAngle_E4182B0148BED84D8615C4A21F220FB5) == 0x0003AC, "Member 'ABP_BtlSkillList_C::EquipIconTimeline_EquipIconAngle_E4182B0148BED84D8615C4A21F220FB5' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, EquipIconTimeline_EquipIconScale_E4182B0148BED84D8615C4A21F220FB5) == 0x0003B0, "Member 'ABP_BtlSkillList_C::EquipIconTimeline_EquipIconScale_E4182B0148BED84D8615C4A21F220FB5' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, EquipIconTimeline__Direction_E4182B0148BED84D8615C4A21F220FB5) == 0x0003B4, "Member 'ABP_BtlSkillList_C::EquipIconTimeline__Direction_E4182B0148BED84D8615C4A21F220FB5' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, EquipIconTimeline) == 0x0003B8, "Member 'ABP_BtlSkillList_C::EquipIconTimeline' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, LiR1Timeline_L1R1Rate_3A3BB4094FD98ACF06196CB1EFE793CA) == 0x0003C0, "Member 'ABP_BtlSkillList_C::LiR1Timeline_L1R1Rate_3A3BB4094FD98ACF06196CB1EFE793CA' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, LiR1Timeline__Direction_3A3BB4094FD98ACF06196CB1EFE793CA) == 0x0003C4, "Member 'ABP_BtlSkillList_C::LiR1Timeline__Direction_3A3BB4094FD98ACF06196CB1EFE793CA' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, LiR1Timeline) == 0x0003C8, "Member 'ABP_BtlSkillList_C::LiR1Timeline' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, PresonaChangeTimeline_PersonaRate_752BEFB64E10A8CDCE9D7CB5FF8D64C8) == 0x0003D0, "Member 'ABP_BtlSkillList_C::PresonaChangeTimeline_PersonaRate_752BEFB64E10A8CDCE9D7CB5FF8D64C8' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, PresonaChangeTimeline__Direction_752BEFB64E10A8CDCE9D7CB5FF8D64C8) == 0x0003D4, "Member 'ABP_BtlSkillList_C::PresonaChangeTimeline__Direction_752BEFB64E10A8CDCE9D7CB5FF8D64C8' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, PresonaChangeTimeline) == 0x0003D8, "Member 'ABP_BtlSkillList_C::PresonaChangeTimeline' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, InAnimTimeline_CurcorRate_441558904117FA9353FD379C2D207B08) == 0x0003E0, "Member 'ABP_BtlSkillList_C::InAnimTimeline_CurcorRate_441558904117FA9353FD379C2D207B08' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, InAnimTimeline_ListRate_441558904117FA9353FD379C2D207B08) == 0x0003E4, "Member 'ABP_BtlSkillList_C::InAnimTimeline_ListRate_441558904117FA9353FD379C2D207B08' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, InAnimTimeline_WindowHelpRate_441558904117FA9353FD379C2D207B08) == 0x0003E8, "Member 'ABP_BtlSkillList_C::InAnimTimeline_WindowHelpRate_441558904117FA9353FD379C2D207B08' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, InAnimTimeline_SkillHelpRate_441558904117FA9353FD379C2D207B08) == 0x0003EC, "Member 'ABP_BtlSkillList_C::InAnimTimeline_SkillHelpRate_441558904117FA9353FD379C2D207B08' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, InAnimTimeline_TabRale_441558904117FA9353FD379C2D207B08) == 0x0003F0, "Member 'ABP_BtlSkillList_C::InAnimTimeline_TabRale_441558904117FA9353FD379C2D207B08' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, InAnimTimeline_BackPanelRate_441558904117FA9353FD379C2D207B08) == 0x0003F4, "Member 'ABP_BtlSkillList_C::InAnimTimeline_BackPanelRate_441558904117FA9353FD379C2D207B08' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, InAnimTimeline_TitleAngle_441558904117FA9353FD379C2D207B08) == 0x0003F8, "Member 'ABP_BtlSkillList_C::InAnimTimeline_TitleAngle_441558904117FA9353FD379C2D207B08' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, InAnimTimeline__Direction_441558904117FA9353FD379C2D207B08) == 0x0003FC, "Member 'ABP_BtlSkillList_C::InAnimTimeline__Direction_441558904117FA9353FD379C2D207B08' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, InAnimTimeline) == 0x000400, "Member 'ABP_BtlSkillList_C::InAnimTimeline' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, CaustikTimeline_caustik_9C3BCE06445282D8528CF68FC1141FCA) == 0x000408, "Member 'ABP_BtlSkillList_C::CaustikTimeline_caustik_9C3BCE06445282D8528CF68FC1141FCA' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, CaustikTimeline__Direction_9C3BCE06445282D8528CF68FC1141FCA) == 0x00040C, "Member 'ABP_BtlSkillList_C::CaustikTimeline__Direction_9C3BCE06445282D8528CF68FC1141FCA' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, CaustikTimeline) == 0x000410, "Member 'ABP_BtlSkillList_C::CaustikTimeline' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, SelectCursor) == 0x000418, "Member 'ABP_BtlSkillList_C::SelectCursor' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, ListDrawMax) == 0x00041C, "Member 'ABP_BtlSkillList_C::ListDrawMax' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, ListNameWork) == 0x000420, "Member 'ABP_BtlSkillList_C::ListNameWork' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, CursorPosWork) == 0x000430, "Member 'ABP_BtlSkillList_C::CursorPosWork' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, PositionWork) == 0x000440, "Member 'ABP_BtlSkillList_C::PositionWork' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, ForIndex) == 0x000448, "Member 'ABP_BtlSkillList_C::ForIndex' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, IsShowName) == 0x00044C, "Member 'ABP_BtlSkillList_C::IsShowName' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, NumTemp) == 0x000450, "Member 'ABP_BtlSkillList_C::NumTemp' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, SkillIDList) == 0x000458, "Member 'ABP_BtlSkillList_C::SkillIDList' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, CursorIndex) == 0x000468, "Member 'ABP_BtlSkillList_C::CursorIndex' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, TopIndex) == 0x00046C, "Member 'ABP_BtlSkillList_C::TopIndex' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, IsChangingPersona) == 0x000470, "Member 'ABP_BtlSkillList_C::IsChangingPersona' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, ChangingPersonaIndex) == 0x000474, "Member 'ABP_BtlSkillList_C::ChangingPersonaIndex' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, PersonaListWork) == 0x000478, "Member 'ABP_BtlSkillList_C::PersonaListWork' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, MajorSkillList) == 0x000488, "Member 'ABP_BtlSkillList_C::MajorSkillList' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, IsOneMore) == 0x000498, "Member 'ABP_BtlSkillList_C::IsOneMore' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, TabPosOffset) == 0x00049C, "Member 'ABP_BtlSkillList_C::TabPosOffset' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, PersonaName) == 0x0004A8, "Member 'ABP_BtlSkillList_C::PersonaName' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, CursorPrimitive) == 0x0004B0, "Member 'ABP_BtlSkillList_C::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, CursorRect) == 0x0004B8, "Member 'ABP_BtlSkillList_C::CursorRect' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, ColorWork) == 0x0004C0, "Member 'ABP_BtlSkillList_C::ColorWork' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, NumTemp2) == 0x0004C4, "Member 'ABP_BtlSkillList_C::NumTemp2' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, SkillHelp) == 0x0004C8, "Member 'ABP_BtlSkillList_C::SkillHelp' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, CaustikRate) == 0x0004D0, "Member 'ABP_BtlSkillList_C::CaustikRate' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, Caustics) == 0x0004D8, "Member 'ABP_BtlSkillList_C::Caustics' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, MajorPersonaList) == 0x0004E0, "Member 'ABP_BtlSkillList_C::MajorPersonaList' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, LRTabList) == 0x0004F0, "Member 'ABP_BtlSkillList_C::LRTabList' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, IsFirstCreate) == 0x000500, "Member 'ABP_BtlSkillList_C::IsFirstCreate' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, CursorRectBack) == 0x000508, "Member 'ABP_BtlSkillList_C::CursorRectBack' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, PrevPositionWorkBack) == 0x000510, "Member 'ABP_BtlSkillList_C::PrevPositionWorkBack' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, PrevPositionFrameBack) == 0x000518, "Member 'ABP_BtlSkillList_C::PrevPositionFrameBack' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, PrevPositionFrame) == 0x00051C, "Member 'ABP_BtlSkillList_C::PrevPositionFrame' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, PrevPositionWork) == 0x000520, "Member 'ABP_BtlSkillList_C::PrevPositionWork' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, PersonaShilluette) == 0x000528, "Member 'ABP_BtlSkillList_C::PersonaShilluette' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, TitlePos) == 0x000538, "Member 'ABP_BtlSkillList_C::TitlePos' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, Title_Angle) == 0x000540, "Member 'ABP_BtlSkillList_C::Title_Angle' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, BackPanelPos) == 0x000544, "Member 'ABP_BtlSkillList_C::BackPanelPos' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, BackPanelMaskPos) == 0x00054C, "Member 'ABP_BtlSkillList_C::BackPanelMaskPos' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, Back_Panel_Rate) == 0x000554, "Member 'ABP_BtlSkillList_C::Back_Panel_Rate' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, TabPosList) == 0x000558, "Member 'ABP_BtlSkillList_C::TabPosList' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, Tab_Rale) == 0x000568, "Member 'ABP_BtlSkillList_C::Tab_Rale' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, SkillHelpList) == 0x000570, "Member 'ABP_BtlSkillList_C::SkillHelpList' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, Skill_Help_Rate) == 0x000580, "Member 'ABP_BtlSkillList_C::Skill_Help_Rate' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, SkillHelpListAlpha) == 0x000588, "Member 'ABP_BtlSkillList_C::SkillHelpListAlpha' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, WindowHelp) == 0x000598, "Member 'ABP_BtlSkillList_C::WindowHelp' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, Window_Help_Rate) == 0x0005A0, "Member 'ABP_BtlSkillList_C::Window_Help_Rate' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, ListRate) == 0x0005A8, "Member 'ABP_BtlSkillList_C::ListRate' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, ListRateMax) == 0x0005B8, "Member 'ABP_BtlSkillList_C::ListRateMax' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, List_Rate) == 0x0005BC, "Member 'ABP_BtlSkillList_C::List_Rate' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, FloatWork) == 0x0005C0, "Member 'ABP_BtlSkillList_C::FloatWork' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, FloatWork2) == 0x0005C4, "Member 'ABP_BtlSkillList_C::FloatWork2' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, Persona_Rate) == 0x0005C8, "Member 'ABP_BtlSkillList_C::Persona_Rate' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, PersonaShilluettePos) == 0x0005D0, "Member 'ABP_BtlSkillList_C::PersonaShilluettePos' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, L1R1Rate) == 0x0005E0, "Member 'ABP_BtlSkillList_C::L1R1Rate' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, MaskList) == 0x0005E8, "Member 'ABP_BtlSkillList_C::MaskList' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, EquipIconEffect) == 0x0005F8, "Member 'ABP_BtlSkillList_C::EquipIconEffect' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, Equip_Icon_Scale) == 0x000600, "Member 'ABP_BtlSkillList_C::Equip_Icon_Scale' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, Equip_Icon_Angle) == 0x000604, "Member 'ABP_BtlSkillList_C::Equip_Icon_Angle' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, PersonaSlideInPos) == 0x000608, "Member 'ABP_BtlSkillList_C::PersonaSlideInPos' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, Curcor_Rate) == 0x00060C, "Member 'ABP_BtlSkillList_C::Curcor_Rate' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, OutAlpha) == 0x000610, "Member 'ABP_BtlSkillList_C::OutAlpha' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, TitleLogoPos) == 0x000614, "Member 'ABP_BtlSkillList_C::TitleLogoPos' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, TitleLogoRate) == 0x00061C, "Member 'ABP_BtlSkillList_C::TitleLogoRate' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, CharaSilluette) == 0x000620, "Member 'ABP_BtlSkillList_C::CharaSilluette' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, CharaSilluetteAlpha) == 0x000628, "Member 'ABP_BtlSkillList_C::CharaSilluetteAlpha' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, WorkBool) == 0x00062C, "Member 'ABP_BtlSkillList_C::WorkBool' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, NyxBattle) == 0x00062D, "Member 'ABP_BtlSkillList_C::NyxBattle' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, IsGrayOut) == 0x00062E, "Member 'ABP_BtlSkillList_C::IsGrayOut' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, PersonaChangeFlag) == 0x00062F, "Member 'ABP_BtlSkillList_C::PersonaChangeFlag' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, EquipItem) == 0x000630, "Member 'ABP_BtlSkillList_C::EquipItem' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, IsTutorialSkillList) == 0x000638, "Member 'ABP_BtlSkillList_C::IsTutorialSkillList' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, IsNoSkill) == 0x000639, "Member 'ABP_BtlSkillList_C::IsNoSkill' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, NoItemList) == 0x000640, "Member 'ABP_BtlSkillList_C::NoItemList' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, Equip_Icon_Alpha) == 0x000650, "Member 'ABP_BtlSkillList_C::Equip_Icon_Alpha' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, CharaSillhouette2) == 0x000658, "Member 'ABP_BtlSkillList_C::CharaSillhouette2' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, SkillHelp_1) == 0x000660, "Member 'ABP_BtlSkillList_C::SkillHelp_1' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, SkillHelp_2) == 0x000668, "Member 'ABP_BtlSkillList_C::SkillHelp_2' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, SkillHelp_3) == 0x000670, "Member 'ABP_BtlSkillList_C::SkillHelp_3' has a wrong offset!");
static_assert(offsetof(ABP_BtlSkillList_C, MouseCollisionList) == 0x000678, "Member 'ABP_BtlSkillList_C::MouseCollisionList' has a wrong offset!");

}

