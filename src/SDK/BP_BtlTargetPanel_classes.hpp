#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtlTargetPanel

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Xrd777_structs.hpp"
#include "Engine_structs.hpp"
#include "BP_BtlGuiBaseActor_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BtlTargetPanel.BP_BtlTargetPanel_C
// 0x0310 (0x0660 - 0x0350)
class ABP_BtlTargetPanel_C final : public ABP_BtlGuiBaseActor_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_BtlTargetPanel_C;                // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBtlGuiResources*                       BtlGuiResources;                                   // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_BtlDataBase_C*                      BP_BtlDataBase;                                    // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawComponent*                   BtlGuiDraw;                                        // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NavigationTimeline_L_Navigation_0BDC7B3446D2D0F3E26D879B2127402D; // 0x0370(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            NavigationTimeline_L__Direction_0BDC7B3446D2D0F3E26D879B2127402D; // 0x037C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37D[0x3];                                      // 0x037D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     NavigationTimeline_L;                              // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NavigationTimeline_M_Navigation_A59790D745F623B87F47E18CE38BE93A; // 0x0388(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            NavigationTimeline_M__Direction_A59790D745F623B87F47E18CE38BE93A; // 0x0394(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_395[0x3];                                      // 0x0395(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     NavigationTimeline_M;                              // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NavigationTimeline_S_Navigation_DD343CFF4D14C23D0C18C8B2BB97A5BB; // 0x03A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            NavigationTimeline_S__Direction_DD343CFF4D14C23D0C18C8B2BB97A5BB; // 0x03AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AD[0x3];                                      // 0x03AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     NavigationTimeline_S;                              // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AnimationWait_ScaleTrack_D65D6E794B560B08399FFFB15F9E78F3; // 0x03B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            AnimationWait__Direction_D65D6E794B560B08399FFFB15F9E78F3; // 0x03C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C5[0x3];                                      // 0x03C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     AnimationWait;                                     // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AnimationStart_ScaleTrack_1AEB50754EB4B24B3962468140F9619A; // 0x03D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            AnimationStart__Direction_1AEB50754EB4B24B3962468140F9619A; // 0x03DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DD[0x3];                                      // 0x03DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     AnimationStart;                                    // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           NoDamageColorTimeline_NoDamageColor_837DDB2D49927A15BC0F418E2480B5EF; // 0x03E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            NoDamageColorTimeline__Direction_837DDB2D49927A15BC0F418E2480B5EF; // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     NoDamageColorTimeline;                             // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EnemyElementCursorTimeline_InfoMarkScale_9BE4DD614FD9CB686096DAB849015DE4; // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EnemyElementCursorTimeline_HPBarPos_9BE4DD614FD9CB686096DAB849015DE4; // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EnemyElementCursorTimeline_CircleScale3_9BE4DD614FD9CB686096DAB849015DE4; // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EnemyElementCursorTimeline_CircleScale2_9BE4DD614FD9CB686096DAB849015DE4; // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EnemyElementCursorTimeline_CircleScale1_9BE4DD614FD9CB686096DAB849015DE4; // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            EnemyElementCursorTimeline__Direction_9BE4DD614FD9CB686096DAB849015DE4; // 0x041C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41D[0x3];                                      // 0x041D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     EnemyElementCursorTimeline;                        // 0x0420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EnemyFirstAnimTimeline_InfoMaskScale_2D107B454BFAA0F3A48469BEEE998AE6; // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EnemyFirstAnimTimeline_HPBarPos_2D107B454BFAA0F3A48469BEEE998AE6; // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EnemyFirstAnimTimeline_CircleScale3_2D107B454BFAA0F3A48469BEEE998AE6; // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EnemyFirstAnimTimeline_CircleScale2_2D107B454BFAA0F3A48469BEEE998AE6; // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EnemyFirstAnimTimeline_CircleScale1_2D107B454BFAA0F3A48469BEEE998AE6; // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            EnemyFirstAnimTimeline__Direction_2D107B454BFAA0F3A48469BEEE998AE6; // 0x043C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43D[0x3];                                      // 0x043D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     EnemyFirstAnimTimeline;                            // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayerFirstAnimTimeline_InfoMarkScale_150BDF924A2CF82E41A012BC619AD562; // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayerFirstAnimTimeline_HPBarPos_150BDF924A2CF82E41A012BC619AD562; // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayerFirstAnimTimeline_CircleScale3_150BDF924A2CF82E41A012BC619AD562; // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayerFirstAnimTimeline_CircleScale2_150BDF924A2CF82E41A012BC619AD562; // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayerFirstAnimTimeline_CircleScale1_150BDF924A2CF82E41A012BC619AD562; // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            PlayerFirstAnimTimeline__Direction_150BDF924A2CF82E41A012BC619AD562; // 0x045C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45D[0x3];                                      // 0x045D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     PlayerFirstAnimTimeline;                           // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayerAnimTimeline_PlayerAnim_0FDD5D3041EACF9AA408E8AC33AC4B52; // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            PlayerAnimTimeline__Direction_0FDD5D3041EACF9AA408E8AC33AC4B52; // 0x046C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46D[0x3];                                      // 0x046D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     PlayerAnimTimeline;                                // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EnemyCommonAnimTimeline_EnemyCommonAnim_452FC8444616C79347398EAFBAB263A7; // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            EnemyCommonAnimTimeline__Direction_452FC8444616C79347398EAFBAB263A7; // 0x047C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47D[0x3];                                      // 0x047D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     EnemyCommonAnimTimeline;                           // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlCharacterBase_C*                 Character;                                         // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              HPBarOffset;                                       // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PosOffset;                                         // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectRect*                  HPBarMask;                                         // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHPBar;                                           // 0x04A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsEnemy;                                           // 0x04A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4AA[0x2];                                      // 0x04AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         EnemyCommonAnimParam;                              // 0x04AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayerAnimParam;                                   // 0x04B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B4[0x4];                                      // 0x04B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBtlGuiDrawObjectSprite*                Sprite1;                                           // 0x04B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                Sprite2;                                           // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                Sprite3;                                           // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                Sprite4;                                           // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                Sprite5;                                           // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scale1;                                            // 0x04E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scale2;                                            // 0x04E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scale3;                                            // 0x04E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScaleOffset;                                       // 0x04EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HPBarPos;                                          // 0x04F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F4[0x4];                                      // 0x04F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBtlGuiDrawObjectSprite*                Sprite6;                                           // 0x04F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScaleOffset2;                                      // 0x0500(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_504[0x4];                                      // 0x0504(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 PrevCharacter;                                     // 0x0508(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBtlDataAttr                                  Attr;                                              // 0x0510(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_511[0x3];                                      // 0x0511(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              WeakOffset;                                        // 0x0514(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              UnknownOffset;                                     // 0x051C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              BlockOffset;                                       // 0x0524(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scale4;                                            // 0x052C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                Sprite7;                                           // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                Sprite8;                                           // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         IconType;                                          // 0x0540(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMoving;                                          // 0x0544(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_545[0x3];                                      // 0x0545(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              OffsetTemp;                                        // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MovingTime;                                        // 0x0550(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              OffsetTemp2;                                       // 0x0554(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55C[0x4];                                      // 0x055C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiIcon_C*                       GuiIcon;                                           // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSaveSillhouette;                                 // 0x0568(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_569[0x3];                                      // 0x0569(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CursorType;                                        // 0x056C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BarMaxParam;                                       // 0x0570(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BarParam;                                          // 0x0574(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                Sprite9;                                           // 0x0578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                Sprite10;                                          // 0x0580(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              AbsorbOffset;                                      // 0x0588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ReflectOffset;                                     // 0x0590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsShiftEnable;                                     // 0x0598(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_599[0x3];                                      // 0x0599(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              PlayerWeakOffset;                                  // 0x059C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChkWeakSkill;                                      // 0x05A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A5[0x3];                                      // 0x05A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 NoDamageColor;                                     // 0x05A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Sillhouette_Only;                               // 0x05AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AD[0x3];                                      // 0x05AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PBarPosLine;                                       // 0x05B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PBarPosLine2;                                      // 0x05B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTutorial;                                        // 0x05B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B9[0x7];                                      // 0x05B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAppCharacterComp*                      CharacterComp;                                     // 0x05C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDamage;                                          // 0x05C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsPhysical;                                        // 0x05C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5CA[0x2];                                      // 0x05CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SkillId;                                           // 0x05CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          No_Use_Stensil;                                    // 0x05D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D1[0x3];                                      // 0x05D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OutScale;                                          // 0x05D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InScale;                                           // 0x05D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle;                                             // 0x05DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delay_Stensil;                                     // 0x05E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDying;                                           // 0x05E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E5[0x3];                                      // 0x05E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBtlGuiDrawObjectSprite*                HPBar;                                             // 0x05E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delta_TimeWork;                                    // 0x05F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F4[0x4];                                      // 0x05F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  SaveRenderCustomDepth_0;                           // 0x05F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<int32>                                 SaveCustomDepthStencilValue_0;                     // 0x0608(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<bool>                                  SaveWeaponRenderCustomDepth_0;                     // 0x0618(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<int32>                                 SaveWeaponCustomDepthStencilValue_0;               // 0x0628(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<bool>                                  SaveGunRenderCustomDepth_0;                        // 0x0638(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<int32>                                 SaveGunCustomDepthStencilValue_0;                  // 0x0648(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          PrevIsEnemy;                                       // 0x0658(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_BtlTargetPanel(int32 EntryPoint);
	void CreateDrawItem();
	void GuiActorBeginDestroy();
	void GuiActorBeginPlay();
	void GuiActorUpdate(float DeltaTime);
	void StartSillhouetteAnim();
	void StopSillhouetteAnim();
	void StartEnemyElementAnim();
	void StartPlayerAnim();
	void StartEnemyCommonAnim();
	void NavigationTimeline_L__UpdateFunc();
	void NavigationTimeline_L__FinishedFunc();
	void NavigationTimeline_M__UpdateFunc();
	void NavigationTimeline_M__FinishedFunc();
	void NavigationTimeline_S__UpdateFunc();
	void NavigationTimeline_S__FinishedFunc();
	void AnimationWait__UpdateFunc();
	void AnimationWait__FinishedFunc();
	void AnimationStart__UpdateFunc();
	void AnimationStart__FinishedFunc();
	void NoDamageColorTimeline__UpdateFunc();
	void NoDamageColorTimeline__FinishedFunc();
	void EnemyElementCursorTimeline__UpdateFunc();
	void EnemyElementCursorTimeline__FinishedFunc();
	void EnemyFirstAnimTimeline__UpdateFunc();
	void EnemyFirstAnimTimeline__FinishedFunc();
	void PlayerFirstAnimTimeline__UpdateFunc();
	void PlayerFirstAnimTimeline__FinishedFunc();
	void PlayerAnimTimeline__UpdateFunc();
	void PlayerAnimTimeline__FinishedFunc();
	void EnemyCommonAnimTimeline__UpdateFunc();
	void EnemyCommonAnimTimeline__FinishedFunc();
	void UpdatePosition();
	void SetTarget(class ABP_BtlCharacterBase_C* BtlCharacter, bool IsHPBar_0, bool IsSillhouetteOnly, bool NoUseStensil, float DelayStensil);
	void GetEnemyCursorCommonAnim(float Lerp, struct FVector2D* Pos);
	void UpdateTarget(class ABP_BtlCharacterBase_C* Action, bool SkipMovingAnimation);
	void Get_Element_Offset(EBtlDataAttr Element, int32* SprNo1, struct FColor* Color1);
	void StartAnimation();
	void GetSillhoetteAnimParam(float* OutScale_0, float* InScale_0, float* Angle_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BtlTargetPanel_C">();
	}
	static class ABP_BtlTargetPanel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BtlTargetPanel_C>();
	}
};
static_assert(alignof(ABP_BtlTargetPanel_C) == 0x000008, "Wrong alignment on ABP_BtlTargetPanel_C");
static_assert(sizeof(ABP_BtlTargetPanel_C) == 0x000660, "Wrong size on ABP_BtlTargetPanel_C");
static_assert(offsetof(ABP_BtlTargetPanel_C, UberGraphFrame_BP_BtlTargetPanel_C) == 0x000350, "Member 'ABP_BtlTargetPanel_C::UberGraphFrame_BP_BtlTargetPanel_C' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, BtlGuiResources) == 0x000358, "Member 'ABP_BtlTargetPanel_C::BtlGuiResources' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, BP_BtlDataBase) == 0x000360, "Member 'ABP_BtlTargetPanel_C::BP_BtlDataBase' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, BtlGuiDraw) == 0x000368, "Member 'ABP_BtlTargetPanel_C::BtlGuiDraw' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, NavigationTimeline_L_Navigation_0BDC7B3446D2D0F3E26D879B2127402D) == 0x000370, "Member 'ABP_BtlTargetPanel_C::NavigationTimeline_L_Navigation_0BDC7B3446D2D0F3E26D879B2127402D' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, NavigationTimeline_L__Direction_0BDC7B3446D2D0F3E26D879B2127402D) == 0x00037C, "Member 'ABP_BtlTargetPanel_C::NavigationTimeline_L__Direction_0BDC7B3446D2D0F3E26D879B2127402D' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, NavigationTimeline_L) == 0x000380, "Member 'ABP_BtlTargetPanel_C::NavigationTimeline_L' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, NavigationTimeline_M_Navigation_A59790D745F623B87F47E18CE38BE93A) == 0x000388, "Member 'ABP_BtlTargetPanel_C::NavigationTimeline_M_Navigation_A59790D745F623B87F47E18CE38BE93A' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, NavigationTimeline_M__Direction_A59790D745F623B87F47E18CE38BE93A) == 0x000394, "Member 'ABP_BtlTargetPanel_C::NavigationTimeline_M__Direction_A59790D745F623B87F47E18CE38BE93A' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, NavigationTimeline_M) == 0x000398, "Member 'ABP_BtlTargetPanel_C::NavigationTimeline_M' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, NavigationTimeline_S_Navigation_DD343CFF4D14C23D0C18C8B2BB97A5BB) == 0x0003A0, "Member 'ABP_BtlTargetPanel_C::NavigationTimeline_S_Navigation_DD343CFF4D14C23D0C18C8B2BB97A5BB' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, NavigationTimeline_S__Direction_DD343CFF4D14C23D0C18C8B2BB97A5BB) == 0x0003AC, "Member 'ABP_BtlTargetPanel_C::NavigationTimeline_S__Direction_DD343CFF4D14C23D0C18C8B2BB97A5BB' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, NavigationTimeline_S) == 0x0003B0, "Member 'ABP_BtlTargetPanel_C::NavigationTimeline_S' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, AnimationWait_ScaleTrack_D65D6E794B560B08399FFFB15F9E78F3) == 0x0003B8, "Member 'ABP_BtlTargetPanel_C::AnimationWait_ScaleTrack_D65D6E794B560B08399FFFB15F9E78F3' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, AnimationWait__Direction_D65D6E794B560B08399FFFB15F9E78F3) == 0x0003C4, "Member 'ABP_BtlTargetPanel_C::AnimationWait__Direction_D65D6E794B560B08399FFFB15F9E78F3' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, AnimationWait) == 0x0003C8, "Member 'ABP_BtlTargetPanel_C::AnimationWait' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, AnimationStart_ScaleTrack_1AEB50754EB4B24B3962468140F9619A) == 0x0003D0, "Member 'ABP_BtlTargetPanel_C::AnimationStart_ScaleTrack_1AEB50754EB4B24B3962468140F9619A' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, AnimationStart__Direction_1AEB50754EB4B24B3962468140F9619A) == 0x0003DC, "Member 'ABP_BtlTargetPanel_C::AnimationStart__Direction_1AEB50754EB4B24B3962468140F9619A' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, AnimationStart) == 0x0003E0, "Member 'ABP_BtlTargetPanel_C::AnimationStart' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, NoDamageColorTimeline_NoDamageColor_837DDB2D49927A15BC0F418E2480B5EF) == 0x0003E8, "Member 'ABP_BtlTargetPanel_C::NoDamageColorTimeline_NoDamageColor_837DDB2D49927A15BC0F418E2480B5EF' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, NoDamageColorTimeline__Direction_837DDB2D49927A15BC0F418E2480B5EF) == 0x0003F8, "Member 'ABP_BtlTargetPanel_C::NoDamageColorTimeline__Direction_837DDB2D49927A15BC0F418E2480B5EF' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, NoDamageColorTimeline) == 0x000400, "Member 'ABP_BtlTargetPanel_C::NoDamageColorTimeline' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, EnemyElementCursorTimeline_InfoMarkScale_9BE4DD614FD9CB686096DAB849015DE4) == 0x000408, "Member 'ABP_BtlTargetPanel_C::EnemyElementCursorTimeline_InfoMarkScale_9BE4DD614FD9CB686096DAB849015DE4' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, EnemyElementCursorTimeline_HPBarPos_9BE4DD614FD9CB686096DAB849015DE4) == 0x00040C, "Member 'ABP_BtlTargetPanel_C::EnemyElementCursorTimeline_HPBarPos_9BE4DD614FD9CB686096DAB849015DE4' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, EnemyElementCursorTimeline_CircleScale3_9BE4DD614FD9CB686096DAB849015DE4) == 0x000410, "Member 'ABP_BtlTargetPanel_C::EnemyElementCursorTimeline_CircleScale3_9BE4DD614FD9CB686096DAB849015DE4' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, EnemyElementCursorTimeline_CircleScale2_9BE4DD614FD9CB686096DAB849015DE4) == 0x000414, "Member 'ABP_BtlTargetPanel_C::EnemyElementCursorTimeline_CircleScale2_9BE4DD614FD9CB686096DAB849015DE4' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, EnemyElementCursorTimeline_CircleScale1_9BE4DD614FD9CB686096DAB849015DE4) == 0x000418, "Member 'ABP_BtlTargetPanel_C::EnemyElementCursorTimeline_CircleScale1_9BE4DD614FD9CB686096DAB849015DE4' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, EnemyElementCursorTimeline__Direction_9BE4DD614FD9CB686096DAB849015DE4) == 0x00041C, "Member 'ABP_BtlTargetPanel_C::EnemyElementCursorTimeline__Direction_9BE4DD614FD9CB686096DAB849015DE4' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, EnemyElementCursorTimeline) == 0x000420, "Member 'ABP_BtlTargetPanel_C::EnemyElementCursorTimeline' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, EnemyFirstAnimTimeline_InfoMaskScale_2D107B454BFAA0F3A48469BEEE998AE6) == 0x000428, "Member 'ABP_BtlTargetPanel_C::EnemyFirstAnimTimeline_InfoMaskScale_2D107B454BFAA0F3A48469BEEE998AE6' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, EnemyFirstAnimTimeline_HPBarPos_2D107B454BFAA0F3A48469BEEE998AE6) == 0x00042C, "Member 'ABP_BtlTargetPanel_C::EnemyFirstAnimTimeline_HPBarPos_2D107B454BFAA0F3A48469BEEE998AE6' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, EnemyFirstAnimTimeline_CircleScale3_2D107B454BFAA0F3A48469BEEE998AE6) == 0x000430, "Member 'ABP_BtlTargetPanel_C::EnemyFirstAnimTimeline_CircleScale3_2D107B454BFAA0F3A48469BEEE998AE6' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, EnemyFirstAnimTimeline_CircleScale2_2D107B454BFAA0F3A48469BEEE998AE6) == 0x000434, "Member 'ABP_BtlTargetPanel_C::EnemyFirstAnimTimeline_CircleScale2_2D107B454BFAA0F3A48469BEEE998AE6' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, EnemyFirstAnimTimeline_CircleScale1_2D107B454BFAA0F3A48469BEEE998AE6) == 0x000438, "Member 'ABP_BtlTargetPanel_C::EnemyFirstAnimTimeline_CircleScale1_2D107B454BFAA0F3A48469BEEE998AE6' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, EnemyFirstAnimTimeline__Direction_2D107B454BFAA0F3A48469BEEE998AE6) == 0x00043C, "Member 'ABP_BtlTargetPanel_C::EnemyFirstAnimTimeline__Direction_2D107B454BFAA0F3A48469BEEE998AE6' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, EnemyFirstAnimTimeline) == 0x000440, "Member 'ABP_BtlTargetPanel_C::EnemyFirstAnimTimeline' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, PlayerFirstAnimTimeline_InfoMarkScale_150BDF924A2CF82E41A012BC619AD562) == 0x000448, "Member 'ABP_BtlTargetPanel_C::PlayerFirstAnimTimeline_InfoMarkScale_150BDF924A2CF82E41A012BC619AD562' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, PlayerFirstAnimTimeline_HPBarPos_150BDF924A2CF82E41A012BC619AD562) == 0x00044C, "Member 'ABP_BtlTargetPanel_C::PlayerFirstAnimTimeline_HPBarPos_150BDF924A2CF82E41A012BC619AD562' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, PlayerFirstAnimTimeline_CircleScale3_150BDF924A2CF82E41A012BC619AD562) == 0x000450, "Member 'ABP_BtlTargetPanel_C::PlayerFirstAnimTimeline_CircleScale3_150BDF924A2CF82E41A012BC619AD562' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, PlayerFirstAnimTimeline_CircleScale2_150BDF924A2CF82E41A012BC619AD562) == 0x000454, "Member 'ABP_BtlTargetPanel_C::PlayerFirstAnimTimeline_CircleScale2_150BDF924A2CF82E41A012BC619AD562' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, PlayerFirstAnimTimeline_CircleScale1_150BDF924A2CF82E41A012BC619AD562) == 0x000458, "Member 'ABP_BtlTargetPanel_C::PlayerFirstAnimTimeline_CircleScale1_150BDF924A2CF82E41A012BC619AD562' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, PlayerFirstAnimTimeline__Direction_150BDF924A2CF82E41A012BC619AD562) == 0x00045C, "Member 'ABP_BtlTargetPanel_C::PlayerFirstAnimTimeline__Direction_150BDF924A2CF82E41A012BC619AD562' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, PlayerFirstAnimTimeline) == 0x000460, "Member 'ABP_BtlTargetPanel_C::PlayerFirstAnimTimeline' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, PlayerAnimTimeline_PlayerAnim_0FDD5D3041EACF9AA408E8AC33AC4B52) == 0x000468, "Member 'ABP_BtlTargetPanel_C::PlayerAnimTimeline_PlayerAnim_0FDD5D3041EACF9AA408E8AC33AC4B52' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, PlayerAnimTimeline__Direction_0FDD5D3041EACF9AA408E8AC33AC4B52) == 0x00046C, "Member 'ABP_BtlTargetPanel_C::PlayerAnimTimeline__Direction_0FDD5D3041EACF9AA408E8AC33AC4B52' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, PlayerAnimTimeline) == 0x000470, "Member 'ABP_BtlTargetPanel_C::PlayerAnimTimeline' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, EnemyCommonAnimTimeline_EnemyCommonAnim_452FC8444616C79347398EAFBAB263A7) == 0x000478, "Member 'ABP_BtlTargetPanel_C::EnemyCommonAnimTimeline_EnemyCommonAnim_452FC8444616C79347398EAFBAB263A7' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, EnemyCommonAnimTimeline__Direction_452FC8444616C79347398EAFBAB263A7) == 0x00047C, "Member 'ABP_BtlTargetPanel_C::EnemyCommonAnimTimeline__Direction_452FC8444616C79347398EAFBAB263A7' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, EnemyCommonAnimTimeline) == 0x000480, "Member 'ABP_BtlTargetPanel_C::EnemyCommonAnimTimeline' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, Character) == 0x000488, "Member 'ABP_BtlTargetPanel_C::Character' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, HPBarOffset) == 0x000490, "Member 'ABP_BtlTargetPanel_C::HPBarOffset' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, PosOffset) == 0x000498, "Member 'ABP_BtlTargetPanel_C::PosOffset' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, HPBarMask) == 0x0004A0, "Member 'ABP_BtlTargetPanel_C::HPBarMask' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, IsHPBar) == 0x0004A8, "Member 'ABP_BtlTargetPanel_C::IsHPBar' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, IsEnemy) == 0x0004A9, "Member 'ABP_BtlTargetPanel_C::IsEnemy' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, EnemyCommonAnimParam) == 0x0004AC, "Member 'ABP_BtlTargetPanel_C::EnemyCommonAnimParam' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, PlayerAnimParam) == 0x0004B0, "Member 'ABP_BtlTargetPanel_C::PlayerAnimParam' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, Sprite1) == 0x0004B8, "Member 'ABP_BtlTargetPanel_C::Sprite1' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, Sprite2) == 0x0004C0, "Member 'ABP_BtlTargetPanel_C::Sprite2' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, Sprite3) == 0x0004C8, "Member 'ABP_BtlTargetPanel_C::Sprite3' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, Sprite4) == 0x0004D0, "Member 'ABP_BtlTargetPanel_C::Sprite4' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, Sprite5) == 0x0004D8, "Member 'ABP_BtlTargetPanel_C::Sprite5' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, Scale1) == 0x0004E0, "Member 'ABP_BtlTargetPanel_C::Scale1' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, Scale2) == 0x0004E4, "Member 'ABP_BtlTargetPanel_C::Scale2' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, Scale3) == 0x0004E8, "Member 'ABP_BtlTargetPanel_C::Scale3' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, ScaleOffset) == 0x0004EC, "Member 'ABP_BtlTargetPanel_C::ScaleOffset' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, HPBarPos) == 0x0004F0, "Member 'ABP_BtlTargetPanel_C::HPBarPos' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, Sprite6) == 0x0004F8, "Member 'ABP_BtlTargetPanel_C::Sprite6' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, ScaleOffset2) == 0x000500, "Member 'ABP_BtlTargetPanel_C::ScaleOffset2' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, PrevCharacter) == 0x000508, "Member 'ABP_BtlTargetPanel_C::PrevCharacter' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, Attr) == 0x000510, "Member 'ABP_BtlTargetPanel_C::Attr' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, WeakOffset) == 0x000514, "Member 'ABP_BtlTargetPanel_C::WeakOffset' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, UnknownOffset) == 0x00051C, "Member 'ABP_BtlTargetPanel_C::UnknownOffset' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, BlockOffset) == 0x000524, "Member 'ABP_BtlTargetPanel_C::BlockOffset' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, Scale4) == 0x00052C, "Member 'ABP_BtlTargetPanel_C::Scale4' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, Sprite7) == 0x000530, "Member 'ABP_BtlTargetPanel_C::Sprite7' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, Sprite8) == 0x000538, "Member 'ABP_BtlTargetPanel_C::Sprite8' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, IconType) == 0x000540, "Member 'ABP_BtlTargetPanel_C::IconType' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, IsMoving) == 0x000544, "Member 'ABP_BtlTargetPanel_C::IsMoving' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, OffsetTemp) == 0x000548, "Member 'ABP_BtlTargetPanel_C::OffsetTemp' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, MovingTime) == 0x000550, "Member 'ABP_BtlTargetPanel_C::MovingTime' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, OffsetTemp2) == 0x000554, "Member 'ABP_BtlTargetPanel_C::OffsetTemp2' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, GuiIcon) == 0x000560, "Member 'ABP_BtlTargetPanel_C::GuiIcon' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, IsSaveSillhouette) == 0x000568, "Member 'ABP_BtlTargetPanel_C::IsSaveSillhouette' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, CursorType) == 0x00056C, "Member 'ABP_BtlTargetPanel_C::CursorType' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, BarMaxParam) == 0x000570, "Member 'ABP_BtlTargetPanel_C::BarMaxParam' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, BarParam) == 0x000574, "Member 'ABP_BtlTargetPanel_C::BarParam' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, Sprite9) == 0x000578, "Member 'ABP_BtlTargetPanel_C::Sprite9' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, Sprite10) == 0x000580, "Member 'ABP_BtlTargetPanel_C::Sprite10' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, AbsorbOffset) == 0x000588, "Member 'ABP_BtlTargetPanel_C::AbsorbOffset' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, ReflectOffset) == 0x000590, "Member 'ABP_BtlTargetPanel_C::ReflectOffset' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, IsShiftEnable) == 0x000598, "Member 'ABP_BtlTargetPanel_C::IsShiftEnable' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, PlayerWeakOffset) == 0x00059C, "Member 'ABP_BtlTargetPanel_C::PlayerWeakOffset' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, ChkWeakSkill) == 0x0005A4, "Member 'ABP_BtlTargetPanel_C::ChkWeakSkill' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, NoDamageColor) == 0x0005A8, "Member 'ABP_BtlTargetPanel_C::NoDamageColor' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, Is_Sillhouette_Only) == 0x0005AC, "Member 'ABP_BtlTargetPanel_C::Is_Sillhouette_Only' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, PBarPosLine) == 0x0005B0, "Member 'ABP_BtlTargetPanel_C::PBarPosLine' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, PBarPosLine2) == 0x0005B4, "Member 'ABP_BtlTargetPanel_C::PBarPosLine2' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, IsTutorial) == 0x0005B8, "Member 'ABP_BtlTargetPanel_C::IsTutorial' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, CharacterComp) == 0x0005C0, "Member 'ABP_BtlTargetPanel_C::CharacterComp' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, IsDamage) == 0x0005C8, "Member 'ABP_BtlTargetPanel_C::IsDamage' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, IsPhysical) == 0x0005C9, "Member 'ABP_BtlTargetPanel_C::IsPhysical' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, SkillId) == 0x0005CC, "Member 'ABP_BtlTargetPanel_C::SkillId' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, No_Use_Stensil) == 0x0005D0, "Member 'ABP_BtlTargetPanel_C::No_Use_Stensil' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, OutScale) == 0x0005D4, "Member 'ABP_BtlTargetPanel_C::OutScale' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, InScale) == 0x0005D8, "Member 'ABP_BtlTargetPanel_C::InScale' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, Angle) == 0x0005DC, "Member 'ABP_BtlTargetPanel_C::Angle' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, Delay_Stensil) == 0x0005E0, "Member 'ABP_BtlTargetPanel_C::Delay_Stensil' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, IsDying) == 0x0005E4, "Member 'ABP_BtlTargetPanel_C::IsDying' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, HPBar) == 0x0005E8, "Member 'ABP_BtlTargetPanel_C::HPBar' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, Delta_TimeWork) == 0x0005F0, "Member 'ABP_BtlTargetPanel_C::Delta_TimeWork' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, SaveRenderCustomDepth_0) == 0x0005F8, "Member 'ABP_BtlTargetPanel_C::SaveRenderCustomDepth_0' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, SaveCustomDepthStencilValue_0) == 0x000608, "Member 'ABP_BtlTargetPanel_C::SaveCustomDepthStencilValue_0' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, SaveWeaponRenderCustomDepth_0) == 0x000618, "Member 'ABP_BtlTargetPanel_C::SaveWeaponRenderCustomDepth_0' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, SaveWeaponCustomDepthStencilValue_0) == 0x000628, "Member 'ABP_BtlTargetPanel_C::SaveWeaponCustomDepthStencilValue_0' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, SaveGunRenderCustomDepth_0) == 0x000638, "Member 'ABP_BtlTargetPanel_C::SaveGunRenderCustomDepth_0' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, SaveGunCustomDepthStencilValue_0) == 0x000648, "Member 'ABP_BtlTargetPanel_C::SaveGunCustomDepthStencilValue_0' has a wrong offset!");
static_assert(offsetof(ABP_BtlTargetPanel_C, PrevIsEnemy) == 0x000658, "Member 'ABP_BtlTargetPanel_C::PrevIsEnemy' has a wrong offset!");

}

