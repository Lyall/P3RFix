#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtlTacticsCheck

#include "Basic.hpp"

#include "BP_BtlTacticsCheck_classes.hpp"
#include "BP_BtlTacticsCheck_parameters.hpp"


namespace SDK
{

// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.ExecuteUbergraph_BP_BtlTacticsCheck
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlTacticsCheck_C::ExecuteUbergraph_BP_BtlTacticsCheck(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "ExecuteUbergraph_BP_BtlTacticsCheck");

	Params::BP_BtlTacticsCheck_C_ExecuteUbergraph_BP_BtlTacticsCheck Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.SetDebugKill
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlTacticsCheck_C::SetDebugKill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "SetDebugKill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.GuiActorUpdate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlTacticsCheck_C::GuiActorUpdate(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "GuiActorUpdate");

	Params::BP_BtlTacticsCheck_C_GuiActorUpdate Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.GuiActorStateExit
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlTacticsCheck_C::GuiActorStateExit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "GuiActorStateExit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.GuiActorStateInit
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlTacticsCheck_C::GuiActorStateInit(bool Flag, int32 Param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "GuiActorStateInit");

	Params::BP_BtlTacticsCheck_C_GuiActorStateInit Parms{};

	Parms.Flag = Flag;
	Parms.Param = Param;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.GuiActorBeginPlay
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlTacticsCheck_C::GuiActorBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "GuiActorBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.«¹¿à¤ÙóÈ_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBtlInputKey                     InputKey                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void ABP_BtlTacticsCheck_C::_________0(const struct FBtlInputKey& InputKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "«¹¿à¤ÙóÈ_0");

	Params::BP_BtlTacticsCheck_C__________0 Parms{};

	Parms.InputKey = std::move(InputKey);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.PushLD
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlTacticsCheck_C::PushLD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "PushLD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.PushLU
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlTacticsCheck_C::PushLU()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "PushLU");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.PushR2
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlTacticsCheck_C::PushR2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "PushR2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.PushRL
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlTacticsCheck_C::PushRL()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "PushRL");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.PushLR
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlTacticsCheck_C::PushLR()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "PushLR");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.PushLL
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlTacticsCheck_C::PushLL()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "PushLL");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.PushL1
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlTacticsCheck_C::PushL1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "PushL1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.GuiActorUnbindAction
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlTacticsCheck_C::GuiActorUnbindAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "GuiActorUnbindAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.GuiActorBindAction
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlTacticsCheck_C::GuiActorBindAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "GuiActorBindAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.PushCancel
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlTacticsCheck_C::PushCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "PushCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.PushOk
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlTacticsCheck_C::PushOk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "PushOk");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.CallNextTimeline
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlTacticsCheck_C::CallNextTimeline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "CallNextTimeline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.CallStartTimeline
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlTacticsCheck_C::CallStartTimeline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "CallStartTimeline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.CallEndTimeline
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlTacticsCheck_C::CallEndTimeline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "CallEndTimeline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.NextCursorTimeline__UpdateFunc
// (BlueprintEvent)

void ABP_BtlTacticsCheck_C::NextCursorTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "NextCursorTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.NextCursorTimeline__FinishedFunc
// (BlueprintEvent)

void ABP_BtlTacticsCheck_C::NextCursorTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "NextCursorTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.EndTimeline__UpdateFunc
// (BlueprintEvent)

void ABP_BtlTacticsCheck_C::EndTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "EndTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.EndTimeline__FinishedFunc
// (BlueprintEvent)

void ABP_BtlTacticsCheck_C::EndTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "EndTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.StartTimeline__UpdateFunc
// (BlueprintEvent)

void ABP_BtlTacticsCheck_C::StartTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "StartTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.StartTimeline__FinishedFunc
// (BlueprintEvent)

void ABP_BtlTacticsCheck_C::StartTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "StartTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.CheckTargetInTopUI
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABtlActor*>                Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    Bool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BtlTacticsCheck_C::CheckTargetInTopUI(TArray<class ABtlActor*>& Actor, bool* Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "CheckTargetInTopUI");

	Params::BP_BtlTacticsCheck_C_CheckTargetInTopUI Parms{};

	Parms.Actor = std::move(Actor);

	UObject::ProcessEvent(Func, &Parms);

	Actor = std::move(Parms.Actor);

	if (Bool != nullptr)
		*Bool = Parms.Bool;
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.MakeText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPlgAsset*                        Plg                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   NewItem                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlTacticsCheck_C::MakeText(class UPlgAsset* Plg, const float NewItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "MakeText");

	Params::BP_BtlTacticsCheck_C_MakeText Parms{};

	Parms.Plg = Plg;
	Parms.NewItem = NewItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.GetSize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABtlActor*                        Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// float                                   Size                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlTacticsCheck_C::GetSize(class ABtlActor* Actor, float* Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "GetSize");

	Params::BP_BtlTacticsCheck_C_GetSize Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (Size != nullptr)
		*Size = Parms.Size;
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.GetNextSize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABtlActor*                        Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// float                                   Size                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlTacticsCheck_C::GetNextSize(class ABtlActor* Actor, float* Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "GetNextSize");

	Params::BP_BtlTacticsCheck_C_GetNextSize Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (Size != nullptr)
		*Size = Parms.Size;
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.Update3D
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   A                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlTacticsCheck_C::Update3D(float A)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "Update3D");

	Params::BP_BtlTacticsCheck_C_Update3D Parms{};

	Parms.A = A;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.CreatePlayerTargetList
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_BtlTacticsCheck_C::CreatePlayerTargetList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "CreatePlayerTargetList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.CreateEnemyTargetList
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_BtlTacticsCheck_C::CreateEnemyTargetList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "CreateEnemyTargetList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.SetTargetCursor
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlTacticsCheck_C::SetTargetCursor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "SetTargetCursor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.ToggleTargetList
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_BtlTacticsCheck_C::ToggleTargetList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "ToggleTargetList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.CreateAllTargetList
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_BtlTacticsCheck_C::CreateAllTargetList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "CreateAllTargetList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.moveCursor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABtlActor*                        In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlTacticsCheck_C::MoveCursor(class ABtlActor* In)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "moveCursor");

	Params::BP_BtlTacticsCheck_C_MoveCursor Parms{};

	Parms.In = In;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.MakePosCursor
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABtlActor*>                In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FVector2D>                Out                                                    (Parm, OutParm)

void ABP_BtlTacticsCheck_C::MakePosCursor(TArray<class ABtlActor*>& In, TArray<struct FVector2D>* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "MakePosCursor");

	Params::BP_BtlTacticsCheck_C_MakePosCursor Parms{};

	Parms.In = std::move(In);

	UObject::ProcessEvent(Func, &Parms);

	In = std::move(Parms.In);

	if (Out != nullptr)
		*Out = std::move(Parms.Out);
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.DebugShowPosCursor
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FVector2D>                In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_BtlTacticsCheck_C::DebugShowPosCursor(TArray<struct FVector2D>& In)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "DebugShowPosCursor");

	Params::BP_BtlTacticsCheck_C_DebugShowPosCursor Parms{};

	Parms.In = std::move(In);

	UObject::ProcessEvent(Func, &Parms);

	In = std::move(Parms.In);
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.Cal Degree 2Vec
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector2D                        Vec1                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        Vec2                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Vec1Length                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Vec2Length                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_BtlTacticsCheck_C::Cal_Degree_2Vec(const struct FVector2D& Vec1, const struct FVector2D& Vec2, float Vec1Length, float Vec2Length)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "Cal Degree 2Vec");

	Params::BP_BtlTacticsCheck_C_Cal_Degree_2Vec Parms{};

	Parms.Vec1 = std::move(Vec1);
	Parms.Vec2 = std::move(Vec2);
	Parms.Vec1Length = Vec1Length;
	Parms.Vec2Length = Vec2Length;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.ChecPushkCursor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Pres                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Rep                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BtlTacticsCheck_C::ChecPushkCursor(bool Pres, bool Rep, bool* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "ChecPushkCursor");

	Params::BP_BtlTacticsCheck_C_ChecPushkCursor Parms{};

	Parms.Pres = Pres;
	Parms.Rep = Rep;

	UObject::ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = Parms.Out;
}


// Function BP_BtlTacticsCheck.BP_BtlTacticsCheck_C.Cal MovePosOffsetVec
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Start                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          End                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlTacticsCheck_C::Cal_MovePosOffsetVec(struct FVector* Start, struct FVector* End)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlTacticsCheck_C", "Cal MovePosOffsetVec");

	Params::BP_BtlTacticsCheck_C_Cal_MovePosOffsetVec Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Start != nullptr)
		*Start = std::move(Parms.Start);

	if (End != nullptr)
		*End = std::move(Parms.End);
}

}

