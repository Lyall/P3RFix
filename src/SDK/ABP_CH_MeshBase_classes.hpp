#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_CH_MeshBase

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "HipsDirection_structs.hpp"
#include "ALS_Gait_structs.hpp"
#include "ALS_MovementState_structs.hpp"
#include "GroundedEntryState_structs.hpp"
#include "MovementDirection_structs.hpp"
#include "ALS_OverlayState_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ALS_MovementAction_structs.hpp"
#include "ALS_Stance_structs.hpp"
#include "ALS_ViewMode_structs.hpp"
#include "Enum_FloorState_structs.hpp"
#include "ALS_RotationMode_structs.hpp"
#include "VelocityBlend_structs.hpp"
#include "LeanAmount_structs.hpp"
#include "Xrd777_structs.hpp"
#include "Xrd777_EventPhysics_structs.hpp"
#include "Enum_LocomotionState_structs.hpp"
#include "CharacterBase_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_CH_MeshBase.ABP_CH_MeshBase_C
// 0xF970 (0xFC30 - 0x02C0)
class UABP_CH_MeshBase_C : public UAnimInstanceCore
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_61;                         // 0x02C8(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_60;                         // 0x03B8(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_59;                         // 0x04A8(0x00F0)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_46;            // 0x0598(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_45;            // 0x05B8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_44;            // 0x05D8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_43;            // 0x05F8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_42;            // 0x0618(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_41;            // 0x0638(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_40;            // 0x0658(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_39;            // 0x0678(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_38;            // 0x0698(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_37;            // 0x06B8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_36;            // 0x06D8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_35;            // 0x06F8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_34;            // 0x0718(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_33;            // 0x0738(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_8;                   // 0x0758(0x0118)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_21;                   // 0x0870(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_77;                    // 0x09C8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_76;                    // 0x09F0(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_44;            // 0x0A18(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_75;                    // 0x0A38(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_43;            // 0x0A60(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_74;                    // 0x0A80(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_42;            // 0x0AA8(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_73;                    // 0x0AC8(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_41;            // 0x0AF0(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_72;                    // 0x0B10(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_40;            // 0x0B38(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_71;                    // 0x0B58(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_39;            // 0x0B80(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_70;                    // 0x0BA0(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_38;            // 0x0BC8(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_69;                    // 0x0BE8(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_37;            // 0x0C10(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_68;                    // 0x0C30(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_36;            // 0x0C58(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_67;                    // 0x0C78(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_35;            // 0x0CA0(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_66;                    // 0x0CC0(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_34;            // 0x0CE8(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_65;                    // 0x0D08(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_33;            // 0x0D30(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_64;                    // 0x0D50(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_32;            // 0x0D78(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_63;                    // 0x0D98(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_31;            // 0x0DC0(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_62;                    // 0x0DE0(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_30;            // 0x0E08(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_61;                    // 0x0E28(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_29;            // 0x0E50(0x0020)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_20;                   // 0x0E70(0x0158)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_1;                    // 0x0FC8(0x00A0)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_32;            // 0x1068(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_31;            // 0x1088(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_30;            // 0x10A8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_29;            // 0x10C8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_28;            // 0x10E8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_27;            // 0x1108(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_26;            // 0x1128(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_25;            // 0x1148(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_24;            // 0x1168(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_23;            // 0x1188(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_22;            // 0x11A8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_21;            // 0x11C8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_20;            // 0x11E8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_19;            // 0x1208(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_18;            // 0x1228(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_17;            // 0x1248(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_28;            // 0x1268(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_27;            // 0x1288(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_26;            // 0x12A8(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_25;            // 0x12C8(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_24;            // 0x12E8(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_23;            // 0x1308(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_22;            // 0x1328(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_21;            // 0x1348(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_20;            // 0x1368(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_19;            // 0x1388(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_18;            // 0x13A8(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_17;            // 0x13C8(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_16;            // 0x13E8(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_15;            // 0x1408(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_14;            // 0x1428(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_13;            // 0x1448(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_60;                    // 0x1468(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_59;                    // 0x1490(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_58;                    // 0x14B8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_57;                    // 0x14E0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_56;                    // 0x1508(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_55;                    // 0x1530(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_54;                    // 0x1558(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_53;                    // 0x1580(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_52;                    // 0x15A8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_51;                    // 0x15D0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_50;                    // 0x15F8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_49;                    // 0x1620(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_48;                    // 0x1648(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_47;                    // 0x1670(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_46;                    // 0x1698(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_45;                    // 0x16C0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_44;                    // 0x16E8(0x0028)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_58;                         // 0x1710(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_57;                         // 0x1800(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_56;                         // 0x18F0(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_55;                         // 0x19E0(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_54;                         // 0x1AD0(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_53;                         // 0x1BC0(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_52;                         // 0x1CB0(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_51;                         // 0x1DA0(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_50;                         // 0x1E90(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_49;                         // 0x1F80(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_48;                         // 0x2070(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_47;                         // 0x2160(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_46;                         // 0x2250(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_45;                         // 0x2340(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_44;                         // 0x2430(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_43;                         // 0x2520(0x00F0)()
	struct FAnimNode_Root                         AnimGraphNode_Root_10;                             // 0x2610(0x0030)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_7;                   // 0x2640(0x0118)()
	struct FAnimNode_RotationMultiplier           AnimGraphNode_RotationMultiplier_13;               // 0x2758(0x00F0)()
	struct FAnimNode_RotationMultiplier           AnimGraphNode_RotationMultiplier_12;               // 0x2848(0x00F0)()
	struct FAnimNode_RotationMultiplier           AnimGraphNode_RotationMultiplier_11;               // 0x2938(0x00F0)()
	struct FAnimNode_RotationMultiplier           AnimGraphNode_RotationMultiplier_10;               // 0x2A28(0x00F0)()
	struct FAnimNode_RotationMultiplier           AnimGraphNode_RotationMultiplier_9;                // 0x2B18(0x00F0)()
	struct FAnimNode_BoneDrivenController         AnimGraphNode_BoneDrivenController_3;              // 0x2C08(0x0118)()
	struct FAnimNode_BoneDrivenController         AnimGraphNode_BoneDrivenController_2;              // 0x2D20(0x0118)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_42;                         // 0x2E38(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_41;                         // 0x2F28(0x00F0)()
	struct FAnimNode_BoneDrivenController         AnimGraphNode_BoneDrivenController_1;              // 0x3018(0x0118)()
	struct FAnimNode_BoneDrivenController         AnimGraphNode_BoneDrivenController;                // 0x3130(0x0118)()
	uint8                                         Pad_3248[0x8];                                     // 0x3248(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_5;                         // 0x3250(0x01E0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_40;                         // 0x3430(0x00F0)()
	struct FAnimNode_Constraint                   AnimGraphNode_Constraint_3;                        // 0x3520(0x0108)()
	uint8                                         Pad_3628[0x8];                                     // 0x3628(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_4;                         // 0x3630(0x01E0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_12;            // 0x3810(0x0020)()
	struct FAnimNode_RotationMultiplier           AnimGraphNode_RotationMultiplier_8;                // 0x3830(0x00F0)()
	struct FAnimNode_RotationMultiplier           AnimGraphNode_RotationMultiplier_7;                // 0x3920(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_39;                         // 0x3A10(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_38;                         // 0x3B00(0x00F0)()
	struct FAnimNode_Constraint                   AnimGraphNode_Constraint_2;                        // 0x3BF0(0x0108)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_19;                   // 0x3CF8(0x0158)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_18;                   // 0x3E50(0x0158)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_16;            // 0x3FA8(0x0020)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_37;                         // 0x3FC8(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_36;                         // 0x40B8(0x00F0)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_15;            // 0x41A8(0x0020)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_17;                   // 0x41C8(0x0158)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_35;                         // 0x4320(0x00F0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_16;                   // 0x4410(0x0158)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_14;            // 0x4568(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_43;                    // 0x4588(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_11;            // 0x45B0(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_42;                    // 0x45D0(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_10;            // 0x45F8(0x0020)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_34;                         // 0x4618(0x00F0)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_13;            // 0x4708(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_12;            // 0x4728(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_11;            // 0x4748(0x0020)()
	struct FAnimNode_RotationMultiplier           AnimGraphNode_RotationMultiplier_6;                // 0x4768(0x00F0)()
	struct FAnimNode_RotationMultiplier           AnimGraphNode_RotationMultiplier_5;                // 0x4858(0x00F0)()
	struct FAnimNode_RotationMultiplier           AnimGraphNode_RotationMultiplier_4;                // 0x4948(0x00F0)()
	struct FAnimNode_RotationMultiplier           AnimGraphNode_RotationMultiplier_3;                // 0x4A38(0x00F0)()
	struct FAnimNode_RotationMultiplier           AnimGraphNode_RotationMultiplier_2;                // 0x4B28(0x00F0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_15;                   // 0x4C18(0x0158)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_33;                         // 0x4D70(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_32;                         // 0x4E60(0x00F0)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_10;            // 0x4F50(0x0020)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_31;                         // 0x4F70(0x00F0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_9;             // 0x5060(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_41;                    // 0x5080(0x0028)()
	struct FAnimNode_RotationMultiplier           AnimGraphNode_RotationMultiplier_1;                // 0x50A8(0x00F0)()
	struct FAnimNode_RotationMultiplier           AnimGraphNode_RotationMultiplier;                  // 0x5198(0x00F0)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_9;             // 0x5288(0x0020)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_30;                         // 0x52A8(0x00F0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_8;             // 0x5398(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_40;                    // 0x53B8(0x0028)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_8;             // 0x53E0(0x0020)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_14;                   // 0x5400(0x0158)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt;                      // 0x5558(0x00A0)()
	struct FAnimNode_Root                         AnimGraphNode_Root_9;                              // 0x55F8(0x0030)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_6;                   // 0x5628(0x0118)()
	struct FAnimNode_Root                         AnimGraphNode_Root_8;                              // 0x5740(0x0030)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_5;                   // 0x5770(0x0118)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_7;             // 0x5888(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_7;                              // 0x58A8(0x0030)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_29;                         // 0x58D8(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_28;                         // 0x59C8(0x00F0)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_4;                   // 0x5AB8(0x0118)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_27;                         // 0x5BD0(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_26;                         // 0x5CC0(0x00F0)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_3;                         // 0x5DB0(0x01E0)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_2;                         // 0x5F90(0x01E0)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_11;                       // 0x6170(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_10;                       // 0x6278(0x0108)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_7;             // 0x6380(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_9;                        // 0x63A0(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_8;                        // 0x64A8(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_7;                        // 0x65B0(0x0108)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_25;                         // 0x66B8(0x00F0)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_6;                        // 0x67A8(0x0108)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_24;                         // 0x68B0(0x00F0)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_5;                        // 0x69A0(0x0108)()
	struct FAnimNode_Constraint                   AnimGraphNode_Constraint_1;                        // 0x6AA8(0x0108)()
	struct FAnimNode_Constraint                   AnimGraphNode_Constraint;                          // 0x6BB0(0x0108)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_23;                         // 0x6CB8(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_22;                         // 0x6DA8(0x00F0)()
	struct FAnimNode_Root                         AnimGraphNode_Root_6;                              // 0x6E98(0x0030)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_3;                   // 0x6EC8(0x0118)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_13;                   // 0x6FE0(0x0158)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_18;                             // 0x7138(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_39;                    // 0x7180(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_17;                             // 0x71A8(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_38;                    // 0x71F0(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_16;                             // 0x7218(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_37;                    // 0x7260(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_15;                             // 0x7288(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_36;                    // 0x72D0(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_14;                             // 0x72F8(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_13;                             // 0x7340(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_35;                    // 0x7388(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_17;                 // 0x73B0(0x00C0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_12;                             // 0x7470(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_34;                    // 0x74B8(0x0028)()
	struct FAnimNode_Root                         AnimGraphNode_Root_5;                              // 0x74E0(0x0030)()
	struct FAnimNode_BlendBoneByChannel           AnimGraphNode_BlendBoneByChannel_3;                // 0x7510(0x0068)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_2;                   // 0x7578(0x0118)()
	struct FAnimNode_Root                         AnimGraphNode_Root_4;                              // 0x7690(0x0030)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_33;                    // 0x76C0(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_16;                 // 0x76E8(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_32;                    // 0x77A8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_31;                    // 0x77D0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_30;                    // 0x77F8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_29;                    // 0x7820(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_28;                    // 0x7848(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_12;                   // 0x7870(0x0158)()
	struct FAnimNode_BlendBoneByChannel           AnimGraphNode_BlendBoneByChannel_2;                // 0x79C8(0x0068)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_15;                 // 0x7A30(0x00C0)()
	struct FAnimNode_BlendBoneByChannel           AnimGraphNode_BlendBoneByChannel_1;                // 0x7AF0(0x0068)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_14;                 // 0x7B58(0x00C0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_11;                             // 0x7C18(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_10;                             // 0x7C60(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_9;                              // 0x7CA8(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_27;                    // 0x7CF0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_26;                    // 0x7D18(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_11;                   // 0x7D40(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_25;                    // 0x7E98(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_24;                    // 0x7EC0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_23;                    // 0x7EE8(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_8;                              // 0x7F10(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_10;                   // 0x7F58(0x0158)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_9;                    // 0x80B0(0x0158)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_13;                 // 0x8208(0x00C0)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_12;                 // 0x82C8(0x00C0)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_11;                 // 0x8388(0x00C0)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_10;                 // 0x8448(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_22;                    // 0x8508(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_9;                  // 0x8530(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_21;                    // 0x85F0(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_8;                  // 0x8618(0x00C0)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_7;                  // 0x86D8(0x00C0)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x8798(0x0118)()
	struct FAnimNode_Root                         AnimGraphNode_Root_3;                              // 0x88B0(0x0030)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x88E0(0x0118)()
	struct FAnimNode_Root                         AnimGraphNode_Root_2;                              // 0x89F8(0x0030)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_6;                  // 0x8A28(0x00C0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_8;                    // 0x8AE8(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_20;                    // 0x8C40(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_19;                    // 0x8C68(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_5;                  // 0x8C90(0x00C0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_7;                    // 0x8D50(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_18;                    // 0x8EA8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_17;                    // 0x8ED0(0x0028)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x8EF8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x8F28(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x8F50(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x8F78(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x8FF8(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_4;                  // 0x9028(0x00E8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_6;                   // 0x9110(0x00A0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0x91B0(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x9298(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x92C8(0x00B0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_7;                              // 0x9378(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_6;                              // 0x93C0(0x0048)()
	struct FAnimNode_Inertialization              AnimGraphNode_Inertialization;                     // 0x9408(0x0070)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x9478(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x94A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x94C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x94F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x9518(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x9540(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x9568(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x9590(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x95B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x95E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x9608(0x0028)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_5;                       // 0x9630(0x0058)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x9688(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x9708(0x0030)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_4;                       // 0x9738(0x0058)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_4;                 // 0x9790(0x0050)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x97E0(0x0030)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_3;                       // 0x9810(0x0058)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x9868(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x9890(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x98B8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_16;                    // 0x98E0(0x0028)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_2;                       // 0x9908(0x0058)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x9960(0x0030)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_3;                 // 0x9990(0x0050)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_15;                    // 0x99E0(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_5;                   // 0x9A08(0x00A0)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_2;                       // 0x9AA8(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x9B70(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x9BF0(0x0030)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_2;                 // 0x9C20(0x0050)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_14;                    // 0x9C70(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_4;                   // 0x9C98(0x00A0)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_1;                       // 0x9D38(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x9E00(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x9E80(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x9EB0(0x00B0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x9F60(0x0030)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_1;                       // 0x9F90(0x0058)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_13;                    // 0x9FE8(0x0028)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_6;             // 0xA010(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_6;             // 0xA030(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_4;                        // 0xA050(0x0108)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0xA158(0x00E8)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_11;                    // 0xA240(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0xA308(0x0030)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve;                         // 0xA338(0x0058)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_12;                    // 0xA390(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0xA3B8(0x00A0)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_1;                 // 0xA458(0x0050)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0xA4A8(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0xA4D8(0x00B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_6;                    // 0xA588(0x0158)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_5;                    // 0xA6E0(0x0158)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0xA838(0x0050)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0xA888(0x0030)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_5;             // 0xA8B8(0x0020)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_9;                   // 0xA8D8(0x00B0)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_8;                   // 0xA988(0x00B0)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_7;                   // 0xAA38(0x00B0)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_6;                   // 0xAAE8(0x00B0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_5;                              // 0xAB98(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_4;                    // 0xABE0(0x0158)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_4;                  // 0xAD38(0x00C0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_4;                              // 0xADF8(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_10;                    // 0xAE40(0x00C8)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_9;                     // 0xAF08(0x00C8)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_8;                     // 0xAFD0(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0xB098(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0xB118(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0xB198(0x0080)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_7;                     // 0xB218(0x00C8)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_6;                     // 0xB2E0(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0xB3A8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0xB428(0x0080)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_5;             // 0xB4A8(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_11;                    // 0xB4C8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_10;                    // 0xB4F0(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_3;                              // 0xB518(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_3;                  // 0xB560(0x00C0)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_2;                  // 0xB620(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_9;                     // 0xB6E0(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0xB708(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_8;                     // 0xB860(0x0028)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_4;             // 0xB888(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0xB8A8(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0xB8D0(0x0158)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_5;                   // 0xBA28(0x00B0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0xBAD8(0x0080)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_3;                        // 0xBB58(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0xBC60(0x0108)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_4;             // 0xBD68(0x0020)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0xBD88(0x00A0)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0xBE28(0x00C0)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_5;                     // 0xBEE8(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0xBFB0(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0xC030(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0xC0D0(0x0080)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_4;                     // 0xC150(0x00C8)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_3;                     // 0xC218(0x00C8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0xC2E0(0x00E8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0xC3C8(0x00E8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0xC4B0(0x0048)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_4;                   // 0xC4F8(0x00B0)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_3;             // 0xC5A8(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0xC5C8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0xC5F0(0x0028)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_1;          // 0xC618(0x0190)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0xC7A8(0x0028)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_3;                   // 0xC7D0(0x00B0)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_2;                     // 0xC880(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0xC948(0x0080)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace;            // 0xC9C8(0x0190)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0xCB58(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0xCBA0(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0xCC40(0x0080)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0xCCC0(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0xCD88(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0xCDB0(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0xCF08(0x0028)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_2;                   // 0xCF30(0x00B0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_21;                         // 0xCFE0(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_20;                         // 0xD0D0(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_19;                         // 0xD1C0(0x00F0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0xD2B0(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0xD2F8(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0xD450(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0xD478(0x0080)()
	struct FAnimNode_BlendBoneByChannel           AnimGraphNode_BlendBoneByChannel;                  // 0xD4F8(0x0068)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0xD560(0x00C8)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0xD628(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0xD6F0(0x0080)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_3;             // 0xD770(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2;             // 0xD790(0x0020)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_1;                         // 0xD7B0(0x01E0)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK;                           // 0xD990(0x01E0)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0xDB70(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0xDC30(0x0028)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_1;                   // 0xDC58(0x00B0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2;             // 0xDD08(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0xDD28(0x0020)()
	uint8                                         Pad_DD48[0x8];                                     // 0xDD48(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_LookAt                       AnimGraphNode_LookAt_1;                            // 0xDD50(0x01B0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_18;                         // 0xDF00(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_17;                         // 0xDFF0(0x00F0)()
	struct FAnimNode_LookAt                       AnimGraphNode_LookAt;                              // 0xE0E0(0x01B0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_16;                         // 0xE290(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_15;                         // 0xE380(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_14;                         // 0xE470(0x00F0)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer;                     // 0xE560(0x00B0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_13;                         // 0xE610(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_12;                         // 0xE700(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_11;                         // 0xE7F0(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_10;                         // 0xE8E0(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_9;                          // 0xE9D0(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_8;                          // 0xEAC0(0x00F0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0xEBB0(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0xEBD0(0x0020)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_7;                          // 0xEBF0(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_6;                          // 0xECE0(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_5;                          // 0xEDD0(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_4;                          // 0xEEC0(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_3;                          // 0xEFB0(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_2;                          // 0xF0A0(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_1;                          // 0xF190(0x00F0)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0xF280(0x0108)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone;                            // 0xF388(0x00F0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0xF478(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0xF498(0x0108)()
	struct FRotator                               AimingRotation;                                    // 0xF5A0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                Velocity;                                          // 0xF5AC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RelativeVelocityDirection;                         // 0xF5B8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Acceleration;                                      // 0xF5C4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MovementInput;                                     // 0xF5D0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMoving;                                          // 0xF5DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasMovementInput;                                  // 0xF5DD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F5DE[0x2];                                     // 0xF5DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Speed;                                             // 0xF5E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MovementInputAmount;                               // 0xF5E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGroundedEntryState                           GroundedEntryState;                                // 0xF5E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementDirection                            MovementDirection;                                 // 0xF5E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHipsDirection                                TrackedHipsDirection;                              // 0xF5EA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F5EB[0x1];                                     // 0xF5EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RelativeAccelerationAmount;                        // 0xF5EC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldMove;                                        // 0xF5F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Rotate_L;                                          // 0xF5F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Rotate_R;                                          // 0xF5FA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Pivot;                                             // 0xF5FB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         RotateRate;                                        // 0xF5FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotationScale;                                     // 0xF600(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DiagonalScaleAmount;                               // 0xF604(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WalkRunBlend;                                      // 0xF608(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocomotionPlayStartPos;                            // 0xF60C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EventLocomotionPlayStartPos;                       // 0xF610(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         LocomotionPlayRate;                                // 0xF614(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CrouchingPlayRate;                                 // 0xF618(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StrideBlend;                                       // 0xF61C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVelocityBlend                         VelocityBlend;                                     // 0xF620(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLeanAmount                            LeanAmount;                                        // 0xF630(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            DiagonalScaleAmountCurve;                          // 0xF638(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            StrideBlend_N_Walk;                                // 0xF640(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            StrideBlend_N_Run;                                 // 0xF648(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            StrideBlend_C_Walk;                                // 0xF650(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               SmoothedAimingRotation;                            // 0xF658(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               SpineRotation;                                     // 0xF664(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector2D                              AimingAngle;                                       // 0xF670(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              SmoothedAimingAngle;                               // 0xF678(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AimSweepTime;                                      // 0xF680(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AimYawRate;                                        // 0xF684(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ZoomAmount;                                        // 0xF688(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Jumped;                                            // 0xF68C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F68D[0x3];                                     // 0xF68D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         JumpPlayRate;                                      // 0xF690(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FallSpeed;                                         // 0xF694(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LandPrediction;                                    // 0xF698(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F69C[0x4];                                     // 0xF69C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            LandPredictionCurve;                               // 0xF6A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            LeanInAirCurve;                                    // 0xF6A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OverlayOverrideState;                              // 0xF6B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Enable_AimOffset;                                  // 0xF6B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FootLock_L_Alpha;                                  // 0xF6B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FootLock_R_Alpha;                                  // 0xF6BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FootLock_L_Location;                               // 0xF6C0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FootLock_R_Location;                               // 0xF6CC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               FootLock_L_Rotation;                               // 0xF6D8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               FootLock_R_Rotation;                               // 0xF6E4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                FootOffset_L_Location;                             // 0xF6F0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FootOffset_R_Location;                             // 0xF6FC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               FootOffset_L_Rotation;                             // 0xF708(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               FootOffset_R_Rotation;                             // 0xF714(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                PelvisOffset;                                      // 0xF720(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PelvisAlpha;                                       // 0xF72C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             Character;                                         // 0xF730(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTimeX;                                        // 0xF738(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TurnCheckMinAngle;                                 // 0xF73C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Turn180Threshold;                                  // 0xF740(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AimYawRateLimit;                                   // 0xF744(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedDelayTime;                                  // 0xF748(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_MovementState                            MovementState;                                     // 0xF74C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_MovementState                            PrevMovementState;                                 // 0xF74D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_MovementAction                           MovementAction;                                    // 0xF74E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_RotationMode                             RotationMode;                                      // 0xF74F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_Gait                                     Gait;                                              // 0xF750(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_Stance                                   Stance;                                            // 0xF751(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_ViewMode                                 ViewMode;                                          // 0xF752(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_OverlayState                             OverlayState;                                      // 0xF753(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BasePose_N;                                        // 0xF754(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BasePose_CLF;                                      // 0xF758(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Arm_L;                                             // 0xF75C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Arm_L_Add;                                         // 0xF760(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Arm_L_LS;                                          // 0xF764(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Arm_L_MS;                                          // 0xF768(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Arm_R;                                             // 0xF76C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Arm_R_Add;                                         // 0xF770(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Arm_R_LS;                                          // 0xF774(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Arm_R_MS;                                          // 0xF778(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LayeringHand_L_Alpha;                              // 0xF77C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LayeringHand_R_Alpha;                              // 0xF780(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Legs;                                              // 0xF784(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Legs_Add;                                          // 0xF788(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pelvis;                                            // 0xF78C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pelvis_Add;                                        // 0xF790(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Spine;                                             // 0xF794(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Spine_Add;                                         // 0xF798(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Head;                                              // 0xF79C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Head_Add;                                          // 0xF7A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F7A4[0x4];                                     // 0xF7A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           YawOffset_FB;                                      // 0xF7A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveVector*                           YawOffset_LR;                                      // 0xF7B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FYaw;                                              // 0xF7B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BYaw;                                              // 0xF7BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LYaw;                                              // 0xF7C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RYaw;                                              // 0xF7C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InputYawOffsetTime;                                // 0xF7C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ForwardYawTime;                                    // 0xF7CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LeftYawTime;                                       // 0xF7D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RightYawTime;                                      // 0xF7D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinAngleDelay;                                     // 0xF7D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxAngleDelay;                                     // 0xF7DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotateMinThreshold;                                // 0xF7E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotateMaxThreshold;                                // 0xF7E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AimYawRateMinRange;                                // 0xF7E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AimYawRateMaxRange;                                // 0xF7EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinPlayRate;                                       // 0xF7F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxPlayRate;                                       // 0xF7F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FlailRate;                                         // 0xF7F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Enable_HandIK_L;                                   // 0xF7FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Enable_HandIK_R;                                   // 0xF800(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimatedWalkSpeed;                                 // 0xF804(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimatedRunSpeed;                                  // 0xF808(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimatedSprintSpeed;                               // 0xF80C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimatedCrouchSpeed;                               // 0xF810(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VelocityBlendInterpSpeed;                          // 0xF814(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GroundedLeanInterpSpeed;                           // 0xF818(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAirLeanInterpSpeed;                              // 0xF81C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SmoothedAimingRotationInterpSpeed;                 // 0xF820(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InputYawOffsetInterpSpeed;                         // 0xF824(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggerPivotSpeedLimit;                            // 0xF828(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FootHeight;                                        // 0xF82C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IK_TraceDistanceAboveFoot;                         // 0xF830(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IK_TraceDistanceBelowFoot;                         // 0xF834(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LipSync_A;                                         // 0xF838(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         LipSync_I;                                         // 0xF83C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         LipSync_U;                                         // 0xF840(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         LipSync_E;                                         // 0xF844(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         LipSync_O;                                         // 0xF848(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	bool                                          bBlink;                                            // 0xF84C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bNoBlink;                                          // 0xF84D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor)
	uint8                                         Pad_F84E[0x2];                                     // 0xF84E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         EyeLookatAlpha;                                    // 0xF850(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         EyeLookat_Horizontal;                              // 0xF854(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EyeLookat_Vertical;                                // 0xF858(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FaceDeformAlpha;                                   // 0xF85C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         FaceAngleRatio_Horizontal;                         // 0xF860(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FaceAngleRatio_Vertical;                           // 0xF864(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  PawnOwner;                                         // 0xF868(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LookAtInterpSpeed;                                 // 0xF870(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         BodyLookat_Horizontal;                             // 0xF874(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BodyLookatOffset_Horizontal;                       // 0xF878(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         BodyLookat_Vertical;                               // 0xF87C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BodyLookatOffset_Vertical;                         // 0xF880(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         EyeLookatOffset_Horizontal;                        // 0xF884(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         EyeLookatOffset_Vertical;                          // 0xF888(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	EEvtCharaAnimationLookAtType                  LookAtType;                                        // 0xF88C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F88D[0x3];                                     // 0xF88D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 LookAtTargetActor;                                 // 0xF890(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	class FString                                 LookAtTargetActorBoneName;                         // 0xF898(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Interp, HasGetValueTypeHash)
	struct FVector                                LookAtWorldLocation;                               // 0xF8A8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LookAtFinalTargetLocation;                         // 0xF8B4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bForceEyeClose;                                    // 0xF8C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor)
	uint8                                         Pad_F8C1[0x3];                                     // 0xF8C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BlinkWait;                                         // 0xF8C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         BlinkContinuousNumber;                             // 0xF8C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F8C9[0x3];                                     // 0xF8C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                SaccadePos;                                        // 0xF8CC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SaccadeRandomVec;                                  // 0xF8D8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SaccadeWait;                                       // 0xF8E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SaccadeAlpha;                                      // 0xF8E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              LeftLegSkirtBS;                                    // 0xF8EC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RightLegSkirtBS;                                   // 0xF8F4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               SkirtRootRot;                                      // 0xF8FC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Rotate0to360;                                      // 0xF908(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PhysicsAlpha;                                      // 0xF90C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         SpringStiffness;                                   // 0xF910(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HipOffset_Adjust;                                  // 0xF914(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IK_FootOffset_L_Adjust_Alpha;                      // 0xF920(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IK_FootOffset_R_Adjust_Alpha;                      // 0xF924(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BodyLookatAlpha;                                   // 0xF928(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         Enable_FootIK_L;                                   // 0xF92C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         Enable_FootIK_R;                                   // 0xF930(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         IK_Alpha;                                          // 0xF934(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         IK_UpperBody_Alpha;                                // 0xF938(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         IK_LowerBody_Alpha;                                // 0xF93C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_ExUpleg_00_modfyTRANSX;                          // 0xF940(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                R_ExUpLeg_00_modfyTRANSX;                          // 0xF94C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_KneeCap_00_modfyTRANS;                           // 0xF958(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                R_KneeCap_00_modfyTRANS;                           // 0xF964(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForeArmTwist02Exists;                              // 0xF970(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F971[0x3];                                     // 0xF971(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LipSync_Total;                                     // 0xF974(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AddBreathAlpha;                                    // 0xF978(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         PhysicsAlpha_UpperBody;                            // 0xF97C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         PhysicsAlpha_LowerBody;                            // 0xF980(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         AddSittingBreathAlpha;                             // 0xF984(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         WaitPoseWaitTime;                                  // 0xF988(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InWaitPoseState;                                   // 0xF98C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor)
	bool                                          EyeLookAt_WithLookTarget;                          // 0xF98D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor)
	bool                                          BodyLookAt_EnableLimitter;                         // 0xF98E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor)
	EXrd777_EventPhysics                          EventPhysics;                                      // 0xF98F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         FaceDistanceRatio;                                 // 0xF990(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F994[0x4];                                     // 0xF994(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           IKTargetNameList;                                  // 0xF998(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         EventFootIKAlpha;                                  // 0xF9A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         EventPelvisLockAlpha;                              // 0xF9AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector                                EventPelvisTransform;                              // 0xF9B0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9BC[0x4];                                     // 0xF9BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        SceneCommpornent;                                  // 0xF9C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9C8[0x8];                                     // 0xF9C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             HandIK_R_Transform;                                // 0xF9D0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             HandIK_L_Transform;                                // 0xFA00(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         LookatOverrideAlpha;                               // 0xFA30(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         PhysicsAlpha_Skirt;                                // 0xFA34(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         PhysicsAlpha_Hair;                                 // 0xFA38(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         PhysicsAlpha_Jacket;                               // 0xFA3C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         AdjustSinking;                                     // 0xFA40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CollisionHalfHeight;                               // 0xFA44(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HandTargetVar_R;                                   // 0xFA48(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HandTargetVar_L;                                   // 0xFA4C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentHandTargetVar_R;                            // 0xFA50(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentHandTargetVar_L;                            // 0xFA54(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WalkSpeed_Threshold;                               // 0xFA58(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RunSpeed_Threshold;                                // 0xFA5C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SprintSpeed_Threshold;                             // 0xFA60(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LockFoot_R_Alpha;                                  // 0xFA64(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LockFoot_L_Alpha;                                  // 0xFA68(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ApplyPhysicsAlpha;                                 // 0xFA6C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ApplyPhysicsAlphaUpperBody;                        // 0xFA70(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ApplyPhysicsAlphaLowerBody;                        // 0xFA74(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ApplyPhysicsAlphaHair;                             // 0xFA78(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ApplyPhysicsAlphaJacket;                           // 0xFA7C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ApplyPhysicsAlphaSkirt;                            // 0xFA80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EventStrideBlend;                                  // 0xFA84(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         ApplyStrideBlend;                                  // 0xFA88(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA8C[0x4];                                     // 0xFA8C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlendSpace*                            OverrideLocomotionAnim;                            // 0xFA90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	bool                                          OverrideLocomotionAnimEnable;                      // 0xFA98(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FA99[0x7];                                     // 0xFA99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          OverrideLocomotionNotMoveAnim;                     // 0xFAA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableOverrideLocomotionNotMoveAnim;               // 0xFAA8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FAA9[0x7];                                     // 0xFAA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UArrowComponent*                        Test_arrow;                                        // 0xFAB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        LookatArrow;                                       // 0xFAB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_EventLocomotionSim;                             // 0xFAC0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          EnableLookatNewFunction;                           // 0xFAC1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor)
	bool                                          EnableLookatTypeIsWorldNewFunction;                // 0xFAC2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor)
	bool                                          ChangedWalkRunBlend;                               // 0xFAC3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         LocomotionStopAlpha;                               // 0xFAC4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocomotionStopPlayRate;                            // 0xFAC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MovingTime;                                        // 0xFACC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RunningTime;                                       // 0xFAD0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WalkingTime;                                       // 0xFAD4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UpdateWalkRunIntervalTime;                         // 0xFAD8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PreserveRunningState;                              // 0xFADC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          LocomotionStopped;                                 // 0xFADD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          EnterLocomotionOverride;                           // 0xFADE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FADF[0x1];                                     // 0xFADF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PresearveWalkRunBlend;                             // 0xFAE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PreviousWalkRunState;                              // 0xFAE4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInPocket;                                        // 0xFAE8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          WalkInterval;                                      // 0xFAE9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsApplyingFootIK;                                  // 0xFAEA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FAEB[0x1];                                     // 0xFAEB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AssistanceBone_L_Alpha;                            // 0xFAEC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AssistanceBone_R_Alpha;                            // 0xFAF0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableGoToMainWaitPose;                            // 0xFAF4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FAF5[0x3];                                     // 0xFAF5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LockAttachHand_R_Transform_Alpha;                  // 0xFAF8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LockAttachHand_L_Transform_Alpha;                  // 0xFAFC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LayeringLegs_Alpha;                                // 0xFB00(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LayeringHead_Alpha;                                // 0xFB04(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LockBelowHips_Alpha;                               // 0xFB08(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ApplyPellvisLockAlpha;                             // 0xFB0C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ApplyAddSittingBreathAlpha;                        // 0xFB10(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ApplyAddBreathAlpha;                               // 0xFB14(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FaceDistanceAlpha;                                 // 0xFB18(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FB1C[0x4];                                     // 0xFB1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 BaseSkeletonMesh;                                  // 0xFB20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         PostProcessInstances;                              // 0xFB28(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          EnablePostProcessABP;                              // 0xFB38(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor)
	bool                                          Enable_LayeringArms;                               // 0xFB39(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor)
	uint8                                         Pad_FB3A[0x2];                                     // 0xFB3A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AdjustFootIKPV_L_Alpha;                            // 0xFB3C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AdjustFootIKPV_R_Alpha;                            // 0xFB40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ApplyWalkRunBlend;                                 // 0xFB44(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Event_Arms_L_Alpha;                                // 0xFB48(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         Event_Arms_R_Alpha;                                // 0xFB4C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         Disable_LookatSpine_Alpha;                         // 0xFB50(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         PelvisTarget_Z;                                    // 0xFB54(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Foot_L_TargetDistance;                             // 0xFB58(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Foot_R_TargetDistance;                             // 0xFB5C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Foot_L_TargetRotation;                             // 0xFB60(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               Foot_R_TargetRotation;                             // 0xFB6C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                Previous_Foot_L_Location;                          // 0xFB78(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Previous_Foot_R_Location;                          // 0xFB84(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Goto_NeautralPose;                                 // 0xFB90(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Update_Foot_L;                                     // 0xFB91(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Update_Foot_R;                                     // 0xFB92(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FB93[0x1];                                     // 0xFB93(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Previous_Lookat_Horizontal;                        // 0xFB94(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Previous_Speed;                                    // 0xFB98(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ActorSinking_L;                                    // 0xFB9C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ActorSinking_R;                                    // 0xFBA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Current_Foot_L_Location;                           // 0xFBA4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Current_Foot_R_Location;                           // 0xFBB0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ActorBottomDistance;                               // 0xFBBC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Apply_IK_UpperBody_Alpha;                          // 0xFBC0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Apply_IK_LowerBody_Alpha;                          // 0xFBC4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StrideBlendDash_Alpha;                             // 0xFBC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempSpeed;                                         // 0xFBCC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_LocomotionState                          CurrentLocomotionState;                            // 0xFBD0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_LocomotionState                          PreviousLocomotionState;                           // 0xFBD1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Disable_InWaitPose;                                // 0xFBD2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FBD3[0x5];                                     // 0xFBD3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Anim_BlendStopPose;                                // 0xFBD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Toggle_StopBlendPose;                              // 0xFBE0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Goto_MainWaitPose;                                 // 0xFBE1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FBE2[0x2];                                     // 0xFBE2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NoCopy_AttachShoulderFromUpperBodySlot;            // 0xFBE4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Copy_SkirtFromUpperBodySlot;                       // 0xFBE8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         NoCopy_AttachLowerFromUpperBodySlot;               // 0xFBEC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         Apply_MeandelingOffset_Y;                          // 0xFBF0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NoCopy_LeftArmFromUpperBodySlot;                   // 0xFBF4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LegsAnimBlendW;                                    // 0xFBF8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         AddBleath_StartPos;                                // 0xFBFC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_FloorState                               ForwardFloorState;                                 // 0xFC00(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC01[0x3];                                     // 0xFC01(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WaitPoseTime;                                      // 0xFC04(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentActorLocation;                              // 0xFC08(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CurrentActorRotation;                              // 0xFC14(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Disable_Physics;                                   // 0xFC20(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor)
	uint8                                         Pad_FC21[0x3];                                     // 0xFC21(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Interp_HairLookat_H;                               // 0xFC24(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Interp_HairLookat_V;                               // 0xFC28(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoBlink_fromCurve;                                 // 0xFC2C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Has_HitFootIK;                                     // 0xFC2D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ABP_CH_MeshBase(int32 EntryPoint);
	void AnimNotify_EnterStop();
	void Set_No_Blink(bool Enable);
	void Set_Saccade(bool Enable);
	void LinkPhysics();
	void UnlinkPhysics();
	void AnimNotify_EnterIdle();
	void AnimNotify_EnterMoving();
	void SetOverrideLocomotionNotMoveAnim(class UAnimSequence* InAnimSeq);
	void BPI_SetOverlayOverrideState(int32 OverlayOverrideState_0);
	void PlayDynamicTransition(float ReTriggerDelay, const struct FDynamicMontageParams& Parameters);
	void AnimNotify_Pivot();
	void AnimNotify_Hips_RF();
	void AnimNotify_Hips_RB();
	void AnimNotify_Hips_LF();
	void AnimNotify_Hips_LB();
	void AnimNotify_Hips_B();
	void AnimNotify_Hips_F();
	void AnimNotify_ResetMinusGroundedEntryState();
	void BPI_SetGroundedEntryState(EGroundedEntryState GroundedEntryState_0);
	void BPI_Jumped();
	void AnimNotify_Minus_N_QuickStop_();
	void AnimNotify_LandMinus_Idle();
	void AnimNotify_Minus_N_Stop_R();
	void AnimNotify_Minus_N_Stop_L();
	void AnimNotify_RollMinus_Idle();
	void PlayTransition(const struct FDynamicMontageParams& Parameters);
	void AnimNotify_StopTransition();
	void AnimNotify_Minus_CLF_Stop();
	void BlueprintUpdateAnimation(float DeltaTimeX_0);
	void SetLookAtWorldLocation(const struct FVector& Location);
	void SetLookAtType(uint8 LookAtType_0);
	void SetLookAtTargetActorBoneName(const class FString& BoneName);
	void SetLookAtTargetActor(class AActor* TargetActor);
	void SetSinkingDistance(float SinkingDistance);
	void LoadEnd_ABP();
	void BlueprintBeginPlay();
	void BlueprintInitializeAnimation();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CH_MeshBase_AnimGraphNode_TransitionResult_274CDB9D48BE303F923DF0B7A4356B50();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CH_MeshBase_AnimGraphNode_TransitionResult_C1A4EDBA43432B3CB30140BF05AD7C9F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CH_MeshBase_AnimGraphNode_TransitionResult_2B6BFB6443D826E14FD2478E86394F45();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CH_MeshBase_AnimGraphNode_TransitionResult_E42C81AB4DF3911DB54AE0A3E1C40185();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CH_MeshBase_AnimGraphNode_TransitionResult_4B071AFA4E51734525FBB2A8B721DB85();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CH_MeshBase_AnimGraphNode_TransitionResult_198042894FFE1D3A4634A7A5B6B65C54();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CH_MeshBase_AnimGraphNode_TransitionResult_1A54E6ED44EB539483F3169042D1D9C5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CH_MeshBase_AnimGraphNode_TransitionResult_7C438D0F457C2E264E238FA09C9F007C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CH_MeshBase_AnimGraphNode_TransitionResult_9D02FC2E4C91D3CBC27D40BDACC6D51F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CH_MeshBase_AnimGraphNode_TransitionResult_3419A62A45DEC8A55FED899E00F783E5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CH_MeshBase_AnimGraphNode_TransitionResult_8AC7C0D94B7C5D1ED46FF29A99E1166F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CH_MeshBase_AnimGraphNode_TransitionResult_4079A1634C43683E49A8F8AA15C7B3EB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CH_MeshBase_AnimGraphNode_TransitionResult_072CDE8542978AECEF69879116FAF6C3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CH_MeshBase_AnimGraphNode_TransitionResult_D6F93A464E6BAB795FC1119394BC8F49();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CH_MeshBase_AnimGraphNode_ModifyBone_E38F8FD54B0425E7972ADFA6FFDEED65();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CH_MeshBase_AnimGraphNode_BlendListByInt_DB6122F54E607584944EF994199C8707();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CH_MeshBase_AnimGraphNode_BlendListByInt_27818ADC4EEE691D4D046093B5614F21();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CH_MeshBase_AnimGraphNode_LookAt_211191D44AE994690710A4851EFEAD22();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CH_MeshBase_AnimGraphNode_ModifyBone_D230DF334EBA17502293E3A3AE03249E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CH_MeshBase_AnimGraphNode_ModifyBone_DCB050404075A6D11CCAF9B7E8DC3039();
	void Update_Character_Info();
	void UpdateLayerValues();
	void Update_Foot_IK();
	void UpdateMovementValues();
	void UpdateRotationValues();
	void UpdateInAirValues();
	void UpdateRagdollValues();
	struct FVelocityBlend CalculateVelocityBlend();
	float CalculateDiagonalScaleAmount();
	struct FVector Calculate_Relative_Acceleration_Amount();
	void CalculateWalkRunBlend(float* WalkRunBlend_0);
	float CalculateStrideBlend();
	void CalculateStandingPlayRate(float* PlayRate);
	void CalculateCrouchingPlayRate(float* PlayRate);
	void CalculateMovementDirection(EMovementDirection* ReturnValues);
	void SetFootOffsets(struct FVector& CurrentLocationL_Target, struct FVector& CurrentLocationR_Target, struct FVector& CurrentLocationOffset, struct FRotator& CurrentRotationOffset);
	void SetFootLocking(class FName Enable_FootIK_Curve, class FName FootLockCurve, class FName IKFootBone, float& CurrentFootLockAlpha, struct FVector& CurrentFootLockLocation, struct FRotator& CurrentFootLockRotation);
	void SetFootLockOffsets(struct FVector& LocalLocation, struct FRotator& LocalRotation);
	void ShouldMoveCheck(bool* Return_Value);
	bool CanTurnInPlace();
	bool CanRotateInPlace();
	bool CanDynamicTransition();
	bool CanOverlayTransition();
	void TurnInPlace(const struct FRotator& TargetRotation, float PlayRateScale, float StartTime, bool OverrideCurrent);
	void TurnInPlaceCheck();
	void CalculateLandPrediction(float* LandPrediction_0);
	void CalculateInAirLeanAmount(struct FLeanAmount* LeanAmount_0);
	void RotateInPlaceCheck();
	void DynamicTransitionCheck();
	void GetDebugTraceType(EDrawDebugTrace ShowTraceType, EDrawDebugTrace* DebugType);
	struct FVelocityBlend InterpVelocityBlend(const struct FVelocityBlend& Current, const struct FVelocityBlend& Target, float InterpSpeed, float DeltaTime);
	struct FLeanAmount InterpLeanAmount(const struct FLeanAmount& Current, const struct FLeanAmount& Target, float InterpSpeed, float DeltaTime);
	EMovementDirection CalculateQuadrant(EMovementDirection Current, float FRMinusThreshold, float FLMinusThreshold, float BRMinusThreshold, float BLMinusThreshold, float Buffer, float Angle);
	bool AngleInRange(float Angle, float MinAngle, float MaxAngle, float Buffer, bool IncreaseBuffer);
	void ResetIKOffsets();
	void EyeBlink(float DeltaTime);
	void EyeSaccade(float DeltaTime);
	void Lookat(class ABP_CharacterBase_C* CharaBP, float DeltaTime, float InterpSpeed);
	void ClampLookAtAngle(float CurrentAngle, bool AngleOverLimitter, float AngleLimit, float* ClampAngle);
	void InterpLookAtTo(float Lookat_Vertical_, float Lookat_Horizontal_, float TargetLookat_Vertical_, float TargetLookat_Horizontal_, float DeltaTime_, float InterpSpeed_, float* Lookat_CurrentVertical, float* Lookat_CurrentHorizontal);
	void ClampAllLookatAngle();
	void Get_Ex_Upleg_TransX(class FName DriveBone, class USceneComponent* Target, struct FVector* TransformX);
	void GetKneeCapTransXY(class FName DriveBone, class USceneComponent* Target, struct FVector* TransformX);
	void FaceDeformationAtCamera(class FName HeadBoneName, class USkeletalMeshComponent* SKMesh, class APlayerCameraManager* Camera);
	class AActor* GetLookAtTargetActor();
	uint8 GetLookAtType();
	struct FVector GetLookAtWorldLocation();
	class FString GetLookAtTargetActorBoneName();
	float ClampAngleToLookat(bool BodyLookAt_EnableLimitter_0, float MinAngleDegrees, float MaxAngleDegrees, float LookAtTarget, float LookatOffset);
	void Foot_Trace(float TraceLimit, float InActorBottomDistance, const struct FVector& TraceStartLocation, bool* OutHitResult, float* OutHitDistance, struct FRotator* OutHitRotation);
	void Get_Foot_Offsets(float InAdjustSinking, bool InEnableFootIK_L, bool InEnableFootIK_R, bool IsUpdate_Foot_L, bool IsUpdate_Foot_R, float* OutActorSinking, float* OutFootL_Distance, float* OutFootR_Distance, struct FRotator* OutFootL_Rotation, struct FRotator* OutFootR_Rotation);
	void SetHandIK();
	void Update_IK_Values();
	void GetTargetHandIK(class FName InCurveName, class FName InHandName, float& InHandTargetVar, float& InCurrentHandTargetVar, struct FTransform* OutHandTargetTransform);
	void UpdatePhysicsAlpha();
	void Update_Lock_Body();
	void CulcLookatDirection_Euler(const struct FVector& InStartLocation, const struct FVector& InTargetLocation, float* OutHorizontalAngle, float* OutVerticalAngle);
	void CulcLookatDirection_Vector(const struct FVector& InStartLocation, const struct FRotator& InStartRotation, const struct FVector& InTargetLocation, float* OutHorizontalAngle, float* OutVerticalAngle);
	void Update_Locomotion_Values();
	void Update_AddBleath_Values();
	void Get_Layering_Arms_Alpha(float* ArmL_R_Alpha);
	void IsLookatUpdate();
	void Check_UpdateFootIK();
	void Set_FootDistance(float In_ActorSinking, float In_Foot_L_Distance, float In_Foot_R_Distance, const struct FRotator& In_Foot_L_Rotation, const struct FRotator& In_Foot_R_Rotation);
	void Set_Actor_Bottom_Distance();
	void Set_IsEnableLocomotionSim();
	void Get_Floor_State(Enum_FloorState* Result);
	void Can_Enable_Post_Process_In_Event(bool* Return);
	void Get_IndexHandIK(class FName InCurveName, float& InHandTargetVar, float* Out_IndexHandTarget, bool* Is_update);
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void BaseLayer(struct FPoseLink* BaseLayer_0);
	void LayerBlending(const struct FPoseLink& Base_Layer_Input, struct FPoseLink* LayerBlending_0);
	void Foot_IK(const struct FPoseLink& InPose, struct FPoseLink* Foot_IK_0);
	void AssistanceBone(const struct FPoseLink& InPose_0, struct FPoseLink* AssistanceBone_0);
	void Set_AttachHandIK_Bone(const struct FPoseLink& InPose_1, struct FPoseLink* Set_AttachHandIK_Bone_0);
	void CostumePhysLayer(const struct FPoseLink& InPhysicsPose, struct FPoseLink* CostumePhysLayer_0);
	void CustomAdditiveLayer(const struct FPoseLink& InPose, struct FPoseLink* CustomAdditiveLayer_0);
	void CostumeAdjustLayer(const struct FPoseLink& InMeshPose, struct FPoseLink* CostumeAdjustLayer_0);
	void HairAdjustLayer(const struct FPoseLink& InMeshPose, struct FPoseLink* HairAdjustLayer_0);
	void HairPhysLayer(const struct FPoseLink& InPhysPose, struct FPoseLink* HairPhysLayer_0);
	void Get_ABP_CH_MeshBaseVariable(float* LookAtHorizontal, float* LookAtVertical, float* Out_Interp_LookatHair_H, float* Out_Interp_LookatHair_V, float* PhysicsAlpha_Out, float* PhysicsAlpha_Upperbody_Out, float* PhysicsAlpha_Lowerbody_Out, float* PhysicsAlpha_Hair_Out, float* PhysicsAlpha_Jacket_Out, float* PhysicsAlpha_Skirt_Out);
	void Get_AnimBP(class UAnimInstance** Return);
	void Get_Enable_FootIK(bool* Out_foot_r, bool* Out_foot_l);
	void GetWalkRunBlend(float* OutWalkRunBlend, float* OutPreviousWalkRunBlend);
	void GetLocomotionState(Enum_LocomotionState* OutLocomotionState);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_CH_MeshBase_C">();
	}
	static class UABP_CH_MeshBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_CH_MeshBase_C>();
	}
};
static_assert(alignof(UABP_CH_MeshBase_C) == 0x000010, "Wrong alignment on UABP_CH_MeshBase_C");
static_assert(sizeof(UABP_CH_MeshBase_C) == 0x00FC30, "Wrong size on UABP_CH_MeshBase_C");
static_assert(offsetof(UABP_CH_MeshBase_C, UberGraphFrame) == 0x0002C0, "Member 'UABP_CH_MeshBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_61) == 0x0002C8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_61' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_60) == 0x0003B8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_60' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_59) == 0x0004A8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_59' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_46) == 0x000598, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_46' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_45) == 0x0005B8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_45' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_44) == 0x0005D8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_44' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_43) == 0x0005F8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_43' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_42) == 0x000618, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_42' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_41) == 0x000638, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_41' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_40) == 0x000658, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_40' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_39) == 0x000678, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_39' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_38) == 0x000698, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_38' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_37) == 0x0006B8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_37' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_36) == 0x0006D8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_36' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_35) == 0x0006F8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_35' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_34) == 0x000718, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_34' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_33) == 0x000738, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_33' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LinkedInputPose_8) == 0x000758, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LinkedInputPose_8' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SaveCachedPose_21) == 0x000870, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SaveCachedPose_21' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_77) == 0x0009C8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_77' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_76) == 0x0009F0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_76' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_44) == 0x000A18, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_44' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_75) == 0x000A38, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_75' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_43) == 0x000A60, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_43' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_74) == 0x000A80, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_74' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_42) == 0x000AA8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_42' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_73) == 0x000AC8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_73' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_41) == 0x000AF0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_41' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_72) == 0x000B10, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_72' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_40) == 0x000B38, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_40' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_71) == 0x000B58, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_71' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_39) == 0x000B80, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_39' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_70) == 0x000BA0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_70' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_38) == 0x000BC8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_38' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_69) == 0x000BE8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_69' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_37) == 0x000C10, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_37' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_68) == 0x000C30, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_68' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_36) == 0x000C58, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_36' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_67) == 0x000C78, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_67' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_35) == 0x000CA0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_35' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_66) == 0x000CC0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_66' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_34) == 0x000CE8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_34' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_65) == 0x000D08, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_65' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_33) == 0x000D30, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_33' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_64) == 0x000D50, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_64' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_32) == 0x000D78, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_32' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_63) == 0x000D98, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_63' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_31) == 0x000DC0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_31' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_62) == 0x000DE0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_62' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_30) == 0x000E08, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_30' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_61) == 0x000E28, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_61' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_29) == 0x000E50, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_29' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SaveCachedPose_20) == 0x000E70, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SaveCachedPose_20' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_BlendListByInt_1) == 0x000FC8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_BlendListByInt_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_32) == 0x001068, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_32' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_31) == 0x001088, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_31' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_30) == 0x0010A8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_30' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_29) == 0x0010C8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_29' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_28) == 0x0010E8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_28' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_27) == 0x001108, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_27' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_26) == 0x001128, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_26' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_25) == 0x001148, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_25' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_24) == 0x001168, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_24' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_23) == 0x001188, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_23' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_22) == 0x0011A8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_22' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_21) == 0x0011C8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_21' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_20) == 0x0011E8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_20' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_19) == 0x001208, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_19' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_18) == 0x001228, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_18' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_17) == 0x001248, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_17' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_28) == 0x001268, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_28' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_27) == 0x001288, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_27' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_26) == 0x0012A8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_26' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_25) == 0x0012C8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_25' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_24) == 0x0012E8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_24' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_23) == 0x001308, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_23' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_22) == 0x001328, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_22' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_21) == 0x001348, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_21' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_20) == 0x001368, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_20' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_19) == 0x001388, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_19' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_18) == 0x0013A8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_18' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_17) == 0x0013C8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_17' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_16) == 0x0013E8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_16' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_15) == 0x001408, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_15' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_14) == 0x001428, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_14' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_13) == 0x001448, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_13' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_60) == 0x001468, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_60' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_59) == 0x001490, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_59' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_58) == 0x0014B8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_58' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_57) == 0x0014E0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_57' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_56) == 0x001508, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_56' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_55) == 0x001530, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_55' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_54) == 0x001558, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_54' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_53) == 0x001580, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_53' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_52) == 0x0015A8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_52' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_51) == 0x0015D0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_51' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_50) == 0x0015F8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_50' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_49) == 0x001620, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_49' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_48) == 0x001648, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_48' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_47) == 0x001670, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_47' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_46) == 0x001698, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_46' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_45) == 0x0016C0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_45' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_44) == 0x0016E8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_44' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_58) == 0x001710, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_58' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_57) == 0x001800, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_57' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_56) == 0x0018F0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_56' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_55) == 0x0019E0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_55' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_54) == 0x001AD0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_54' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_53) == 0x001BC0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_53' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_52) == 0x001CB0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_52' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_51) == 0x001DA0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_51' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_50) == 0x001E90, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_50' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_49) == 0x001F80, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_49' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_48) == 0x002070, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_48' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_47) == 0x002160, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_47' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_46) == 0x002250, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_46' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_45) == 0x002340, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_45' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_44) == 0x002430, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_44' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_43) == 0x002520, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_43' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_Root_10) == 0x002610, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_Root_10' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LinkedInputPose_7) == 0x002640, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LinkedInputPose_7' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_RotationMultiplier_13) == 0x002758, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_RotationMultiplier_13' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_RotationMultiplier_12) == 0x002848, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_RotationMultiplier_12' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_RotationMultiplier_11) == 0x002938, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_RotationMultiplier_11' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_RotationMultiplier_10) == 0x002A28, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_RotationMultiplier_10' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_RotationMultiplier_9) == 0x002B18, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_RotationMultiplier_9' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_BoneDrivenController_3) == 0x002C08, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_BoneDrivenController_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_BoneDrivenController_2) == 0x002D20, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_BoneDrivenController_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_42) == 0x002E38, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_42' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_41) == 0x002F28, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_41' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_BoneDrivenController_1) == 0x003018, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_BoneDrivenController_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_BoneDrivenController) == 0x003130, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_BoneDrivenController' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_TwoBoneIK_5) == 0x003250, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_TwoBoneIK_5' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_40) == 0x003430, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_40' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_Constraint_3) == 0x003520, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_Constraint_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_TwoBoneIK_4) == 0x003630, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_TwoBoneIK_4' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_12) == 0x003810, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_12' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_RotationMultiplier_8) == 0x003830, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_RotationMultiplier_8' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_RotationMultiplier_7) == 0x003920, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_RotationMultiplier_7' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_39) == 0x003A10, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_39' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_38) == 0x003B00, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_38' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_Constraint_2) == 0x003BF0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_Constraint_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SaveCachedPose_19) == 0x003CF8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SaveCachedPose_19' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SaveCachedPose_18) == 0x003E50, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SaveCachedPose_18' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_16) == 0x003FA8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_16' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_37) == 0x003FC8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_37' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_36) == 0x0040B8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_36' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_15) == 0x0041A8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_15' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SaveCachedPose_17) == 0x0041C8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SaveCachedPose_17' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_35) == 0x004320, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_35' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SaveCachedPose_16) == 0x004410, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SaveCachedPose_16' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_14) == 0x004568, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_14' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_43) == 0x004588, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_43' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_11) == 0x0045B0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_11' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_42) == 0x0045D0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_42' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_10) == 0x0045F8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_10' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_34) == 0x004618, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_34' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_13) == 0x004708, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_13' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_12) == 0x004728, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_12' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_11) == 0x004748, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_11' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_RotationMultiplier_6) == 0x004768, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_RotationMultiplier_6' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_RotationMultiplier_5) == 0x004858, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_RotationMultiplier_5' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_RotationMultiplier_4) == 0x004948, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_RotationMultiplier_4' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_RotationMultiplier_3) == 0x004A38, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_RotationMultiplier_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_RotationMultiplier_2) == 0x004B28, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_RotationMultiplier_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SaveCachedPose_15) == 0x004C18, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SaveCachedPose_15' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_33) == 0x004D70, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_33' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_32) == 0x004E60, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_32' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_10) == 0x004F50, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_10' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_31) == 0x004F70, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_31' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_9) == 0x005060, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_9' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_41) == 0x005080, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_41' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_RotationMultiplier_1) == 0x0050A8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_RotationMultiplier_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_RotationMultiplier) == 0x005198, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_RotationMultiplier' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_9) == 0x005288, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_9' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_30) == 0x0052A8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_30' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_8) == 0x005398, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_8' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_40) == 0x0053B8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_40' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_8) == 0x0053E0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_8' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SaveCachedPose_14) == 0x005400, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SaveCachedPose_14' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_BlendListByInt) == 0x005558, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_BlendListByInt' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_Root_9) == 0x0055F8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_Root_9' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LinkedInputPose_6) == 0x005628, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LinkedInputPose_6' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_Root_8) == 0x005740, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_Root_8' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LinkedInputPose_5) == 0x005770, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LinkedInputPose_5' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_7) == 0x005888, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_7' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_Root_7) == 0x0058A8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_Root_7' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_29) == 0x0058D8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_29' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_28) == 0x0059C8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_28' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LinkedInputPose_4) == 0x005AB8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LinkedInputPose_4' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_27) == 0x005BD0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_27' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_26) == 0x005CC0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_26' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_TwoBoneIK_3) == 0x005DB0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_TwoBoneIK_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_TwoBoneIK_2) == 0x005F90, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_TwoBoneIK_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ModifyBone_11) == 0x006170, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ModifyBone_11' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ModifyBone_10) == 0x006278, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ModifyBone_10' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_7) == 0x006380, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_7' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ModifyBone_9) == 0x0063A0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ModifyBone_9' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ModifyBone_8) == 0x0064A8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ModifyBone_8' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ModifyBone_7) == 0x0065B0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ModifyBone_7' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_25) == 0x0066B8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_25' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ModifyBone_6) == 0x0067A8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ModifyBone_6' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_24) == 0x0068B0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_24' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ModifyBone_5) == 0x0069A0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ModifyBone_5' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_Constraint_1) == 0x006AA8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_Constraint_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_Constraint) == 0x006BB0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_Constraint' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_23) == 0x006CB8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_23' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_22) == 0x006DA8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_22' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_Root_6) == 0x006E98, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_Root_6' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LinkedInputPose_3) == 0x006EC8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LinkedInputPose_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SaveCachedPose_13) == 0x006FE0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SaveCachedPose_13' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_Slot_18) == 0x007138, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_Slot_18' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_39) == 0x007180, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_39' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_Slot_17) == 0x0071A8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_Slot_17' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_38) == 0x0071F0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_38' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_Slot_16) == 0x007218, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_Slot_16' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_37) == 0x007260, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_37' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_Slot_15) == 0x007288, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_Slot_15' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_36) == 0x0072D0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_36' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_Slot_14) == 0x0072F8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_Slot_14' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_Slot_13) == 0x007340, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_Slot_13' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_35) == 0x007388, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_35' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LayeredBoneBlend_17) == 0x0073B0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LayeredBoneBlend_17' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_Slot_12) == 0x007470, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_Slot_12' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_34) == 0x0074B8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_34' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_Root_5) == 0x0074E0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_Root_5' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_BlendBoneByChannel_3) == 0x007510, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_BlendBoneByChannel_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LinkedInputPose_2) == 0x007578, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LinkedInputPose_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_Root_4) == 0x007690, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_Root_4' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_33) == 0x0076C0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_33' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LayeredBoneBlend_16) == 0x0076E8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LayeredBoneBlend_16' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_32) == 0x0077A8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_32' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_31) == 0x0077D0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_31' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_30) == 0x0077F8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_30' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_29) == 0x007820, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_29' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_28) == 0x007848, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_28' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SaveCachedPose_12) == 0x007870, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SaveCachedPose_12' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_BlendBoneByChannel_2) == 0x0079C8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_BlendBoneByChannel_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LayeredBoneBlend_15) == 0x007A30, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LayeredBoneBlend_15' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_BlendBoneByChannel_1) == 0x007AF0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_BlendBoneByChannel_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LayeredBoneBlend_14) == 0x007B58, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LayeredBoneBlend_14' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_Slot_11) == 0x007C18, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_Slot_11' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_Slot_10) == 0x007C60, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_Slot_10' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_Slot_9) == 0x007CA8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_Slot_9' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_27) == 0x007CF0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_27' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_26) == 0x007D18, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_26' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SaveCachedPose_11) == 0x007D40, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SaveCachedPose_11' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_25) == 0x007E98, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_25' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_24) == 0x007EC0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_24' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_23) == 0x007EE8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_23' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_Slot_8) == 0x007F10, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_Slot_8' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SaveCachedPose_10) == 0x007F58, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SaveCachedPose_10' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SaveCachedPose_9) == 0x0080B0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SaveCachedPose_9' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LayeredBoneBlend_13) == 0x008208, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LayeredBoneBlend_13' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LayeredBoneBlend_12) == 0x0082C8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LayeredBoneBlend_12' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LayeredBoneBlend_11) == 0x008388, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LayeredBoneBlend_11' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LayeredBoneBlend_10) == 0x008448, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LayeredBoneBlend_10' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_22) == 0x008508, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_22' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LayeredBoneBlend_9) == 0x008530, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LayeredBoneBlend_9' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_21) == 0x0085F0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_21' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LayeredBoneBlend_8) == 0x008618, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LayeredBoneBlend_8' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LayeredBoneBlend_7) == 0x0086D8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LayeredBoneBlend_7' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LinkedInputPose_1) == 0x008798, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_Root_3) == 0x0088B0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_Root_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LinkedInputPose) == 0x0088E0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_Root_2) == 0x0089F8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_Root_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LayeredBoneBlend_6) == 0x008A28, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LayeredBoneBlend_6' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SaveCachedPose_8) == 0x008AE8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SaveCachedPose_8' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_20) == 0x008C40, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_20' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_19) == 0x008C68, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_19' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LayeredBoneBlend_5) == 0x008C90, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LayeredBoneBlend_5' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SaveCachedPose_7) == 0x008D50, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SaveCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_18) == 0x008EA8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_18' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_17) == 0x008ED0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_17' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_Root_1) == 0x008EF8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_TransitionResult_15) == 0x008F28, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_TransitionResult_14) == 0x008F50, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SequencePlayer_15) == 0x008F78, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_StateResult_9) == 0x008FF8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_BlendSpacePlayer_4) == 0x009028, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_BlendSpacePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_BlendListByBool_6) == 0x009110, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_BlendListByBool_6' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_BlendSpacePlayer_3) == 0x0091B0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_StateResult_8) == 0x009298, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_StateMachine_2) == 0x0092C8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_Slot_7) == 0x009378, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_Slot_7' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_Slot_6) == 0x0093C0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_Slot_6' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_Inertialization) == 0x009408, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_Inertialization' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_TransitionResult_13) == 0x009478, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_TransitionResult_12) == 0x0094A0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_TransitionResult_11) == 0x0094C8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_TransitionResult_10) == 0x0094F0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_TransitionResult_9) == 0x009518, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_TransitionResult_8) == 0x009540, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_TransitionResult_7) == 0x009568, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_TransitionResult_6) == 0x009590, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_TransitionResult_5) == 0x0095B8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_TransitionResult_4) == 0x0095E0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_TransitionResult_3) == 0x009608, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ModifyCurve_5) == 0x009630, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ModifyCurve_5' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SequencePlayer_14) == 0x009688, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_StateResult_7) == 0x009708, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ModifyCurve_4) == 0x009738, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ModifyCurve_4' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SequenceEvaluator_4) == 0x009790, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SequenceEvaluator_4' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_StateResult_6) == 0x0097E0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ModifyCurve_3) == 0x009810, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ModifyCurve_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_TransitionResult_2) == 0x009868, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_TransitionResult_1) == 0x009890, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_TransitionResult) == 0x0098B8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_16) == 0x0098E0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_16' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ModifyCurve_2) == 0x009908, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ModifyCurve_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_StateResult_5) == 0x009960, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SequenceEvaluator_3) == 0x009990, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SequenceEvaluator_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_15) == 0x0099E0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_15' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_BlendListByBool_5) == 0x009A08, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_BlendListByBool_5' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_TwoWayBlend_2) == 0x009AA8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_TwoWayBlend_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SequencePlayer_13) == 0x009B70, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_StateResult_4) == 0x009BF0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SequenceEvaluator_2) == 0x009C20, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SequenceEvaluator_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_14) == 0x009C70, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_14' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_BlendListByBool_4) == 0x009C98, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_BlendListByBool_4' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_TwoWayBlend_1) == 0x009D38, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_TwoWayBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SequencePlayer_12) == 0x009E00, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_StateResult_3) == 0x009E80, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_StateMachine_1) == 0x009EB0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_StateResult_2) == 0x009F60, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ModifyCurve_1) == 0x009F90, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ModifyCurve_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_13) == 0x009FE8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_13' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_6) == 0x00A010, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_6' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_6) == 0x00A030, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_6' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ModifyBone_4) == 0x00A050, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ModifyBone_4' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_BlendSpacePlayer_2) == 0x00A158, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ApplyAdditive_11) == 0x00A240, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ApplyAdditive_11' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_StateResult_1) == 0x00A308, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ModifyCurve) == 0x00A338, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ModifyCurve' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_12) == 0x00A390, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_12' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_BlendListByBool_3) == 0x00A3B8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SequenceEvaluator_1) == 0x00A458, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SequenceEvaluator_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_StateResult) == 0x00A4A8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_StateMachine) == 0x00A4D8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SaveCachedPose_6) == 0x00A588, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SaveCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SaveCachedPose_5) == 0x00A6E0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SaveCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SequenceEvaluator) == 0x00A838, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_Root) == 0x00A888, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_5) == 0x00A8B8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_5' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LinkedAnimLayer_9) == 0x00A8D8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LinkedAnimLayer_9' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LinkedAnimLayer_8) == 0x00A988, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LinkedAnimLayer_8' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LinkedAnimLayer_7) == 0x00AA38, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LinkedAnimLayer_7' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LinkedAnimLayer_6) == 0x00AAE8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LinkedAnimLayer_6' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_Slot_5) == 0x00AB98, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_Slot_5' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SaveCachedPose_4) == 0x00ABE0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SaveCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LayeredBoneBlend_4) == 0x00AD38, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LayeredBoneBlend_4' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_Slot_4) == 0x00ADF8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_Slot_4' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ApplyAdditive_10) == 0x00AE40, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ApplyAdditive_10' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ApplyAdditive_9) == 0x00AF08, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ApplyAdditive_9' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ApplyAdditive_8) == 0x00AFD0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ApplyAdditive_8' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SequencePlayer_11) == 0x00B098, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SequencePlayer_10) == 0x00B118, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SequencePlayer_9) == 0x00B198, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ApplyAdditive_7) == 0x00B218, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ApplyAdditive_7' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ApplyAdditive_6) == 0x00B2E0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ApplyAdditive_6' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SequencePlayer_8) == 0x00B3A8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SequencePlayer_7) == 0x00B428, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_5) == 0x00B4A8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_5' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_11) == 0x00B4C8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_11' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_10) == 0x00B4F0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_10' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_Slot_3) == 0x00B518, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_Slot_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LayeredBoneBlend_3) == 0x00B560, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LayeredBoneBlend_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LayeredBoneBlend_2) == 0x00B620, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LayeredBoneBlend_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_9) == 0x00B6E0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_9' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SaveCachedPose_3) == 0x00B708, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_8) == 0x00B860, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_8' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_4) == 0x00B888, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_4' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_7) == 0x00B8A8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SaveCachedPose_2) == 0x00B8D0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LinkedAnimLayer_5) == 0x00BA28, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LinkedAnimLayer_5' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SequencePlayer_6) == 0x00BAD8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ModifyBone_3) == 0x00BB58, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ModifyBone_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ModifyBone_2) == 0x00BC60, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_4) == 0x00BD68, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_4' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_BlendListByBool_2) == 0x00BD88, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LayeredBoneBlend_1) == 0x00BE28, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ApplyAdditive_5) == 0x00BEE8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ApplyAdditive_5' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SequencePlayer_5) == 0x00BFB0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_BlendListByBool_1) == 0x00C030, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SequencePlayer_4) == 0x00C0D0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ApplyAdditive_4) == 0x00C150, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ApplyAdditive_4' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ApplyAdditive_3) == 0x00C218, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ApplyAdditive_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_BlendSpacePlayer_1) == 0x00C2E0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_BlendSpacePlayer) == 0x00C3C8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_Slot_2) == 0x00C4B0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LinkedAnimLayer_4) == 0x00C4F8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LinkedAnimLayer_4' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_3) == 0x00C5A8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_6) == 0x00C5C8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_5) == 0x00C5F0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_RotationOffsetBlendSpace_1) == 0x00C618, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_RotationOffsetBlendSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_4) == 0x00C7A8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LinkedAnimLayer_3) == 0x00C7D0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LinkedAnimLayer_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ApplyAdditive_2) == 0x00C880, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ApplyAdditive_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SequencePlayer_3) == 0x00C948, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_RotationOffsetBlendSpace) == 0x00C9C8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_RotationOffsetBlendSpace' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_Slot_1) == 0x00CB58, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_BlendListByBool) == 0x00CBA0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SequencePlayer_2) == 0x00CC40, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_TwoWayBlend) == 0x00CCC0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_3) == 0x00CD88, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SaveCachedPose_1) == 0x00CDB0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_2) == 0x00CF08, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LinkedAnimLayer_2) == 0x00CF30, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LinkedAnimLayer_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_21) == 0x00CFE0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_21' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_20) == 0x00D0D0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_20' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_19) == 0x00D1C0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_19' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_Slot) == 0x00D2B0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SaveCachedPose) == 0x00D2F8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose_1) == 0x00D450, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SequencePlayer_1) == 0x00D478, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_BlendBoneByChannel) == 0x00D4F8, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_BlendBoneByChannel' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ApplyAdditive_1) == 0x00D560, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ApplyAdditive) == 0x00D628, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_SequencePlayer) == 0x00D6F0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_3) == 0x00D770, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_2) == 0x00D790, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_TwoBoneIK_1) == 0x00D7B0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_TwoBoneIK_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_TwoBoneIK) == 0x00D990, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_TwoBoneIK' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LayeredBoneBlend) == 0x00DB70, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_UseCachedPose) == 0x00DC30, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LinkedAnimLayer_1) == 0x00DC58, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LinkedAnimLayer_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_2) == 0x00DD08, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x00DD28, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LookAt_1) == 0x00DD50, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LookAt_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_18) == 0x00DF00, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_18' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_17) == 0x00DFF0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_17' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LookAt) == 0x00E0E0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LookAt' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_16) == 0x00E290, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_16' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_15) == 0x00E380, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_15' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_14) == 0x00E470, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_14' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LinkedAnimLayer) == 0x00E560, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LinkedAnimLayer' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_13) == 0x00E610, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_13' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_12) == 0x00E700, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_12' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_11) == 0x00E7F0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_11' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_10) == 0x00E8E0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_10' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_9) == 0x00E9D0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_9' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_8) == 0x00EAC0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_8' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace_1) == 0x00EBB0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ComponentToLocalSpace) == 0x00EBD0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_7) == 0x00EBF0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_7' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_6) == 0x00ECE0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_6' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_5) == 0x00EDD0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_5' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_4) == 0x00EEC0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_4' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_3) == 0x00EFB0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_2) == 0x00F0A0, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone_1) == 0x00F190, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ModifyBone_1) == 0x00F280, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_CopyBone) == 0x00F388, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_CopyBone' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_LocalToComponentSpace) == 0x00F478, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimGraphNode_ModifyBone) == 0x00F498, "Member 'UABP_CH_MeshBase_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AimingRotation) == 0x00F5A0, "Member 'UABP_CH_MeshBase_C::AimingRotation' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Velocity) == 0x00F5AC, "Member 'UABP_CH_MeshBase_C::Velocity' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, RelativeVelocityDirection) == 0x00F5B8, "Member 'UABP_CH_MeshBase_C::RelativeVelocityDirection' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Acceleration) == 0x00F5C4, "Member 'UABP_CH_MeshBase_C::Acceleration' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, MovementInput) == 0x00F5D0, "Member 'UABP_CH_MeshBase_C::MovementInput' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, IsMoving) == 0x00F5DC, "Member 'UABP_CH_MeshBase_C::IsMoving' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, HasMovementInput) == 0x00F5DD, "Member 'UABP_CH_MeshBase_C::HasMovementInput' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Speed) == 0x00F5E0, "Member 'UABP_CH_MeshBase_C::Speed' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, MovementInputAmount) == 0x00F5E4, "Member 'UABP_CH_MeshBase_C::MovementInputAmount' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, GroundedEntryState) == 0x00F5E8, "Member 'UABP_CH_MeshBase_C::GroundedEntryState' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, MovementDirection) == 0x00F5E9, "Member 'UABP_CH_MeshBase_C::MovementDirection' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, TrackedHipsDirection) == 0x00F5EA, "Member 'UABP_CH_MeshBase_C::TrackedHipsDirection' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, RelativeAccelerationAmount) == 0x00F5EC, "Member 'UABP_CH_MeshBase_C::RelativeAccelerationAmount' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, ShouldMove) == 0x00F5F8, "Member 'UABP_CH_MeshBase_C::ShouldMove' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Rotate_L) == 0x00F5F9, "Member 'UABP_CH_MeshBase_C::Rotate_L' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Rotate_R) == 0x00F5FA, "Member 'UABP_CH_MeshBase_C::Rotate_R' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Pivot) == 0x00F5FB, "Member 'UABP_CH_MeshBase_C::Pivot' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, RotateRate) == 0x00F5FC, "Member 'UABP_CH_MeshBase_C::RotateRate' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, RotationScale) == 0x00F600, "Member 'UABP_CH_MeshBase_C::RotationScale' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, DiagonalScaleAmount) == 0x00F604, "Member 'UABP_CH_MeshBase_C::DiagonalScaleAmount' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, WalkRunBlend) == 0x00F608, "Member 'UABP_CH_MeshBase_C::WalkRunBlend' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, LocomotionPlayStartPos) == 0x00F60C, "Member 'UABP_CH_MeshBase_C::LocomotionPlayStartPos' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, EventLocomotionPlayStartPos) == 0x00F610, "Member 'UABP_CH_MeshBase_C::EventLocomotionPlayStartPos' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, LocomotionPlayRate) == 0x00F614, "Member 'UABP_CH_MeshBase_C::LocomotionPlayRate' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, CrouchingPlayRate) == 0x00F618, "Member 'UABP_CH_MeshBase_C::CrouchingPlayRate' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, StrideBlend) == 0x00F61C, "Member 'UABP_CH_MeshBase_C::StrideBlend' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, VelocityBlend) == 0x00F620, "Member 'UABP_CH_MeshBase_C::VelocityBlend' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, LeanAmount) == 0x00F630, "Member 'UABP_CH_MeshBase_C::LeanAmount' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, DiagonalScaleAmountCurve) == 0x00F638, "Member 'UABP_CH_MeshBase_C::DiagonalScaleAmountCurve' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, StrideBlend_N_Walk) == 0x00F640, "Member 'UABP_CH_MeshBase_C::StrideBlend_N_Walk' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, StrideBlend_N_Run) == 0x00F648, "Member 'UABP_CH_MeshBase_C::StrideBlend_N_Run' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, StrideBlend_C_Walk) == 0x00F650, "Member 'UABP_CH_MeshBase_C::StrideBlend_C_Walk' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, SmoothedAimingRotation) == 0x00F658, "Member 'UABP_CH_MeshBase_C::SmoothedAimingRotation' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, SpineRotation) == 0x00F664, "Member 'UABP_CH_MeshBase_C::SpineRotation' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AimingAngle) == 0x00F670, "Member 'UABP_CH_MeshBase_C::AimingAngle' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, SmoothedAimingAngle) == 0x00F678, "Member 'UABP_CH_MeshBase_C::SmoothedAimingAngle' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AimSweepTime) == 0x00F680, "Member 'UABP_CH_MeshBase_C::AimSweepTime' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AimYawRate) == 0x00F684, "Member 'UABP_CH_MeshBase_C::AimYawRate' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, ZoomAmount) == 0x00F688, "Member 'UABP_CH_MeshBase_C::ZoomAmount' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Jumped) == 0x00F68C, "Member 'UABP_CH_MeshBase_C::Jumped' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, JumpPlayRate) == 0x00F690, "Member 'UABP_CH_MeshBase_C::JumpPlayRate' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, FallSpeed) == 0x00F694, "Member 'UABP_CH_MeshBase_C::FallSpeed' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, LandPrediction) == 0x00F698, "Member 'UABP_CH_MeshBase_C::LandPrediction' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, LandPredictionCurve) == 0x00F6A0, "Member 'UABP_CH_MeshBase_C::LandPredictionCurve' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, LeanInAirCurve) == 0x00F6A8, "Member 'UABP_CH_MeshBase_C::LeanInAirCurve' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, OverlayOverrideState) == 0x00F6B0, "Member 'UABP_CH_MeshBase_C::OverlayOverrideState' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Enable_AimOffset) == 0x00F6B4, "Member 'UABP_CH_MeshBase_C::Enable_AimOffset' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, FootLock_L_Alpha) == 0x00F6B8, "Member 'UABP_CH_MeshBase_C::FootLock_L_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, FootLock_R_Alpha) == 0x00F6BC, "Member 'UABP_CH_MeshBase_C::FootLock_R_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, FootLock_L_Location) == 0x00F6C0, "Member 'UABP_CH_MeshBase_C::FootLock_L_Location' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, FootLock_R_Location) == 0x00F6CC, "Member 'UABP_CH_MeshBase_C::FootLock_R_Location' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, FootLock_L_Rotation) == 0x00F6D8, "Member 'UABP_CH_MeshBase_C::FootLock_L_Rotation' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, FootLock_R_Rotation) == 0x00F6E4, "Member 'UABP_CH_MeshBase_C::FootLock_R_Rotation' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, FootOffset_L_Location) == 0x00F6F0, "Member 'UABP_CH_MeshBase_C::FootOffset_L_Location' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, FootOffset_R_Location) == 0x00F6FC, "Member 'UABP_CH_MeshBase_C::FootOffset_R_Location' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, FootOffset_L_Rotation) == 0x00F708, "Member 'UABP_CH_MeshBase_C::FootOffset_L_Rotation' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, FootOffset_R_Rotation) == 0x00F714, "Member 'UABP_CH_MeshBase_C::FootOffset_R_Rotation' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, PelvisOffset) == 0x00F720, "Member 'UABP_CH_MeshBase_C::PelvisOffset' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, PelvisAlpha) == 0x00F72C, "Member 'UABP_CH_MeshBase_C::PelvisAlpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Character) == 0x00F730, "Member 'UABP_CH_MeshBase_C::Character' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, DeltaTimeX) == 0x00F738, "Member 'UABP_CH_MeshBase_C::DeltaTimeX' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, TurnCheckMinAngle) == 0x00F73C, "Member 'UABP_CH_MeshBase_C::TurnCheckMinAngle' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Turn180Threshold) == 0x00F740, "Member 'UABP_CH_MeshBase_C::Turn180Threshold' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AimYawRateLimit) == 0x00F744, "Member 'UABP_CH_MeshBase_C::AimYawRateLimit' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, ElapsedDelayTime) == 0x00F748, "Member 'UABP_CH_MeshBase_C::ElapsedDelayTime' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, MovementState) == 0x00F74C, "Member 'UABP_CH_MeshBase_C::MovementState' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, PrevMovementState) == 0x00F74D, "Member 'UABP_CH_MeshBase_C::PrevMovementState' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, MovementAction) == 0x00F74E, "Member 'UABP_CH_MeshBase_C::MovementAction' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, RotationMode) == 0x00F74F, "Member 'UABP_CH_MeshBase_C::RotationMode' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Gait) == 0x00F750, "Member 'UABP_CH_MeshBase_C::Gait' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Stance) == 0x00F751, "Member 'UABP_CH_MeshBase_C::Stance' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, ViewMode) == 0x00F752, "Member 'UABP_CH_MeshBase_C::ViewMode' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, OverlayState) == 0x00F753, "Member 'UABP_CH_MeshBase_C::OverlayState' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, BasePose_N) == 0x00F754, "Member 'UABP_CH_MeshBase_C::BasePose_N' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, BasePose_CLF) == 0x00F758, "Member 'UABP_CH_MeshBase_C::BasePose_CLF' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Arm_L) == 0x00F75C, "Member 'UABP_CH_MeshBase_C::Arm_L' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Arm_L_Add) == 0x00F760, "Member 'UABP_CH_MeshBase_C::Arm_L_Add' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Arm_L_LS) == 0x00F764, "Member 'UABP_CH_MeshBase_C::Arm_L_LS' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Arm_L_MS) == 0x00F768, "Member 'UABP_CH_MeshBase_C::Arm_L_MS' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Arm_R) == 0x00F76C, "Member 'UABP_CH_MeshBase_C::Arm_R' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Arm_R_Add) == 0x00F770, "Member 'UABP_CH_MeshBase_C::Arm_R_Add' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Arm_R_LS) == 0x00F774, "Member 'UABP_CH_MeshBase_C::Arm_R_LS' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Arm_R_MS) == 0x00F778, "Member 'UABP_CH_MeshBase_C::Arm_R_MS' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, LayeringHand_L_Alpha) == 0x00F77C, "Member 'UABP_CH_MeshBase_C::LayeringHand_L_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, LayeringHand_R_Alpha) == 0x00F780, "Member 'UABP_CH_MeshBase_C::LayeringHand_R_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Legs) == 0x00F784, "Member 'UABP_CH_MeshBase_C::Legs' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Legs_Add) == 0x00F788, "Member 'UABP_CH_MeshBase_C::Legs_Add' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Pelvis) == 0x00F78C, "Member 'UABP_CH_MeshBase_C::Pelvis' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Pelvis_Add) == 0x00F790, "Member 'UABP_CH_MeshBase_C::Pelvis_Add' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Spine) == 0x00F794, "Member 'UABP_CH_MeshBase_C::Spine' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Spine_Add) == 0x00F798, "Member 'UABP_CH_MeshBase_C::Spine_Add' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Head) == 0x00F79C, "Member 'UABP_CH_MeshBase_C::Head' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Head_Add) == 0x00F7A0, "Member 'UABP_CH_MeshBase_C::Head_Add' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, YawOffset_FB) == 0x00F7A8, "Member 'UABP_CH_MeshBase_C::YawOffset_FB' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, YawOffset_LR) == 0x00F7B0, "Member 'UABP_CH_MeshBase_C::YawOffset_LR' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, FYaw) == 0x00F7B8, "Member 'UABP_CH_MeshBase_C::FYaw' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, BYaw) == 0x00F7BC, "Member 'UABP_CH_MeshBase_C::BYaw' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, LYaw) == 0x00F7C0, "Member 'UABP_CH_MeshBase_C::LYaw' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, RYaw) == 0x00F7C4, "Member 'UABP_CH_MeshBase_C::RYaw' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, InputYawOffsetTime) == 0x00F7C8, "Member 'UABP_CH_MeshBase_C::InputYawOffsetTime' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, ForwardYawTime) == 0x00F7CC, "Member 'UABP_CH_MeshBase_C::ForwardYawTime' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, LeftYawTime) == 0x00F7D0, "Member 'UABP_CH_MeshBase_C::LeftYawTime' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, RightYawTime) == 0x00F7D4, "Member 'UABP_CH_MeshBase_C::RightYawTime' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, MinAngleDelay) == 0x00F7D8, "Member 'UABP_CH_MeshBase_C::MinAngleDelay' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, MaxAngleDelay) == 0x00F7DC, "Member 'UABP_CH_MeshBase_C::MaxAngleDelay' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, RotateMinThreshold) == 0x00F7E0, "Member 'UABP_CH_MeshBase_C::RotateMinThreshold' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, RotateMaxThreshold) == 0x00F7E4, "Member 'UABP_CH_MeshBase_C::RotateMaxThreshold' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AimYawRateMinRange) == 0x00F7E8, "Member 'UABP_CH_MeshBase_C::AimYawRateMinRange' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AimYawRateMaxRange) == 0x00F7EC, "Member 'UABP_CH_MeshBase_C::AimYawRateMaxRange' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, MinPlayRate) == 0x00F7F0, "Member 'UABP_CH_MeshBase_C::MinPlayRate' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, MaxPlayRate) == 0x00F7F4, "Member 'UABP_CH_MeshBase_C::MaxPlayRate' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, FlailRate) == 0x00F7F8, "Member 'UABP_CH_MeshBase_C::FlailRate' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Enable_HandIK_L) == 0x00F7FC, "Member 'UABP_CH_MeshBase_C::Enable_HandIK_L' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Enable_HandIK_R) == 0x00F800, "Member 'UABP_CH_MeshBase_C::Enable_HandIK_R' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimatedWalkSpeed) == 0x00F804, "Member 'UABP_CH_MeshBase_C::AnimatedWalkSpeed' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimatedRunSpeed) == 0x00F808, "Member 'UABP_CH_MeshBase_C::AnimatedRunSpeed' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimatedSprintSpeed) == 0x00F80C, "Member 'UABP_CH_MeshBase_C::AnimatedSprintSpeed' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AnimatedCrouchSpeed) == 0x00F810, "Member 'UABP_CH_MeshBase_C::AnimatedCrouchSpeed' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, VelocityBlendInterpSpeed) == 0x00F814, "Member 'UABP_CH_MeshBase_C::VelocityBlendInterpSpeed' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, GroundedLeanInterpSpeed) == 0x00F818, "Member 'UABP_CH_MeshBase_C::GroundedLeanInterpSpeed' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, InAirLeanInterpSpeed) == 0x00F81C, "Member 'UABP_CH_MeshBase_C::InAirLeanInterpSpeed' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, SmoothedAimingRotationInterpSpeed) == 0x00F820, "Member 'UABP_CH_MeshBase_C::SmoothedAimingRotationInterpSpeed' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, InputYawOffsetInterpSpeed) == 0x00F824, "Member 'UABP_CH_MeshBase_C::InputYawOffsetInterpSpeed' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, TriggerPivotSpeedLimit) == 0x00F828, "Member 'UABP_CH_MeshBase_C::TriggerPivotSpeedLimit' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, FootHeight) == 0x00F82C, "Member 'UABP_CH_MeshBase_C::FootHeight' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, IK_TraceDistanceAboveFoot) == 0x00F830, "Member 'UABP_CH_MeshBase_C::IK_TraceDistanceAboveFoot' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, IK_TraceDistanceBelowFoot) == 0x00F834, "Member 'UABP_CH_MeshBase_C::IK_TraceDistanceBelowFoot' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, LipSync_A) == 0x00F838, "Member 'UABP_CH_MeshBase_C::LipSync_A' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, LipSync_I) == 0x00F83C, "Member 'UABP_CH_MeshBase_C::LipSync_I' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, LipSync_U) == 0x00F840, "Member 'UABP_CH_MeshBase_C::LipSync_U' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, LipSync_E) == 0x00F844, "Member 'UABP_CH_MeshBase_C::LipSync_E' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, LipSync_O) == 0x00F848, "Member 'UABP_CH_MeshBase_C::LipSync_O' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, bBlink) == 0x00F84C, "Member 'UABP_CH_MeshBase_C::bBlink' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, bNoBlink) == 0x00F84D, "Member 'UABP_CH_MeshBase_C::bNoBlink' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, EyeLookatAlpha) == 0x00F850, "Member 'UABP_CH_MeshBase_C::EyeLookatAlpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, EyeLookat_Horizontal) == 0x00F854, "Member 'UABP_CH_MeshBase_C::EyeLookat_Horizontal' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, EyeLookat_Vertical) == 0x00F858, "Member 'UABP_CH_MeshBase_C::EyeLookat_Vertical' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, FaceDeformAlpha) == 0x00F85C, "Member 'UABP_CH_MeshBase_C::FaceDeformAlpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, FaceAngleRatio_Horizontal) == 0x00F860, "Member 'UABP_CH_MeshBase_C::FaceAngleRatio_Horizontal' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, FaceAngleRatio_Vertical) == 0x00F864, "Member 'UABP_CH_MeshBase_C::FaceAngleRatio_Vertical' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, PawnOwner) == 0x00F868, "Member 'UABP_CH_MeshBase_C::PawnOwner' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, LookAtInterpSpeed) == 0x00F870, "Member 'UABP_CH_MeshBase_C::LookAtInterpSpeed' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, BodyLookat_Horizontal) == 0x00F874, "Member 'UABP_CH_MeshBase_C::BodyLookat_Horizontal' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, BodyLookatOffset_Horizontal) == 0x00F878, "Member 'UABP_CH_MeshBase_C::BodyLookatOffset_Horizontal' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, BodyLookat_Vertical) == 0x00F87C, "Member 'UABP_CH_MeshBase_C::BodyLookat_Vertical' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, BodyLookatOffset_Vertical) == 0x00F880, "Member 'UABP_CH_MeshBase_C::BodyLookatOffset_Vertical' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, EyeLookatOffset_Horizontal) == 0x00F884, "Member 'UABP_CH_MeshBase_C::EyeLookatOffset_Horizontal' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, EyeLookatOffset_Vertical) == 0x00F888, "Member 'UABP_CH_MeshBase_C::EyeLookatOffset_Vertical' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, LookAtType) == 0x00F88C, "Member 'UABP_CH_MeshBase_C::LookAtType' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, LookAtTargetActor) == 0x00F890, "Member 'UABP_CH_MeshBase_C::LookAtTargetActor' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, LookAtTargetActorBoneName) == 0x00F898, "Member 'UABP_CH_MeshBase_C::LookAtTargetActorBoneName' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, LookAtWorldLocation) == 0x00F8A8, "Member 'UABP_CH_MeshBase_C::LookAtWorldLocation' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, LookAtFinalTargetLocation) == 0x00F8B4, "Member 'UABP_CH_MeshBase_C::LookAtFinalTargetLocation' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, bForceEyeClose) == 0x00F8C0, "Member 'UABP_CH_MeshBase_C::bForceEyeClose' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, BlinkWait) == 0x00F8C4, "Member 'UABP_CH_MeshBase_C::BlinkWait' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, BlinkContinuousNumber) == 0x00F8C8, "Member 'UABP_CH_MeshBase_C::BlinkContinuousNumber' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, SaccadePos) == 0x00F8CC, "Member 'UABP_CH_MeshBase_C::SaccadePos' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, SaccadeRandomVec) == 0x00F8D8, "Member 'UABP_CH_MeshBase_C::SaccadeRandomVec' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, SaccadeWait) == 0x00F8E4, "Member 'UABP_CH_MeshBase_C::SaccadeWait' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, SaccadeAlpha) == 0x00F8E8, "Member 'UABP_CH_MeshBase_C::SaccadeAlpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, LeftLegSkirtBS) == 0x00F8EC, "Member 'UABP_CH_MeshBase_C::LeftLegSkirtBS' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, RightLegSkirtBS) == 0x00F8F4, "Member 'UABP_CH_MeshBase_C::RightLegSkirtBS' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, SkirtRootRot) == 0x00F8FC, "Member 'UABP_CH_MeshBase_C::SkirtRootRot' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Rotate0to360) == 0x00F908, "Member 'UABP_CH_MeshBase_C::Rotate0to360' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, PhysicsAlpha) == 0x00F90C, "Member 'UABP_CH_MeshBase_C::PhysicsAlpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, SpringStiffness) == 0x00F910, "Member 'UABP_CH_MeshBase_C::SpringStiffness' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, HipOffset_Adjust) == 0x00F914, "Member 'UABP_CH_MeshBase_C::HipOffset_Adjust' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, IK_FootOffset_L_Adjust_Alpha) == 0x00F920, "Member 'UABP_CH_MeshBase_C::IK_FootOffset_L_Adjust_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, IK_FootOffset_R_Adjust_Alpha) == 0x00F924, "Member 'UABP_CH_MeshBase_C::IK_FootOffset_R_Adjust_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, BodyLookatAlpha) == 0x00F928, "Member 'UABP_CH_MeshBase_C::BodyLookatAlpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Enable_FootIK_L) == 0x00F92C, "Member 'UABP_CH_MeshBase_C::Enable_FootIK_L' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Enable_FootIK_R) == 0x00F930, "Member 'UABP_CH_MeshBase_C::Enable_FootIK_R' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, IK_Alpha) == 0x00F934, "Member 'UABP_CH_MeshBase_C::IK_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, IK_UpperBody_Alpha) == 0x00F938, "Member 'UABP_CH_MeshBase_C::IK_UpperBody_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, IK_LowerBody_Alpha) == 0x00F93C, "Member 'UABP_CH_MeshBase_C::IK_LowerBody_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, L_ExUpleg_00_modfyTRANSX) == 0x00F940, "Member 'UABP_CH_MeshBase_C::L_ExUpleg_00_modfyTRANSX' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, R_ExUpLeg_00_modfyTRANSX) == 0x00F94C, "Member 'UABP_CH_MeshBase_C::R_ExUpLeg_00_modfyTRANSX' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, L_KneeCap_00_modfyTRANS) == 0x00F958, "Member 'UABP_CH_MeshBase_C::L_KneeCap_00_modfyTRANS' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, R_KneeCap_00_modfyTRANS) == 0x00F964, "Member 'UABP_CH_MeshBase_C::R_KneeCap_00_modfyTRANS' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, ForeArmTwist02Exists) == 0x00F970, "Member 'UABP_CH_MeshBase_C::ForeArmTwist02Exists' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, LipSync_Total) == 0x00F974, "Member 'UABP_CH_MeshBase_C::LipSync_Total' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AddBreathAlpha) == 0x00F978, "Member 'UABP_CH_MeshBase_C::AddBreathAlpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, PhysicsAlpha_UpperBody) == 0x00F97C, "Member 'UABP_CH_MeshBase_C::PhysicsAlpha_UpperBody' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, PhysicsAlpha_LowerBody) == 0x00F980, "Member 'UABP_CH_MeshBase_C::PhysicsAlpha_LowerBody' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AddSittingBreathAlpha) == 0x00F984, "Member 'UABP_CH_MeshBase_C::AddSittingBreathAlpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, WaitPoseWaitTime) == 0x00F988, "Member 'UABP_CH_MeshBase_C::WaitPoseWaitTime' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, InWaitPoseState) == 0x00F98C, "Member 'UABP_CH_MeshBase_C::InWaitPoseState' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, EyeLookAt_WithLookTarget) == 0x00F98D, "Member 'UABP_CH_MeshBase_C::EyeLookAt_WithLookTarget' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, BodyLookAt_EnableLimitter) == 0x00F98E, "Member 'UABP_CH_MeshBase_C::BodyLookAt_EnableLimitter' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, EventPhysics) == 0x00F98F, "Member 'UABP_CH_MeshBase_C::EventPhysics' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, FaceDistanceRatio) == 0x00F990, "Member 'UABP_CH_MeshBase_C::FaceDistanceRatio' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, IKTargetNameList) == 0x00F998, "Member 'UABP_CH_MeshBase_C::IKTargetNameList' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, EventFootIKAlpha) == 0x00F9A8, "Member 'UABP_CH_MeshBase_C::EventFootIKAlpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, EventPelvisLockAlpha) == 0x00F9AC, "Member 'UABP_CH_MeshBase_C::EventPelvisLockAlpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, EventPelvisTransform) == 0x00F9B0, "Member 'UABP_CH_MeshBase_C::EventPelvisTransform' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, SceneCommpornent) == 0x00F9C0, "Member 'UABP_CH_MeshBase_C::SceneCommpornent' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, HandIK_R_Transform) == 0x00F9D0, "Member 'UABP_CH_MeshBase_C::HandIK_R_Transform' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, HandIK_L_Transform) == 0x00FA00, "Member 'UABP_CH_MeshBase_C::HandIK_L_Transform' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, LookatOverrideAlpha) == 0x00FA30, "Member 'UABP_CH_MeshBase_C::LookatOverrideAlpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, PhysicsAlpha_Skirt) == 0x00FA34, "Member 'UABP_CH_MeshBase_C::PhysicsAlpha_Skirt' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, PhysicsAlpha_Hair) == 0x00FA38, "Member 'UABP_CH_MeshBase_C::PhysicsAlpha_Hair' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, PhysicsAlpha_Jacket) == 0x00FA3C, "Member 'UABP_CH_MeshBase_C::PhysicsAlpha_Jacket' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AdjustSinking) == 0x00FA40, "Member 'UABP_CH_MeshBase_C::AdjustSinking' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, CollisionHalfHeight) == 0x00FA44, "Member 'UABP_CH_MeshBase_C::CollisionHalfHeight' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, HandTargetVar_R) == 0x00FA48, "Member 'UABP_CH_MeshBase_C::HandTargetVar_R' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, HandTargetVar_L) == 0x00FA4C, "Member 'UABP_CH_MeshBase_C::HandTargetVar_L' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, CurrentHandTargetVar_R) == 0x00FA50, "Member 'UABP_CH_MeshBase_C::CurrentHandTargetVar_R' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, CurrentHandTargetVar_L) == 0x00FA54, "Member 'UABP_CH_MeshBase_C::CurrentHandTargetVar_L' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, WalkSpeed_Threshold) == 0x00FA58, "Member 'UABP_CH_MeshBase_C::WalkSpeed_Threshold' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, RunSpeed_Threshold) == 0x00FA5C, "Member 'UABP_CH_MeshBase_C::RunSpeed_Threshold' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, SprintSpeed_Threshold) == 0x00FA60, "Member 'UABP_CH_MeshBase_C::SprintSpeed_Threshold' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, LockFoot_R_Alpha) == 0x00FA64, "Member 'UABP_CH_MeshBase_C::LockFoot_R_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, LockFoot_L_Alpha) == 0x00FA68, "Member 'UABP_CH_MeshBase_C::LockFoot_L_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, ApplyPhysicsAlpha) == 0x00FA6C, "Member 'UABP_CH_MeshBase_C::ApplyPhysicsAlpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, ApplyPhysicsAlphaUpperBody) == 0x00FA70, "Member 'UABP_CH_MeshBase_C::ApplyPhysicsAlphaUpperBody' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, ApplyPhysicsAlphaLowerBody) == 0x00FA74, "Member 'UABP_CH_MeshBase_C::ApplyPhysicsAlphaLowerBody' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, ApplyPhysicsAlphaHair) == 0x00FA78, "Member 'UABP_CH_MeshBase_C::ApplyPhysicsAlphaHair' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, ApplyPhysicsAlphaJacket) == 0x00FA7C, "Member 'UABP_CH_MeshBase_C::ApplyPhysicsAlphaJacket' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, ApplyPhysicsAlphaSkirt) == 0x00FA80, "Member 'UABP_CH_MeshBase_C::ApplyPhysicsAlphaSkirt' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, EventStrideBlend) == 0x00FA84, "Member 'UABP_CH_MeshBase_C::EventStrideBlend' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, ApplyStrideBlend) == 0x00FA88, "Member 'UABP_CH_MeshBase_C::ApplyStrideBlend' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, OverrideLocomotionAnim) == 0x00FA90, "Member 'UABP_CH_MeshBase_C::OverrideLocomotionAnim' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, OverrideLocomotionAnimEnable) == 0x00FA98, "Member 'UABP_CH_MeshBase_C::OverrideLocomotionAnimEnable' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, OverrideLocomotionNotMoveAnim) == 0x00FAA0, "Member 'UABP_CH_MeshBase_C::OverrideLocomotionNotMoveAnim' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, EnableOverrideLocomotionNotMoveAnim) == 0x00FAA8, "Member 'UABP_CH_MeshBase_C::EnableOverrideLocomotionNotMoveAnim' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Test_arrow) == 0x00FAB0, "Member 'UABP_CH_MeshBase_C::Test_arrow' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, LookatArrow) == 0x00FAB8, "Member 'UABP_CH_MeshBase_C::LookatArrow' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Is_EventLocomotionSim) == 0x00FAC0, "Member 'UABP_CH_MeshBase_C::Is_EventLocomotionSim' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, EnableLookatNewFunction) == 0x00FAC1, "Member 'UABP_CH_MeshBase_C::EnableLookatNewFunction' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, EnableLookatTypeIsWorldNewFunction) == 0x00FAC2, "Member 'UABP_CH_MeshBase_C::EnableLookatTypeIsWorldNewFunction' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, ChangedWalkRunBlend) == 0x00FAC3, "Member 'UABP_CH_MeshBase_C::ChangedWalkRunBlend' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, LocomotionStopAlpha) == 0x00FAC4, "Member 'UABP_CH_MeshBase_C::LocomotionStopAlpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, LocomotionStopPlayRate) == 0x00FAC8, "Member 'UABP_CH_MeshBase_C::LocomotionStopPlayRate' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, MovingTime) == 0x00FACC, "Member 'UABP_CH_MeshBase_C::MovingTime' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, RunningTime) == 0x00FAD0, "Member 'UABP_CH_MeshBase_C::RunningTime' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, WalkingTime) == 0x00FAD4, "Member 'UABP_CH_MeshBase_C::WalkingTime' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, UpdateWalkRunIntervalTime) == 0x00FAD8, "Member 'UABP_CH_MeshBase_C::UpdateWalkRunIntervalTime' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, PreserveRunningState) == 0x00FADC, "Member 'UABP_CH_MeshBase_C::PreserveRunningState' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, LocomotionStopped) == 0x00FADD, "Member 'UABP_CH_MeshBase_C::LocomotionStopped' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, EnterLocomotionOverride) == 0x00FADE, "Member 'UABP_CH_MeshBase_C::EnterLocomotionOverride' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, PresearveWalkRunBlend) == 0x00FAE0, "Member 'UABP_CH_MeshBase_C::PresearveWalkRunBlend' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, PreviousWalkRunState) == 0x00FAE4, "Member 'UABP_CH_MeshBase_C::PreviousWalkRunState' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, IsInPocket) == 0x00FAE8, "Member 'UABP_CH_MeshBase_C::IsInPocket' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, WalkInterval) == 0x00FAE9, "Member 'UABP_CH_MeshBase_C::WalkInterval' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, IsApplyingFootIK) == 0x00FAEA, "Member 'UABP_CH_MeshBase_C::IsApplyingFootIK' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AssistanceBone_L_Alpha) == 0x00FAEC, "Member 'UABP_CH_MeshBase_C::AssistanceBone_L_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AssistanceBone_R_Alpha) == 0x00FAF0, "Member 'UABP_CH_MeshBase_C::AssistanceBone_R_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, EnableGoToMainWaitPose) == 0x00FAF4, "Member 'UABP_CH_MeshBase_C::EnableGoToMainWaitPose' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, LockAttachHand_R_Transform_Alpha) == 0x00FAF8, "Member 'UABP_CH_MeshBase_C::LockAttachHand_R_Transform_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, LockAttachHand_L_Transform_Alpha) == 0x00FAFC, "Member 'UABP_CH_MeshBase_C::LockAttachHand_L_Transform_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, LayeringLegs_Alpha) == 0x00FB00, "Member 'UABP_CH_MeshBase_C::LayeringLegs_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, LayeringHead_Alpha) == 0x00FB04, "Member 'UABP_CH_MeshBase_C::LayeringHead_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, LockBelowHips_Alpha) == 0x00FB08, "Member 'UABP_CH_MeshBase_C::LockBelowHips_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, ApplyPellvisLockAlpha) == 0x00FB0C, "Member 'UABP_CH_MeshBase_C::ApplyPellvisLockAlpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, ApplyAddSittingBreathAlpha) == 0x00FB10, "Member 'UABP_CH_MeshBase_C::ApplyAddSittingBreathAlpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, ApplyAddBreathAlpha) == 0x00FB14, "Member 'UABP_CH_MeshBase_C::ApplyAddBreathAlpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, FaceDistanceAlpha) == 0x00FB18, "Member 'UABP_CH_MeshBase_C::FaceDistanceAlpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, BaseSkeletonMesh) == 0x00FB20, "Member 'UABP_CH_MeshBase_C::BaseSkeletonMesh' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, PostProcessInstances) == 0x00FB28, "Member 'UABP_CH_MeshBase_C::PostProcessInstances' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, EnablePostProcessABP) == 0x00FB38, "Member 'UABP_CH_MeshBase_C::EnablePostProcessABP' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Enable_LayeringArms) == 0x00FB39, "Member 'UABP_CH_MeshBase_C::Enable_LayeringArms' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AdjustFootIKPV_L_Alpha) == 0x00FB3C, "Member 'UABP_CH_MeshBase_C::AdjustFootIKPV_L_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AdjustFootIKPV_R_Alpha) == 0x00FB40, "Member 'UABP_CH_MeshBase_C::AdjustFootIKPV_R_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, ApplyWalkRunBlend) == 0x00FB44, "Member 'UABP_CH_MeshBase_C::ApplyWalkRunBlend' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Event_Arms_L_Alpha) == 0x00FB48, "Member 'UABP_CH_MeshBase_C::Event_Arms_L_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Event_Arms_R_Alpha) == 0x00FB4C, "Member 'UABP_CH_MeshBase_C::Event_Arms_R_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Disable_LookatSpine_Alpha) == 0x00FB50, "Member 'UABP_CH_MeshBase_C::Disable_LookatSpine_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, PelvisTarget_Z) == 0x00FB54, "Member 'UABP_CH_MeshBase_C::PelvisTarget_Z' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Foot_L_TargetDistance) == 0x00FB58, "Member 'UABP_CH_MeshBase_C::Foot_L_TargetDistance' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Foot_R_TargetDistance) == 0x00FB5C, "Member 'UABP_CH_MeshBase_C::Foot_R_TargetDistance' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Foot_L_TargetRotation) == 0x00FB60, "Member 'UABP_CH_MeshBase_C::Foot_L_TargetRotation' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Foot_R_TargetRotation) == 0x00FB6C, "Member 'UABP_CH_MeshBase_C::Foot_R_TargetRotation' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Previous_Foot_L_Location) == 0x00FB78, "Member 'UABP_CH_MeshBase_C::Previous_Foot_L_Location' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Previous_Foot_R_Location) == 0x00FB84, "Member 'UABP_CH_MeshBase_C::Previous_Foot_R_Location' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Goto_NeautralPose) == 0x00FB90, "Member 'UABP_CH_MeshBase_C::Goto_NeautralPose' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Update_Foot_L) == 0x00FB91, "Member 'UABP_CH_MeshBase_C::Update_Foot_L' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Update_Foot_R) == 0x00FB92, "Member 'UABP_CH_MeshBase_C::Update_Foot_R' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Previous_Lookat_Horizontal) == 0x00FB94, "Member 'UABP_CH_MeshBase_C::Previous_Lookat_Horizontal' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Previous_Speed) == 0x00FB98, "Member 'UABP_CH_MeshBase_C::Previous_Speed' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, ActorSinking_L) == 0x00FB9C, "Member 'UABP_CH_MeshBase_C::ActorSinking_L' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, ActorSinking_R) == 0x00FBA0, "Member 'UABP_CH_MeshBase_C::ActorSinking_R' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Current_Foot_L_Location) == 0x00FBA4, "Member 'UABP_CH_MeshBase_C::Current_Foot_L_Location' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Current_Foot_R_Location) == 0x00FBB0, "Member 'UABP_CH_MeshBase_C::Current_Foot_R_Location' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, ActorBottomDistance) == 0x00FBBC, "Member 'UABP_CH_MeshBase_C::ActorBottomDistance' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Apply_IK_UpperBody_Alpha) == 0x00FBC0, "Member 'UABP_CH_MeshBase_C::Apply_IK_UpperBody_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Apply_IK_LowerBody_Alpha) == 0x00FBC4, "Member 'UABP_CH_MeshBase_C::Apply_IK_LowerBody_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, StrideBlendDash_Alpha) == 0x00FBC8, "Member 'UABP_CH_MeshBase_C::StrideBlendDash_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, TempSpeed) == 0x00FBCC, "Member 'UABP_CH_MeshBase_C::TempSpeed' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, CurrentLocomotionState) == 0x00FBD0, "Member 'UABP_CH_MeshBase_C::CurrentLocomotionState' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, PreviousLocomotionState) == 0x00FBD1, "Member 'UABP_CH_MeshBase_C::PreviousLocomotionState' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Disable_InWaitPose) == 0x00FBD2, "Member 'UABP_CH_MeshBase_C::Disable_InWaitPose' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Anim_BlendStopPose) == 0x00FBD8, "Member 'UABP_CH_MeshBase_C::Anim_BlendStopPose' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Toggle_StopBlendPose) == 0x00FBE0, "Member 'UABP_CH_MeshBase_C::Toggle_StopBlendPose' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Goto_MainWaitPose) == 0x00FBE1, "Member 'UABP_CH_MeshBase_C::Goto_MainWaitPose' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, NoCopy_AttachShoulderFromUpperBodySlot) == 0x00FBE4, "Member 'UABP_CH_MeshBase_C::NoCopy_AttachShoulderFromUpperBodySlot' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Copy_SkirtFromUpperBodySlot) == 0x00FBE8, "Member 'UABP_CH_MeshBase_C::Copy_SkirtFromUpperBodySlot' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, NoCopy_AttachLowerFromUpperBodySlot) == 0x00FBEC, "Member 'UABP_CH_MeshBase_C::NoCopy_AttachLowerFromUpperBodySlot' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Apply_MeandelingOffset_Y) == 0x00FBF0, "Member 'UABP_CH_MeshBase_C::Apply_MeandelingOffset_Y' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, NoCopy_LeftArmFromUpperBodySlot) == 0x00FBF4, "Member 'UABP_CH_MeshBase_C::NoCopy_LeftArmFromUpperBodySlot' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, LegsAnimBlendW) == 0x00FBF8, "Member 'UABP_CH_MeshBase_C::LegsAnimBlendW' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, AddBleath_StartPos) == 0x00FBFC, "Member 'UABP_CH_MeshBase_C::AddBleath_StartPos' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, ForwardFloorState) == 0x00FC00, "Member 'UABP_CH_MeshBase_C::ForwardFloorState' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, WaitPoseTime) == 0x00FC04, "Member 'UABP_CH_MeshBase_C::WaitPoseTime' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, CurrentActorLocation) == 0x00FC08, "Member 'UABP_CH_MeshBase_C::CurrentActorLocation' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, CurrentActorRotation) == 0x00FC14, "Member 'UABP_CH_MeshBase_C::CurrentActorRotation' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Disable_Physics) == 0x00FC20, "Member 'UABP_CH_MeshBase_C::Disable_Physics' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Interp_HairLookat_H) == 0x00FC24, "Member 'UABP_CH_MeshBase_C::Interp_HairLookat_H' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Interp_HairLookat_V) == 0x00FC28, "Member 'UABP_CH_MeshBase_C::Interp_HairLookat_V' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, NoBlink_fromCurve) == 0x00FC2C, "Member 'UABP_CH_MeshBase_C::NoBlink_fromCurve' has a wrong offset!");
static_assert(offsetof(UABP_CH_MeshBase_C, Has_HitFootIK) == 0x00FC2D, "Member 'UABP_CH_MeshBase_C::Has_HitFootIK' has a wrong offset!");

}

