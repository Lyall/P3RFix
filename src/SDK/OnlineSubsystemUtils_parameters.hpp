#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OnlineSubsystemUtils

#include "Basic.hpp"

#include "OnlineSubsystem_structs.hpp"
#include "OnlineSubsystemUtils_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function OnlineSubsystemUtils.AchievementBlueprintLibrary.GetCachedAchievementDescription
// 0x0070 (0x0070 - 0x0000)
struct AchievementBlueprintLibrary_GetCachedAchievementDescription final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AchievementID;                                     // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFoundID;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Title;                                             // 0x0020(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	class FText                                   LockedDescription;                                 // 0x0038(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	class FText                                   UnlockedDescription;                               // 0x0050(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          bHidden;                                           // 0x0068(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AchievementBlueprintLibrary_GetCachedAchievementDescription) == 0x000008, "Wrong alignment on AchievementBlueprintLibrary_GetCachedAchievementDescription");
static_assert(sizeof(AchievementBlueprintLibrary_GetCachedAchievementDescription) == 0x000070, "Wrong size on AchievementBlueprintLibrary_GetCachedAchievementDescription");
static_assert(offsetof(AchievementBlueprintLibrary_GetCachedAchievementDescription, WorldContextObject) == 0x000000, "Member 'AchievementBlueprintLibrary_GetCachedAchievementDescription::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AchievementBlueprintLibrary_GetCachedAchievementDescription, PlayerController) == 0x000008, "Member 'AchievementBlueprintLibrary_GetCachedAchievementDescription::PlayerController' has a wrong offset!");
static_assert(offsetof(AchievementBlueprintLibrary_GetCachedAchievementDescription, AchievementID) == 0x000010, "Member 'AchievementBlueprintLibrary_GetCachedAchievementDescription::AchievementID' has a wrong offset!");
static_assert(offsetof(AchievementBlueprintLibrary_GetCachedAchievementDescription, bFoundID) == 0x000018, "Member 'AchievementBlueprintLibrary_GetCachedAchievementDescription::bFoundID' has a wrong offset!");
static_assert(offsetof(AchievementBlueprintLibrary_GetCachedAchievementDescription, Title) == 0x000020, "Member 'AchievementBlueprintLibrary_GetCachedAchievementDescription::Title' has a wrong offset!");
static_assert(offsetof(AchievementBlueprintLibrary_GetCachedAchievementDescription, LockedDescription) == 0x000038, "Member 'AchievementBlueprintLibrary_GetCachedAchievementDescription::LockedDescription' has a wrong offset!");
static_assert(offsetof(AchievementBlueprintLibrary_GetCachedAchievementDescription, UnlockedDescription) == 0x000050, "Member 'AchievementBlueprintLibrary_GetCachedAchievementDescription::UnlockedDescription' has a wrong offset!");
static_assert(offsetof(AchievementBlueprintLibrary_GetCachedAchievementDescription, bHidden) == 0x000068, "Member 'AchievementBlueprintLibrary_GetCachedAchievementDescription::bHidden' has a wrong offset!");

// Function OnlineSubsystemUtils.AchievementBlueprintLibrary.GetCachedAchievementProgress
// 0x0020 (0x0020 - 0x0000)
struct AchievementBlueprintLibrary_GetCachedAchievementProgress final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AchievementID;                                     // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFoundID;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Progress;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AchievementBlueprintLibrary_GetCachedAchievementProgress) == 0x000008, "Wrong alignment on AchievementBlueprintLibrary_GetCachedAchievementProgress");
static_assert(sizeof(AchievementBlueprintLibrary_GetCachedAchievementProgress) == 0x000020, "Wrong size on AchievementBlueprintLibrary_GetCachedAchievementProgress");
static_assert(offsetof(AchievementBlueprintLibrary_GetCachedAchievementProgress, WorldContextObject) == 0x000000, "Member 'AchievementBlueprintLibrary_GetCachedAchievementProgress::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AchievementBlueprintLibrary_GetCachedAchievementProgress, PlayerController) == 0x000008, "Member 'AchievementBlueprintLibrary_GetCachedAchievementProgress::PlayerController' has a wrong offset!");
static_assert(offsetof(AchievementBlueprintLibrary_GetCachedAchievementProgress, AchievementID) == 0x000010, "Member 'AchievementBlueprintLibrary_GetCachedAchievementProgress::AchievementID' has a wrong offset!");
static_assert(offsetof(AchievementBlueprintLibrary_GetCachedAchievementProgress, bFoundID) == 0x000018, "Member 'AchievementBlueprintLibrary_GetCachedAchievementProgress::bFoundID' has a wrong offset!");
static_assert(offsetof(AchievementBlueprintLibrary_GetCachedAchievementProgress, Progress) == 0x00001C, "Member 'AchievementBlueprintLibrary_GetCachedAchievementProgress::Progress' has a wrong offset!");

// Function OnlineSubsystemUtils.AchievementQueryCallbackProxy.CacheAchievementDescriptions
// 0x0018 (0x0018 - 0x0000)
struct AchievementQueryCallbackProxy_CacheAchievementDescriptions final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAchievementQueryCallbackProxy*         ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AchievementQueryCallbackProxy_CacheAchievementDescriptions) == 0x000008, "Wrong alignment on AchievementQueryCallbackProxy_CacheAchievementDescriptions");
static_assert(sizeof(AchievementQueryCallbackProxy_CacheAchievementDescriptions) == 0x000018, "Wrong size on AchievementQueryCallbackProxy_CacheAchievementDescriptions");
static_assert(offsetof(AchievementQueryCallbackProxy_CacheAchievementDescriptions, WorldContextObject) == 0x000000, "Member 'AchievementQueryCallbackProxy_CacheAchievementDescriptions::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AchievementQueryCallbackProxy_CacheAchievementDescriptions, PlayerController) == 0x000008, "Member 'AchievementQueryCallbackProxy_CacheAchievementDescriptions::PlayerController' has a wrong offset!");
static_assert(offsetof(AchievementQueryCallbackProxy_CacheAchievementDescriptions, ReturnValue) == 0x000010, "Member 'AchievementQueryCallbackProxy_CacheAchievementDescriptions::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemUtils.AchievementQueryCallbackProxy.CacheAchievements
// 0x0018 (0x0018 - 0x0000)
struct AchievementQueryCallbackProxy_CacheAchievements final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAchievementQueryCallbackProxy*         ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AchievementQueryCallbackProxy_CacheAchievements) == 0x000008, "Wrong alignment on AchievementQueryCallbackProxy_CacheAchievements");
static_assert(sizeof(AchievementQueryCallbackProxy_CacheAchievements) == 0x000018, "Wrong size on AchievementQueryCallbackProxy_CacheAchievements");
static_assert(offsetof(AchievementQueryCallbackProxy_CacheAchievements, WorldContextObject) == 0x000000, "Member 'AchievementQueryCallbackProxy_CacheAchievements::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AchievementQueryCallbackProxy_CacheAchievements, PlayerController) == 0x000008, "Member 'AchievementQueryCallbackProxy_CacheAchievements::PlayerController' has a wrong offset!");
static_assert(offsetof(AchievementQueryCallbackProxy_CacheAchievements, ReturnValue) == 0x000010, "Member 'AchievementQueryCallbackProxy_CacheAchievements::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemUtils.AchievementWriteCallbackProxy.WriteAchievementProgress
// 0x0028 (0x0028 - 0x0000)
struct AchievementWriteCallbackProxy_WriteAchievementProgress final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AchievementName;                                   // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Progress;                                          // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UserTag;                                           // 0x001C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAchievementWriteCallbackProxy*         ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AchievementWriteCallbackProxy_WriteAchievementProgress) == 0x000008, "Wrong alignment on AchievementWriteCallbackProxy_WriteAchievementProgress");
static_assert(sizeof(AchievementWriteCallbackProxy_WriteAchievementProgress) == 0x000028, "Wrong size on AchievementWriteCallbackProxy_WriteAchievementProgress");
static_assert(offsetof(AchievementWriteCallbackProxy_WriteAchievementProgress, WorldContextObject) == 0x000000, "Member 'AchievementWriteCallbackProxy_WriteAchievementProgress::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AchievementWriteCallbackProxy_WriteAchievementProgress, PlayerController) == 0x000008, "Member 'AchievementWriteCallbackProxy_WriteAchievementProgress::PlayerController' has a wrong offset!");
static_assert(offsetof(AchievementWriteCallbackProxy_WriteAchievementProgress, AchievementName) == 0x000010, "Member 'AchievementWriteCallbackProxy_WriteAchievementProgress::AchievementName' has a wrong offset!");
static_assert(offsetof(AchievementWriteCallbackProxy_WriteAchievementProgress, Progress) == 0x000018, "Member 'AchievementWriteCallbackProxy_WriteAchievementProgress::Progress' has a wrong offset!");
static_assert(offsetof(AchievementWriteCallbackProxy_WriteAchievementProgress, UserTag) == 0x00001C, "Member 'AchievementWriteCallbackProxy_WriteAchievementProgress::UserTag' has a wrong offset!");
static_assert(offsetof(AchievementWriteCallbackProxy_WriteAchievementProgress, ReturnValue) == 0x000020, "Member 'AchievementWriteCallbackProxy_WriteAchievementProgress::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemUtils.ConnectionCallbackProxy.ConnectToService
// 0x0018 (0x0018 - 0x0000)
struct ConnectionCallbackProxy_ConnectToService final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UConnectionCallbackProxy*               ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ConnectionCallbackProxy_ConnectToService) == 0x000008, "Wrong alignment on ConnectionCallbackProxy_ConnectToService");
static_assert(sizeof(ConnectionCallbackProxy_ConnectToService) == 0x000018, "Wrong size on ConnectionCallbackProxy_ConnectToService");
static_assert(offsetof(ConnectionCallbackProxy_ConnectToService, WorldContextObject) == 0x000000, "Member 'ConnectionCallbackProxy_ConnectToService::WorldContextObject' has a wrong offset!");
static_assert(offsetof(ConnectionCallbackProxy_ConnectToService, PlayerController) == 0x000008, "Member 'ConnectionCallbackProxy_ConnectToService::PlayerController' has a wrong offset!");
static_assert(offsetof(ConnectionCallbackProxy_ConnectToService, ReturnValue) == 0x000010, "Member 'ConnectionCallbackProxy_ConnectToService::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemUtils.CreateSessionCallbackProxy.CreateSession
// 0x0020 (0x0020 - 0x0000)
struct CreateSessionCallbackProxy_CreateSession final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PublicConnections;                                 // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseLAN;                                           // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCreateSessionCallbackProxy*            ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CreateSessionCallbackProxy_CreateSession) == 0x000008, "Wrong alignment on CreateSessionCallbackProxy_CreateSession");
static_assert(sizeof(CreateSessionCallbackProxy_CreateSession) == 0x000020, "Wrong size on CreateSessionCallbackProxy_CreateSession");
static_assert(offsetof(CreateSessionCallbackProxy_CreateSession, WorldContextObject) == 0x000000, "Member 'CreateSessionCallbackProxy_CreateSession::WorldContextObject' has a wrong offset!");
static_assert(offsetof(CreateSessionCallbackProxy_CreateSession, PlayerController) == 0x000008, "Member 'CreateSessionCallbackProxy_CreateSession::PlayerController' has a wrong offset!");
static_assert(offsetof(CreateSessionCallbackProxy_CreateSession, PublicConnections) == 0x000010, "Member 'CreateSessionCallbackProxy_CreateSession::PublicConnections' has a wrong offset!");
static_assert(offsetof(CreateSessionCallbackProxy_CreateSession, bUseLAN) == 0x000014, "Member 'CreateSessionCallbackProxy_CreateSession::bUseLAN' has a wrong offset!");
static_assert(offsetof(CreateSessionCallbackProxy_CreateSession, ReturnValue) == 0x000018, "Member 'CreateSessionCallbackProxy_CreateSession::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemUtils.DestroySessionCallbackProxy.DestroySession
// 0x0018 (0x0018 - 0x0000)
struct DestroySessionCallbackProxy_DestroySession final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDestroySessionCallbackProxy*           ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DestroySessionCallbackProxy_DestroySession) == 0x000008, "Wrong alignment on DestroySessionCallbackProxy_DestroySession");
static_assert(sizeof(DestroySessionCallbackProxy_DestroySession) == 0x000018, "Wrong size on DestroySessionCallbackProxy_DestroySession");
static_assert(offsetof(DestroySessionCallbackProxy_DestroySession, WorldContextObject) == 0x000000, "Member 'DestroySessionCallbackProxy_DestroySession::WorldContextObject' has a wrong offset!");
static_assert(offsetof(DestroySessionCallbackProxy_DestroySession, PlayerController) == 0x000008, "Member 'DestroySessionCallbackProxy_DestroySession::PlayerController' has a wrong offset!");
static_assert(offsetof(DestroySessionCallbackProxy_DestroySession, ReturnValue) == 0x000010, "Member 'DestroySessionCallbackProxy_DestroySession::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemUtils.EndMatchCallbackProxy.EndMatch
// 0x0040 (0x0040 - 0x0000)
struct EndMatchCallbackProxy_EndMatch final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TScriptInterface<class ITurnBasedMatchInterface> MatchActor;                                        // 0x0010(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class FString                                 MatchID;                                           // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMPMatchOutcome                               LocalPlayerOutcome;                                // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMPMatchOutcome                               OtherPlayersOutcome;                               // 0x0031(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UEndMatchCallbackProxy*                 ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndMatchCallbackProxy_EndMatch) == 0x000008, "Wrong alignment on EndMatchCallbackProxy_EndMatch");
static_assert(sizeof(EndMatchCallbackProxy_EndMatch) == 0x000040, "Wrong size on EndMatchCallbackProxy_EndMatch");
static_assert(offsetof(EndMatchCallbackProxy_EndMatch, WorldContextObject) == 0x000000, "Member 'EndMatchCallbackProxy_EndMatch::WorldContextObject' has a wrong offset!");
static_assert(offsetof(EndMatchCallbackProxy_EndMatch, PlayerController) == 0x000008, "Member 'EndMatchCallbackProxy_EndMatch::PlayerController' has a wrong offset!");
static_assert(offsetof(EndMatchCallbackProxy_EndMatch, MatchActor) == 0x000010, "Member 'EndMatchCallbackProxy_EndMatch::MatchActor' has a wrong offset!");
static_assert(offsetof(EndMatchCallbackProxy_EndMatch, MatchID) == 0x000020, "Member 'EndMatchCallbackProxy_EndMatch::MatchID' has a wrong offset!");
static_assert(offsetof(EndMatchCallbackProxy_EndMatch, LocalPlayerOutcome) == 0x000030, "Member 'EndMatchCallbackProxy_EndMatch::LocalPlayerOutcome' has a wrong offset!");
static_assert(offsetof(EndMatchCallbackProxy_EndMatch, OtherPlayersOutcome) == 0x000031, "Member 'EndMatchCallbackProxy_EndMatch::OtherPlayersOutcome' has a wrong offset!");
static_assert(offsetof(EndMatchCallbackProxy_EndMatch, ReturnValue) == 0x000038, "Member 'EndMatchCallbackProxy_EndMatch::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemUtils.EndTurnCallbackProxy.EndTurn
// 0x0038 (0x0038 - 0x0000)
struct EndTurnCallbackProxy_EndTurn final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MatchID;                                           // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TScriptInterface<class ITurnBasedMatchInterface> TurnBasedMatchInterface;                           // 0x0020(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UEndTurnCallbackProxy*                  ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndTurnCallbackProxy_EndTurn) == 0x000008, "Wrong alignment on EndTurnCallbackProxy_EndTurn");
static_assert(sizeof(EndTurnCallbackProxy_EndTurn) == 0x000038, "Wrong size on EndTurnCallbackProxy_EndTurn");
static_assert(offsetof(EndTurnCallbackProxy_EndTurn, WorldContextObject) == 0x000000, "Member 'EndTurnCallbackProxy_EndTurn::WorldContextObject' has a wrong offset!");
static_assert(offsetof(EndTurnCallbackProxy_EndTurn, PlayerController) == 0x000008, "Member 'EndTurnCallbackProxy_EndTurn::PlayerController' has a wrong offset!");
static_assert(offsetof(EndTurnCallbackProxy_EndTurn, MatchID) == 0x000010, "Member 'EndTurnCallbackProxy_EndTurn::MatchID' has a wrong offset!");
static_assert(offsetof(EndTurnCallbackProxy_EndTurn, TurnBasedMatchInterface) == 0x000020, "Member 'EndTurnCallbackProxy_EndTurn::TurnBasedMatchInterface' has a wrong offset!");
static_assert(offsetof(EndTurnCallbackProxy_EndTurn, ReturnValue) == 0x000030, "Member 'EndTurnCallbackProxy_EndTurn::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemUtils.FindSessionsCallbackProxy.FindSessions
// 0x0020 (0x0020 - 0x0000)
struct FindSessionsCallbackProxy_FindSessions final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxResults;                                        // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseLAN;                                           // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFindSessionsCallbackProxy*             ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FindSessionsCallbackProxy_FindSessions) == 0x000008, "Wrong alignment on FindSessionsCallbackProxy_FindSessions");
static_assert(sizeof(FindSessionsCallbackProxy_FindSessions) == 0x000020, "Wrong size on FindSessionsCallbackProxy_FindSessions");
static_assert(offsetof(FindSessionsCallbackProxy_FindSessions, WorldContextObject) == 0x000000, "Member 'FindSessionsCallbackProxy_FindSessions::WorldContextObject' has a wrong offset!");
static_assert(offsetof(FindSessionsCallbackProxy_FindSessions, PlayerController) == 0x000008, "Member 'FindSessionsCallbackProxy_FindSessions::PlayerController' has a wrong offset!");
static_assert(offsetof(FindSessionsCallbackProxy_FindSessions, MaxResults) == 0x000010, "Member 'FindSessionsCallbackProxy_FindSessions::MaxResults' has a wrong offset!");
static_assert(offsetof(FindSessionsCallbackProxy_FindSessions, bUseLAN) == 0x000014, "Member 'FindSessionsCallbackProxy_FindSessions::bUseLAN' has a wrong offset!");
static_assert(offsetof(FindSessionsCallbackProxy_FindSessions, ReturnValue) == 0x000018, "Member 'FindSessionsCallbackProxy_FindSessions::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemUtils.FindSessionsCallbackProxy.GetCurrentPlayers
// 0x0110 (0x0110 - 0x0000)
struct FindSessionsCallbackProxy_GetCurrentPlayers final
{
public:
	struct FBlueprintSessionResult                Result;                                            // 0x0000(0x0108)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0108(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FindSessionsCallbackProxy_GetCurrentPlayers) == 0x000008, "Wrong alignment on FindSessionsCallbackProxy_GetCurrentPlayers");
static_assert(sizeof(FindSessionsCallbackProxy_GetCurrentPlayers) == 0x000110, "Wrong size on FindSessionsCallbackProxy_GetCurrentPlayers");
static_assert(offsetof(FindSessionsCallbackProxy_GetCurrentPlayers, Result) == 0x000000, "Member 'FindSessionsCallbackProxy_GetCurrentPlayers::Result' has a wrong offset!");
static_assert(offsetof(FindSessionsCallbackProxy_GetCurrentPlayers, ReturnValue) == 0x000108, "Member 'FindSessionsCallbackProxy_GetCurrentPlayers::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemUtils.FindSessionsCallbackProxy.GetMaxPlayers
// 0x0110 (0x0110 - 0x0000)
struct FindSessionsCallbackProxy_GetMaxPlayers final
{
public:
	struct FBlueprintSessionResult                Result;                                            // 0x0000(0x0108)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0108(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FindSessionsCallbackProxy_GetMaxPlayers) == 0x000008, "Wrong alignment on FindSessionsCallbackProxy_GetMaxPlayers");
static_assert(sizeof(FindSessionsCallbackProxy_GetMaxPlayers) == 0x000110, "Wrong size on FindSessionsCallbackProxy_GetMaxPlayers");
static_assert(offsetof(FindSessionsCallbackProxy_GetMaxPlayers, Result) == 0x000000, "Member 'FindSessionsCallbackProxy_GetMaxPlayers::Result' has a wrong offset!");
static_assert(offsetof(FindSessionsCallbackProxy_GetMaxPlayers, ReturnValue) == 0x000108, "Member 'FindSessionsCallbackProxy_GetMaxPlayers::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemUtils.FindSessionsCallbackProxy.GetPingInMs
// 0x0110 (0x0110 - 0x0000)
struct FindSessionsCallbackProxy_GetPingInMs final
{
public:
	struct FBlueprintSessionResult                Result;                                            // 0x0000(0x0108)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0108(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FindSessionsCallbackProxy_GetPingInMs) == 0x000008, "Wrong alignment on FindSessionsCallbackProxy_GetPingInMs");
static_assert(sizeof(FindSessionsCallbackProxy_GetPingInMs) == 0x000110, "Wrong size on FindSessionsCallbackProxy_GetPingInMs");
static_assert(offsetof(FindSessionsCallbackProxy_GetPingInMs, Result) == 0x000000, "Member 'FindSessionsCallbackProxy_GetPingInMs::Result' has a wrong offset!");
static_assert(offsetof(FindSessionsCallbackProxy_GetPingInMs, ReturnValue) == 0x000108, "Member 'FindSessionsCallbackProxy_GetPingInMs::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemUtils.FindSessionsCallbackProxy.GetServerName
// 0x0118 (0x0118 - 0x0000)
struct FindSessionsCallbackProxy_GetServerName final
{
public:
	struct FBlueprintSessionResult                Result;                                            // 0x0000(0x0108)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0108(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FindSessionsCallbackProxy_GetServerName) == 0x000008, "Wrong alignment on FindSessionsCallbackProxy_GetServerName");
static_assert(sizeof(FindSessionsCallbackProxy_GetServerName) == 0x000118, "Wrong size on FindSessionsCallbackProxy_GetServerName");
static_assert(offsetof(FindSessionsCallbackProxy_GetServerName, Result) == 0x000000, "Member 'FindSessionsCallbackProxy_GetServerName::Result' has a wrong offset!");
static_assert(offsetof(FindSessionsCallbackProxy_GetServerName, ReturnValue) == 0x000108, "Member 'FindSessionsCallbackProxy_GetServerName::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemUtils.FindTurnBasedMatchCallbackProxy.FindTurnBasedMatch
// 0x0038 (0x0038 - 0x0000)
struct FindTurnBasedMatchCallbackProxy_FindTurnBasedMatch final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TScriptInterface<class ITurnBasedMatchInterface> MatchActor;                                        // 0x0010(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
	int32                                         MinPlayers;                                        // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxPlayers;                                        // 0x0024(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PlayerGroup;                                       // 0x0028(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ShowExistingMatches;                               // 0x002C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFindTurnBasedMatchCallbackProxy*       ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FindTurnBasedMatchCallbackProxy_FindTurnBasedMatch) == 0x000008, "Wrong alignment on FindTurnBasedMatchCallbackProxy_FindTurnBasedMatch");
static_assert(sizeof(FindTurnBasedMatchCallbackProxy_FindTurnBasedMatch) == 0x000038, "Wrong size on FindTurnBasedMatchCallbackProxy_FindTurnBasedMatch");
static_assert(offsetof(FindTurnBasedMatchCallbackProxy_FindTurnBasedMatch, WorldContextObject) == 0x000000, "Member 'FindTurnBasedMatchCallbackProxy_FindTurnBasedMatch::WorldContextObject' has a wrong offset!");
static_assert(offsetof(FindTurnBasedMatchCallbackProxy_FindTurnBasedMatch, PlayerController) == 0x000008, "Member 'FindTurnBasedMatchCallbackProxy_FindTurnBasedMatch::PlayerController' has a wrong offset!");
static_assert(offsetof(FindTurnBasedMatchCallbackProxy_FindTurnBasedMatch, MatchActor) == 0x000010, "Member 'FindTurnBasedMatchCallbackProxy_FindTurnBasedMatch::MatchActor' has a wrong offset!");
static_assert(offsetof(FindTurnBasedMatchCallbackProxy_FindTurnBasedMatch, MinPlayers) == 0x000020, "Member 'FindTurnBasedMatchCallbackProxy_FindTurnBasedMatch::MinPlayers' has a wrong offset!");
static_assert(offsetof(FindTurnBasedMatchCallbackProxy_FindTurnBasedMatch, MaxPlayers) == 0x000024, "Member 'FindTurnBasedMatchCallbackProxy_FindTurnBasedMatch::MaxPlayers' has a wrong offset!");
static_assert(offsetof(FindTurnBasedMatchCallbackProxy_FindTurnBasedMatch, PlayerGroup) == 0x000028, "Member 'FindTurnBasedMatchCallbackProxy_FindTurnBasedMatch::PlayerGroup' has a wrong offset!");
static_assert(offsetof(FindTurnBasedMatchCallbackProxy_FindTurnBasedMatch, ShowExistingMatches) == 0x00002C, "Member 'FindTurnBasedMatchCallbackProxy_FindTurnBasedMatch::ShowExistingMatches' has a wrong offset!");
static_assert(offsetof(FindTurnBasedMatchCallbackProxy_FindTurnBasedMatch, ReturnValue) == 0x000030, "Member 'FindTurnBasedMatchCallbackProxy_FindTurnBasedMatch::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemUtils.InAppPurchaseCallbackProxy.CreateProxyObjectForInAppPurchase
// 0x0028 (0x0028 - 0x0000)
struct InAppPurchaseCallbackProxy_CreateProxyObjectForInAppPurchase final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInAppPurchaseProductRequest           ProductRequest;                                    // 0x0008(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UInAppPurchaseCallbackProxy*            ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InAppPurchaseCallbackProxy_CreateProxyObjectForInAppPurchase) == 0x000008, "Wrong alignment on InAppPurchaseCallbackProxy_CreateProxyObjectForInAppPurchase");
static_assert(sizeof(InAppPurchaseCallbackProxy_CreateProxyObjectForInAppPurchase) == 0x000028, "Wrong size on InAppPurchaseCallbackProxy_CreateProxyObjectForInAppPurchase");
static_assert(offsetof(InAppPurchaseCallbackProxy_CreateProxyObjectForInAppPurchase, PlayerController) == 0x000000, "Member 'InAppPurchaseCallbackProxy_CreateProxyObjectForInAppPurchase::PlayerController' has a wrong offset!");
static_assert(offsetof(InAppPurchaseCallbackProxy_CreateProxyObjectForInAppPurchase, ProductRequest) == 0x000008, "Member 'InAppPurchaseCallbackProxy_CreateProxyObjectForInAppPurchase::ProductRequest' has a wrong offset!");
static_assert(offsetof(InAppPurchaseCallbackProxy_CreateProxyObjectForInAppPurchase, ReturnValue) == 0x000020, "Member 'InAppPurchaseCallbackProxy_CreateProxyObjectForInAppPurchase::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemUtils.InAppPurchaseCallbackProxy2.CreateProxyObjectForInAppPurchase
// 0x0028 (0x0028 - 0x0000)
struct InAppPurchaseCallbackProxy2_CreateProxyObjectForInAppPurchase final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInAppPurchaseProductRequest2          ProductRequest;                                    // 0x0008(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UInAppPurchaseCallbackProxy2*           ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InAppPurchaseCallbackProxy2_CreateProxyObjectForInAppPurchase) == 0x000008, "Wrong alignment on InAppPurchaseCallbackProxy2_CreateProxyObjectForInAppPurchase");
static_assert(sizeof(InAppPurchaseCallbackProxy2_CreateProxyObjectForInAppPurchase) == 0x000028, "Wrong size on InAppPurchaseCallbackProxy2_CreateProxyObjectForInAppPurchase");
static_assert(offsetof(InAppPurchaseCallbackProxy2_CreateProxyObjectForInAppPurchase, PlayerController) == 0x000000, "Member 'InAppPurchaseCallbackProxy2_CreateProxyObjectForInAppPurchase::PlayerController' has a wrong offset!");
static_assert(offsetof(InAppPurchaseCallbackProxy2_CreateProxyObjectForInAppPurchase, ProductRequest) == 0x000008, "Member 'InAppPurchaseCallbackProxy2_CreateProxyObjectForInAppPurchase::ProductRequest' has a wrong offset!");
static_assert(offsetof(InAppPurchaseCallbackProxy2_CreateProxyObjectForInAppPurchase, ReturnValue) == 0x000020, "Member 'InAppPurchaseCallbackProxy2_CreateProxyObjectForInAppPurchase::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemUtils.InAppPurchaseCallbackProxy2.CreateProxyObjectForInAppPurchaseQueryOwned
// 0x0010 (0x0010 - 0x0000)
struct InAppPurchaseCallbackProxy2_CreateProxyObjectForInAppPurchaseQueryOwned final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInAppPurchaseCallbackProxy2*           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InAppPurchaseCallbackProxy2_CreateProxyObjectForInAppPurchaseQueryOwned) == 0x000008, "Wrong alignment on InAppPurchaseCallbackProxy2_CreateProxyObjectForInAppPurchaseQueryOwned");
static_assert(sizeof(InAppPurchaseCallbackProxy2_CreateProxyObjectForInAppPurchaseQueryOwned) == 0x000010, "Wrong size on InAppPurchaseCallbackProxy2_CreateProxyObjectForInAppPurchaseQueryOwned");
static_assert(offsetof(InAppPurchaseCallbackProxy2_CreateProxyObjectForInAppPurchaseQueryOwned, PlayerController) == 0x000000, "Member 'InAppPurchaseCallbackProxy2_CreateProxyObjectForInAppPurchaseQueryOwned::PlayerController' has a wrong offset!");
static_assert(offsetof(InAppPurchaseCallbackProxy2_CreateProxyObjectForInAppPurchaseQueryOwned, ReturnValue) == 0x000008, "Member 'InAppPurchaseCallbackProxy2_CreateProxyObjectForInAppPurchaseQueryOwned::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemUtils.InAppPurchaseCallbackProxy2.CreateProxyObjectForInAppPurchaseUnprocessedPurchases
// 0x0010 (0x0010 - 0x0000)
struct InAppPurchaseCallbackProxy2_CreateProxyObjectForInAppPurchaseUnprocessedPurchases final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInAppPurchaseCallbackProxy2*           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InAppPurchaseCallbackProxy2_CreateProxyObjectForInAppPurchaseUnprocessedPurchases) == 0x000008, "Wrong alignment on InAppPurchaseCallbackProxy2_CreateProxyObjectForInAppPurchaseUnprocessedPurchases");
static_assert(sizeof(InAppPurchaseCallbackProxy2_CreateProxyObjectForInAppPurchaseUnprocessedPurchases) == 0x000010, "Wrong size on InAppPurchaseCallbackProxy2_CreateProxyObjectForInAppPurchaseUnprocessedPurchases");
static_assert(offsetof(InAppPurchaseCallbackProxy2_CreateProxyObjectForInAppPurchaseUnprocessedPurchases, PlayerController) == 0x000000, "Member 'InAppPurchaseCallbackProxy2_CreateProxyObjectForInAppPurchaseUnprocessedPurchases::PlayerController' has a wrong offset!");
static_assert(offsetof(InAppPurchaseCallbackProxy2_CreateProxyObjectForInAppPurchaseUnprocessedPurchases, ReturnValue) == 0x000008, "Member 'InAppPurchaseCallbackProxy2_CreateProxyObjectForInAppPurchaseUnprocessedPurchases::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemUtils.InAppPurchaseQueryCallbackProxy.CreateProxyObjectForInAppPurchaseQuery
// 0x0020 (0x0020 - 0x0000)
struct InAppPurchaseQueryCallbackProxy_CreateProxyObjectForInAppPurchaseQuery final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         ProductIdentifiers;                                // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class UInAppPurchaseQueryCallbackProxy*       ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InAppPurchaseQueryCallbackProxy_CreateProxyObjectForInAppPurchaseQuery) == 0x000008, "Wrong alignment on InAppPurchaseQueryCallbackProxy_CreateProxyObjectForInAppPurchaseQuery");
static_assert(sizeof(InAppPurchaseQueryCallbackProxy_CreateProxyObjectForInAppPurchaseQuery) == 0x000020, "Wrong size on InAppPurchaseQueryCallbackProxy_CreateProxyObjectForInAppPurchaseQuery");
static_assert(offsetof(InAppPurchaseQueryCallbackProxy_CreateProxyObjectForInAppPurchaseQuery, PlayerController) == 0x000000, "Member 'InAppPurchaseQueryCallbackProxy_CreateProxyObjectForInAppPurchaseQuery::PlayerController' has a wrong offset!");
static_assert(offsetof(InAppPurchaseQueryCallbackProxy_CreateProxyObjectForInAppPurchaseQuery, ProductIdentifiers) == 0x000008, "Member 'InAppPurchaseQueryCallbackProxy_CreateProxyObjectForInAppPurchaseQuery::ProductIdentifiers' has a wrong offset!");
static_assert(offsetof(InAppPurchaseQueryCallbackProxy_CreateProxyObjectForInAppPurchaseQuery, ReturnValue) == 0x000018, "Member 'InAppPurchaseQueryCallbackProxy_CreateProxyObjectForInAppPurchaseQuery::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemUtils.InAppPurchaseQueryCallbackProxy2.CreateProxyObjectForInAppPurchaseQuery
// 0x0020 (0x0020 - 0x0000)
struct InAppPurchaseQueryCallbackProxy2_CreateProxyObjectForInAppPurchaseQuery final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         ProductIdentifiers;                                // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class UInAppPurchaseQueryCallbackProxy2*      ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InAppPurchaseQueryCallbackProxy2_CreateProxyObjectForInAppPurchaseQuery) == 0x000008, "Wrong alignment on InAppPurchaseQueryCallbackProxy2_CreateProxyObjectForInAppPurchaseQuery");
static_assert(sizeof(InAppPurchaseQueryCallbackProxy2_CreateProxyObjectForInAppPurchaseQuery) == 0x000020, "Wrong size on InAppPurchaseQueryCallbackProxy2_CreateProxyObjectForInAppPurchaseQuery");
static_assert(offsetof(InAppPurchaseQueryCallbackProxy2_CreateProxyObjectForInAppPurchaseQuery, PlayerController) == 0x000000, "Member 'InAppPurchaseQueryCallbackProxy2_CreateProxyObjectForInAppPurchaseQuery::PlayerController' has a wrong offset!");
static_assert(offsetof(InAppPurchaseQueryCallbackProxy2_CreateProxyObjectForInAppPurchaseQuery, ProductIdentifiers) == 0x000008, "Member 'InAppPurchaseQueryCallbackProxy2_CreateProxyObjectForInAppPurchaseQuery::ProductIdentifiers' has a wrong offset!");
static_assert(offsetof(InAppPurchaseQueryCallbackProxy2_CreateProxyObjectForInAppPurchaseQuery, ReturnValue) == 0x000018, "Member 'InAppPurchaseQueryCallbackProxy2_CreateProxyObjectForInAppPurchaseQuery::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemUtils.InAppPurchaseRestoreCallbackProxy.CreateProxyObjectForInAppPurchaseRestore
// 0x0020 (0x0020 - 0x0000)
struct InAppPurchaseRestoreCallbackProxy_CreateProxyObjectForInAppPurchaseRestore final
{
public:
	TArray<struct FInAppPurchaseProductRequest>   ConsumableProductFlags;                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class APlayerController*                      PlayerController;                                  // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInAppPurchaseRestoreCallbackProxy*     ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InAppPurchaseRestoreCallbackProxy_CreateProxyObjectForInAppPurchaseRestore) == 0x000008, "Wrong alignment on InAppPurchaseRestoreCallbackProxy_CreateProxyObjectForInAppPurchaseRestore");
static_assert(sizeof(InAppPurchaseRestoreCallbackProxy_CreateProxyObjectForInAppPurchaseRestore) == 0x000020, "Wrong size on InAppPurchaseRestoreCallbackProxy_CreateProxyObjectForInAppPurchaseRestore");
static_assert(offsetof(InAppPurchaseRestoreCallbackProxy_CreateProxyObjectForInAppPurchaseRestore, ConsumableProductFlags) == 0x000000, "Member 'InAppPurchaseRestoreCallbackProxy_CreateProxyObjectForInAppPurchaseRestore::ConsumableProductFlags' has a wrong offset!");
static_assert(offsetof(InAppPurchaseRestoreCallbackProxy_CreateProxyObjectForInAppPurchaseRestore, PlayerController) == 0x000010, "Member 'InAppPurchaseRestoreCallbackProxy_CreateProxyObjectForInAppPurchaseRestore::PlayerController' has a wrong offset!");
static_assert(offsetof(InAppPurchaseRestoreCallbackProxy_CreateProxyObjectForInAppPurchaseRestore, ReturnValue) == 0x000018, "Member 'InAppPurchaseRestoreCallbackProxy_CreateProxyObjectForInAppPurchaseRestore::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemUtils.InAppPurchaseRestoreCallbackProxy2.CreateProxyObjectForInAppPurchaseRestore
// 0x0020 (0x0020 - 0x0000)
struct InAppPurchaseRestoreCallbackProxy2_CreateProxyObjectForInAppPurchaseRestore final
{
public:
	TArray<struct FInAppPurchaseProductRequest2>  ConsumableProductFlags;                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class APlayerController*                      PlayerController;                                  // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInAppPurchaseRestoreCallbackProxy2*    ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InAppPurchaseRestoreCallbackProxy2_CreateProxyObjectForInAppPurchaseRestore) == 0x000008, "Wrong alignment on InAppPurchaseRestoreCallbackProxy2_CreateProxyObjectForInAppPurchaseRestore");
static_assert(sizeof(InAppPurchaseRestoreCallbackProxy2_CreateProxyObjectForInAppPurchaseRestore) == 0x000020, "Wrong size on InAppPurchaseRestoreCallbackProxy2_CreateProxyObjectForInAppPurchaseRestore");
static_assert(offsetof(InAppPurchaseRestoreCallbackProxy2_CreateProxyObjectForInAppPurchaseRestore, ConsumableProductFlags) == 0x000000, "Member 'InAppPurchaseRestoreCallbackProxy2_CreateProxyObjectForInAppPurchaseRestore::ConsumableProductFlags' has a wrong offset!");
static_assert(offsetof(InAppPurchaseRestoreCallbackProxy2_CreateProxyObjectForInAppPurchaseRestore, PlayerController) == 0x000010, "Member 'InAppPurchaseRestoreCallbackProxy2_CreateProxyObjectForInAppPurchaseRestore::PlayerController' has a wrong offset!");
static_assert(offsetof(InAppPurchaseRestoreCallbackProxy2_CreateProxyObjectForInAppPurchaseRestore, ReturnValue) == 0x000018, "Member 'InAppPurchaseRestoreCallbackProxy2_CreateProxyObjectForInAppPurchaseRestore::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemUtils.JoinSessionCallbackProxy.JoinSession
// 0x0120 (0x0120 - 0x0000)
struct JoinSessionCallbackProxy_JoinSession final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBlueprintSessionResult                SearchResult;                                      // 0x0010(0x0108)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UJoinSessionCallbackProxy*              ReturnValue;                                       // 0x0118(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JoinSessionCallbackProxy_JoinSession) == 0x000008, "Wrong alignment on JoinSessionCallbackProxy_JoinSession");
static_assert(sizeof(JoinSessionCallbackProxy_JoinSession) == 0x000120, "Wrong size on JoinSessionCallbackProxy_JoinSession");
static_assert(offsetof(JoinSessionCallbackProxy_JoinSession, WorldContextObject) == 0x000000, "Member 'JoinSessionCallbackProxy_JoinSession::WorldContextObject' has a wrong offset!");
static_assert(offsetof(JoinSessionCallbackProxy_JoinSession, PlayerController) == 0x000008, "Member 'JoinSessionCallbackProxy_JoinSession::PlayerController' has a wrong offset!");
static_assert(offsetof(JoinSessionCallbackProxy_JoinSession, SearchResult) == 0x000010, "Member 'JoinSessionCallbackProxy_JoinSession::SearchResult' has a wrong offset!");
static_assert(offsetof(JoinSessionCallbackProxy_JoinSession, ReturnValue) == 0x000118, "Member 'JoinSessionCallbackProxy_JoinSession::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemUtils.LeaderboardBlueprintLibrary.WriteLeaderboardInteger
// 0x0018 (0x0018 - 0x0000)
struct LeaderboardBlueprintLibrary_WriteLeaderboardInteger final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   StatName;                                          // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StatValue;                                         // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LeaderboardBlueprintLibrary_WriteLeaderboardInteger) == 0x000008, "Wrong alignment on LeaderboardBlueprintLibrary_WriteLeaderboardInteger");
static_assert(sizeof(LeaderboardBlueprintLibrary_WriteLeaderboardInteger) == 0x000018, "Wrong size on LeaderboardBlueprintLibrary_WriteLeaderboardInteger");
static_assert(offsetof(LeaderboardBlueprintLibrary_WriteLeaderboardInteger, PlayerController) == 0x000000, "Member 'LeaderboardBlueprintLibrary_WriteLeaderboardInteger::PlayerController' has a wrong offset!");
static_assert(offsetof(LeaderboardBlueprintLibrary_WriteLeaderboardInteger, StatName) == 0x000008, "Member 'LeaderboardBlueprintLibrary_WriteLeaderboardInteger::StatName' has a wrong offset!");
static_assert(offsetof(LeaderboardBlueprintLibrary_WriteLeaderboardInteger, StatValue) == 0x000010, "Member 'LeaderboardBlueprintLibrary_WriteLeaderboardInteger::StatValue' has a wrong offset!");
static_assert(offsetof(LeaderboardBlueprintLibrary_WriteLeaderboardInteger, ReturnValue) == 0x000014, "Member 'LeaderboardBlueprintLibrary_WriteLeaderboardInteger::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemUtils.LeaderboardFlushCallbackProxy.CreateProxyObjectForFlush
// 0x0018 (0x0018 - 0x0000)
struct LeaderboardFlushCallbackProxy_CreateProxyObjectForFlush final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SessionName;                                       // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULeaderboardFlushCallbackProxy*         ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LeaderboardFlushCallbackProxy_CreateProxyObjectForFlush) == 0x000008, "Wrong alignment on LeaderboardFlushCallbackProxy_CreateProxyObjectForFlush");
static_assert(sizeof(LeaderboardFlushCallbackProxy_CreateProxyObjectForFlush) == 0x000018, "Wrong size on LeaderboardFlushCallbackProxy_CreateProxyObjectForFlush");
static_assert(offsetof(LeaderboardFlushCallbackProxy_CreateProxyObjectForFlush, PlayerController) == 0x000000, "Member 'LeaderboardFlushCallbackProxy_CreateProxyObjectForFlush::PlayerController' has a wrong offset!");
static_assert(offsetof(LeaderboardFlushCallbackProxy_CreateProxyObjectForFlush, SessionName) == 0x000008, "Member 'LeaderboardFlushCallbackProxy_CreateProxyObjectForFlush::SessionName' has a wrong offset!");
static_assert(offsetof(LeaderboardFlushCallbackProxy_CreateProxyObjectForFlush, ReturnValue) == 0x000010, "Member 'LeaderboardFlushCallbackProxy_CreateProxyObjectForFlush::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemUtils.LeaderboardQueryCallbackProxy.CreateProxyObjectForIntQuery
// 0x0018 (0x0018 - 0x0000)
struct LeaderboardQueryCallbackProxy_CreateProxyObjectForIntQuery final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   StatName;                                          // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULeaderboardQueryCallbackProxy*         ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LeaderboardQueryCallbackProxy_CreateProxyObjectForIntQuery) == 0x000008, "Wrong alignment on LeaderboardQueryCallbackProxy_CreateProxyObjectForIntQuery");
static_assert(sizeof(LeaderboardQueryCallbackProxy_CreateProxyObjectForIntQuery) == 0x000018, "Wrong size on LeaderboardQueryCallbackProxy_CreateProxyObjectForIntQuery");
static_assert(offsetof(LeaderboardQueryCallbackProxy_CreateProxyObjectForIntQuery, PlayerController) == 0x000000, "Member 'LeaderboardQueryCallbackProxy_CreateProxyObjectForIntQuery::PlayerController' has a wrong offset!");
static_assert(offsetof(LeaderboardQueryCallbackProxy_CreateProxyObjectForIntQuery, StatName) == 0x000008, "Member 'LeaderboardQueryCallbackProxy_CreateProxyObjectForIntQuery::StatName' has a wrong offset!");
static_assert(offsetof(LeaderboardQueryCallbackProxy_CreateProxyObjectForIntQuery, ReturnValue) == 0x000010, "Member 'LeaderboardQueryCallbackProxy_CreateProxyObjectForIntQuery::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemUtils.LogoutCallbackProxy.Logout
// 0x0018 (0x0018 - 0x0000)
struct LogoutCallbackProxy_Logout final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULogoutCallbackProxy*                   ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LogoutCallbackProxy_Logout) == 0x000008, "Wrong alignment on LogoutCallbackProxy_Logout");
static_assert(sizeof(LogoutCallbackProxy_Logout) == 0x000018, "Wrong size on LogoutCallbackProxy_Logout");
static_assert(offsetof(LogoutCallbackProxy_Logout, WorldContextObject) == 0x000000, "Member 'LogoutCallbackProxy_Logout::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LogoutCallbackProxy_Logout, PlayerController) == 0x000008, "Member 'LogoutCallbackProxy_Logout::PlayerController' has a wrong offset!");
static_assert(offsetof(LogoutCallbackProxy_Logout, ReturnValue) == 0x000010, "Member 'LogoutCallbackProxy_Logout::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemUtils.PartyBeaconClient.ClientCancelReservationResponse
// 0x0001 (0x0001 - 0x0000)
struct PartyBeaconClient_ClientCancelReservationResponse final
{
public:
	EPartyReservationResult                       ReservationResponse;                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PartyBeaconClient_ClientCancelReservationResponse) == 0x000001, "Wrong alignment on PartyBeaconClient_ClientCancelReservationResponse");
static_assert(sizeof(PartyBeaconClient_ClientCancelReservationResponse) == 0x000001, "Wrong size on PartyBeaconClient_ClientCancelReservationResponse");
static_assert(offsetof(PartyBeaconClient_ClientCancelReservationResponse, ReservationResponse) == 0x000000, "Member 'PartyBeaconClient_ClientCancelReservationResponse::ReservationResponse' has a wrong offset!");

// Function OnlineSubsystemUtils.PartyBeaconClient.ClientReservationResponse
// 0x0001 (0x0001 - 0x0000)
struct PartyBeaconClient_ClientReservationResponse final
{
public:
	EPartyReservationResult                       ReservationResponse;                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PartyBeaconClient_ClientReservationResponse) == 0x000001, "Wrong alignment on PartyBeaconClient_ClientReservationResponse");
static_assert(sizeof(PartyBeaconClient_ClientReservationResponse) == 0x000001, "Wrong size on PartyBeaconClient_ClientReservationResponse");
static_assert(offsetof(PartyBeaconClient_ClientReservationResponse, ReservationResponse) == 0x000000, "Member 'PartyBeaconClient_ClientReservationResponse::ReservationResponse' has a wrong offset!");

// Function OnlineSubsystemUtils.PartyBeaconClient.ClientSendReservationUpdates
// 0x0004 (0x0004 - 0x0000)
struct PartyBeaconClient_ClientSendReservationUpdates final
{
public:
	int32                                         NumRemainingReservations;                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PartyBeaconClient_ClientSendReservationUpdates) == 0x000004, "Wrong alignment on PartyBeaconClient_ClientSendReservationUpdates");
static_assert(sizeof(PartyBeaconClient_ClientSendReservationUpdates) == 0x000004, "Wrong size on PartyBeaconClient_ClientSendReservationUpdates");
static_assert(offsetof(PartyBeaconClient_ClientSendReservationUpdates, NumRemainingReservations) == 0x000000, "Member 'PartyBeaconClient_ClientSendReservationUpdates::NumRemainingReservations' has a wrong offset!");

// Function OnlineSubsystemUtils.PartyBeaconClient.ServerAddOrUpdateReservationRequest
// 0x0060 (0x0060 - 0x0000)
struct PartyBeaconClient_ServerAddOrUpdateReservationRequest final
{
public:
	class FString                                 SessionId;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPartyReservation                      Reservation;                                       // 0x0010(0x0050)(ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PartyBeaconClient_ServerAddOrUpdateReservationRequest) == 0x000008, "Wrong alignment on PartyBeaconClient_ServerAddOrUpdateReservationRequest");
static_assert(sizeof(PartyBeaconClient_ServerAddOrUpdateReservationRequest) == 0x000060, "Wrong size on PartyBeaconClient_ServerAddOrUpdateReservationRequest");
static_assert(offsetof(PartyBeaconClient_ServerAddOrUpdateReservationRequest, SessionId) == 0x000000, "Member 'PartyBeaconClient_ServerAddOrUpdateReservationRequest::SessionId' has a wrong offset!");
static_assert(offsetof(PartyBeaconClient_ServerAddOrUpdateReservationRequest, Reservation) == 0x000010, "Member 'PartyBeaconClient_ServerAddOrUpdateReservationRequest::Reservation' has a wrong offset!");

// Function OnlineSubsystemUtils.PartyBeaconClient.ServerCancelReservationRequest
// 0x0028 (0x0028 - 0x0000)
struct PartyBeaconClient_ServerCancelReservationRequest final
{
public:
	struct FUniqueNetIdRepl                       PartyLeader;                                       // 0x0000(0x0028)(ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PartyBeaconClient_ServerCancelReservationRequest) == 0x000008, "Wrong alignment on PartyBeaconClient_ServerCancelReservationRequest");
static_assert(sizeof(PartyBeaconClient_ServerCancelReservationRequest) == 0x000028, "Wrong size on PartyBeaconClient_ServerCancelReservationRequest");
static_assert(offsetof(PartyBeaconClient_ServerCancelReservationRequest, PartyLeader) == 0x000000, "Member 'PartyBeaconClient_ServerCancelReservationRequest::PartyLeader' has a wrong offset!");

// Function OnlineSubsystemUtils.PartyBeaconClient.ServerRemoveMemberFromReservationRequest
// 0x0060 (0x0060 - 0x0000)
struct PartyBeaconClient_ServerRemoveMemberFromReservationRequest final
{
public:
	class FString                                 SessionId;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPartyReservation                      ReservationUpdate;                                 // 0x0010(0x0050)(ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PartyBeaconClient_ServerRemoveMemberFromReservationRequest) == 0x000008, "Wrong alignment on PartyBeaconClient_ServerRemoveMemberFromReservationRequest");
static_assert(sizeof(PartyBeaconClient_ServerRemoveMemberFromReservationRequest) == 0x000060, "Wrong size on PartyBeaconClient_ServerRemoveMemberFromReservationRequest");
static_assert(offsetof(PartyBeaconClient_ServerRemoveMemberFromReservationRequest, SessionId) == 0x000000, "Member 'PartyBeaconClient_ServerRemoveMemberFromReservationRequest::SessionId' has a wrong offset!");
static_assert(offsetof(PartyBeaconClient_ServerRemoveMemberFromReservationRequest, ReservationUpdate) == 0x000010, "Member 'PartyBeaconClient_ServerRemoveMemberFromReservationRequest::ReservationUpdate' has a wrong offset!");

// Function OnlineSubsystemUtils.PartyBeaconClient.ServerReservationRequest
// 0x0060 (0x0060 - 0x0000)
struct PartyBeaconClient_ServerReservationRequest final
{
public:
	class FString                                 SessionId;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPartyReservation                      Reservation;                                       // 0x0010(0x0050)(ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PartyBeaconClient_ServerReservationRequest) == 0x000008, "Wrong alignment on PartyBeaconClient_ServerReservationRequest");
static_assert(sizeof(PartyBeaconClient_ServerReservationRequest) == 0x000060, "Wrong size on PartyBeaconClient_ServerReservationRequest");
static_assert(offsetof(PartyBeaconClient_ServerReservationRequest, SessionId) == 0x000000, "Member 'PartyBeaconClient_ServerReservationRequest::SessionId' has a wrong offset!");
static_assert(offsetof(PartyBeaconClient_ServerReservationRequest, Reservation) == 0x000010, "Member 'PartyBeaconClient_ServerReservationRequest::Reservation' has a wrong offset!");

// Function OnlineSubsystemUtils.PartyBeaconClient.ServerUpdateReservationRequest
// 0x0060 (0x0060 - 0x0000)
struct PartyBeaconClient_ServerUpdateReservationRequest final
{
public:
	class FString                                 SessionId;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPartyReservation                      ReservationUpdate;                                 // 0x0010(0x0050)(ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PartyBeaconClient_ServerUpdateReservationRequest) == 0x000008, "Wrong alignment on PartyBeaconClient_ServerUpdateReservationRequest");
static_assert(sizeof(PartyBeaconClient_ServerUpdateReservationRequest) == 0x000060, "Wrong size on PartyBeaconClient_ServerUpdateReservationRequest");
static_assert(offsetof(PartyBeaconClient_ServerUpdateReservationRequest, SessionId) == 0x000000, "Member 'PartyBeaconClient_ServerUpdateReservationRequest::SessionId' has a wrong offset!");
static_assert(offsetof(PartyBeaconClient_ServerUpdateReservationRequest, ReservationUpdate) == 0x000010, "Member 'PartyBeaconClient_ServerUpdateReservationRequest::ReservationUpdate' has a wrong offset!");

// Function OnlineSubsystemUtils.QuitMatchCallbackProxy.QuitMatch
// 0x0030 (0x0030 - 0x0000)
struct QuitMatchCallbackProxy_QuitMatch final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MatchID;                                           // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMPMatchOutcome                               Outcome;                                           // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TurnTimeoutInSeconds;                              // 0x0024(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UQuitMatchCallbackProxy*                ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuitMatchCallbackProxy_QuitMatch) == 0x000008, "Wrong alignment on QuitMatchCallbackProxy_QuitMatch");
static_assert(sizeof(QuitMatchCallbackProxy_QuitMatch) == 0x000030, "Wrong size on QuitMatchCallbackProxy_QuitMatch");
static_assert(offsetof(QuitMatchCallbackProxy_QuitMatch, WorldContextObject) == 0x000000, "Member 'QuitMatchCallbackProxy_QuitMatch::WorldContextObject' has a wrong offset!");
static_assert(offsetof(QuitMatchCallbackProxy_QuitMatch, PlayerController) == 0x000008, "Member 'QuitMatchCallbackProxy_QuitMatch::PlayerController' has a wrong offset!");
static_assert(offsetof(QuitMatchCallbackProxy_QuitMatch, MatchID) == 0x000010, "Member 'QuitMatchCallbackProxy_QuitMatch::MatchID' has a wrong offset!");
static_assert(offsetof(QuitMatchCallbackProxy_QuitMatch, Outcome) == 0x000020, "Member 'QuitMatchCallbackProxy_QuitMatch::Outcome' has a wrong offset!");
static_assert(offsetof(QuitMatchCallbackProxy_QuitMatch, TurnTimeoutInSeconds) == 0x000024, "Member 'QuitMatchCallbackProxy_QuitMatch::TurnTimeoutInSeconds' has a wrong offset!");
static_assert(offsetof(QuitMatchCallbackProxy_QuitMatch, ReturnValue) == 0x000028, "Member 'QuitMatchCallbackProxy_QuitMatch::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemUtils.ShowLoginUICallbackProxy.ShowExternalLoginUI
// 0x0018 (0x0018 - 0x0000)
struct ShowLoginUICallbackProxy_ShowExternalLoginUI final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                      InPlayerController;                                // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UShowLoginUICallbackProxy*              ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ShowLoginUICallbackProxy_ShowExternalLoginUI) == 0x000008, "Wrong alignment on ShowLoginUICallbackProxy_ShowExternalLoginUI");
static_assert(sizeof(ShowLoginUICallbackProxy_ShowExternalLoginUI) == 0x000018, "Wrong size on ShowLoginUICallbackProxy_ShowExternalLoginUI");
static_assert(offsetof(ShowLoginUICallbackProxy_ShowExternalLoginUI, WorldContextObject) == 0x000000, "Member 'ShowLoginUICallbackProxy_ShowExternalLoginUI::WorldContextObject' has a wrong offset!");
static_assert(offsetof(ShowLoginUICallbackProxy_ShowExternalLoginUI, InPlayerController) == 0x000008, "Member 'ShowLoginUICallbackProxy_ShowExternalLoginUI::InPlayerController' has a wrong offset!");
static_assert(offsetof(ShowLoginUICallbackProxy_ShowExternalLoginUI, ReturnValue) == 0x000010, "Member 'ShowLoginUICallbackProxy_ShowExternalLoginUI::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemUtils.SpectatorBeaconClient.ClientCancelReservationResponse
// 0x0001 (0x0001 - 0x0000)
struct SpectatorBeaconClient_ClientCancelReservationResponse final
{
public:
	ESpectatorReservationResult                   ReservationResponse;                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpectatorBeaconClient_ClientCancelReservationResponse) == 0x000001, "Wrong alignment on SpectatorBeaconClient_ClientCancelReservationResponse");
static_assert(sizeof(SpectatorBeaconClient_ClientCancelReservationResponse) == 0x000001, "Wrong size on SpectatorBeaconClient_ClientCancelReservationResponse");
static_assert(offsetof(SpectatorBeaconClient_ClientCancelReservationResponse, ReservationResponse) == 0x000000, "Member 'SpectatorBeaconClient_ClientCancelReservationResponse::ReservationResponse' has a wrong offset!");

// Function OnlineSubsystemUtils.SpectatorBeaconClient.ClientReservationResponse
// 0x0001 (0x0001 - 0x0000)
struct SpectatorBeaconClient_ClientReservationResponse final
{
public:
	ESpectatorReservationResult                   ReservationResponse;                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpectatorBeaconClient_ClientReservationResponse) == 0x000001, "Wrong alignment on SpectatorBeaconClient_ClientReservationResponse");
static_assert(sizeof(SpectatorBeaconClient_ClientReservationResponse) == 0x000001, "Wrong size on SpectatorBeaconClient_ClientReservationResponse");
static_assert(offsetof(SpectatorBeaconClient_ClientReservationResponse, ReservationResponse) == 0x000000, "Member 'SpectatorBeaconClient_ClientReservationResponse::ReservationResponse' has a wrong offset!");

// Function OnlineSubsystemUtils.SpectatorBeaconClient.ClientSendReservationUpdates
// 0x0004 (0x0004 - 0x0000)
struct SpectatorBeaconClient_ClientSendReservationUpdates final
{
public:
	int32                                         NumRemainingReservations;                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpectatorBeaconClient_ClientSendReservationUpdates) == 0x000004, "Wrong alignment on SpectatorBeaconClient_ClientSendReservationUpdates");
static_assert(sizeof(SpectatorBeaconClient_ClientSendReservationUpdates) == 0x000004, "Wrong size on SpectatorBeaconClient_ClientSendReservationUpdates");
static_assert(offsetof(SpectatorBeaconClient_ClientSendReservationUpdates, NumRemainingReservations) == 0x000000, "Member 'SpectatorBeaconClient_ClientSendReservationUpdates::NumRemainingReservations' has a wrong offset!");

// Function OnlineSubsystemUtils.SpectatorBeaconClient.ServerCancelReservationRequest
// 0x0028 (0x0028 - 0x0000)
struct SpectatorBeaconClient_ServerCancelReservationRequest final
{
public:
	struct FUniqueNetIdRepl                       Spectator;                                         // 0x0000(0x0028)(ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpectatorBeaconClient_ServerCancelReservationRequest) == 0x000008, "Wrong alignment on SpectatorBeaconClient_ServerCancelReservationRequest");
static_assert(sizeof(SpectatorBeaconClient_ServerCancelReservationRequest) == 0x000028, "Wrong size on SpectatorBeaconClient_ServerCancelReservationRequest");
static_assert(offsetof(SpectatorBeaconClient_ServerCancelReservationRequest, Spectator) == 0x000000, "Member 'SpectatorBeaconClient_ServerCancelReservationRequest::Spectator' has a wrong offset!");

// Function OnlineSubsystemUtils.SpectatorBeaconClient.ServerReservationRequest
// 0x0088 (0x0088 - 0x0000)
struct SpectatorBeaconClient_ServerReservationRequest final
{
public:
	class FString                                 SessionId;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSpectatorReservation                  Reservation;                                       // 0x0010(0x0078)(ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpectatorBeaconClient_ServerReservationRequest) == 0x000008, "Wrong alignment on SpectatorBeaconClient_ServerReservationRequest");
static_assert(sizeof(SpectatorBeaconClient_ServerReservationRequest) == 0x000088, "Wrong size on SpectatorBeaconClient_ServerReservationRequest");
static_assert(offsetof(SpectatorBeaconClient_ServerReservationRequest, SessionId) == 0x000000, "Member 'SpectatorBeaconClient_ServerReservationRequest::SessionId' has a wrong offset!");
static_assert(offsetof(SpectatorBeaconClient_ServerReservationRequest, Reservation) == 0x000010, "Member 'SpectatorBeaconClient_ServerReservationRequest::Reservation' has a wrong offset!");

// Function OnlineSubsystemUtils.TurnBasedBlueprintLibrary.GetIsMyTurn
// 0x0028 (0x0028 - 0x0000)
struct TurnBasedBlueprintLibrary_GetIsMyTurn final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MatchID;                                           // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsMyTurn;                                         // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TurnBasedBlueprintLibrary_GetIsMyTurn) == 0x000008, "Wrong alignment on TurnBasedBlueprintLibrary_GetIsMyTurn");
static_assert(sizeof(TurnBasedBlueprintLibrary_GetIsMyTurn) == 0x000028, "Wrong size on TurnBasedBlueprintLibrary_GetIsMyTurn");
static_assert(offsetof(TurnBasedBlueprintLibrary_GetIsMyTurn, WorldContextObject) == 0x000000, "Member 'TurnBasedBlueprintLibrary_GetIsMyTurn::WorldContextObject' has a wrong offset!");
static_assert(offsetof(TurnBasedBlueprintLibrary_GetIsMyTurn, PlayerController) == 0x000008, "Member 'TurnBasedBlueprintLibrary_GetIsMyTurn::PlayerController' has a wrong offset!");
static_assert(offsetof(TurnBasedBlueprintLibrary_GetIsMyTurn, MatchID) == 0x000010, "Member 'TurnBasedBlueprintLibrary_GetIsMyTurn::MatchID' has a wrong offset!");
static_assert(offsetof(TurnBasedBlueprintLibrary_GetIsMyTurn, bIsMyTurn) == 0x000020, "Member 'TurnBasedBlueprintLibrary_GetIsMyTurn::bIsMyTurn' has a wrong offset!");

// Function OnlineSubsystemUtils.TurnBasedBlueprintLibrary.GetMyPlayerIndex
// 0x0028 (0x0028 - 0x0000)
struct TurnBasedBlueprintLibrary_GetMyPlayerIndex final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MatchID;                                           // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PlayerIndex;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TurnBasedBlueprintLibrary_GetMyPlayerIndex) == 0x000008, "Wrong alignment on TurnBasedBlueprintLibrary_GetMyPlayerIndex");
static_assert(sizeof(TurnBasedBlueprintLibrary_GetMyPlayerIndex) == 0x000028, "Wrong size on TurnBasedBlueprintLibrary_GetMyPlayerIndex");
static_assert(offsetof(TurnBasedBlueprintLibrary_GetMyPlayerIndex, WorldContextObject) == 0x000000, "Member 'TurnBasedBlueprintLibrary_GetMyPlayerIndex::WorldContextObject' has a wrong offset!");
static_assert(offsetof(TurnBasedBlueprintLibrary_GetMyPlayerIndex, PlayerController) == 0x000008, "Member 'TurnBasedBlueprintLibrary_GetMyPlayerIndex::PlayerController' has a wrong offset!");
static_assert(offsetof(TurnBasedBlueprintLibrary_GetMyPlayerIndex, MatchID) == 0x000010, "Member 'TurnBasedBlueprintLibrary_GetMyPlayerIndex::MatchID' has a wrong offset!");
static_assert(offsetof(TurnBasedBlueprintLibrary_GetMyPlayerIndex, PlayerIndex) == 0x000020, "Member 'TurnBasedBlueprintLibrary_GetMyPlayerIndex::PlayerIndex' has a wrong offset!");

// Function OnlineSubsystemUtils.TurnBasedBlueprintLibrary.GetPlayerDisplayName
// 0x0038 (0x0038 - 0x0000)
struct TurnBasedBlueprintLibrary_GetPlayerDisplayName final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MatchID;                                           // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PlayerIndex;                                       // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PlayerDisplayName;                                 // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TurnBasedBlueprintLibrary_GetPlayerDisplayName) == 0x000008, "Wrong alignment on TurnBasedBlueprintLibrary_GetPlayerDisplayName");
static_assert(sizeof(TurnBasedBlueprintLibrary_GetPlayerDisplayName) == 0x000038, "Wrong size on TurnBasedBlueprintLibrary_GetPlayerDisplayName");
static_assert(offsetof(TurnBasedBlueprintLibrary_GetPlayerDisplayName, WorldContextObject) == 0x000000, "Member 'TurnBasedBlueprintLibrary_GetPlayerDisplayName::WorldContextObject' has a wrong offset!");
static_assert(offsetof(TurnBasedBlueprintLibrary_GetPlayerDisplayName, PlayerController) == 0x000008, "Member 'TurnBasedBlueprintLibrary_GetPlayerDisplayName::PlayerController' has a wrong offset!");
static_assert(offsetof(TurnBasedBlueprintLibrary_GetPlayerDisplayName, MatchID) == 0x000010, "Member 'TurnBasedBlueprintLibrary_GetPlayerDisplayName::MatchID' has a wrong offset!");
static_assert(offsetof(TurnBasedBlueprintLibrary_GetPlayerDisplayName, PlayerIndex) == 0x000020, "Member 'TurnBasedBlueprintLibrary_GetPlayerDisplayName::PlayerIndex' has a wrong offset!");
static_assert(offsetof(TurnBasedBlueprintLibrary_GetPlayerDisplayName, PlayerDisplayName) == 0x000028, "Member 'TurnBasedBlueprintLibrary_GetPlayerDisplayName::PlayerDisplayName' has a wrong offset!");

// Function OnlineSubsystemUtils.TurnBasedBlueprintLibrary.RegisterTurnBasedMatchInterfaceObject
// 0x0018 (0x0018 - 0x0000)
struct TurnBasedBlueprintLibrary_RegisterTurnBasedMatchInterfaceObject final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                Object;                                            // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TurnBasedBlueprintLibrary_RegisterTurnBasedMatchInterfaceObject) == 0x000008, "Wrong alignment on TurnBasedBlueprintLibrary_RegisterTurnBasedMatchInterfaceObject");
static_assert(sizeof(TurnBasedBlueprintLibrary_RegisterTurnBasedMatchInterfaceObject) == 0x000018, "Wrong size on TurnBasedBlueprintLibrary_RegisterTurnBasedMatchInterfaceObject");
static_assert(offsetof(TurnBasedBlueprintLibrary_RegisterTurnBasedMatchInterfaceObject, WorldContextObject) == 0x000000, "Member 'TurnBasedBlueprintLibrary_RegisterTurnBasedMatchInterfaceObject::WorldContextObject' has a wrong offset!");
static_assert(offsetof(TurnBasedBlueprintLibrary_RegisterTurnBasedMatchInterfaceObject, PlayerController) == 0x000008, "Member 'TurnBasedBlueprintLibrary_RegisterTurnBasedMatchInterfaceObject::PlayerController' has a wrong offset!");
static_assert(offsetof(TurnBasedBlueprintLibrary_RegisterTurnBasedMatchInterfaceObject, Object) == 0x000010, "Member 'TurnBasedBlueprintLibrary_RegisterTurnBasedMatchInterfaceObject::Object' has a wrong offset!");

// Function OnlineSubsystemUtils.VoipListenerSynthComponent.IsIdling
// 0x0001 (0x0001 - 0x0000)
struct VoipListenerSynthComponent_IsIdling final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VoipListenerSynthComponent_IsIdling) == 0x000001, "Wrong alignment on VoipListenerSynthComponent_IsIdling");
static_assert(sizeof(VoipListenerSynthComponent_IsIdling) == 0x000001, "Wrong size on VoipListenerSynthComponent_IsIdling");
static_assert(offsetof(VoipListenerSynthComponent_IsIdling, ReturnValue) == 0x000000, "Member 'VoipListenerSynthComponent_IsIdling::ReturnValue' has a wrong offset!");

}

