#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtlCalc

#include "Basic.hpp"

#include "FBtlCalcParam_structs.hpp"
#include "FBtlCalcRatio_structs.hpp"
#include "Xrd777_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_BtlCalc.BP_BtlCalc_C.CalcMagicDamage
// 0x00E4 (0x00E4 - 0x0000)
struct BP_BtlCalc_C_CalcMagicDamage final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         N;                                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         C;                                                 // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         B;                                                 // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         A;                                                 // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckAttackerIsEnemy_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetParam_ReturnValue_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_2;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_3;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_4;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_5;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_6;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_7;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_8;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_9;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetParam_ReturnValue_10;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_11;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sqrt_ReturnValue;                         // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_9;        // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_10;       // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_11;       // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_3;             // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_12;                  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_5;          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_12;       // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sqrt_ReturnValue_1;                       // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_13;       // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_14;       // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_15;       // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_CalcMagicDamage) == 0x000004, "Wrong alignment on BP_BtlCalc_C_CalcMagicDamage");
static_assert(sizeof(BP_BtlCalc_C_CalcMagicDamage) == 0x0000E4, "Wrong size on BP_BtlCalc_C_CalcMagicDamage");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, ReturnValue) == 0x000000, "Member 'BP_BtlCalc_C_CalcMagicDamage::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, N) == 0x000004, "Member 'BP_BtlCalc_C_CalcMagicDamage::N' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, C) == 0x000008, "Member 'BP_BtlCalc_C_CalcMagicDamage::C' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, B) == 0x00000C, "Member 'BP_BtlCalc_C_CalcMagicDamage::B' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, A) == 0x000010, "Member 'BP_BtlCalc_C_CalcMagicDamage::A' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_GetParam_ReturnValue) == 0x000014, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_GetParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_CheckAttackerIsEnemy_ReturnValue) == 0x000018, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_CheckAttackerIsEnemy_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_GetParam_ReturnValue_1) == 0x00001C, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_GetParam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_GetParam_ReturnValue_2) == 0x000028, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_GetParam_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_GetParam_ReturnValue_3) == 0x00002C, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_GetParam_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_GetParam_ReturnValue_4) == 0x000030, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_GetParam_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000034, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_GetParam_ReturnValue_5) == 0x000038, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_GetParam_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_GetParam_ReturnValue_6) == 0x00003C, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_GetParam_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_GetParam_ReturnValue_7) == 0x000040, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_GetParam_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000048, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_MakeLiteralByte_ReturnValue) == 0x00004C, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000050, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000054, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_GetParam_ReturnValue_8) == 0x000058, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_GetParam_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x00005C, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000060, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_Add_FloatFloat_ReturnValue) == 0x000064, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000068, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x00006C, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_GetParam_ReturnValue_9) == 0x000070, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_GetParam_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000074, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x000078, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x00007C, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000080, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000084, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_GetParam_ReturnValue_10) == 0x000088, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_GetParam_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x00008C, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x000090, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x000094, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_GetParam_ReturnValue_11) == 0x000098, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_GetParam_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_Sqrt_ReturnValue) == 0x00009C, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_Sqrt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000A0, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x0000A4, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_Multiply_FloatFloat_ReturnValue_9) == 0x0000A8, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_Multiply_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_Multiply_FloatFloat_ReturnValue_10) == 0x0000AC, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_Multiply_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_Multiply_FloatFloat_ReturnValue_11) == 0x0000B0, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_Multiply_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0000B4, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x0000B8, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x0000BC, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_Conv_ByteToInt_ReturnValue_3) == 0x0000C0, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_Conv_ByteToInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_GetParam_ReturnValue_12) == 0x0000C4, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_GetParam_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_Divide_FloatFloat_ReturnValue_5) == 0x0000C8, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_Divide_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_Multiply_FloatFloat_ReturnValue_12) == 0x0000CC, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_Multiply_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_Sqrt_ReturnValue_1) == 0x0000D0, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_Sqrt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_Multiply_FloatFloat_ReturnValue_13) == 0x0000D4, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_Multiply_FloatFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_Multiply_FloatFloat_ReturnValue_14) == 0x0000D8, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_Multiply_FloatFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x0000DC, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcMagicDamage, CallFunc_Multiply_FloatFloat_ReturnValue_15) == 0x0000E0, "Member 'BP_BtlCalc_C_CalcMagicDamage::CallFunc_Multiply_FloatFloat_ReturnValue_15' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.CalcPhysicalDamage
// 0x0190 (0x0190 - 0x0000)
struct BP_BtlCalc_C_CalcPhysicalDamage final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         C;                                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         B;                                                 // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         A;                                                 // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         N;                                                 // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_2;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckAttackerIsEnemy_ReturnValue;         // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetParam_ReturnValue_3;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckSkillIsAttack_ReturnValue;           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetParam_ReturnValue_4;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_5;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_6;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_7;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_8;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_9;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckAttackerIsEnemy_ReturnValue_1;       // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E[0x2];                                       // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_10;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_11;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sqrt_ReturnValue;                         // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_12;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_5;          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_9;        // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_10;       // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sqrt_ReturnValue_1;                       // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_11;       // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_12;       // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_13;       // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_14;       // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_6;          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetParam_ReturnValue_13;                  // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_7;          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_14;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_8;          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_9;          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_15;       // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sqrt_ReturnValue_2;                       // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_16;       // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_17;       // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_18;       // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_15;                  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_19;       // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_20;       // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_16;                  // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_21;       // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_10;         // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_22;       // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_4;            // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_3;             // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_17;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_4;             // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_23;       // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_18;                  // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_24;       // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_5;            // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_25;       // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_5;             // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_19;                  // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_11;         // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_6;            // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_26;       // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sqrt_ReturnValue_3;                       // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_6;             // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_27;       // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_20;                  // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_28;       // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_29;       // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_30;       // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_7;            // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_31;       // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_12;         // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_7;             // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_21;                  // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_32;       // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_33;       // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_CalcPhysicalDamage) == 0x000004, "Wrong alignment on BP_BtlCalc_C_CalcPhysicalDamage");
static_assert(sizeof(BP_BtlCalc_C_CalcPhysicalDamage) == 0x000190, "Wrong size on BP_BtlCalc_C_CalcPhysicalDamage");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, ReturnValue) == 0x000000, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, C) == 0x000004, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::C' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, B) == 0x000008, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::B' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, A) == 0x00000C, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::A' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, N) == 0x000010, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::N' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_GetParam_ReturnValue) == 0x000014, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_GetParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_GetParam_ReturnValue_1) == 0x000018, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_GetParam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_GetParam_ReturnValue_2) == 0x00001C, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_GetParam_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_CheckAttackerIsEnemy_ReturnValue) == 0x000024, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_CheckAttackerIsEnemy_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Not_PreBool_ReturnValue) == 0x00002C, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_GetParam_ReturnValue_3) == 0x000030, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_GetParam_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_CheckSkillIsAttack_ReturnValue) == 0x000034, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_CheckSkillIsAttack_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_GetParam_ReturnValue_4) == 0x000038, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_GetParam_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_GetParam_ReturnValue_5) == 0x00003C, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_GetParam_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000040, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000044, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000048, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_GetParam_ReturnValue_6) == 0x00004C, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_GetParam_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_GetParam_ReturnValue_7) == 0x000050, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_GetParam_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_GetParam_ReturnValue_8) == 0x000054, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_GetParam_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_GetParam_ReturnValue_9) == 0x000058, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_GetParam_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x00005C, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000060, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_CheckAttackerIsEnemy_ReturnValue_1) == 0x000064, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_CheckAttackerIsEnemy_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000068, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Not_PreBool_ReturnValue_1) == 0x00006C, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_MakeLiteralByte_ReturnValue) == 0x00006D, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x000070, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000074, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_GetParam_ReturnValue_10) == 0x000078, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_GetParam_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_GetParam_ReturnValue_11) == 0x00007C, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_GetParam_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x000080, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x000084, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000088, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x00008C, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000090, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Sqrt_ReturnValue) == 0x000094, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Sqrt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_GetParam_ReturnValue_12) == 0x000098, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_GetParam_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x00009C, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Divide_FloatFloat_ReturnValue_5) == 0x0000A0, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Divide_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x0000A4, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Multiply_FloatFloat_ReturnValue_9) == 0x0000A8, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Multiply_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Multiply_FloatFloat_ReturnValue_10) == 0x0000AC, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Multiply_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Sqrt_ReturnValue_1) == 0x0000B0, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Sqrt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Multiply_FloatFloat_ReturnValue_11) == 0x0000B4, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Multiply_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Multiply_FloatFloat_ReturnValue_12) == 0x0000B8, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Multiply_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Multiply_FloatFloat_ReturnValue_13) == 0x0000BC, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Multiply_FloatFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Multiply_FloatFloat_ReturnValue_14) == 0x0000C0, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Multiply_FloatFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Divide_FloatFloat_ReturnValue_6) == 0x0000C4, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Divide_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x0000C8, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_GetParam_ReturnValue_13) == 0x0000CC, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_GetParam_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Divide_FloatFloat_ReturnValue_7) == 0x0000D0, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Divide_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x0000D4, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_GetParam_ReturnValue_14) == 0x0000D8, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_GetParam_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Divide_FloatFloat_ReturnValue_8) == 0x0000DC, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Divide_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Divide_FloatFloat_ReturnValue_9) == 0x0000E0, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Divide_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Multiply_FloatFloat_ReturnValue_15) == 0x0000E4, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Multiply_FloatFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Sqrt_ReturnValue_2) == 0x0000E8, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Sqrt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Multiply_FloatFloat_ReturnValue_16) == 0x0000EC, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Multiply_FloatFloat_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Multiply_FloatFloat_ReturnValue_17) == 0x0000F0, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Multiply_FloatFloat_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Multiply_FloatFloat_ReturnValue_18) == 0x0000F4, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Multiply_FloatFloat_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_GetParam_ReturnValue_15) == 0x0000F8, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_GetParam_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Multiply_FloatFloat_ReturnValue_19) == 0x0000FC, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Multiply_FloatFloat_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Multiply_FloatFloat_ReturnValue_20) == 0x000100, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Multiply_FloatFloat_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_GetParam_ReturnValue_16) == 0x000104, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_GetParam_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Multiply_FloatFloat_ReturnValue_21) == 0x000108, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Multiply_FloatFloat_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00010C, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Divide_FloatFloat_ReturnValue_10) == 0x000110, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Divide_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Multiply_FloatFloat_ReturnValue_22) == 0x000114, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Multiply_FloatFloat_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x000118, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_MakeLiteralByte_ReturnValue_4) == 0x000119, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_MakeLiteralByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Conv_ByteToInt_ReturnValue_3) == 0x00011C, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Conv_ByteToInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_GetParam_ReturnValue_17) == 0x000120, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_GetParam_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Conv_ByteToInt_ReturnValue_4) == 0x000124, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Conv_ByteToInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Multiply_FloatFloat_ReturnValue_23) == 0x000128, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Multiply_FloatFloat_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_GetParam_ReturnValue_18) == 0x00012C, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_GetParam_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Multiply_FloatFloat_ReturnValue_24) == 0x000130, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Multiply_FloatFloat_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_MakeLiteralByte_ReturnValue_5) == 0x000134, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_MakeLiteralByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Add_FloatFloat_ReturnValue) == 0x000138, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Multiply_FloatFloat_ReturnValue_25) == 0x00013C, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Multiply_FloatFloat_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Conv_ByteToInt_ReturnValue_5) == 0x000140, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Conv_ByteToInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_GetParam_ReturnValue_19) == 0x000144, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_GetParam_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Divide_FloatFloat_ReturnValue_11) == 0x000148, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Divide_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_MakeLiteralByte_ReturnValue_6) == 0x00014C, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_MakeLiteralByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Multiply_FloatFloat_ReturnValue_26) == 0x000150, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Multiply_FloatFloat_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Sqrt_ReturnValue_3) == 0x000154, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Sqrt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Conv_ByteToInt_ReturnValue_6) == 0x000158, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Conv_ByteToInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Multiply_FloatFloat_ReturnValue_27) == 0x00015C, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Multiply_FloatFloat_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_GetParam_ReturnValue_20) == 0x000160, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_GetParam_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Multiply_FloatFloat_ReturnValue_28) == 0x000164, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Multiply_FloatFloat_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Multiply_FloatFloat_ReturnValue_29) == 0x000168, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Multiply_FloatFloat_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Multiply_FloatFloat_ReturnValue_30) == 0x00016C, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Multiply_FloatFloat_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_MakeLiteralByte_ReturnValue_7) == 0x000170, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_MakeLiteralByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Multiply_FloatFloat_ReturnValue_31) == 0x000174, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Multiply_FloatFloat_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Divide_FloatFloat_ReturnValue_12) == 0x000178, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Divide_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Conv_ByteToInt_ReturnValue_7) == 0x00017C, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Conv_ByteToInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_GetParam_ReturnValue_21) == 0x000180, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_GetParam_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Multiply_FloatFloat_ReturnValue_32) == 0x000184, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Multiply_FloatFloat_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000188, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcPhysicalDamage, CallFunc_Multiply_FloatFloat_ReturnValue_33) == 0x00018C, "Member 'BP_BtlCalc_C_CalcPhysicalDamage::CallFunc_Multiply_FloatFloat_ReturnValue_33' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.CalcAccuracyRate
// 0x001C (0x001C - 0x0000)
struct BP_BtlCalc_C_CalcAccuracyRate final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         N;                                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         B;                                                 // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         A;                                                 // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Accuracy_Enemy_Rate;                      // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Accuracy_Player_rate;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckAttackerIsEnemy_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCalc_C_CalcAccuracyRate) == 0x000004, "Wrong alignment on BP_BtlCalc_C_CalcAccuracyRate");
static_assert(sizeof(BP_BtlCalc_C_CalcAccuracyRate) == 0x00001C, "Wrong size on BP_BtlCalc_C_CalcAccuracyRate");
static_assert(offsetof(BP_BtlCalc_C_CalcAccuracyRate, ReturnValue) == 0x000000, "Member 'BP_BtlCalc_C_CalcAccuracyRate::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcAccuracyRate, N) == 0x000004, "Member 'BP_BtlCalc_C_CalcAccuracyRate::N' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcAccuracyRate, B) == 0x000008, "Member 'BP_BtlCalc_C_CalcAccuracyRate::B' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcAccuracyRate, A) == 0x00000C, "Member 'BP_BtlCalc_C_CalcAccuracyRate::A' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcAccuracyRate, CallFunc_Accuracy_Enemy_Rate) == 0x000010, "Member 'BP_BtlCalc_C_CalcAccuracyRate::CallFunc_Accuracy_Enemy_Rate' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcAccuracyRate, CallFunc_Accuracy_Player_rate) == 0x000014, "Member 'BP_BtlCalc_C_CalcAccuracyRate::CallFunc_Accuracy_Player_rate' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcAccuracyRate, CallFunc_CheckAttackerIsEnemy_ReturnValue) == 0x000018, "Member 'BP_BtlCalc_C_CalcAccuracyRate::CallFunc_CheckAttackerIsEnemy_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcAccuracyRate, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'BP_BtlCalc_C_CalcAccuracyRate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.CalcCriticalHitRate
// 0x0070 (0x0070 - 0x0000)
struct BP_BtlCalc_C_CalcCriticalHitRate final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         N;                                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_2;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckAttackerIsEnemy_ReturnValue;         // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_3;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_4;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_3;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_5;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_CalcCriticalHitRate) == 0x000004, "Wrong alignment on BP_BtlCalc_C_CalcCriticalHitRate");
static_assert(sizeof(BP_BtlCalc_C_CalcCriticalHitRate) == 0x000070, "Wrong size on BP_BtlCalc_C_CalcCriticalHitRate");
static_assert(offsetof(BP_BtlCalc_C_CalcCriticalHitRate, ReturnValue) == 0x000000, "Member 'BP_BtlCalc_C_CalcCriticalHitRate::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcCriticalHitRate, N) == 0x000004, "Member 'BP_BtlCalc_C_CalcCriticalHitRate::N' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcCriticalHitRate, CallFunc_GetParam_ReturnValue) == 0x000008, "Member 'BP_BtlCalc_C_CalcCriticalHitRate::CallFunc_GetParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcCriticalHitRate, CallFunc_GetParam_ReturnValue_1) == 0x00000C, "Member 'BP_BtlCalc_C_CalcCriticalHitRate::CallFunc_GetParam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcCriticalHitRate, CallFunc_MakeLiteralByte_ReturnValue) == 0x000010, "Member 'BP_BtlCalc_C_CalcCriticalHitRate::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcCriticalHitRate, CallFunc_FTrunc_ReturnValue) == 0x000014, "Member 'BP_BtlCalc_C_CalcCriticalHitRate::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcCriticalHitRate, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000018, "Member 'BP_BtlCalc_C_CalcCriticalHitRate::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcCriticalHitRate, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00001C, "Member 'BP_BtlCalc_C_CalcCriticalHitRate::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcCriticalHitRate, CallFunc_GetParam_ReturnValue_2) == 0x000020, "Member 'BP_BtlCalc_C_CalcCriticalHitRate::CallFunc_GetParam_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcCriticalHitRate, CallFunc_CheckAttackerIsEnemy_ReturnValue) == 0x000024, "Member 'BP_BtlCalc_C_CalcCriticalHitRate::CallFunc_CheckAttackerIsEnemy_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcCriticalHitRate, CallFunc_Add_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_BtlCalc_C_CalcCriticalHitRate::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcCriticalHitRate, CallFunc_Not_PreBool_ReturnValue) == 0x00002C, "Member 'BP_BtlCalc_C_CalcCriticalHitRate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcCriticalHitRate, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x00002D, "Member 'BP_BtlCalc_C_CalcCriticalHitRate::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcCriticalHitRate, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x00002E, "Member 'BP_BtlCalc_C_CalcCriticalHitRate::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcCriticalHitRate, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000030, "Member 'BP_BtlCalc_C_CalcCriticalHitRate::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcCriticalHitRate, CallFunc_GetParam_ReturnValue_3) == 0x000034, "Member 'BP_BtlCalc_C_CalcCriticalHitRate::CallFunc_GetParam_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcCriticalHitRate, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x000038, "Member 'BP_BtlCalc_C_CalcCriticalHitRate::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcCriticalHitRate, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00003C, "Member 'BP_BtlCalc_C_CalcCriticalHitRate::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcCriticalHitRate, CallFunc_GetParam_ReturnValue_4) == 0x000040, "Member 'BP_BtlCalc_C_CalcCriticalHitRate::CallFunc_GetParam_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcCriticalHitRate, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x000044, "Member 'BP_BtlCalc_C_CalcCriticalHitRate::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcCriticalHitRate, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000048, "Member 'BP_BtlCalc_C_CalcCriticalHitRate::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcCriticalHitRate, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00004C, "Member 'BP_BtlCalc_C_CalcCriticalHitRate::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcCriticalHitRate, CallFunc_Conv_ByteToInt_ReturnValue_3) == 0x000050, "Member 'BP_BtlCalc_C_CalcCriticalHitRate::CallFunc_Conv_ByteToInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcCriticalHitRate, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_BtlCalc_C_CalcCriticalHitRate::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcCriticalHitRate, CallFunc_GetParam_ReturnValue_5) == 0x000058, "Member 'BP_BtlCalc_C_CalcCriticalHitRate::CallFunc_GetParam_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcCriticalHitRate, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00005C, "Member 'BP_BtlCalc_C_CalcCriticalHitRate::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcCriticalHitRate, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000060, "Member 'BP_BtlCalc_C_CalcCriticalHitRate::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcCriticalHitRate, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000064, "Member 'BP_BtlCalc_C_CalcCriticalHitRate::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcCriticalHitRate, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000068, "Member 'BP_BtlCalc_C_CalcCriticalHitRate::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcCriticalHitRate, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x00006C, "Member 'BP_BtlCalc_C_CalcCriticalHitRate::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.CalcDownRate
// 0x0004 (0x0004 - 0x0000)
struct BP_BtlCalc_C_CalcDownRate final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_CalcDownRate) == 0x000004, "Wrong alignment on BP_BtlCalc_C_CalcDownRate");
static_assert(sizeof(BP_BtlCalc_C_CalcDownRate) == 0x000004, "Wrong size on BP_BtlCalc_C_CalcDownRate");
static_assert(offsetof(BP_BtlCalc_C_CalcDownRate, ReturnValue) == 0x000000, "Member 'BP_BtlCalc_C_CalcDownRate::ReturnValue' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.CalcRushDamage
// 0x0018 (0x0018 - 0x0000)
struct BP_BtlCalc_C_CalcRushDamage final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         N;                                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         C;                                                 // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         B;                                                 // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         A;                                                 // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcPhysicalDamage_ReturnValue;           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_CalcRushDamage) == 0x000004, "Wrong alignment on BP_BtlCalc_C_CalcRushDamage");
static_assert(sizeof(BP_BtlCalc_C_CalcRushDamage) == 0x000018, "Wrong size on BP_BtlCalc_C_CalcRushDamage");
static_assert(offsetof(BP_BtlCalc_C_CalcRushDamage, ReturnValue) == 0x000000, "Member 'BP_BtlCalc_C_CalcRushDamage::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcRushDamage, N) == 0x000004, "Member 'BP_BtlCalc_C_CalcRushDamage::N' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcRushDamage, C) == 0x000008, "Member 'BP_BtlCalc_C_CalcRushDamage::C' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcRushDamage, B) == 0x00000C, "Member 'BP_BtlCalc_C_CalcRushDamage::B' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcRushDamage, A) == 0x000010, "Member 'BP_BtlCalc_C_CalcRushDamage::A' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcRushDamage, CallFunc_CalcPhysicalDamage_ReturnValue) == 0x000014, "Member 'BP_BtlCalc_C_CalcRushDamage::CallFunc_CalcPhysicalDamage_ReturnValue' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.CalcAllOutAttackDamage
// 0x007C (0x007C - 0x0000)
struct BP_BtlCalc_C_CalcAllOutAttackDamage final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         N;                                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         C;                                                 // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         B;                                                 // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         A;                                                 // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_2;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_3;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_4;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_5;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_6;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sqrt_ReturnValue;                         // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_9;        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_CalcAllOutAttackDamage) == 0x000004, "Wrong alignment on BP_BtlCalc_C_CalcAllOutAttackDamage");
static_assert(sizeof(BP_BtlCalc_C_CalcAllOutAttackDamage) == 0x00007C, "Wrong size on BP_BtlCalc_C_CalcAllOutAttackDamage");
static_assert(offsetof(BP_BtlCalc_C_CalcAllOutAttackDamage, ReturnValue) == 0x000000, "Member 'BP_BtlCalc_C_CalcAllOutAttackDamage::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcAllOutAttackDamage, N) == 0x000004, "Member 'BP_BtlCalc_C_CalcAllOutAttackDamage::N' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcAllOutAttackDamage, C) == 0x000008, "Member 'BP_BtlCalc_C_CalcAllOutAttackDamage::C' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcAllOutAttackDamage, B) == 0x00000C, "Member 'BP_BtlCalc_C_CalcAllOutAttackDamage::B' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcAllOutAttackDamage, A) == 0x000010, "Member 'BP_BtlCalc_C_CalcAllOutAttackDamage::A' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcAllOutAttackDamage, CallFunc_GetParam_ReturnValue) == 0x000014, "Member 'BP_BtlCalc_C_CalcAllOutAttackDamage::CallFunc_GetParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcAllOutAttackDamage, CallFunc_GetParam_ReturnValue_1) == 0x000018, "Member 'BP_BtlCalc_C_CalcAllOutAttackDamage::CallFunc_GetParam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcAllOutAttackDamage, CallFunc_GetParam_ReturnValue_2) == 0x00001C, "Member 'BP_BtlCalc_C_CalcAllOutAttackDamage::CallFunc_GetParam_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcAllOutAttackDamage, CallFunc_GetParam_ReturnValue_3) == 0x000020, "Member 'BP_BtlCalc_C_CalcAllOutAttackDamage::CallFunc_GetParam_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcAllOutAttackDamage, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_BtlCalc_C_CalcAllOutAttackDamage::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcAllOutAttackDamage, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000028, "Member 'BP_BtlCalc_C_CalcAllOutAttackDamage::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcAllOutAttackDamage, CallFunc_GetParam_ReturnValue_4) == 0x00002C, "Member 'BP_BtlCalc_C_CalcAllOutAttackDamage::CallFunc_GetParam_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcAllOutAttackDamage, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000030, "Member 'BP_BtlCalc_C_CalcAllOutAttackDamage::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcAllOutAttackDamage, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_BtlCalc_C_CalcAllOutAttackDamage::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcAllOutAttackDamage, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000038, "Member 'BP_BtlCalc_C_CalcAllOutAttackDamage::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcAllOutAttackDamage, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x00003C, "Member 'BP_BtlCalc_C_CalcAllOutAttackDamage::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcAllOutAttackDamage, CallFunc_MakeLiteralByte_ReturnValue) == 0x000040, "Member 'BP_BtlCalc_C_CalcAllOutAttackDamage::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcAllOutAttackDamage, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x000044, "Member 'BP_BtlCalc_C_CalcAllOutAttackDamage::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcAllOutAttackDamage, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000048, "Member 'BP_BtlCalc_C_CalcAllOutAttackDamage::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcAllOutAttackDamage, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00004C, "Member 'BP_BtlCalc_C_CalcAllOutAttackDamage::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcAllOutAttackDamage, CallFunc_GetParam_ReturnValue_5) == 0x000050, "Member 'BP_BtlCalc_C_CalcAllOutAttackDamage::CallFunc_GetParam_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcAllOutAttackDamage, CallFunc_Add_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_BtlCalc_C_CalcAllOutAttackDamage::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcAllOutAttackDamage, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000058, "Member 'BP_BtlCalc_C_CalcAllOutAttackDamage::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcAllOutAttackDamage, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x00005C, "Member 'BP_BtlCalc_C_CalcAllOutAttackDamage::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcAllOutAttackDamage, CallFunc_GetParam_ReturnValue_6) == 0x000060, "Member 'BP_BtlCalc_C_CalcAllOutAttackDamage::CallFunc_GetParam_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcAllOutAttackDamage, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000064, "Member 'BP_BtlCalc_C_CalcAllOutAttackDamage::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcAllOutAttackDamage, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x000068, "Member 'BP_BtlCalc_C_CalcAllOutAttackDamage::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcAllOutAttackDamage, CallFunc_Sqrt_ReturnValue) == 0x00006C, "Member 'BP_BtlCalc_C_CalcAllOutAttackDamage::CallFunc_Sqrt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcAllOutAttackDamage, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x000070, "Member 'BP_BtlCalc_C_CalcAllOutAttackDamage::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcAllOutAttackDamage, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x000074, "Member 'BP_BtlCalc_C_CalcAllOutAttackDamage::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcAllOutAttackDamage, CallFunc_Multiply_FloatFloat_ReturnValue_9) == 0x000078, "Member 'BP_BtlCalc_C_CalcAllOutAttackDamage::CallFunc_Multiply_FloatFloat_ReturnValue_9' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.CalcBadStatusHitRate
// 0x0090 (0x0090 - 0x0000)
struct BP_BtlCalc_C_CalcBadStatusHitRate final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         N;                                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         A;                                                 // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_2;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_3;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckAttackerIsEnemy_ReturnValue;         // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetParam_ReturnValue_4;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBadStatusRateFromEnemy_BadStatus_Hit_Rate; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBadStatusRateFromPlayer_BadStatus_Hit_Rate; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_5;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_6;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_3;             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_7;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_CalcBadStatusHitRate) == 0x000004, "Wrong alignment on BP_BtlCalc_C_CalcBadStatusHitRate");
static_assert(sizeof(BP_BtlCalc_C_CalcBadStatusHitRate) == 0x000090, "Wrong size on BP_BtlCalc_C_CalcBadStatusHitRate");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusHitRate, ReturnValue) == 0x000000, "Member 'BP_BtlCalc_C_CalcBadStatusHitRate::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusHitRate, N) == 0x000004, "Member 'BP_BtlCalc_C_CalcBadStatusHitRate::N' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusHitRate, A) == 0x000008, "Member 'BP_BtlCalc_C_CalcBadStatusHitRate::A' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusHitRate, CallFunc_GetParam_ReturnValue) == 0x00000C, "Member 'BP_BtlCalc_C_CalcBadStatusHitRate::CallFunc_GetParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusHitRate, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_BtlCalc_C_CalcBadStatusHitRate::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusHitRate, CallFunc_GetParam_ReturnValue_1) == 0x000014, "Member 'BP_BtlCalc_C_CalcBadStatusHitRate::CallFunc_GetParam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusHitRate, CallFunc_GetParam_ReturnValue_2) == 0x000018, "Member 'BP_BtlCalc_C_CalcBadStatusHitRate::CallFunc_GetParam_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusHitRate, CallFunc_GetParam_ReturnValue_3) == 0x00001C, "Member 'BP_BtlCalc_C_CalcBadStatusHitRate::CallFunc_GetParam_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusHitRate, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000020, "Member 'BP_BtlCalc_C_CalcBadStatusHitRate::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusHitRate, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000024, "Member 'BP_BtlCalc_C_CalcBadStatusHitRate::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusHitRate, CallFunc_MakeLiteralByte_ReturnValue) == 0x000028, "Member 'BP_BtlCalc_C_CalcBadStatusHitRate::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusHitRate, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x00002C, "Member 'BP_BtlCalc_C_CalcBadStatusHitRate::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusHitRate, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000030, "Member 'BP_BtlCalc_C_CalcBadStatusHitRate::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusHitRate, CallFunc_CheckAttackerIsEnemy_ReturnValue) == 0x000034, "Member 'BP_BtlCalc_C_CalcBadStatusHitRate::CallFunc_CheckAttackerIsEnemy_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusHitRate, CallFunc_GetParam_ReturnValue_4) == 0x000038, "Member 'BP_BtlCalc_C_CalcBadStatusHitRate::CallFunc_GetParam_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusHitRate, CallFunc_Not_PreBool_ReturnValue) == 0x00003C, "Member 'BP_BtlCalc_C_CalcBadStatusHitRate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusHitRate, CallFunc_Add_FloatFloat_ReturnValue) == 0x000040, "Member 'BP_BtlCalc_C_CalcBadStatusHitRate::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusHitRate, CallFunc_GetBadStatusRateFromEnemy_BadStatus_Hit_Rate) == 0x000044, "Member 'BP_BtlCalc_C_CalcBadStatusHitRate::CallFunc_GetBadStatusRateFromEnemy_BadStatus_Hit_Rate' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusHitRate, CallFunc_GetBadStatusRateFromPlayer_BadStatus_Hit_Rate) == 0x000048, "Member 'BP_BtlCalc_C_CalcBadStatusHitRate::CallFunc_GetBadStatusRateFromPlayer_BadStatus_Hit_Rate' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusHitRate, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x00004C, "Member 'BP_BtlCalc_C_CalcBadStatusHitRate::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusHitRate, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x000050, "Member 'BP_BtlCalc_C_CalcBadStatusHitRate::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusHitRate, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000054, "Member 'BP_BtlCalc_C_CalcBadStatusHitRate::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusHitRate, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000055, "Member 'BP_BtlCalc_C_CalcBadStatusHitRate::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusHitRate, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000058, "Member 'BP_BtlCalc_C_CalcBadStatusHitRate::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusHitRate, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x00005C, "Member 'BP_BtlCalc_C_CalcBadStatusHitRate::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusHitRate, CallFunc_GetParam_ReturnValue_5) == 0x000060, "Member 'BP_BtlCalc_C_CalcBadStatusHitRate::CallFunc_GetParam_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusHitRate, CallFunc_GetParam_ReturnValue_6) == 0x000064, "Member 'BP_BtlCalc_C_CalcBadStatusHitRate::CallFunc_GetParam_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusHitRate, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000068, "Member 'BP_BtlCalc_C_CalcBadStatusHitRate::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusHitRate, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x00006C, "Member 'BP_BtlCalc_C_CalcBadStatusHitRate::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusHitRate, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x000070, "Member 'BP_BtlCalc_C_CalcBadStatusHitRate::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusHitRate, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x000074, "Member 'BP_BtlCalc_C_CalcBadStatusHitRate::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusHitRate, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x000078, "Member 'BP_BtlCalc_C_CalcBadStatusHitRate::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusHitRate, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00007C, "Member 'BP_BtlCalc_C_CalcBadStatusHitRate::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusHitRate, CallFunc_Conv_ByteToInt_ReturnValue_3) == 0x000080, "Member 'BP_BtlCalc_C_CalcBadStatusHitRate::CallFunc_Conv_ByteToInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusHitRate, CallFunc_GetParam_ReturnValue_7) == 0x000084, "Member 'BP_BtlCalc_C_CalcBadStatusHitRate::CallFunc_GetParam_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusHitRate, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000088, "Member 'BP_BtlCalc_C_CalcBadStatusHitRate::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusHitRate, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00008C, "Member 'BP_BtlCalc_C_CalcBadStatusHitRate::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.CalcBadStatusRecoveryRate
// 0x003C (0x003C - 0x0000)
struct BP_BtlCalc_C_CalcBadStatusRecoveryRate final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         N;                                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         A;                                                 // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_2;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_CalcBadStatusRecoveryRate) == 0x000004, "Wrong alignment on BP_BtlCalc_C_CalcBadStatusRecoveryRate");
static_assert(sizeof(BP_BtlCalc_C_CalcBadStatusRecoveryRate) == 0x00003C, "Wrong size on BP_BtlCalc_C_CalcBadStatusRecoveryRate");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusRecoveryRate, ReturnValue) == 0x000000, "Member 'BP_BtlCalc_C_CalcBadStatusRecoveryRate::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusRecoveryRate, N) == 0x000004, "Member 'BP_BtlCalc_C_CalcBadStatusRecoveryRate::N' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusRecoveryRate, A) == 0x000008, "Member 'BP_BtlCalc_C_CalcBadStatusRecoveryRate::A' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusRecoveryRate, CallFunc_GetParam_ReturnValue) == 0x00000C, "Member 'BP_BtlCalc_C_CalcBadStatusRecoveryRate::CallFunc_GetParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusRecoveryRate, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_BtlCalc_C_CalcBadStatusRecoveryRate::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusRecoveryRate, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_BtlCalc_C_CalcBadStatusRecoveryRate::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusRecoveryRate, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_BtlCalc_C_CalcBadStatusRecoveryRate::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusRecoveryRate, CallFunc_GetParam_ReturnValue_1) == 0x00001C, "Member 'BP_BtlCalc_C_CalcBadStatusRecoveryRate::CallFunc_GetParam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusRecoveryRate, CallFunc_Add_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_BtlCalc_C_CalcBadStatusRecoveryRate::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusRecoveryRate, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000024, "Member 'BP_BtlCalc_C_CalcBadStatusRecoveryRate::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusRecoveryRate, CallFunc_MakeLiteralByte_ReturnValue) == 0x000028, "Member 'BP_BtlCalc_C_CalcBadStatusRecoveryRate::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusRecoveryRate, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00002C, "Member 'BP_BtlCalc_C_CalcBadStatusRecoveryRate::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusRecoveryRate, CallFunc_GetParam_ReturnValue_2) == 0x000030, "Member 'BP_BtlCalc_C_CalcBadStatusRecoveryRate::CallFunc_GetParam_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusRecoveryRate, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_BtlCalc_C_CalcBadStatusRecoveryRate::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcBadStatusRecoveryRate, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000038, "Member 'BP_BtlCalc_C_CalcBadStatusRecoveryRate::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.CalcEscapeRate
// 0x0014 (0x0014 - 0x0000)
struct BP_BtlCalc_C_CalcEscapeRate final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ESCAPE_COUNT;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         N;                                                 // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         B;                                                 // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         A;                                                 // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_CalcEscapeRate) == 0x000004, "Wrong alignment on BP_BtlCalc_C_CalcEscapeRate");
static_assert(sizeof(BP_BtlCalc_C_CalcEscapeRate) == 0x000014, "Wrong size on BP_BtlCalc_C_CalcEscapeRate");
static_assert(offsetof(BP_BtlCalc_C_CalcEscapeRate, ReturnValue) == 0x000000, "Member 'BP_BtlCalc_C_CalcEscapeRate::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcEscapeRate, ESCAPE_COUNT) == 0x000004, "Member 'BP_BtlCalc_C_CalcEscapeRate::ESCAPE_COUNT' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcEscapeRate, N) == 0x000008, "Member 'BP_BtlCalc_C_CalcEscapeRate::N' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcEscapeRate, B) == 0x00000C, "Member 'BP_BtlCalc_C_CalcEscapeRate::B' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcEscapeRate, A) == 0x000010, "Member 'BP_BtlCalc_C_CalcEscapeRate::A' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.CalcHealRecovery
// 0x0034 (0x0034 - 0x0000)
struct BP_BtlCalc_C_CalcHealRecovery final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         N;                                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckAttackerIsEnemy_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetParam_ReturnValue;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetParam_ReturnValue_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_2;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_3;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_CalcHealRecovery) == 0x000004, "Wrong alignment on BP_BtlCalc_C_CalcHealRecovery");
static_assert(sizeof(BP_BtlCalc_C_CalcHealRecovery) == 0x000034, "Wrong size on BP_BtlCalc_C_CalcHealRecovery");
static_assert(offsetof(BP_BtlCalc_C_CalcHealRecovery, ReturnValue) == 0x000000, "Member 'BP_BtlCalc_C_CalcHealRecovery::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcHealRecovery, N) == 0x000004, "Member 'BP_BtlCalc_C_CalcHealRecovery::N' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcHealRecovery, CallFunc_CheckAttackerIsEnemy_ReturnValue) == 0x000008, "Member 'BP_BtlCalc_C_CalcHealRecovery::CallFunc_CheckAttackerIsEnemy_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcHealRecovery, CallFunc_GetParam_ReturnValue) == 0x00000C, "Member 'BP_BtlCalc_C_CalcHealRecovery::CallFunc_GetParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcHealRecovery, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'BP_BtlCalc_C_CalcHealRecovery::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcHealRecovery, CallFunc_GetParam_ReturnValue_1) == 0x000014, "Member 'BP_BtlCalc_C_CalcHealRecovery::CallFunc_GetParam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcHealRecovery, CallFunc_GetParam_ReturnValue_2) == 0x000018, "Member 'BP_BtlCalc_C_CalcHealRecovery::CallFunc_GetParam_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcHealRecovery, CallFunc_GetParam_ReturnValue_3) == 0x00001C, "Member 'BP_BtlCalc_C_CalcHealRecovery::CallFunc_GetParam_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcHealRecovery, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_BtlCalc_C_CalcHealRecovery::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcHealRecovery, CallFunc_Add_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_BtlCalc_C_CalcHealRecovery::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcHealRecovery, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000028, "Member 'BP_BtlCalc_C_CalcHealRecovery::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcHealRecovery, CallFunc_FTrunc_ReturnValue) == 0x00002C, "Member 'BP_BtlCalc_C_CalcHealRecovery::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcHealRecovery, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000030, "Member 'BP_BtlCalc_C_CalcHealRecovery::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.GetDamageRateToEnemy
// 0x002C (0x002C - 0x0000)
struct BP_BtlCalc_C_GetDamageRateToEnemy final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBtlCalcParam                         CallFunc_GetDifficultyParam_Param;                 // 0x0004(0x0028)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_GetDamageRateToEnemy) == 0x000004, "Wrong alignment on BP_BtlCalc_C_GetDamageRateToEnemy");
static_assert(sizeof(BP_BtlCalc_C_GetDamageRateToEnemy) == 0x00002C, "Wrong size on BP_BtlCalc_C_GetDamageRateToEnemy");
static_assert(offsetof(BP_BtlCalc_C_GetDamageRateToEnemy, ReturnValue) == 0x000000, "Member 'BP_BtlCalc_C_GetDamageRateToEnemy::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetDamageRateToEnemy, CallFunc_GetDifficultyParam_Param) == 0x000004, "Member 'BP_BtlCalc_C_GetDamageRateToEnemy::CallFunc_GetDifficultyParam_Param' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.GetDamageRateToPlayer
// 0x002C (0x002C - 0x0000)
struct BP_BtlCalc_C_GetDamageRateToPlayer final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBtlCalcParam                         CallFunc_GetDifficultyParam_Param;                 // 0x0004(0x0028)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_GetDamageRateToPlayer) == 0x000004, "Wrong alignment on BP_BtlCalc_C_GetDamageRateToPlayer");
static_assert(sizeof(BP_BtlCalc_C_GetDamageRateToPlayer) == 0x00002C, "Wrong size on BP_BtlCalc_C_GetDamageRateToPlayer");
static_assert(offsetof(BP_BtlCalc_C_GetDamageRateToPlayer, ReturnValue) == 0x000000, "Member 'BP_BtlCalc_C_GetDamageRateToPlayer::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetDamageRateToPlayer, CallFunc_GetDifficultyParam_Param) == 0x000004, "Member 'BP_BtlCalc_C_GetDamageRateToPlayer::CallFunc_GetDifficultyParam_Param' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.GetDownAgilityForEnemy
// 0x0004 (0x0004 - 0x0000)
struct BP_BtlCalc_C_GetDownAgilityForEnemy final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_GetDownAgilityForEnemy) == 0x000004, "Wrong alignment on BP_BtlCalc_C_GetDownAgilityForEnemy");
static_assert(sizeof(BP_BtlCalc_C_GetDownAgilityForEnemy) == 0x000004, "Wrong size on BP_BtlCalc_C_GetDownAgilityForEnemy");
static_assert(offsetof(BP_BtlCalc_C_GetDownAgilityForEnemy, ReturnValue) == 0x000000, "Member 'BP_BtlCalc_C_GetDownAgilityForEnemy::ReturnValue' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.GetEnemyCriticalDamageRate
// 0x002C (0x002C - 0x0000)
struct BP_BtlCalc_C_GetEnemyCriticalDamageRate final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBtlCalcParam                         CallFunc_GetDifficultyParam_Param;                 // 0x0004(0x0028)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_GetEnemyCriticalDamageRate) == 0x000004, "Wrong alignment on BP_BtlCalc_C_GetEnemyCriticalDamageRate");
static_assert(sizeof(BP_BtlCalc_C_GetEnemyCriticalDamageRate) == 0x00002C, "Wrong size on BP_BtlCalc_C_GetEnemyCriticalDamageRate");
static_assert(offsetof(BP_BtlCalc_C_GetEnemyCriticalDamageRate, ReturnValue) == 0x000000, "Member 'BP_BtlCalc_C_GetEnemyCriticalDamageRate::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetEnemyCriticalDamageRate, CallFunc_GetDifficultyParam_Param) == 0x000004, "Member 'BP_BtlCalc_C_GetEnemyCriticalDamageRate::CallFunc_GetDifficultyParam_Param' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.GetEnemyWeakDamageRate
// 0x002C (0x002C - 0x0000)
struct BP_BtlCalc_C_GetEnemyWeakDamageRate final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBtlCalcParam                         CallFunc_GetDifficultyParam_Param;                 // 0x0004(0x0028)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_GetEnemyWeakDamageRate) == 0x000004, "Wrong alignment on BP_BtlCalc_C_GetEnemyWeakDamageRate");
static_assert(sizeof(BP_BtlCalc_C_GetEnemyWeakDamageRate) == 0x00002C, "Wrong size on BP_BtlCalc_C_GetEnemyWeakDamageRate");
static_assert(offsetof(BP_BtlCalc_C_GetEnemyWeakDamageRate, ReturnValue) == 0x000000, "Member 'BP_BtlCalc_C_GetEnemyWeakDamageRate::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetEnemyWeakDamageRate, CallFunc_GetDifficultyParam_Param) == 0x000004, "Member 'BP_BtlCalc_C_GetEnemyWeakDamageRate::CallFunc_GetDifficultyParam_Param' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.GetExpRate
// 0x002C (0x002C - 0x0000)
struct BP_BtlCalc_C_GetExpRate final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBtlCalcParam                         CallFunc_GetDifficultyParam_Param;                 // 0x0004(0x0028)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_GetExpRate) == 0x000004, "Wrong alignment on BP_BtlCalc_C_GetExpRate");
static_assert(sizeof(BP_BtlCalc_C_GetExpRate) == 0x00002C, "Wrong size on BP_BtlCalc_C_GetExpRate");
static_assert(offsetof(BP_BtlCalc_C_GetExpRate, ReturnValue) == 0x000000, "Member 'BP_BtlCalc_C_GetExpRate::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetExpRate, CallFunc_GetDifficultyParam_Param) == 0x000004, "Member 'BP_BtlCalc_C_GetExpRate::CallFunc_GetDifficultyParam_Param' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.GetMoneyRate
// 0x0004 (0x0004 - 0x0000)
struct BP_BtlCalc_C_GetMoneyRate final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_GetMoneyRate) == 0x000004, "Wrong alignment on BP_BtlCalc_C_GetMoneyRate");
static_assert(sizeof(BP_BtlCalc_C_GetMoneyRate) == 0x000004, "Wrong size on BP_BtlCalc_C_GetMoneyRate");
static_assert(offsetof(BP_BtlCalc_C_GetMoneyRate, ReturnValue) == 0x000000, "Member 'BP_BtlCalc_C_GetMoneyRate::ReturnValue' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.GetPlayerCriticalDamageRate
// 0x002C (0x002C - 0x0000)
struct BP_BtlCalc_C_GetPlayerCriticalDamageRate final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBtlCalcParam                         CallFunc_GetDifficultyParam_Param;                 // 0x0004(0x0028)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_GetPlayerCriticalDamageRate) == 0x000004, "Wrong alignment on BP_BtlCalc_C_GetPlayerCriticalDamageRate");
static_assert(sizeof(BP_BtlCalc_C_GetPlayerCriticalDamageRate) == 0x00002C, "Wrong size on BP_BtlCalc_C_GetPlayerCriticalDamageRate");
static_assert(offsetof(BP_BtlCalc_C_GetPlayerCriticalDamageRate, ReturnValue) == 0x000000, "Member 'BP_BtlCalc_C_GetPlayerCriticalDamageRate::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetPlayerCriticalDamageRate, CallFunc_GetDifficultyParam_Param) == 0x000004, "Member 'BP_BtlCalc_C_GetPlayerCriticalDamageRate::CallFunc_GetDifficultyParam_Param' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.GetPlayerWeakDamageRate
// 0x002C (0x002C - 0x0000)
struct BP_BtlCalc_C_GetPlayerWeakDamageRate final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBtlCalcParam                         CallFunc_GetDifficultyParam_Param;                 // 0x0004(0x0028)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_GetPlayerWeakDamageRate) == 0x000004, "Wrong alignment on BP_BtlCalc_C_GetPlayerWeakDamageRate");
static_assert(sizeof(BP_BtlCalc_C_GetPlayerWeakDamageRate) == 0x00002C, "Wrong size on BP_BtlCalc_C_GetPlayerWeakDamageRate");
static_assert(offsetof(BP_BtlCalc_C_GetPlayerWeakDamageRate, ReturnValue) == 0x000000, "Member 'BP_BtlCalc_C_GetPlayerWeakDamageRate::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetPlayerWeakDamageRate, CallFunc_GetDifficultyParam_Param) == 0x000004, "Member 'BP_BtlCalc_C_GetPlayerWeakDamageRate::CallFunc_GetDifficultyParam_Param' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.GetDifficultyParam
// 0x012C (0x012C - 0x0000)
struct BP_BtlCalc_C_GetDifficultyParam final
{
public:
	struct FFBtlCalcParam                         Param;                                             // 0x0000(0x0028)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBtlCalcParam                         Work;                                              // 0x0028(0x0028)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBtlCalcParam                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0050(0x0028)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFBtlCalcParam                         CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x007C(0x0028)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFBtlCalcParam                         CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x00A8(0x0028)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFBtlCalcParam                         CallFunc_GetDataTableRowFromName_OutRow_3;         // 0x00D4(0x0028)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_3;    // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFBtlCalcParam                         CallFunc_GetDataTableRowFromName_OutRow_4;         // 0x0100(0x0028)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_4;    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBtlGameDifficulty                            CallFunc_GetDifficulty_ReturnValue;                // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x012B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCalc_C_GetDifficultyParam) == 0x000004, "Wrong alignment on BP_BtlCalc_C_GetDifficultyParam");
static_assert(sizeof(BP_BtlCalc_C_GetDifficultyParam) == 0x00012C, "Wrong size on BP_BtlCalc_C_GetDifficultyParam");
static_assert(offsetof(BP_BtlCalc_C_GetDifficultyParam, Param) == 0x000000, "Member 'BP_BtlCalc_C_GetDifficultyParam::Param' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetDifficultyParam, Work) == 0x000028, "Member 'BP_BtlCalc_C_GetDifficultyParam::Work' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetDifficultyParam, CallFunc_GetDataTableRowFromName_OutRow) == 0x000050, "Member 'BP_BtlCalc_C_GetDifficultyParam::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetDifficultyParam, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000078, "Member 'BP_BtlCalc_C_GetDifficultyParam::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetDifficultyParam, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x00007C, "Member 'BP_BtlCalc_C_GetDifficultyParam::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetDifficultyParam, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0000A4, "Member 'BP_BtlCalc_C_GetDifficultyParam::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetDifficultyParam, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x0000A8, "Member 'BP_BtlCalc_C_GetDifficultyParam::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetDifficultyParam, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x0000D0, "Member 'BP_BtlCalc_C_GetDifficultyParam::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetDifficultyParam, CallFunc_GetDataTableRowFromName_OutRow_3) == 0x0000D4, "Member 'BP_BtlCalc_C_GetDifficultyParam::CallFunc_GetDataTableRowFromName_OutRow_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetDifficultyParam, CallFunc_GetDataTableRowFromName_ReturnValue_3) == 0x0000FC, "Member 'BP_BtlCalc_C_GetDifficultyParam::CallFunc_GetDataTableRowFromName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetDifficultyParam, CallFunc_GetDataTableRowFromName_OutRow_4) == 0x000100, "Member 'BP_BtlCalc_C_GetDifficultyParam::CallFunc_GetDataTableRowFromName_OutRow_4' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetDifficultyParam, CallFunc_GetDataTableRowFromName_ReturnValue_4) == 0x000128, "Member 'BP_BtlCalc_C_GetDifficultyParam::CallFunc_GetDataTableRowFromName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetDifficultyParam, CallFunc_GetDifficulty_ReturnValue) == 0x000129, "Member 'BP_BtlCalc_C_GetDifficultyParam::CallFunc_GetDifficulty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetDifficultyParam, CallFunc_IsValid_ReturnValue) == 0x00012A, "Member 'BP_BtlCalc_C_GetDifficultyParam::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetDifficultyParam, K2Node_SwitchEnum_CmpSuccess) == 0x00012B, "Member 'BP_BtlCalc_C_GetDifficultyParam::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.CalcExpPersonaLevelUp
// 0x0040 (0x0040 - 0x0000)
struct BP_BtlCalc_C_CalcExpPersonaLevelUp final
{
public:
	float                                         Level;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DefaultLevel;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BaseRate;                                          // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rate;                                              // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         N;                                                 // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         C;                                                 // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         B;                                                 // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         A;                                                 // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_CalcExpPersonaLevelUp) == 0x000004, "Wrong alignment on BP_BtlCalc_C_CalcExpPersonaLevelUp");
static_assert(sizeof(BP_BtlCalc_C_CalcExpPersonaLevelUp) == 0x000040, "Wrong size on BP_BtlCalc_C_CalcExpPersonaLevelUp");
static_assert(offsetof(BP_BtlCalc_C_CalcExpPersonaLevelUp, Level) == 0x000000, "Member 'BP_BtlCalc_C_CalcExpPersonaLevelUp::Level' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcExpPersonaLevelUp, DefaultLevel) == 0x000004, "Member 'BP_BtlCalc_C_CalcExpPersonaLevelUp::DefaultLevel' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcExpPersonaLevelUp, ReturnValue) == 0x000008, "Member 'BP_BtlCalc_C_CalcExpPersonaLevelUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcExpPersonaLevelUp, BaseRate) == 0x00000C, "Member 'BP_BtlCalc_C_CalcExpPersonaLevelUp::BaseRate' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcExpPersonaLevelUp, Rate) == 0x000010, "Member 'BP_BtlCalc_C_CalcExpPersonaLevelUp::Rate' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcExpPersonaLevelUp, N) == 0x000014, "Member 'BP_BtlCalc_C_CalcExpPersonaLevelUp::N' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcExpPersonaLevelUp, C) == 0x000018, "Member 'BP_BtlCalc_C_CalcExpPersonaLevelUp::C' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcExpPersonaLevelUp, B) == 0x00001C, "Member 'BP_BtlCalc_C_CalcExpPersonaLevelUp::B' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcExpPersonaLevelUp, A) == 0x000020, "Member 'BP_BtlCalc_C_CalcExpPersonaLevelUp::A' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcExpPersonaLevelUp, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_BtlCalc_C_CalcExpPersonaLevelUp::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcExpPersonaLevelUp, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_BtlCalc_C_CalcExpPersonaLevelUp::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcExpPersonaLevelUp, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00002C, "Member 'BP_BtlCalc_C_CalcExpPersonaLevelUp::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcExpPersonaLevelUp, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000030, "Member 'BP_BtlCalc_C_CalcExpPersonaLevelUp::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcExpPersonaLevelUp, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000034, "Member 'BP_BtlCalc_C_CalcExpPersonaLevelUp::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcExpPersonaLevelUp, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000038, "Member 'BP_BtlCalc_C_CalcExpPersonaLevelUp::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcExpPersonaLevelUp, CallFunc_Add_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_BtlCalc_C_CalcExpPersonaLevelUp::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.Accuracy Player
// 0x0038 (0x0038 - 0x0000)
struct BP_BtlCalc_C_Accuracy_Player final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         N;                                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         A;                                                 // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_2;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_Accuracy_Player) == 0x000004, "Wrong alignment on BP_BtlCalc_C_Accuracy_Player");
static_assert(sizeof(BP_BtlCalc_C_Accuracy_Player) == 0x000038, "Wrong size on BP_BtlCalc_C_Accuracy_Player");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Player, Rate) == 0x000000, "Member 'BP_BtlCalc_C_Accuracy_Player::Rate' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Player, N) == 0x000004, "Member 'BP_BtlCalc_C_Accuracy_Player::N' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Player, A) == 0x000008, "Member 'BP_BtlCalc_C_Accuracy_Player::A' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Player, CallFunc_GetParam_ReturnValue) == 0x00000C, "Member 'BP_BtlCalc_C_Accuracy_Player::CallFunc_GetParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Player, CallFunc_MakeLiteralByte_ReturnValue) == 0x000010, "Member 'BP_BtlCalc_C_Accuracy_Player::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Player, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000014, "Member 'BP_BtlCalc_C_Accuracy_Player::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Player, CallFunc_GetParam_ReturnValue_1) == 0x000018, "Member 'BP_BtlCalc_C_Accuracy_Player::CallFunc_GetParam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Player, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_BtlCalc_C_Accuracy_Player::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Player, CallFunc_Add_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_BtlCalc_C_Accuracy_Player::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Player, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000024, "Member 'BP_BtlCalc_C_Accuracy_Player::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Player, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000028, "Member 'BP_BtlCalc_C_Accuracy_Player::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Player, CallFunc_GetParam_ReturnValue_2) == 0x00002C, "Member 'BP_BtlCalc_C_Accuracy_Player::CallFunc_GetParam_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Player, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000030, "Member 'BP_BtlCalc_C_Accuracy_Player::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Player, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_BtlCalc_C_Accuracy_Player::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.Accuracy Enemy
// 0x006C (0x006C - 0x0000)
struct BP_BtlCalc_C_Accuracy_Enemy final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         N;                                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         B;                                                 // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         A;                                                 // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetParam_ReturnValue_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_2;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_3;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetParam_ReturnValue_4;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_5;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_6;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_Accuracy_Enemy) == 0x000004, "Wrong alignment on BP_BtlCalc_C_Accuracy_Enemy");
static_assert(sizeof(BP_BtlCalc_C_Accuracy_Enemy) == 0x00006C, "Wrong size on BP_BtlCalc_C_Accuracy_Enemy");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Enemy, Rate) == 0x000000, "Member 'BP_BtlCalc_C_Accuracy_Enemy::Rate' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Enemy, N) == 0x000004, "Member 'BP_BtlCalc_C_Accuracy_Enemy::N' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Enemy, B) == 0x000008, "Member 'BP_BtlCalc_C_Accuracy_Enemy::B' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Enemy, A) == 0x00000C, "Member 'BP_BtlCalc_C_Accuracy_Enemy::A' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Enemy, CallFunc_GetParam_ReturnValue) == 0x000010, "Member 'BP_BtlCalc_C_Accuracy_Enemy::CallFunc_GetParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Enemy, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_BtlCalc_C_Accuracy_Enemy::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Enemy, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_BtlCalc_C_Accuracy_Enemy::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Enemy, CallFunc_GetParam_ReturnValue_1) == 0x00001C, "Member 'BP_BtlCalc_C_Accuracy_Enemy::CallFunc_GetParam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Enemy, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000020, "Member 'BP_BtlCalc_C_Accuracy_Enemy::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Enemy, CallFunc_GetParam_ReturnValue_2) == 0x000024, "Member 'BP_BtlCalc_C_Accuracy_Enemy::CallFunc_GetParam_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Enemy, CallFunc_GetParam_ReturnValue_3) == 0x000028, "Member 'BP_BtlCalc_C_Accuracy_Enemy::CallFunc_GetParam_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Enemy, CallFunc_MakeLiteralByte_ReturnValue) == 0x00002C, "Member 'BP_BtlCalc_C_Accuracy_Enemy::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Enemy, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_BtlCalc_C_Accuracy_Enemy::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Enemy, CallFunc_Add_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_BtlCalc_C_Accuracy_Enemy::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Enemy, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000038, "Member 'BP_BtlCalc_C_Accuracy_Enemy::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Enemy, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x00003C, "Member 'BP_BtlCalc_C_Accuracy_Enemy::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Enemy, CallFunc_GetParam_ReturnValue_4) == 0x000040, "Member 'BP_BtlCalc_C_Accuracy_Enemy::CallFunc_GetParam_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Enemy, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000044, "Member 'BP_BtlCalc_C_Accuracy_Enemy::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Enemy, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000048, "Member 'BP_BtlCalc_C_Accuracy_Enemy::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Enemy, CallFunc_GetParam_ReturnValue_5) == 0x00004C, "Member 'BP_BtlCalc_C_Accuracy_Enemy::CallFunc_GetParam_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Enemy, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000050, "Member 'BP_BtlCalc_C_Accuracy_Enemy::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Enemy, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000054, "Member 'BP_BtlCalc_C_Accuracy_Enemy::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Enemy, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000058, "Member 'BP_BtlCalc_C_Accuracy_Enemy::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Enemy, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x00005C, "Member 'BP_BtlCalc_C_Accuracy_Enemy::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Enemy, CallFunc_GetParam_ReturnValue_6) == 0x000060, "Member 'BP_BtlCalc_C_Accuracy_Enemy::CallFunc_GetParam_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Enemy, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000064, "Member 'BP_BtlCalc_C_Accuracy_Enemy::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_Accuracy_Enemy, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000068, "Member 'BP_BtlCalc_C_Accuracy_Enemy::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.GetAllOutAttackSwoonRate
// 0x0004 (0x0004 - 0x0000)
struct BP_BtlCalc_C_GetAllOutAttackSwoonRate final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_GetAllOutAttackSwoonRate) == 0x000004, "Wrong alignment on BP_BtlCalc_C_GetAllOutAttackSwoonRate");
static_assert(sizeof(BP_BtlCalc_C_GetAllOutAttackSwoonRate) == 0x000004, "Wrong size on BP_BtlCalc_C_GetAllOutAttackSwoonRate");
static_assert(offsetof(BP_BtlCalc_C_GetAllOutAttackSwoonRate, ReturnValue) == 0x000000, "Member 'BP_BtlCalc_C_GetAllOutAttackSwoonRate::ReturnValue' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.CalcTheurgiaSkillDamage
// 0x0100 (0x0100 - 0x0000)
struct BP_BtlCalc_C_CalcTheurgiaSkillDamage final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Theurgia_T_FIX_DAMAGE;                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Theurgia_T_DAMAGE;                                 // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Theurgia_T_SKILL;                                  // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Theurgia_T_DFF;                                    // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Theurgia_FIX_DAMAGE;                               // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Theurgia_DAMAGE;                                   // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Theurgia_ATK;                                      // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Theurgia_SKILL;                                    // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Theurgia_DFF;                                      // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sqrt_ReturnValue;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_2;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_3;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_4;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_5;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_6;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_7;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_8;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_9;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckAttackerIsEnemy_ReturnValue;         // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F[0x1];                                       // 0x008F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_10;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_11;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_3;             // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_12;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_9;        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_10;       // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_11;       // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_12;       // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_4;            // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_4;             // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_13;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_5;          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_13;       // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sqrt_ReturnValue_1;                       // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_14;       // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_15;       // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_16;       // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_CalcTheurgiaSkillDamage) == 0x000004, "Wrong alignment on BP_BtlCalc_C_CalcTheurgiaSkillDamage");
static_assert(sizeof(BP_BtlCalc_C_CalcTheurgiaSkillDamage) == 0x000100, "Wrong size on BP_BtlCalc_C_CalcTheurgiaSkillDamage");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, ReturnValue) == 0x000000, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, Theurgia_T_FIX_DAMAGE) == 0x000004, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::Theurgia_T_FIX_DAMAGE' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, Theurgia_T_DAMAGE) == 0x000008, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::Theurgia_T_DAMAGE' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, Theurgia_T_SKILL) == 0x00000C, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::Theurgia_T_SKILL' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, Theurgia_T_DFF) == 0x000010, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::Theurgia_T_DFF' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, Theurgia_FIX_DAMAGE) == 0x000014, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::Theurgia_FIX_DAMAGE' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, Theurgia_DAMAGE) == 0x000018, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::Theurgia_DAMAGE' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, Theurgia_ATK) == 0x00001C, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::Theurgia_ATK' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, Theurgia_SKILL) == 0x000020, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::Theurgia_SKILL' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, Theurgia_DFF) == 0x000024, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::Theurgia_DFF' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_GetParam_ReturnValue) == 0x000030, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_GetParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_GetParam_ReturnValue_1) == 0x000034, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_GetParam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000038, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00003C, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_Sqrt_ReturnValue) == 0x000040, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_Sqrt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000044, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000048, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_GetParam_ReturnValue_2) == 0x00004C, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_GetParam_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_GetParam_ReturnValue_3) == 0x000050, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_GetParam_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_GetParam_ReturnValue_4) == 0x000054, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_GetParam_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_GetParam_ReturnValue_5) == 0x000058, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_GetParam_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x00005C, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_Add_FloatFloat_ReturnValue) == 0x000060, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x000064, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_GetParam_ReturnValue_6) == 0x000068, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_GetParam_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x00006C, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_GetParam_ReturnValue_7) == 0x000070, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_GetParam_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x000074, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_MakeLiteralByte_ReturnValue) == 0x000078, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x00007C, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000080, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_GetParam_ReturnValue_8) == 0x000084, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_GetParam_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_GetParam_ReturnValue_9) == 0x000088, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_GetParam_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x00008C, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_CheckAttackerIsEnemy_ReturnValue) == 0x00008D, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_CheckAttackerIsEnemy_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_Not_PreBool_ReturnValue) == 0x00008E, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000090, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_GetParam_ReturnValue_10) == 0x000094, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_GetParam_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000098, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00009C, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x0000A0, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x0000A4, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_GetParam_ReturnValue_11) == 0x0000A8, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_GetParam_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x0000AC, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x0000B0, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_Conv_ByteToInt_ReturnValue_3) == 0x0000B4, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_Conv_ByteToInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_GetParam_ReturnValue_12) == 0x0000B8, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_GetParam_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_Multiply_FloatFloat_ReturnValue_9) == 0x0000BC, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_Multiply_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0000C0, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_Multiply_FloatFloat_ReturnValue_10) == 0x0000C4, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_Multiply_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_Multiply_FloatFloat_ReturnValue_11) == 0x0000C8, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_Multiply_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x0000CC, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000D0, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_Multiply_FloatFloat_ReturnValue_12) == 0x0000D4, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_Multiply_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_MakeLiteralByte_ReturnValue_4) == 0x0000D8, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_MakeLiteralByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_Conv_ByteToInt_ReturnValue_4) == 0x0000DC, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_Conv_ByteToInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_GetParam_ReturnValue_13) == 0x0000E0, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_GetParam_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_Divide_FloatFloat_ReturnValue_5) == 0x0000E4, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_Divide_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_Multiply_FloatFloat_ReturnValue_13) == 0x0000E8, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_Multiply_FloatFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_Sqrt_ReturnValue_1) == 0x0000EC, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_Sqrt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_Multiply_FloatFloat_ReturnValue_14) == 0x0000F0, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_Multiply_FloatFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_Multiply_FloatFloat_ReturnValue_15) == 0x0000F4, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_Multiply_FloatFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x0000F8, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_CalcTheurgiaSkillDamage, CallFunc_Multiply_FloatFloat_ReturnValue_16) == 0x0000FC, "Member 'BP_BtlCalc_C_CalcTheurgiaSkillDamage::CallFunc_Multiply_FloatFloat_ReturnValue_16' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.GetSaleMerchMoneyRate
// 0x002C (0x002C - 0x0000)
struct BP_BtlCalc_C_GetSaleMerchMoneyRate final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBtlCalcParam                         CallFunc_GetDifficultyParam_Param;                 // 0x0004(0x0028)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_GetSaleMerchMoneyRate) == 0x000004, "Wrong alignment on BP_BtlCalc_C_GetSaleMerchMoneyRate");
static_assert(sizeof(BP_BtlCalc_C_GetSaleMerchMoneyRate) == 0x00002C, "Wrong size on BP_BtlCalc_C_GetSaleMerchMoneyRate");
static_assert(offsetof(BP_BtlCalc_C_GetSaleMerchMoneyRate, ReturnValue) == 0x000000, "Member 'BP_BtlCalc_C_GetSaleMerchMoneyRate::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetSaleMerchMoneyRate, CallFunc_GetDifficultyParam_Param) == 0x000004, "Member 'BP_BtlCalc_C_GetSaleMerchMoneyRate::CallFunc_GetDifficultyParam_Param' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.GetBadStatusRateFromEnemy
// 0x002C (0x002C - 0x0000)
struct BP_BtlCalc_C_GetBadStatusRateFromEnemy final
{
public:
	float                                         BadStatus_Hit_Rate;                                // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBtlCalcParam                         CallFunc_GetDifficultyParam_Param;                 // 0x0004(0x0028)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_GetBadStatusRateFromEnemy) == 0x000004, "Wrong alignment on BP_BtlCalc_C_GetBadStatusRateFromEnemy");
static_assert(sizeof(BP_BtlCalc_C_GetBadStatusRateFromEnemy) == 0x00002C, "Wrong size on BP_BtlCalc_C_GetBadStatusRateFromEnemy");
static_assert(offsetof(BP_BtlCalc_C_GetBadStatusRateFromEnemy, BadStatus_Hit_Rate) == 0x000000, "Member 'BP_BtlCalc_C_GetBadStatusRateFromEnemy::BadStatus_Hit_Rate' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetBadStatusRateFromEnemy, CallFunc_GetDifficultyParam_Param) == 0x000004, "Member 'BP_BtlCalc_C_GetBadStatusRateFromEnemy::CallFunc_GetDifficultyParam_Param' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.GetBadStatusRateFromPlayer
// 0x002C (0x002C - 0x0000)
struct BP_BtlCalc_C_GetBadStatusRateFromPlayer final
{
public:
	float                                         BadStatus_Hit_Rate;                                // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBtlCalcParam                         CallFunc_GetDifficultyParam_Param;                 // 0x0004(0x0028)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_GetBadStatusRateFromPlayer) == 0x000004, "Wrong alignment on BP_BtlCalc_C_GetBadStatusRateFromPlayer");
static_assert(sizeof(BP_BtlCalc_C_GetBadStatusRateFromPlayer) == 0x00002C, "Wrong size on BP_BtlCalc_C_GetBadStatusRateFromPlayer");
static_assert(offsetof(BP_BtlCalc_C_GetBadStatusRateFromPlayer, BadStatus_Hit_Rate) == 0x000000, "Member 'BP_BtlCalc_C_GetBadStatusRateFromPlayer::BadStatus_Hit_Rate' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetBadStatusRateFromPlayer, CallFunc_GetDifficultyParam_Param) == 0x000004, "Member 'BP_BtlCalc_C_GetBadStatusRateFromPlayer::CallFunc_GetDifficultyParam_Param' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.GetAttackSupportRatio
// 0x0014 (0x0014 - 0x0000)
struct BP_BtlCalc_C_GetAttackSupportRatio final
{
public:
	bool                                          IsPlayer;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Point;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Power;                                             // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCalc_C_GetAttackSupportRatio) == 0x000004, "Wrong alignment on BP_BtlCalc_C_GetAttackSupportRatio");
static_assert(sizeof(BP_BtlCalc_C_GetAttackSupportRatio) == 0x000014, "Wrong size on BP_BtlCalc_C_GetAttackSupportRatio");
static_assert(offsetof(BP_BtlCalc_C_GetAttackSupportRatio, IsPlayer) == 0x000000, "Member 'BP_BtlCalc_C_GetAttackSupportRatio::IsPlayer' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetAttackSupportRatio, Point) == 0x000004, "Member 'BP_BtlCalc_C_GetAttackSupportRatio::Point' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetAttackSupportRatio, ReturnValue) == 0x000008, "Member 'BP_BtlCalc_C_GetAttackSupportRatio::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetAttackSupportRatio, Power) == 0x00000C, "Member 'BP_BtlCalc_C_GetAttackSupportRatio::Power' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetAttackSupportRatio, K2Node_SwitchInteger_CmpSuccess) == 0x000010, "Member 'BP_BtlCalc_C_GetAttackSupportRatio::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetAttackSupportRatio, K2Node_SwitchInteger_CmpSuccess_1) == 0x000011, "Member 'BP_BtlCalc_C_GetAttackSupportRatio::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.GetDefenseSupportRatio
// 0x0014 (0x0014 - 0x0000)
struct BP_BtlCalc_C_GetDefenseSupportRatio final
{
public:
	bool                                          IsPlayer;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Point;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Power;                                             // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCalc_C_GetDefenseSupportRatio) == 0x000004, "Wrong alignment on BP_BtlCalc_C_GetDefenseSupportRatio");
static_assert(sizeof(BP_BtlCalc_C_GetDefenseSupportRatio) == 0x000014, "Wrong size on BP_BtlCalc_C_GetDefenseSupportRatio");
static_assert(offsetof(BP_BtlCalc_C_GetDefenseSupportRatio, IsPlayer) == 0x000000, "Member 'BP_BtlCalc_C_GetDefenseSupportRatio::IsPlayer' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetDefenseSupportRatio, Point) == 0x000004, "Member 'BP_BtlCalc_C_GetDefenseSupportRatio::Point' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetDefenseSupportRatio, ReturnValue) == 0x000008, "Member 'BP_BtlCalc_C_GetDefenseSupportRatio::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetDefenseSupportRatio, Power) == 0x00000C, "Member 'BP_BtlCalc_C_GetDefenseSupportRatio::Power' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetDefenseSupportRatio, K2Node_SwitchInteger_CmpSuccess) == 0x000010, "Member 'BP_BtlCalc_C_GetDefenseSupportRatio::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetDefenseSupportRatio, K2Node_SwitchInteger_CmpSuccess_1) == 0x000011, "Member 'BP_BtlCalc_C_GetDefenseSupportRatio::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.GetSpeedSupportRatio
// 0x0014 (0x0014 - 0x0000)
struct BP_BtlCalc_C_GetSpeedSupportRatio final
{
public:
	bool                                          IsPlayer;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Point;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Power;                                             // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCalc_C_GetSpeedSupportRatio) == 0x000004, "Wrong alignment on BP_BtlCalc_C_GetSpeedSupportRatio");
static_assert(sizeof(BP_BtlCalc_C_GetSpeedSupportRatio) == 0x000014, "Wrong size on BP_BtlCalc_C_GetSpeedSupportRatio");
static_assert(offsetof(BP_BtlCalc_C_GetSpeedSupportRatio, IsPlayer) == 0x000000, "Member 'BP_BtlCalc_C_GetSpeedSupportRatio::IsPlayer' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetSpeedSupportRatio, Point) == 0x000004, "Member 'BP_BtlCalc_C_GetSpeedSupportRatio::Point' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetSpeedSupportRatio, ReturnValue) == 0x000008, "Member 'BP_BtlCalc_C_GetSpeedSupportRatio::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetSpeedSupportRatio, Power) == 0x00000C, "Member 'BP_BtlCalc_C_GetSpeedSupportRatio::Power' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetSpeedSupportRatio, K2Node_SwitchInteger_CmpSuccess) == 0x000010, "Member 'BP_BtlCalc_C_GetSpeedSupportRatio::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetSpeedSupportRatio, K2Node_SwitchInteger_CmpSuccess_1) == 0x000011, "Member 'BP_BtlCalc_C_GetSpeedSupportRatio::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.GetMagicBonusRecovery
// 0x0090 (0x0090 - 0x0000)
struct BP_BtlCalc_C_GetMagicBonusRecovery final
{
public:
	int32                                         MagicAttacker;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Value;                                             // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDebug_ReturnValue;                      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCalc_C_GetMagicBonusRecovery) == 0x000008, "Wrong alignment on BP_BtlCalc_C_GetMagicBonusRecovery");
static_assert(sizeof(BP_BtlCalc_C_GetMagicBonusRecovery) == 0x000090, "Wrong size on BP_BtlCalc_C_GetMagicBonusRecovery");
static_assert(offsetof(BP_BtlCalc_C_GetMagicBonusRecovery, MagicAttacker) == 0x000000, "Member 'BP_BtlCalc_C_GetMagicBonusRecovery::MagicAttacker' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetMagicBonusRecovery, ReturnValue) == 0x000004, "Member 'BP_BtlCalc_C_GetMagicBonusRecovery::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetMagicBonusRecovery, Index_0) == 0x000008, "Member 'BP_BtlCalc_C_GetMagicBonusRecovery::Index_0' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetMagicBonusRecovery, Value) == 0x00000C, "Member 'BP_BtlCalc_C_GetMagicBonusRecovery::Value' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetMagicBonusRecovery, CallFunc_Concat_StrStr_ReturnValue) == 0x000010, "Member 'BP_BtlCalc_C_GetMagicBonusRecovery::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetMagicBonusRecovery, CallFunc_Clamp_ReturnValue) == 0x000020, "Member 'BP_BtlCalc_C_GetMagicBonusRecovery::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetMagicBonusRecovery, CallFunc_Conv_IntToString_ReturnValue) == 0x000028, "Member 'BP_BtlCalc_C_GetMagicBonusRecovery::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetMagicBonusRecovery, CallFunc_Subtract_IntInt_ReturnValue) == 0x000038, "Member 'BP_BtlCalc_C_GetMagicBonusRecovery::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetMagicBonusRecovery, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000040, "Member 'BP_BtlCalc_C_GetMagicBonusRecovery::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetMagicBonusRecovery, CallFunc_Divide_IntInt_ReturnValue) == 0x000050, "Member 'BP_BtlCalc_C_GetMagicBonusRecovery::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetMagicBonusRecovery, CallFunc_IsDebug_ReturnValue) == 0x000054, "Member 'BP_BtlCalc_C_GetMagicBonusRecovery::CallFunc_IsDebug_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetMagicBonusRecovery, K2Node_MakeStruct_LinearColor) == 0x000058, "Member 'BP_BtlCalc_C_GetMagicBonusRecovery::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetMagicBonusRecovery, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000068, "Member 'BP_BtlCalc_C_GetMagicBonusRecovery::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetMagicBonusRecovery, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000078, "Member 'BP_BtlCalc_C_GetMagicBonusRecovery::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetMagicBonusRecovery, K2Node_SwitchInteger_CmpSuccess) == 0x000088, "Member 'BP_BtlCalc_C_GetMagicBonusRecovery::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.GetMagicBonusDamage
// 0x0088 (0x0088 - 0x0000)
struct BP_BtlCalc_C_GetMagicBonusDamage final
{
public:
	int32                                         MagicAttacker;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Value;                                             // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDebug_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCalc_C_GetMagicBonusDamage) == 0x000008, "Wrong alignment on BP_BtlCalc_C_GetMagicBonusDamage");
static_assert(sizeof(BP_BtlCalc_C_GetMagicBonusDamage) == 0x000088, "Wrong size on BP_BtlCalc_C_GetMagicBonusDamage");
static_assert(offsetof(BP_BtlCalc_C_GetMagicBonusDamage, MagicAttacker) == 0x000000, "Member 'BP_BtlCalc_C_GetMagicBonusDamage::MagicAttacker' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetMagicBonusDamage, ReturnValue) == 0x000004, "Member 'BP_BtlCalc_C_GetMagicBonusDamage::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetMagicBonusDamage, Index_0) == 0x000008, "Member 'BP_BtlCalc_C_GetMagicBonusDamage::Index_0' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetMagicBonusDamage, Value) == 0x00000C, "Member 'BP_BtlCalc_C_GetMagicBonusDamage::Value' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetMagicBonusDamage, K2Node_MakeStruct_LinearColor) == 0x000010, "Member 'BP_BtlCalc_C_GetMagicBonusDamage::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetMagicBonusDamage, CallFunc_Conv_IntToString_ReturnValue) == 0x000020, "Member 'BP_BtlCalc_C_GetMagicBonusDamage::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetMagicBonusDamage, CallFunc_Divide_IntInt_ReturnValue) == 0x000030, "Member 'BP_BtlCalc_C_GetMagicBonusDamage::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetMagicBonusDamage, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'BP_BtlCalc_C_GetMagicBonusDamage::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetMagicBonusDamage, CallFunc_IsDebug_ReturnValue) == 0x000048, "Member 'BP_BtlCalc_C_GetMagicBonusDamage::CallFunc_IsDebug_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetMagicBonusDamage, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000050, "Member 'BP_BtlCalc_C_GetMagicBonusDamage::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetMagicBonusDamage, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000060, "Member 'BP_BtlCalc_C_GetMagicBonusDamage::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetMagicBonusDamage, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000070, "Member 'BP_BtlCalc_C_GetMagicBonusDamage::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetMagicBonusDamage, K2Node_SwitchInteger_CmpSuccess) == 0x000080, "Member 'BP_BtlCalc_C_GetMagicBonusDamage::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.GetLevelAccuracyRatio
// 0x000C (0x000C - 0x0000)
struct BP_BtlCalc_C_GetLevelAccuracyRatio final
{
public:
	int32                                         LevelAttacker;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LevelTarget;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_GetLevelAccuracyRatio) == 0x000004, "Wrong alignment on BP_BtlCalc_C_GetLevelAccuracyRatio");
static_assert(sizeof(BP_BtlCalc_C_GetLevelAccuracyRatio) == 0x00000C, "Wrong size on BP_BtlCalc_C_GetLevelAccuracyRatio");
static_assert(offsetof(BP_BtlCalc_C_GetLevelAccuracyRatio, LevelAttacker) == 0x000000, "Member 'BP_BtlCalc_C_GetLevelAccuracyRatio::LevelAttacker' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelAccuracyRatio, LevelTarget) == 0x000004, "Member 'BP_BtlCalc_C_GetLevelAccuracyRatio::LevelTarget' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelAccuracyRatio, ReturnValue) == 0x000008, "Member 'BP_BtlCalc_C_GetLevelAccuracyRatio::ReturnValue' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.GetLevelDamageBossRatio
// 0x00B0 (0x00B0 - 0x0000)
struct BP_BtlCalc_C_GetLevelDamageBossRatio final
{
public:
	int32                                         LevelAttacker;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LevelTarget;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBtlCalcRatio                         Work;                                              // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Distance;                                          // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Ratio;                                             // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDebug_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBtlCalcRatio                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCalc_C_GetLevelDamageBossRatio) == 0x000008, "Wrong alignment on BP_BtlCalc_C_GetLevelDamageBossRatio");
static_assert(sizeof(BP_BtlCalc_C_GetLevelDamageBossRatio) == 0x0000B0, "Wrong size on BP_BtlCalc_C_GetLevelDamageBossRatio");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageBossRatio, LevelAttacker) == 0x000000, "Member 'BP_BtlCalc_C_GetLevelDamageBossRatio::LevelAttacker' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageBossRatio, LevelTarget) == 0x000004, "Member 'BP_BtlCalc_C_GetLevelDamageBossRatio::LevelTarget' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageBossRatio, ReturnValue) == 0x000008, "Member 'BP_BtlCalc_C_GetLevelDamageBossRatio::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageBossRatio, Work) == 0x00000C, "Member 'BP_BtlCalc_C_GetLevelDamageBossRatio::Work' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageBossRatio, Distance) == 0x000010, "Member 'BP_BtlCalc_C_GetLevelDamageBossRatio::Distance' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageBossRatio, Ratio) == 0x000014, "Member 'BP_BtlCalc_C_GetLevelDamageBossRatio::Ratio' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageBossRatio, K2Node_MakeStruct_LinearColor) == 0x000018, "Member 'BP_BtlCalc_C_GetLevelDamageBossRatio::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageBossRatio, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'BP_BtlCalc_C_GetLevelDamageBossRatio::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageBossRatio, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BP_BtlCalc_C_GetLevelDamageBossRatio::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageBossRatio, CallFunc_IsDebug_ReturnValue) == 0x000040, "Member 'BP_BtlCalc_C_GetLevelDamageBossRatio::CallFunc_IsDebug_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageBossRatio, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000048, "Member 'BP_BtlCalc_C_GetLevelDamageBossRatio::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageBossRatio, CallFunc_Conv_IntToString_ReturnValue) == 0x000058, "Member 'BP_BtlCalc_C_GetLevelDamageBossRatio::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageBossRatio, CallFunc_Clamp_ReturnValue) == 0x000068, "Member 'BP_BtlCalc_C_GetLevelDamageBossRatio::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageBossRatio, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000070, "Member 'BP_BtlCalc_C_GetLevelDamageBossRatio::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageBossRatio, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000080, "Member 'BP_BtlCalc_C_GetLevelDamageBossRatio::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageBossRatio, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000090, "Member 'BP_BtlCalc_C_GetLevelDamageBossRatio::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageBossRatio, CallFunc_Conv_StringToName_ReturnValue) == 0x0000A0, "Member 'BP_BtlCalc_C_GetLevelDamageBossRatio::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageBossRatio, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000A8, "Member 'BP_BtlCalc_C_GetLevelDamageBossRatio::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageBossRatio, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000AC, "Member 'BP_BtlCalc_C_GetLevelDamageBossRatio::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.GetLevelDamageRatio
// 0x00B0 (0x00B0 - 0x0000)
struct BP_BtlCalc_C_GetLevelDamageRatio final
{
public:
	int32                                         LevelAttacker;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LevelTarget;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBtlCalcRatio                         Work;                                              // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Ratio;                                             // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Distance;                                          // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDebug_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFBtlCalcRatio                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_GetLevelDamageRatio) == 0x000008, "Wrong alignment on BP_BtlCalc_C_GetLevelDamageRatio");
static_assert(sizeof(BP_BtlCalc_C_GetLevelDamageRatio) == 0x0000B0, "Wrong size on BP_BtlCalc_C_GetLevelDamageRatio");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageRatio, LevelAttacker) == 0x000000, "Member 'BP_BtlCalc_C_GetLevelDamageRatio::LevelAttacker' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageRatio, LevelTarget) == 0x000004, "Member 'BP_BtlCalc_C_GetLevelDamageRatio::LevelTarget' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageRatio, ReturnValue) == 0x000008, "Member 'BP_BtlCalc_C_GetLevelDamageRatio::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageRatio, Work) == 0x00000C, "Member 'BP_BtlCalc_C_GetLevelDamageRatio::Work' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageRatio, Ratio) == 0x000010, "Member 'BP_BtlCalc_C_GetLevelDamageRatio::Ratio' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageRatio, Distance) == 0x000014, "Member 'BP_BtlCalc_C_GetLevelDamageRatio::Distance' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageRatio, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'BP_BtlCalc_C_GetLevelDamageRatio::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageRatio, K2Node_MakeStruct_LinearColor) == 0x00001C, "Member 'BP_BtlCalc_C_GetLevelDamageRatio::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageRatio, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BP_BtlCalc_C_GetLevelDamageRatio::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageRatio, CallFunc_IsDebug_ReturnValue) == 0x000040, "Member 'BP_BtlCalc_C_GetLevelDamageRatio::CallFunc_IsDebug_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageRatio, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000048, "Member 'BP_BtlCalc_C_GetLevelDamageRatio::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageRatio, CallFunc_Conv_IntToString_ReturnValue) == 0x000058, "Member 'BP_BtlCalc_C_GetLevelDamageRatio::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageRatio, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000068, "Member 'BP_BtlCalc_C_GetLevelDamageRatio::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageRatio, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000078, "Member 'BP_BtlCalc_C_GetLevelDamageRatio::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageRatio, CallFunc_Conv_StringToName_ReturnValue) == 0x000088, "Member 'BP_BtlCalc_C_GetLevelDamageRatio::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageRatio, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000090, "Member 'BP_BtlCalc_C_GetLevelDamageRatio::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageRatio, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000A0, "Member 'BP_BtlCalc_C_GetLevelDamageRatio::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageRatio, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000A4, "Member 'BP_BtlCalc_C_GetLevelDamageRatio::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelDamageRatio, CallFunc_Clamp_ReturnValue) == 0x0000A8, "Member 'BP_BtlCalc_C_GetLevelDamageRatio::CallFunc_Clamp_ReturnValue' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.GetLevelExpRatio
// 0x0038 (0x0038 - 0x0000)
struct BP_BtlCalc_C_GetLevelExpRatio final
{
public:
	int32                                         LevelDifference;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBtlCalcRatio                         Work;                                              // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Ratio;                                             // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBtlCalcRatio                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCalc_C_GetLevelExpRatio) == 0x000008, "Wrong alignment on BP_BtlCalc_C_GetLevelExpRatio");
static_assert(sizeof(BP_BtlCalc_C_GetLevelExpRatio) == 0x000038, "Wrong size on BP_BtlCalc_C_GetLevelExpRatio");
static_assert(offsetof(BP_BtlCalc_C_GetLevelExpRatio, LevelDifference) == 0x000000, "Member 'BP_BtlCalc_C_GetLevelExpRatio::LevelDifference' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelExpRatio, ReturnValue) == 0x000004, "Member 'BP_BtlCalc_C_GetLevelExpRatio::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelExpRatio, Work) == 0x000008, "Member 'BP_BtlCalc_C_GetLevelExpRatio::Work' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelExpRatio, Index_0) == 0x00000C, "Member 'BP_BtlCalc_C_GetLevelExpRatio::Index_0' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelExpRatio, Ratio) == 0x000010, "Member 'BP_BtlCalc_C_GetLevelExpRatio::Ratio' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelExpRatio, CallFunc_Clamp_ReturnValue) == 0x000014, "Member 'BP_BtlCalc_C_GetLevelExpRatio::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelExpRatio, CallFunc_Conv_IntToString_ReturnValue) == 0x000018, "Member 'BP_BtlCalc_C_GetLevelExpRatio::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelExpRatio, CallFunc_Conv_StringToName_ReturnValue) == 0x000028, "Member 'BP_BtlCalc_C_GetLevelExpRatio::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelExpRatio, CallFunc_GetDataTableRowFromName_OutRow) == 0x000030, "Member 'BP_BtlCalc_C_GetLevelExpRatio::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetLevelExpRatio, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000034, "Member 'BP_BtlCalc_C_GetLevelExpRatio::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.GetShuffleTimeOccurPercent
// 0x0020 (0x0020 - 0x0000)
struct BP_BtlCalc_C_GetShuffleTimeOccurPercent final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         N;                                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShuffleProbability;                                // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OneMoreNum;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_GetShuffleTimeOccurPercent) == 0x000004, "Wrong alignment on BP_BtlCalc_C_GetShuffleTimeOccurPercent");
static_assert(sizeof(BP_BtlCalc_C_GetShuffleTimeOccurPercent) == 0x000020, "Wrong size on BP_BtlCalc_C_GetShuffleTimeOccurPercent");
static_assert(offsetof(BP_BtlCalc_C_GetShuffleTimeOccurPercent, ReturnValue) == 0x000000, "Member 'BP_BtlCalc_C_GetShuffleTimeOccurPercent::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetShuffleTimeOccurPercent, N) == 0x000004, "Member 'BP_BtlCalc_C_GetShuffleTimeOccurPercent::N' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetShuffleTimeOccurPercent, ShuffleProbability) == 0x000008, "Member 'BP_BtlCalc_C_GetShuffleTimeOccurPercent::ShuffleProbability' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetShuffleTimeOccurPercent, OneMoreNum) == 0x00000C, "Member 'BP_BtlCalc_C_GetShuffleTimeOccurPercent::OneMoreNum' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetShuffleTimeOccurPercent, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000010, "Member 'BP_BtlCalc_C_GetShuffleTimeOccurPercent::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetShuffleTimeOccurPercent, CallFunc_Add_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_BtlCalc_C_GetShuffleTimeOccurPercent::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetShuffleTimeOccurPercent, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_BtlCalc_C_GetShuffleTimeOccurPercent::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetShuffleTimeOccurPercent, CallFunc_FTrunc_ReturnValue) == 0x00001C, "Member 'BP_BtlCalc_C_GetShuffleTimeOccurPercent::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.AttackRatioByANGER
// 0x0004 (0x0004 - 0x0000)
struct BP_BtlCalc_C_AttackRatioByANGER final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_AttackRatioByANGER) == 0x000004, "Wrong alignment on BP_BtlCalc_C_AttackRatioByANGER");
static_assert(sizeof(BP_BtlCalc_C_AttackRatioByANGER) == 0x000004, "Wrong size on BP_BtlCalc_C_AttackRatioByANGER");
static_assert(offsetof(BP_BtlCalc_C_AttackRatioByANGER, ReturnValue) == 0x000000, "Member 'BP_BtlCalc_C_AttackRatioByANGER::ReturnValue' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.DamageRatioByANGER
// 0x0004 (0x0004 - 0x0000)
struct BP_BtlCalc_C_DamageRatioByANGER final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_DamageRatioByANGER) == 0x000004, "Wrong alignment on BP_BtlCalc_C_DamageRatioByANGER");
static_assert(sizeof(BP_BtlCalc_C_DamageRatioByANGER) == 0x000004, "Wrong size on BP_BtlCalc_C_DamageRatioByANGER");
static_assert(offsetof(BP_BtlCalc_C_DamageRatioByANGER, ReturnValue) == 0x000000, "Member 'BP_BtlCalc_C_DamageRatioByANGER::ReturnValue' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.DamageRatioByOVERHEAT
// 0x0004 (0x0004 - 0x0000)
struct BP_BtlCalc_C_DamageRatioByOVERHEAT final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_DamageRatioByOVERHEAT) == 0x000004, "Wrong alignment on BP_BtlCalc_C_DamageRatioByOVERHEAT");
static_assert(sizeof(BP_BtlCalc_C_DamageRatioByOVERHEAT) == 0x000004, "Wrong size on BP_BtlCalc_C_DamageRatioByOVERHEAT");
static_assert(offsetof(BP_BtlCalc_C_DamageRatioByOVERHEAT, ReturnValue) == 0x000000, "Member 'BP_BtlCalc_C_DamageRatioByOVERHEAT::ReturnValue' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.DamageRatioByUPSET
// 0x0004 (0x0004 - 0x0000)
struct BP_BtlCalc_C_DamageRatioByUPSET final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_DamageRatioByUPSET) == 0x000004, "Wrong alignment on BP_BtlCalc_C_DamageRatioByUPSET");
static_assert(sizeof(BP_BtlCalc_C_DamageRatioByUPSET) == 0x000004, "Wrong size on BP_BtlCalc_C_DamageRatioByUPSET");
static_assert(offsetof(BP_BtlCalc_C_DamageRatioByUPSET, ReturnValue) == 0x000000, "Member 'BP_BtlCalc_C_DamageRatioByUPSET::ReturnValue' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.RecoveryRatioFromANGER
// 0x003C (0x003C - 0x0000)
struct BP_BtlCalc_C_RecoveryRatioFromANGER final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         N;                                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         A;                                                 // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_2;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCalc_C_RecoveryRatioFromANGER) == 0x000004, "Wrong alignment on BP_BtlCalc_C_RecoveryRatioFromANGER");
static_assert(sizeof(BP_BtlCalc_C_RecoveryRatioFromANGER) == 0x00003C, "Wrong size on BP_BtlCalc_C_RecoveryRatioFromANGER");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromANGER, ReturnValue) == 0x000000, "Member 'BP_BtlCalc_C_RecoveryRatioFromANGER::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromANGER, N) == 0x000004, "Member 'BP_BtlCalc_C_RecoveryRatioFromANGER::N' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromANGER, A) == 0x000008, "Member 'BP_BtlCalc_C_RecoveryRatioFromANGER::A' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromANGER, CallFunc_GetParam_ReturnValue) == 0x00000C, "Member 'BP_BtlCalc_C_RecoveryRatioFromANGER::CallFunc_GetParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromANGER, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_BtlCalc_C_RecoveryRatioFromANGER::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromANGER, CallFunc_MakeLiteralByte_ReturnValue) == 0x000014, "Member 'BP_BtlCalc_C_RecoveryRatioFromANGER::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromANGER, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_BtlCalc_C_RecoveryRatioFromANGER::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromANGER, CallFunc_Add_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_BtlCalc_C_RecoveryRatioFromANGER::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromANGER, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000020, "Member 'BP_BtlCalc_C_RecoveryRatioFromANGER::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromANGER, CallFunc_GetParam_ReturnValue_1) == 0x000024, "Member 'BP_BtlCalc_C_RecoveryRatioFromANGER::CallFunc_GetParam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromANGER, CallFunc_GetParam_ReturnValue_2) == 0x000028, "Member 'BP_BtlCalc_C_RecoveryRatioFromANGER::CallFunc_GetParam_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromANGER, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00002C, "Member 'BP_BtlCalc_C_RecoveryRatioFromANGER::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromANGER, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_BtlCalc_C_RecoveryRatioFromANGER::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromANGER, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000034, "Member 'BP_BtlCalc_C_RecoveryRatioFromANGER::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromANGER, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_BtlCalc_C_RecoveryRatioFromANGER::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.RecoveryRatioFromCHARM
// 0x003C (0x003C - 0x0000)
struct BP_BtlCalc_C_RecoveryRatioFromCHARM final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         N;                                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         A;                                                 // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetParam_ReturnValue_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_2;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_RecoveryRatioFromCHARM) == 0x000004, "Wrong alignment on BP_BtlCalc_C_RecoveryRatioFromCHARM");
static_assert(sizeof(BP_BtlCalc_C_RecoveryRatioFromCHARM) == 0x00003C, "Wrong size on BP_BtlCalc_C_RecoveryRatioFromCHARM");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromCHARM, ReturnValue) == 0x000000, "Member 'BP_BtlCalc_C_RecoveryRatioFromCHARM::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromCHARM, N) == 0x000004, "Member 'BP_BtlCalc_C_RecoveryRatioFromCHARM::N' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromCHARM, A) == 0x000008, "Member 'BP_BtlCalc_C_RecoveryRatioFromCHARM::A' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromCHARM, CallFunc_GetParam_ReturnValue) == 0x00000C, "Member 'BP_BtlCalc_C_RecoveryRatioFromCHARM::CallFunc_GetParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromCHARM, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_BtlCalc_C_RecoveryRatioFromCHARM::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromCHARM, CallFunc_GetParam_ReturnValue_1) == 0x000014, "Member 'BP_BtlCalc_C_RecoveryRatioFromCHARM::CallFunc_GetParam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromCHARM, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_BtlCalc_C_RecoveryRatioFromCHARM::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromCHARM, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_BtlCalc_C_RecoveryRatioFromCHARM::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromCHARM, CallFunc_Add_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_BtlCalc_C_RecoveryRatioFromCHARM::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromCHARM, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000024, "Member 'BP_BtlCalc_C_RecoveryRatioFromCHARM::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromCHARM, CallFunc_MakeLiteralByte_ReturnValue) == 0x000028, "Member 'BP_BtlCalc_C_RecoveryRatioFromCHARM::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromCHARM, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00002C, "Member 'BP_BtlCalc_C_RecoveryRatioFromCHARM::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromCHARM, CallFunc_GetParam_ReturnValue_2) == 0x000030, "Member 'BP_BtlCalc_C_RecoveryRatioFromCHARM::CallFunc_GetParam_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromCHARM, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_BtlCalc_C_RecoveryRatioFromCHARM::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromCHARM, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000038, "Member 'BP_BtlCalc_C_RecoveryRatioFromCHARM::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.RecoveryRatioFromFEAR
// 0x003C (0x003C - 0x0000)
struct BP_BtlCalc_C_RecoveryRatioFromFEAR final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         N;                                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         A;                                                 // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_2;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCalc_C_RecoveryRatioFromFEAR) == 0x000004, "Wrong alignment on BP_BtlCalc_C_RecoveryRatioFromFEAR");
static_assert(sizeof(BP_BtlCalc_C_RecoveryRatioFromFEAR) == 0x00003C, "Wrong size on BP_BtlCalc_C_RecoveryRatioFromFEAR");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromFEAR, ReturnValue) == 0x000000, "Member 'BP_BtlCalc_C_RecoveryRatioFromFEAR::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromFEAR, N) == 0x000004, "Member 'BP_BtlCalc_C_RecoveryRatioFromFEAR::N' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromFEAR, A) == 0x000008, "Member 'BP_BtlCalc_C_RecoveryRatioFromFEAR::A' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromFEAR, CallFunc_GetParam_ReturnValue) == 0x00000C, "Member 'BP_BtlCalc_C_RecoveryRatioFromFEAR::CallFunc_GetParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromFEAR, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_BtlCalc_C_RecoveryRatioFromFEAR::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromFEAR, CallFunc_MakeLiteralByte_ReturnValue) == 0x000014, "Member 'BP_BtlCalc_C_RecoveryRatioFromFEAR::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromFEAR, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_BtlCalc_C_RecoveryRatioFromFEAR::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromFEAR, CallFunc_Add_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_BtlCalc_C_RecoveryRatioFromFEAR::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromFEAR, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000020, "Member 'BP_BtlCalc_C_RecoveryRatioFromFEAR::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromFEAR, CallFunc_GetParam_ReturnValue_1) == 0x000024, "Member 'BP_BtlCalc_C_RecoveryRatioFromFEAR::CallFunc_GetParam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromFEAR, CallFunc_GetParam_ReturnValue_2) == 0x000028, "Member 'BP_BtlCalc_C_RecoveryRatioFromFEAR::CallFunc_GetParam_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromFEAR, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00002C, "Member 'BP_BtlCalc_C_RecoveryRatioFromFEAR::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromFEAR, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_BtlCalc_C_RecoveryRatioFromFEAR::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromFEAR, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000034, "Member 'BP_BtlCalc_C_RecoveryRatioFromFEAR::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromFEAR, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_BtlCalc_C_RecoveryRatioFromFEAR::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.RecoveryRatioFromPANIC
// 0x003C (0x003C - 0x0000)
struct BP_BtlCalc_C_RecoveryRatioFromPANIC final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         N;                                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         A;                                                 // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_2;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCalc_C_RecoveryRatioFromPANIC) == 0x000004, "Wrong alignment on BP_BtlCalc_C_RecoveryRatioFromPANIC");
static_assert(sizeof(BP_BtlCalc_C_RecoveryRatioFromPANIC) == 0x00003C, "Wrong size on BP_BtlCalc_C_RecoveryRatioFromPANIC");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromPANIC, ReturnValue) == 0x000000, "Member 'BP_BtlCalc_C_RecoveryRatioFromPANIC::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromPANIC, N) == 0x000004, "Member 'BP_BtlCalc_C_RecoveryRatioFromPANIC::N' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromPANIC, A) == 0x000008, "Member 'BP_BtlCalc_C_RecoveryRatioFromPANIC::A' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromPANIC, CallFunc_GetParam_ReturnValue) == 0x00000C, "Member 'BP_BtlCalc_C_RecoveryRatioFromPANIC::CallFunc_GetParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromPANIC, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_BtlCalc_C_RecoveryRatioFromPANIC::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromPANIC, CallFunc_MakeLiteralByte_ReturnValue) == 0x000014, "Member 'BP_BtlCalc_C_RecoveryRatioFromPANIC::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromPANIC, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_BtlCalc_C_RecoveryRatioFromPANIC::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromPANIC, CallFunc_Add_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_BtlCalc_C_RecoveryRatioFromPANIC::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromPANIC, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000020, "Member 'BP_BtlCalc_C_RecoveryRatioFromPANIC::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromPANIC, CallFunc_GetParam_ReturnValue_1) == 0x000024, "Member 'BP_BtlCalc_C_RecoveryRatioFromPANIC::CallFunc_GetParam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromPANIC, CallFunc_GetParam_ReturnValue_2) == 0x000028, "Member 'BP_BtlCalc_C_RecoveryRatioFromPANIC::CallFunc_GetParam_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromPANIC, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00002C, "Member 'BP_BtlCalc_C_RecoveryRatioFromPANIC::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromPANIC, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_BtlCalc_C_RecoveryRatioFromPANIC::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromPANIC, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000034, "Member 'BP_BtlCalc_C_RecoveryRatioFromPANIC::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromPANIC, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_BtlCalc_C_RecoveryRatioFromPANIC::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.RecoveryRatioFromUPSET
// 0x003C (0x003C - 0x0000)
struct BP_BtlCalc_C_RecoveryRatioFromUPSET final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         N;                                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         A;                                                 // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetParam_ReturnValue_2;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCalc_C_RecoveryRatioFromUPSET) == 0x000004, "Wrong alignment on BP_BtlCalc_C_RecoveryRatioFromUPSET");
static_assert(sizeof(BP_BtlCalc_C_RecoveryRatioFromUPSET) == 0x00003C, "Wrong size on BP_BtlCalc_C_RecoveryRatioFromUPSET");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromUPSET, ReturnValue) == 0x000000, "Member 'BP_BtlCalc_C_RecoveryRatioFromUPSET::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromUPSET, N) == 0x000004, "Member 'BP_BtlCalc_C_RecoveryRatioFromUPSET::N' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromUPSET, A) == 0x000008, "Member 'BP_BtlCalc_C_RecoveryRatioFromUPSET::A' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromUPSET, CallFunc_GetParam_ReturnValue) == 0x00000C, "Member 'BP_BtlCalc_C_RecoveryRatioFromUPSET::CallFunc_GetParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromUPSET, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_BtlCalc_C_RecoveryRatioFromUPSET::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromUPSET, CallFunc_MakeLiteralByte_ReturnValue) == 0x000014, "Member 'BP_BtlCalc_C_RecoveryRatioFromUPSET::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromUPSET, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_BtlCalc_C_RecoveryRatioFromUPSET::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromUPSET, CallFunc_Add_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_BtlCalc_C_RecoveryRatioFromUPSET::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromUPSET, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000020, "Member 'BP_BtlCalc_C_RecoveryRatioFromUPSET::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromUPSET, CallFunc_GetParam_ReturnValue_1) == 0x000024, "Member 'BP_BtlCalc_C_RecoveryRatioFromUPSET::CallFunc_GetParam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromUPSET, CallFunc_GetParam_ReturnValue_2) == 0x000028, "Member 'BP_BtlCalc_C_RecoveryRatioFromUPSET::CallFunc_GetParam_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromUPSET, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00002C, "Member 'BP_BtlCalc_C_RecoveryRatioFromUPSET::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromUPSET, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_BtlCalc_C_RecoveryRatioFromUPSET::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromUPSET, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000034, "Member 'BP_BtlCalc_C_RecoveryRatioFromUPSET::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_RecoveryRatioFromUPSET, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_BtlCalc_C_RecoveryRatioFromUPSET::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.AttackRatioByUPSET
// 0x0004 (0x0004 - 0x0000)
struct BP_BtlCalc_C_AttackRatioByUPSET final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_AttackRatioByUPSET) == 0x000004, "Wrong alignment on BP_BtlCalc_C_AttackRatioByUPSET");
static_assert(sizeof(BP_BtlCalc_C_AttackRatioByUPSET) == 0x000004, "Wrong size on BP_BtlCalc_C_AttackRatioByUPSET");
static_assert(offsetof(BP_BtlCalc_C_AttackRatioByUPSET, ReturnValue) == 0x000000, "Member 'BP_BtlCalc_C_AttackRatioByUPSET::ReturnValue' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.GetShuffleTimeMajorPercent
// 0x0024 (0x0024 - 0x0000)
struct BP_BtlCalc_C_GetShuffleTimeMajorPercent final
{
public:
	int32                                         EncountNumFromLastMajor;                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Y;                                                 // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         X;                                                 // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EncountNum;                                        // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCalc_C_GetShuffleTimeMajorPercent) == 0x000004, "Wrong alignment on BP_BtlCalc_C_GetShuffleTimeMajorPercent");
static_assert(sizeof(BP_BtlCalc_C_GetShuffleTimeMajorPercent) == 0x000024, "Wrong size on BP_BtlCalc_C_GetShuffleTimeMajorPercent");
static_assert(offsetof(BP_BtlCalc_C_GetShuffleTimeMajorPercent, EncountNumFromLastMajor) == 0x000000, "Member 'BP_BtlCalc_C_GetShuffleTimeMajorPercent::EncountNumFromLastMajor' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetShuffleTimeMajorPercent, ReturnValue) == 0x000004, "Member 'BP_BtlCalc_C_GetShuffleTimeMajorPercent::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetShuffleTimeMajorPercent, Y) == 0x000008, "Member 'BP_BtlCalc_C_GetShuffleTimeMajorPercent::Y' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetShuffleTimeMajorPercent, X) == 0x00000C, "Member 'BP_BtlCalc_C_GetShuffleTimeMajorPercent::X' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetShuffleTimeMajorPercent, EncountNum) == 0x000010, "Member 'BP_BtlCalc_C_GetShuffleTimeMajorPercent::EncountNum' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetShuffleTimeMajorPercent, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000014, "Member 'BP_BtlCalc_C_GetShuffleTimeMajorPercent::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetShuffleTimeMajorPercent, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_BtlCalc_C_GetShuffleTimeMajorPercent::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetShuffleTimeMajorPercent, CallFunc_Add_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_BtlCalc_C_GetShuffleTimeMajorPercent::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetShuffleTimeMajorPercent, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_BtlCalc_C_GetShuffleTimeMajorPercent::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.GetFullmoonSkillPowerRatio
// 0x0078 (0x0078 - 0x0000)
struct BP_BtlCalc_C_GetFullmoonSkillPowerRatio final
{
public:
	int32                                         MoonAge;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBtlCalcRatio                         Work;                                              // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDebug_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFBtlCalcRatio                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCalc_C_GetFullmoonSkillPowerRatio) == 0x000008, "Wrong alignment on BP_BtlCalc_C_GetFullmoonSkillPowerRatio");
static_assert(sizeof(BP_BtlCalc_C_GetFullmoonSkillPowerRatio) == 0x000078, "Wrong size on BP_BtlCalc_C_GetFullmoonSkillPowerRatio");
static_assert(offsetof(BP_BtlCalc_C_GetFullmoonSkillPowerRatio, MoonAge) == 0x000000, "Member 'BP_BtlCalc_C_GetFullmoonSkillPowerRatio::MoonAge' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetFullmoonSkillPowerRatio, ReturnValue) == 0x000004, "Member 'BP_BtlCalc_C_GetFullmoonSkillPowerRatio::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetFullmoonSkillPowerRatio, Work) == 0x000008, "Member 'BP_BtlCalc_C_GetFullmoonSkillPowerRatio::Work' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetFullmoonSkillPowerRatio, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_BtlCalc_C_GetFullmoonSkillPowerRatio::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetFullmoonSkillPowerRatio, CallFunc_Conv_IntToString_ReturnValue) == 0x000010, "Member 'BP_BtlCalc_C_GetFullmoonSkillPowerRatio::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetFullmoonSkillPowerRatio, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'BP_BtlCalc_C_GetFullmoonSkillPowerRatio::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetFullmoonSkillPowerRatio, CallFunc_IsDebug_ReturnValue) == 0x000030, "Member 'BP_BtlCalc_C_GetFullmoonSkillPowerRatio::CallFunc_IsDebug_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetFullmoonSkillPowerRatio, CallFunc_Conv_StringToName_ReturnValue) == 0x000034, "Member 'BP_BtlCalc_C_GetFullmoonSkillPowerRatio::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetFullmoonSkillPowerRatio, K2Node_MakeStruct_LinearColor) == 0x00003C, "Member 'BP_BtlCalc_C_GetFullmoonSkillPowerRatio::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetFullmoonSkillPowerRatio, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000050, "Member 'BP_BtlCalc_C_GetFullmoonSkillPowerRatio::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetFullmoonSkillPowerRatio, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000060, "Member 'BP_BtlCalc_C_GetFullmoonSkillPowerRatio::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetFullmoonSkillPowerRatio, CallFunc_GetDataTableRowFromName_OutRow) == 0x000070, "Member 'BP_BtlCalc_C_GetFullmoonSkillPowerRatio::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetFullmoonSkillPowerRatio, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000074, "Member 'BP_BtlCalc_C_GetFullmoonSkillPowerRatio::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.GetNewmoonSkillPowerRatio
// 0x0078 (0x0078 - 0x0000)
struct BP_BtlCalc_C_GetNewmoonSkillPowerRatio final
{
public:
	int32                                         MoonAge;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBtlCalcRatio                         Work;                                              // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDebug_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBtlCalcRatio                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_GetNewmoonSkillPowerRatio) == 0x000008, "Wrong alignment on BP_BtlCalc_C_GetNewmoonSkillPowerRatio");
static_assert(sizeof(BP_BtlCalc_C_GetNewmoonSkillPowerRatio) == 0x000078, "Wrong size on BP_BtlCalc_C_GetNewmoonSkillPowerRatio");
static_assert(offsetof(BP_BtlCalc_C_GetNewmoonSkillPowerRatio, MoonAge) == 0x000000, "Member 'BP_BtlCalc_C_GetNewmoonSkillPowerRatio::MoonAge' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetNewmoonSkillPowerRatio, ReturnValue) == 0x000004, "Member 'BP_BtlCalc_C_GetNewmoonSkillPowerRatio::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetNewmoonSkillPowerRatio, Work) == 0x000008, "Member 'BP_BtlCalc_C_GetNewmoonSkillPowerRatio::Work' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetNewmoonSkillPowerRatio, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_BtlCalc_C_GetNewmoonSkillPowerRatio::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetNewmoonSkillPowerRatio, CallFunc_Conv_IntToString_ReturnValue) == 0x000010, "Member 'BP_BtlCalc_C_GetNewmoonSkillPowerRatio::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetNewmoonSkillPowerRatio, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'BP_BtlCalc_C_GetNewmoonSkillPowerRatio::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetNewmoonSkillPowerRatio, CallFunc_IsDebug_ReturnValue) == 0x000030, "Member 'BP_BtlCalc_C_GetNewmoonSkillPowerRatio::CallFunc_IsDebug_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetNewmoonSkillPowerRatio, CallFunc_Conv_StringToName_ReturnValue) == 0x000034, "Member 'BP_BtlCalc_C_GetNewmoonSkillPowerRatio::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetNewmoonSkillPowerRatio, K2Node_MakeStruct_LinearColor) == 0x00003C, "Member 'BP_BtlCalc_C_GetNewmoonSkillPowerRatio::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetNewmoonSkillPowerRatio, CallFunc_GetDataTableRowFromName_OutRow) == 0x00004C, "Member 'BP_BtlCalc_C_GetNewmoonSkillPowerRatio::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetNewmoonSkillPowerRatio, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000050, "Member 'BP_BtlCalc_C_GetNewmoonSkillPowerRatio::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetNewmoonSkillPowerRatio, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000058, "Member 'BP_BtlCalc_C_GetNewmoonSkillPowerRatio::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCalc_C_GetNewmoonSkillPowerRatio, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000068, "Member 'BP_BtlCalc_C_GetNewmoonSkillPowerRatio::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.AttackRatioByOVERLIMIT
// 0x0004 (0x0004 - 0x0000)
struct BP_BtlCalc_C_AttackRatioByOVERLIMIT final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_AttackRatioByOVERLIMIT) == 0x000004, "Wrong alignment on BP_BtlCalc_C_AttackRatioByOVERLIMIT");
static_assert(sizeof(BP_BtlCalc_C_AttackRatioByOVERLIMIT) == 0x000004, "Wrong size on BP_BtlCalc_C_AttackRatioByOVERLIMIT");
static_assert(offsetof(BP_BtlCalc_C_AttackRatioByOVERLIMIT, ReturnValue) == 0x000000, "Member 'BP_BtlCalc_C_AttackRatioByOVERLIMIT::ReturnValue' has a wrong offset!");

// Function BP_BtlCalc.BP_BtlCalc_C.DamageRatioByOVERLIMIT
// 0x0004 (0x0004 - 0x0000)
struct BP_BtlCalc_C_DamageRatioByOVERLIMIT final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCalc_C_DamageRatioByOVERLIMIT) == 0x000004, "Wrong alignment on BP_BtlCalc_C_DamageRatioByOVERLIMIT");
static_assert(sizeof(BP_BtlCalc_C_DamageRatioByOVERLIMIT) == 0x000004, "Wrong size on BP_BtlCalc_C_DamageRatioByOVERLIMIT");
static_assert(offsetof(BP_BtlCalc_C_DamageRatioByOVERLIMIT, ReturnValue) == 0x000000, "Member 'BP_BtlCalc_C_DamageRatioByOVERLIMIT::ReturnValue' has a wrong offset!");

}

