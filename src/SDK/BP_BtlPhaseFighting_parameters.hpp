#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtlPhaseFighting

#include "Basic.hpp"

#include "Xrd777_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_BtlPhaseFighting.BP_BtlPhaseFighting_C.ExecuteUbergraph_BP_BtlPhaseFighting
// 0x02C0 (0x02C0 - 0x0000)
struct BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 CallFunc_GetMainAction_MainCharacter;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlCharacterBase_C*                 CallFunc_GetMainAction_MainCharacter_1;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDebug_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckGeneralAttackAnnihilation_ReturnValue; // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckShaffleTimeAllowed_ReturnValue;      // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDebug_ReturnValue_1;                    // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckPlayingEventScript_ReturnValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetInitialTransform_trans;                // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABtlEventAlloutShuffleMonitor*          CallFunc_FinishSpawningActor_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckGeneralAttackAnnihilation_ReturnValue_1; // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPlayingEventScript_ReturnValue_1;    // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 CallFunc_GetMainAction_MainCharacter_2;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDebug_ReturnValue_2;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDebug_ReturnValue_3;                    // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDebug_ReturnValue_4;                    // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetTargetsCylinder_Bottom_Center;         // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTargetsCylinder_Radius;                // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTargetsCylinder_Height;                // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetsCylinder_Cylinder_Center;       // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABtlActor*                              CallFunc_GetHero_ReturnValue;                      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlCharacterBase_C*                 CallFunc_GetEventMainAction_EventMainChara;        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base;        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 CallFunc_GetMainAction_MainCharacter_3;            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BtlFadeSync_ReturnValue;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetExpireSupportWaitTime_ReturnValue;     // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckTurnFromGuardCancel_ReturnValue;     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckRecoveryFromDown_ReturnValue;        // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 CallFunc_GetMainAction_MainCharacter_4;            // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRecoveryWaitTime_ReturnValue;          // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 CallFunc_GetMainAction_MainCharacter_5;            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBadStatusActionWaitTime_ReturnValue;   // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBadStatusActionWaitTime_ReturnValue_1; // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoBadStatusAction_ActBadStatusSkillAction; // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoBadStatusAction_NeedToWaitProcess;      // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoBadStatusAction_IsOverheatInterrupt;    // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBadStatusAction_ReturnValue;         // 0x015B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x015C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x016C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_CheckRecoveryFromBadStatus_ReturnValue;   // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPlayingEventScript_ReturnValue_2;    // 0x017D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDebug_ReturnValue_5;                    // 0x017E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckExpireSupportStatus_ReturnValue;     // 0x017F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_BtlCharacterBase_C*                 CallFunc_GetMainAction_MainCharacter_6;            // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDebug_ReturnValue_6;                    // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDebug_ReturnValue_7;                    // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDebug_ReturnValue_8;                    // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckKnockedoutHero_ReturnValue;          // 0x018B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDebug_ReturnValue_9;                    // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18D[0x3];                                      // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 CallFunc_GetMainAction_MainCharacter_7;            // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckKnockedoutHero_ReturnValue_1;        // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckSkipTurn_ReturnValue;                // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19A[0x2];                                      // 0x019A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x019C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsDebug_ReturnValue_10;                   // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RequestEncountProcess_ReturnValue;        // 0x01AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDebug_ReturnValue_11;                   // 0x01AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBattleInProgress_ReturnValue;        // 0x01AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasEvent_Has_Event;                       // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasEvent_Has_Event_1;                     // 0x01B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 CallFunc_GetMainAction_MainCharacter_8;            // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEnableActEndProc_ReturnValue;        // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEnableActEndEvent_ReturnValue;       // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDebug_ReturnValue_12;                   // 0x01C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDebug_ReturnValue_13;                   // 0x01C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C5[0x3];                                      // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckAnyInterruptProcessBetweenTurn_ReturnValue; // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDebug_ReturnValue_14;                   // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBattleProgressToNextBattle_ReturnValue; // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D3[0x5];                                      // 0x01D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System;               // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System_1;             // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x3];                                      // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDebug_ReturnValue_15;                   // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x3];                                      // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_5;          // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0220(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsDebug_ReturnValue_16;                   // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x3];                                      // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_6;          // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckPlayingEventScript_ReturnValue_3;    // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_239[0x3];                                      // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x023C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x024C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_CheckInRush_ReturnValue;                  // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDebug_ReturnValue_17;                   // 0x025D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPlayingEventScript_ReturnValue_4;    // 0x025E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25F[0x1];                                      // 0x025F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 CallFunc_GetMainAction_MainCharacter_9;            // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnemy_ReturnValue;                      // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsManualOperation_ReturnValue;            // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoSpecificAction_ReturnValue;             // 0x026A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26B[0x1];                                      // 0x026B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x026C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_CheckEventBattleFinish_ReturnValue;       // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27D[0x3];                                      // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x0280(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_CheckSuspendTurnProgress_ReturnValue;     // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x3];                                      // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_11;           // 0x0294(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsDebug_ReturnValue_18;                   // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckInterruptProcessEscape_ReturnValue;  // 0x02A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A6[0x2];                                      // 0x02A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_12;           // 0x02A8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_CheckEventBattleFinish_ReturnValue_1;     // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting) == 0x000010, "Wrong alignment on BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting");
static_assert(sizeof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting) == 0x0002C0, "Wrong size on BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, EntryPoint) == 0x000000, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, K2Node_CreateDelegate_OutputDelegate_2) == 0x00002C, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_GetMainAction_MainCharacter) == 0x000040, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_GetMainAction_MainCharacter' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_GetMainAction_MainCharacter_1) == 0x000048, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_GetMainAction_MainCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_IsDebug_ReturnValue) == 0x000050, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_IsDebug_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_CheckGeneralAttackAnnihilation_ReturnValue) == 0x000051, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_CheckGeneralAttackAnnihilation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_CheckShaffleTimeAllowed_ReturnValue) == 0x000052, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_CheckShaffleTimeAllowed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_IsDebug_ReturnValue_1) == 0x000053, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_IsDebug_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000054, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_CheckPlayingEventScript_ReturnValue) == 0x000058, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_CheckPlayingEventScript_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_GetInitialTransform_trans) == 0x000060, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_GetInitialTransform_trans' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000090, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_FinishSpawningActor_ReturnValue) == 0x000098, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_CheckGeneralAttackAnnihilation_ReturnValue_1) == 0x0000A0, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_CheckGeneralAttackAnnihilation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_CheckPlayingEventScript_ReturnValue_1) == 0x0000A1, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_CheckPlayingEventScript_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_GetMainAction_MainCharacter_2) == 0x0000A8, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_GetMainAction_MainCharacter_2' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_IsDebug_ReturnValue_2) == 0x0000B0, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_IsDebug_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_IsDebug_ReturnValue_3) == 0x0000B1, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_IsDebug_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_IsDebug_ReturnValue_4) == 0x0000B2, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_IsDebug_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_IsValid_ReturnValue_1) == 0x0000B3, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_GetTargetsCylinder_Bottom_Center) == 0x0000B4, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_GetTargetsCylinder_Bottom_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_GetTargetsCylinder_Radius) == 0x0000C0, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_GetTargetsCylinder_Radius' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_GetTargetsCylinder_Height) == 0x0000C4, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_GetTargetsCylinder_Height' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_GetTargetsCylinder_Cylinder_Center) == 0x0000C8, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_GetTargetsCylinder_Cylinder_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_BreakVector_X) == 0x0000D4, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_BreakVector_Y) == 0x0000D8, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_BreakVector_Z) == 0x0000DC, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_MakeVector_ReturnValue) == 0x0000E0, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x0000F0, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_GetHero_ReturnValue) == 0x0000F8, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_GetHero_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_GetEventMainAction_EventMainChara) == 0x000100, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_GetEventMainAction_EventMainChara' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, K2Node_DynamicCast_AsBP_Btl_Character_Base) == 0x000108, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::K2Node_DynamicCast_AsBP_Btl_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, K2Node_DynamicCast_bSuccess) == 0x000110, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_GetMainAction_MainCharacter_3) == 0x000118, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_GetMainAction_MainCharacter_3' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_BtlFadeSync_ReturnValue) == 0x000120, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_BtlFadeSync_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_GetExpireSupportWaitTime_ReturnValue) == 0x000124, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_GetExpireSupportWaitTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_CheckTurnFromGuardCancel_ReturnValue) == 0x000128, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_CheckTurnFromGuardCancel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_Add_FloatFloat_ReturnValue) == 0x00012C, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_CheckRecoveryFromDown_ReturnValue) == 0x000130, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_CheckRecoveryFromDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_GetMainAction_MainCharacter_4) == 0x000138, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_GetMainAction_MainCharacter_4' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_GetRecoveryWaitTime_ReturnValue) == 0x000140, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_GetRecoveryWaitTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_GetMainAction_MainCharacter_5) == 0x000148, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_GetMainAction_MainCharacter_5' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_GetBadStatusActionWaitTime_ReturnValue) == 0x000150, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_GetBadStatusActionWaitTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_GetBadStatusActionWaitTime_ReturnValue_1) == 0x000154, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_GetBadStatusActionWaitTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_DoBadStatusAction_ActBadStatusSkillAction) == 0x000158, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_DoBadStatusAction_ActBadStatusSkillAction' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_DoBadStatusAction_NeedToWaitProcess) == 0x000159, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_DoBadStatusAction_NeedToWaitProcess' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_DoBadStatusAction_IsOverheatInterrupt) == 0x00015A, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_DoBadStatusAction_IsOverheatInterrupt' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_CheckBadStatusAction_ReturnValue) == 0x00015B, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_CheckBadStatusAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, K2Node_CreateDelegate_OutputDelegate_3) == 0x00015C, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, K2Node_CreateDelegate_OutputDelegate_4) == 0x00016C, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_CheckRecoveryFromBadStatus_ReturnValue) == 0x00017C, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_CheckRecoveryFromBadStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_CheckPlayingEventScript_ReturnValue_2) == 0x00017D, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_CheckPlayingEventScript_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_IsDebug_ReturnValue_5) == 0x00017E, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_IsDebug_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_CheckExpireSupportStatus_ReturnValue) == 0x00017F, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_CheckExpireSupportStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_GetMainAction_MainCharacter_6) == 0x000180, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_GetMainAction_MainCharacter_6' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_IsDebug_ReturnValue_6) == 0x000188, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_IsDebug_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_IsDebug_ReturnValue_7) == 0x000189, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_IsDebug_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_IsDebug_ReturnValue_8) == 0x00018A, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_IsDebug_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_CheckKnockedoutHero_ReturnValue) == 0x00018B, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_CheckKnockedoutHero_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_IsDebug_ReturnValue_9) == 0x00018C, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_IsDebug_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_GetMainAction_MainCharacter_7) == 0x000190, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_GetMainAction_MainCharacter_7' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_CheckKnockedoutHero_ReturnValue_1) == 0x000198, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_CheckKnockedoutHero_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_CheckSkipTurn_ReturnValue) == 0x000199, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_CheckSkipTurn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, K2Node_CreateDelegate_OutputDelegate_5) == 0x00019C, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_IsDebug_ReturnValue_10) == 0x0001AC, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_IsDebug_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_RequestEncountProcess_ReturnValue) == 0x0001AD, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_RequestEncountProcess_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_IsDebug_ReturnValue_11) == 0x0001AE, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_IsDebug_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_CheckBattleInProgress_ReturnValue) == 0x0001AF, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_CheckBattleInProgress_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_IsValid_ReturnValue_2) == 0x0001B0, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_HasEvent_Has_Event) == 0x0001B1, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_HasEvent_Has_Event' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_IsValid_ReturnValue_3) == 0x0001B2, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_HasEvent_Has_Event_1) == 0x0001B3, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_HasEvent_Has_Event_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_GetMainAction_MainCharacter_8) == 0x0001B8, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_GetMainAction_MainCharacter_8' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_CheckEnableActEndProc_ReturnValue) == 0x0001C0, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_CheckEnableActEndProc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_CheckEnableActEndEvent_ReturnValue) == 0x0001C1, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_CheckEnableActEndEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_IsDebug_ReturnValue_12) == 0x0001C2, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_IsDebug_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_IsDebug_ReturnValue_13) == 0x0001C3, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_IsDebug_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_BooleanAND_ReturnValue) == 0x0001C4, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x0001C8, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x0001CC, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_CheckAnyInterruptProcessBetweenTurn_ReturnValue) == 0x0001D0, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_CheckAnyInterruptProcessBetweenTurn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_IsDebug_ReturnValue_14) == 0x0001D1, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_IsDebug_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_CheckBattleProgressToNextBattle_ReturnValue) == 0x0001D2, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_CheckBattleProgressToNextBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, Temp_object_Variable) == 0x0001D8, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, K2Node_DynamicCast_AsNiagara_System) == 0x0001E0, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::K2Node_DynamicCast_AsNiagara_System' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, K2Node_DynamicCast_bSuccess_1) == 0x0001E8, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, K2Node_CustomEvent_Loaded) == 0x0001F0, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, Temp_object_Variable_1) == 0x0001F8, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, K2Node_DynamicCast_AsNiagara_System_1) == 0x000200, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::K2Node_DynamicCast_AsNiagara_System_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, K2Node_DynamicCast_bSuccess_2) == 0x000208, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x00020C, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, K2Node_CustomEvent_Loaded_1) == 0x000210, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_IsDebug_ReturnValue_15) == 0x000218, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_IsDebug_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_Divide_FloatFloat_ReturnValue_5) == 0x00021C, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_Divide_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, K2Node_CreateDelegate_OutputDelegate_6) == 0x000220, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_IsDebug_ReturnValue_16) == 0x000230, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_IsDebug_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_Divide_FloatFloat_ReturnValue_6) == 0x000234, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_Divide_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_CheckPlayingEventScript_ReturnValue_3) == 0x000238, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_CheckPlayingEventScript_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, K2Node_CreateDelegate_OutputDelegate_7) == 0x00023C, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, K2Node_CreateDelegate_OutputDelegate_8) == 0x00024C, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_CheckInRush_ReturnValue) == 0x00025C, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_CheckInRush_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_IsDebug_ReturnValue_17) == 0x00025D, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_IsDebug_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_CheckPlayingEventScript_ReturnValue_4) == 0x00025E, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_CheckPlayingEventScript_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_GetMainAction_MainCharacter_9) == 0x000260, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_GetMainAction_MainCharacter_9' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_IsEnemy_ReturnValue) == 0x000268, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_IsEnemy_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_IsManualOperation_ReturnValue) == 0x000269, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_IsManualOperation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_DoSpecificAction_ReturnValue) == 0x00026A, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_DoSpecificAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, K2Node_CreateDelegate_OutputDelegate_9) == 0x00026C, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_CheckEventBattleFinish_ReturnValue) == 0x00027C, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_CheckEventBattleFinish_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, K2Node_CreateDelegate_OutputDelegate_10) == 0x000280, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_CheckSuspendTurnProgress_ReturnValue) == 0x000290, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_CheckSuspendTurnProgress_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, K2Node_CreateDelegate_OutputDelegate_11) == 0x000294, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_IsDebug_ReturnValue_18) == 0x0002A4, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_IsDebug_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_CheckInterruptProcessEscape_ReturnValue) == 0x0002A5, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_CheckInterruptProcessEscape_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, K2Node_CreateDelegate_OutputDelegate_12) == 0x0002A8, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting, CallFunc_CheckEventBattleFinish_ReturnValue_1) == 0x0002B8, "Member 'BP_BtlPhaseFighting_C_ExecuteUbergraph_BP_BtlPhaseFighting::CallFunc_CheckEventBattleFinish_ReturnValue_1' has a wrong offset!");

// Function BP_BtlPhaseFighting.BP_BtlPhaseFighting_C.OnLoaded_BEF8F5C44FEAA533FABD21BFFF755582
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlPhaseFighting_C_OnLoaded_BEF8F5C44FEAA533FABD21BFFF755582 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlPhaseFighting_C_OnLoaded_BEF8F5C44FEAA533FABD21BFFF755582) == 0x000008, "Wrong alignment on BP_BtlPhaseFighting_C_OnLoaded_BEF8F5C44FEAA533FABD21BFFF755582");
static_assert(sizeof(BP_BtlPhaseFighting_C_OnLoaded_BEF8F5C44FEAA533FABD21BFFF755582) == 0x000008, "Wrong size on BP_BtlPhaseFighting_C_OnLoaded_BEF8F5C44FEAA533FABD21BFFF755582");
static_assert(offsetof(BP_BtlPhaseFighting_C_OnLoaded_BEF8F5C44FEAA533FABD21BFFF755582, Loaded) == 0x000000, "Member 'BP_BtlPhaseFighting_C_OnLoaded_BEF8F5C44FEAA533FABD21BFFF755582::Loaded' has a wrong offset!");

// Function BP_BtlPhaseFighting.BP_BtlPhaseFighting_C.OnLoaded_89C338DF41743B3A060FCBAB8ED6F29A
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlPhaseFighting_C_OnLoaded_89C338DF41743B3A060FCBAB8ED6F29A final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlPhaseFighting_C_OnLoaded_89C338DF41743B3A060FCBAB8ED6F29A) == 0x000008, "Wrong alignment on BP_BtlPhaseFighting_C_OnLoaded_89C338DF41743B3A060FCBAB8ED6F29A");
static_assert(sizeof(BP_BtlPhaseFighting_C_OnLoaded_89C338DF41743B3A060FCBAB8ED6F29A) == 0x000008, "Wrong size on BP_BtlPhaseFighting_C_OnLoaded_89C338DF41743B3A060FCBAB8ED6F29A");
static_assert(offsetof(BP_BtlPhaseFighting_C_OnLoaded_89C338DF41743B3A060FCBAB8ED6F29A, Loaded) == 0x000000, "Member 'BP_BtlPhaseFighting_C_OnLoaded_89C338DF41743B3A060FCBAB8ED6F29A::Loaded' has a wrong offset!");

// Function BP_BtlPhaseFighting.BP_BtlPhaseFighting_C.GetNextPhaseInBP
// 0x0100 (0x0100 - 0x0000)
struct BP_BtlPhaseFighting_C_GetNextPhaseInBP final
{
public:
	class ABtlPhase*                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABtlPhase*                              Actor;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetSubLevelActor_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetInitialTransform_trans;                // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBattleProgressToNextBattle_ReturnValue; // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlPhaseSerialEncount_C*            CallFunc_FinishSpawningActor_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetSubLevelActor_ReturnValue_1;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetInitialTransform_trans_1;              // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlPhaseResult_C*                   CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetSubLevelActor_ReturnValue_2;           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B8[0x8];                                       // 0x00B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetInitialTransform_trans_2;              // 0x00C0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2; // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABtlPhaseResult*                        CallFunc_FinishSpawningActor_ReturnValue_2;        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlPhaseFighting_C_GetNextPhaseInBP) == 0x000010, "Wrong alignment on BP_BtlPhaseFighting_C_GetNextPhaseInBP");
static_assert(sizeof(BP_BtlPhaseFighting_C_GetNextPhaseInBP) == 0x000100, "Wrong size on BP_BtlPhaseFighting_C_GetNextPhaseInBP");
static_assert(offsetof(BP_BtlPhaseFighting_C_GetNextPhaseInBP, ReturnValue) == 0x000000, "Member 'BP_BtlPhaseFighting_C_GetNextPhaseInBP::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_GetNextPhaseInBP, Actor) == 0x000008, "Member 'BP_BtlPhaseFighting_C_GetNextPhaseInBP::Actor' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_GetNextPhaseInBP, CallFunc_GetSubLevelActor_ReturnValue) == 0x000010, "Member 'BP_BtlPhaseFighting_C_GetNextPhaseInBP::CallFunc_GetSubLevelActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_GetNextPhaseInBP, CallFunc_GetInitialTransform_trans) == 0x000020, "Member 'BP_BtlPhaseFighting_C_GetNextPhaseInBP::CallFunc_GetInitialTransform_trans' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_GetNextPhaseInBP, CallFunc_CheckBattleProgressToNextBattle_ReturnValue) == 0x000050, "Member 'BP_BtlPhaseFighting_C_GetNextPhaseInBP::CallFunc_CheckBattleProgressToNextBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_GetNextPhaseInBP, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000058, "Member 'BP_BtlPhaseFighting_C_GetNextPhaseInBP::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_GetNextPhaseInBP, CallFunc_FinishSpawningActor_ReturnValue) == 0x000060, "Member 'BP_BtlPhaseFighting_C_GetNextPhaseInBP::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_GetNextPhaseInBP, CallFunc_GetSubLevelActor_ReturnValue_1) == 0x000068, "Member 'BP_BtlPhaseFighting_C_GetNextPhaseInBP::CallFunc_GetSubLevelActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_GetNextPhaseInBP, CallFunc_GetInitialTransform_trans_1) == 0x000070, "Member 'BP_BtlPhaseFighting_C_GetNextPhaseInBP::CallFunc_GetInitialTransform_trans_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_GetNextPhaseInBP, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x0000A0, "Member 'BP_BtlPhaseFighting_C_GetNextPhaseInBP::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_GetNextPhaseInBP, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x0000A8, "Member 'BP_BtlPhaseFighting_C_GetNextPhaseInBP::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_GetNextPhaseInBP, CallFunc_GetSubLevelActor_ReturnValue_2) == 0x0000B0, "Member 'BP_BtlPhaseFighting_C_GetNextPhaseInBP::CallFunc_GetSubLevelActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_GetNextPhaseInBP, CallFunc_GetInitialTransform_trans_2) == 0x0000C0, "Member 'BP_BtlPhaseFighting_C_GetNextPhaseInBP::CallFunc_GetInitialTransform_trans_2' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_GetNextPhaseInBP, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2) == 0x0000F0, "Member 'BP_BtlPhaseFighting_C_GetNextPhaseInBP::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_GetNextPhaseInBP, CallFunc_FinishSpawningActor_ReturnValue_2) == 0x0000F8, "Member 'BP_BtlPhaseFighting_C_GetNextPhaseInBP::CallFunc_FinishSpawningActor_ReturnValue_2' has a wrong offset!");

// Function BP_BtlPhaseFighting.BP_BtlPhaseFighting_C.GetMainAction
// 0x0020 (0x0020 - 0x0000)
struct BP_BtlPhaseFighting_C_GetMainAction final
{
public:
	class ABP_BtlCharacterBase_C*                 MainCharacter;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABtlActor*                              CallFunc_GetAction_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlPhaseFighting_C_GetMainAction) == 0x000008, "Wrong alignment on BP_BtlPhaseFighting_C_GetMainAction");
static_assert(sizeof(BP_BtlPhaseFighting_C_GetMainAction) == 0x000020, "Wrong size on BP_BtlPhaseFighting_C_GetMainAction");
static_assert(offsetof(BP_BtlPhaseFighting_C_GetMainAction, MainCharacter) == 0x000000, "Member 'BP_BtlPhaseFighting_C_GetMainAction::MainCharacter' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_GetMainAction, CallFunc_GetAction_ReturnValue) == 0x000008, "Member 'BP_BtlPhaseFighting_C_GetMainAction::CallFunc_GetAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_GetMainAction, K2Node_DynamicCast_AsBP_Btl_Character_Base) == 0x000010, "Member 'BP_BtlPhaseFighting_C_GetMainAction::K2Node_DynamicCast_AsBP_Btl_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_GetMainAction, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_BtlPhaseFighting_C_GetMainAction::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BtlPhaseFighting.BP_BtlPhaseFighting_C.GetEventMainAction
// 0x0020 (0x0020 - 0x0000)
struct BP_BtlPhaseFighting_C_GetEventMainAction final
{
public:
	class ABP_BtlCharacterBase_C*                 EventMainChara;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class ABtlActor*                              CallFunc_GetEventMainAction_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlPhaseFighting_C_GetEventMainAction) == 0x000008, "Wrong alignment on BP_BtlPhaseFighting_C_GetEventMainAction");
static_assert(sizeof(BP_BtlPhaseFighting_C_GetEventMainAction) == 0x000020, "Wrong size on BP_BtlPhaseFighting_C_GetEventMainAction");
static_assert(offsetof(BP_BtlPhaseFighting_C_GetEventMainAction, EventMainChara) == 0x000000, "Member 'BP_BtlPhaseFighting_C_GetEventMainAction::EventMainChara' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_GetEventMainAction, CallFunc_GetEventMainAction_ReturnValue) == 0x000008, "Member 'BP_BtlPhaseFighting_C_GetEventMainAction::CallFunc_GetEventMainAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_GetEventMainAction, K2Node_DynamicCast_AsBP_Btl_Character_Base) == 0x000010, "Member 'BP_BtlPhaseFighting_C_GetEventMainAction::K2Node_DynamicCast_AsBP_Btl_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_GetEventMainAction, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_BtlPhaseFighting_C_GetEventMainAction::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BtlPhaseFighting.BP_BtlPhaseFighting_C.PrepareTurnStart
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlPhaseFighting_C_PrepareTurnStart final
{
public:
	class ABP_BtlCharacterBase_C*                 Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlPhaseFighting_C_PrepareTurnStart) == 0x000008, "Wrong alignment on BP_BtlPhaseFighting_C_PrepareTurnStart");
static_assert(sizeof(BP_BtlPhaseFighting_C_PrepareTurnStart) == 0x000008, "Wrong size on BP_BtlPhaseFighting_C_PrepareTurnStart");
static_assert(offsetof(BP_BtlPhaseFighting_C_PrepareTurnStart, Character) == 0x000000, "Member 'BP_BtlPhaseFighting_C_PrepareTurnStart::Character' has a wrong offset!");

// Function BP_BtlPhaseFighting.BP_BtlPhaseFighting_C.Setup
// 0x0050 (0x0050 - 0x0000)
struct BP_BtlPhaseFighting_C_Setup final
{
public:
	class UBtlAIManagerComponent*                 AIManager_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BtlActionManager_C*                 ActionManager_0;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BtlGuiComponent_C*                  BtlGui_0;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlCoreComponent*                      BtlCore_0;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BtlTargetManager_C*                 TargetManager_0;                                   // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BtlCameraManagerComponent_C*        CameraManager_0;                                   // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlInputComponent*                     BtlInput_0;                                        // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BtlEnvironment_C*                   BtlEnvironment_0;                                  // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BtlUICameraComponent_C*             UICamera_0;                                        // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BtlEvent_C*                         BtlEvent_0;                                        // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlPhaseFighting_C_Setup) == 0x000008, "Wrong alignment on BP_BtlPhaseFighting_C_Setup");
static_assert(sizeof(BP_BtlPhaseFighting_C_Setup) == 0x000050, "Wrong size on BP_BtlPhaseFighting_C_Setup");
static_assert(offsetof(BP_BtlPhaseFighting_C_Setup, AIManager_0) == 0x000000, "Member 'BP_BtlPhaseFighting_C_Setup::AIManager_0' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_Setup, ActionManager_0) == 0x000008, "Member 'BP_BtlPhaseFighting_C_Setup::ActionManager_0' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_Setup, BtlGui_0) == 0x000010, "Member 'BP_BtlPhaseFighting_C_Setup::BtlGui_0' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_Setup, BtlCore_0) == 0x000018, "Member 'BP_BtlPhaseFighting_C_Setup::BtlCore_0' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_Setup, TargetManager_0) == 0x000020, "Member 'BP_BtlPhaseFighting_C_Setup::TargetManager_0' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_Setup, CameraManager_0) == 0x000028, "Member 'BP_BtlPhaseFighting_C_Setup::CameraManager_0' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_Setup, BtlInput_0) == 0x000030, "Member 'BP_BtlPhaseFighting_C_Setup::BtlInput_0' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_Setup, BtlEnvironment_0) == 0x000038, "Member 'BP_BtlPhaseFighting_C_Setup::BtlEnvironment_0' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_Setup, UICamera_0) == 0x000040, "Member 'BP_BtlPhaseFighting_C_Setup::UICamera_0' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_Setup, BtlEvent_0) == 0x000048, "Member 'BP_BtlPhaseFighting_C_Setup::BtlEvent_0' has a wrong offset!");

// Function BP_BtlPhaseFighting.BP_BtlPhaseFighting_C.SetupFormation
// 0x0010 (0x0010 - 0x0000)
struct BP_BtlPhaseFighting_C_SetupFormation final
{
public:
	class ABP_BtlCharacterBase_C*                 NextCharacter;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotateZ;                                           // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnemy_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckLineFormation_ReturnValue;           // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlPhaseFighting_C_SetupFormation) == 0x000008, "Wrong alignment on BP_BtlPhaseFighting_C_SetupFormation");
static_assert(sizeof(BP_BtlPhaseFighting_C_SetupFormation) == 0x000010, "Wrong size on BP_BtlPhaseFighting_C_SetupFormation");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetupFormation, NextCharacter) == 0x000000, "Member 'BP_BtlPhaseFighting_C_SetupFormation::NextCharacter' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetupFormation, RotateZ) == 0x000008, "Member 'BP_BtlPhaseFighting_C_SetupFormation::RotateZ' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetupFormation, CallFunc_IsEnemy_ReturnValue) == 0x00000C, "Member 'BP_BtlPhaseFighting_C_SetupFormation::CallFunc_IsEnemy_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetupFormation, CallFunc_CheckLineFormation_ReturnValue) == 0x00000D, "Member 'BP_BtlPhaseFighting_C_SetupFormation::CallFunc_CheckLineFormation_ReturnValue' has a wrong offset!");

// Function BP_BtlPhaseFighting.BP_BtlPhaseFighting_C.WaitAnimAllPlayer
// 0x0050 (0x0050 - 0x0000)
struct BP_BtlPhaseFighting_C_WaitAnimAllPlayer final
{
public:
	bool                                          NoBlend;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CallFunc_GetPlayerList_ReturnValue;                // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlPhaseFighting_C_WaitAnimAllPlayer) == 0x000008, "Wrong alignment on BP_BtlPhaseFighting_C_WaitAnimAllPlayer");
static_assert(sizeof(BP_BtlPhaseFighting_C_WaitAnimAllPlayer) == 0x000050, "Wrong size on BP_BtlPhaseFighting_C_WaitAnimAllPlayer");
static_assert(offsetof(BP_BtlPhaseFighting_C_WaitAnimAllPlayer, NoBlend) == 0x000000, "Member 'BP_BtlPhaseFighting_C_WaitAnimAllPlayer::NoBlend' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_WaitAnimAllPlayer, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_BtlPhaseFighting_C_WaitAnimAllPlayer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_WaitAnimAllPlayer, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_BtlPhaseFighting_C_WaitAnimAllPlayer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_WaitAnimAllPlayer, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_BtlPhaseFighting_C_WaitAnimAllPlayer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_WaitAnimAllPlayer, CallFunc_RandomFloatInRange_ReturnValue) == 0x000010, "Member 'BP_BtlPhaseFighting_C_WaitAnimAllPlayer::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_WaitAnimAllPlayer, CallFunc_GetPlayerList_ReturnValue) == 0x000018, "Member 'BP_BtlPhaseFighting_C_WaitAnimAllPlayer::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_WaitAnimAllPlayer, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_BtlPhaseFighting_C_WaitAnimAllPlayer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_WaitAnimAllPlayer, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_BtlPhaseFighting_C_WaitAnimAllPlayer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_WaitAnimAllPlayer, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_BtlPhaseFighting_C_WaitAnimAllPlayer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_WaitAnimAllPlayer, K2Node_DynamicCast_AsBP_Btl_Character_Base) == 0x000040, "Member 'BP_BtlPhaseFighting_C_WaitAnimAllPlayer::K2Node_DynamicCast_AsBP_Btl_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_WaitAnimAllPlayer, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_BtlPhaseFighting_C_WaitAnimAllPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BtlPhaseFighting.BP_BtlPhaseFighting_C.WaitAnimAllEnemies
// 0x0048 (0x0048 - 0x0000)
struct BP_BtlPhaseFighting_C_WaitAnimAllEnemies final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABtlActor*>                      CallFunc_GetEnemyList_ReturnValue;                 // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlPhaseFighting_C_WaitAnimAllEnemies) == 0x000008, "Wrong alignment on BP_BtlPhaseFighting_C_WaitAnimAllEnemies");
static_assert(sizeof(BP_BtlPhaseFighting_C_WaitAnimAllEnemies) == 0x000048, "Wrong size on BP_BtlPhaseFighting_C_WaitAnimAllEnemies");
static_assert(offsetof(BP_BtlPhaseFighting_C_WaitAnimAllEnemies, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_BtlPhaseFighting_C_WaitAnimAllEnemies::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_WaitAnimAllEnemies, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_BtlPhaseFighting_C_WaitAnimAllEnemies::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_WaitAnimAllEnemies, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_BtlPhaseFighting_C_WaitAnimAllEnemies::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_WaitAnimAllEnemies, CallFunc_RandomFloatInRange_ReturnValue) == 0x00000C, "Member 'BP_BtlPhaseFighting_C_WaitAnimAllEnemies::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_WaitAnimAllEnemies, CallFunc_GetEnemyList_ReturnValue) == 0x000010, "Member 'BP_BtlPhaseFighting_C_WaitAnimAllEnemies::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_WaitAnimAllEnemies, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_BtlPhaseFighting_C_WaitAnimAllEnemies::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_WaitAnimAllEnemies, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_BtlPhaseFighting_C_WaitAnimAllEnemies::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_WaitAnimAllEnemies, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_BtlPhaseFighting_C_WaitAnimAllEnemies::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_WaitAnimAllEnemies, K2Node_DynamicCast_AsBP_Btl_Character_Base) == 0x000038, "Member 'BP_BtlPhaseFighting_C_WaitAnimAllEnemies::K2Node_DynamicCast_AsBP_Btl_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_WaitAnimAllEnemies, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_BtlPhaseFighting_C_WaitAnimAllEnemies::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BtlPhaseFighting.BP_BtlPhaseFighting_C.Wait Dying Anim Alive Enemies For Allout Damage
// 0x0048 (0x0048 - 0x0000)
struct BP_BtlPhaseFighting_C_Wait_Dying_Anim_Alive_Enemies_For_Allout_Damage final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABtlActor*>                      CallFunc_GetEnemyList_ReturnValue;                 // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPossibleAITarget_ReturnValue;           // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckAlive_ReturnValue;                   // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlPhaseFighting_C_Wait_Dying_Anim_Alive_Enemies_For_Allout_Damage) == 0x000008, "Wrong alignment on BP_BtlPhaseFighting_C_Wait_Dying_Anim_Alive_Enemies_For_Allout_Damage");
static_assert(sizeof(BP_BtlPhaseFighting_C_Wait_Dying_Anim_Alive_Enemies_For_Allout_Damage) == 0x000048, "Wrong size on BP_BtlPhaseFighting_C_Wait_Dying_Anim_Alive_Enemies_For_Allout_Damage");
static_assert(offsetof(BP_BtlPhaseFighting_C_Wait_Dying_Anim_Alive_Enemies_For_Allout_Damage, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_BtlPhaseFighting_C_Wait_Dying_Anim_Alive_Enemies_For_Allout_Damage::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_Wait_Dying_Anim_Alive_Enemies_For_Allout_Damage, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_BtlPhaseFighting_C_Wait_Dying_Anim_Alive_Enemies_For_Allout_Damage::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_Wait_Dying_Anim_Alive_Enemies_For_Allout_Damage, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_BtlPhaseFighting_C_Wait_Dying_Anim_Alive_Enemies_For_Allout_Damage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_Wait_Dying_Anim_Alive_Enemies_For_Allout_Damage, CallFunc_RandomFloatInRange_ReturnValue) == 0x00000C, "Member 'BP_BtlPhaseFighting_C_Wait_Dying_Anim_Alive_Enemies_For_Allout_Damage::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_Wait_Dying_Anim_Alive_Enemies_For_Allout_Damage, CallFunc_GetEnemyList_ReturnValue) == 0x000010, "Member 'BP_BtlPhaseFighting_C_Wait_Dying_Anim_Alive_Enemies_For_Allout_Damage::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_Wait_Dying_Anim_Alive_Enemies_For_Allout_Damage, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_BtlPhaseFighting_C_Wait_Dying_Anim_Alive_Enemies_For_Allout_Damage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_Wait_Dying_Anim_Alive_Enemies_For_Allout_Damage, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_BtlPhaseFighting_C_Wait_Dying_Anim_Alive_Enemies_For_Allout_Damage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_Wait_Dying_Anim_Alive_Enemies_For_Allout_Damage, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_BtlPhaseFighting_C_Wait_Dying_Anim_Alive_Enemies_For_Allout_Damage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_Wait_Dying_Anim_Alive_Enemies_For_Allout_Damage, CallFunc_IsPossibleAITarget_ReturnValue) == 0x000031, "Member 'BP_BtlPhaseFighting_C_Wait_Dying_Anim_Alive_Enemies_For_Allout_Damage::CallFunc_IsPossibleAITarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_Wait_Dying_Anim_Alive_Enemies_For_Allout_Damage, CallFunc_CheckAlive_ReturnValue) == 0x000032, "Member 'BP_BtlPhaseFighting_C_Wait_Dying_Anim_Alive_Enemies_For_Allout_Damage::CallFunc_CheckAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_Wait_Dying_Anim_Alive_Enemies_For_Allout_Damage, K2Node_DynamicCast_AsBP_Btl_Character_Base) == 0x000038, "Member 'BP_BtlPhaseFighting_C_Wait_Dying_Anim_Alive_Enemies_For_Allout_Damage::K2Node_DynamicCast_AsBP_Btl_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_Wait_Dying_Anim_Alive_Enemies_For_Allout_Damage, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_BtlPhaseFighting_C_Wait_Dying_Anim_Alive_Enemies_For_Allout_Damage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_Wait_Dying_Anim_Alive_Enemies_For_Allout_Damage, CallFunc_BooleanAND_ReturnValue) == 0x000041, "Member 'BP_BtlPhaseFighting_C_Wait_Dying_Anim_Alive_Enemies_For_Allout_Damage::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_BtlPhaseFighting.BP_BtlPhaseFighting_C.SetupParyPanel
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlPhaseFighting_C_SetupParyPanel final
{
public:
	class ABtlActor*                              MainChara_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlPhaseFighting_C_SetupParyPanel) == 0x000008, "Wrong alignment on BP_BtlPhaseFighting_C_SetupParyPanel");
static_assert(sizeof(BP_BtlPhaseFighting_C_SetupParyPanel) == 0x000008, "Wrong size on BP_BtlPhaseFighting_C_SetupParyPanel");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetupParyPanel, MainChara_0) == 0x000000, "Member 'BP_BtlPhaseFighting_C_SetupParyPanel::MainChara_0' has a wrong offset!");

// Function BP_BtlPhaseFighting.BP_BtlPhaseFighting_C.SwitchEachInitiateProc
// 0x0018 (0x0018 - 0x0000)
struct BP_BtlPhaseFighting_C_SwitchEachInitiateProc final
{
public:
	class ABP_BtlCharacterBase_C*                 Chara;                                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlCharacterBase_C*                 CallFunc_GetMainAction_MainCharacter;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckProgressToHoldup_ReturnValue;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlPhaseFighting_C_SwitchEachInitiateProc) == 0x000008, "Wrong alignment on BP_BtlPhaseFighting_C_SwitchEachInitiateProc");
static_assert(sizeof(BP_BtlPhaseFighting_C_SwitchEachInitiateProc) == 0x000018, "Wrong size on BP_BtlPhaseFighting_C_SwitchEachInitiateProc");
static_assert(offsetof(BP_BtlPhaseFighting_C_SwitchEachInitiateProc, Chara) == 0x000000, "Member 'BP_BtlPhaseFighting_C_SwitchEachInitiateProc::Chara' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SwitchEachInitiateProc, CallFunc_GetMainAction_MainCharacter) == 0x000008, "Member 'BP_BtlPhaseFighting_C_SwitchEachInitiateProc::CallFunc_GetMainAction_MainCharacter' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SwitchEachInitiateProc, CallFunc_CheckProgressToHoldup_ReturnValue) == 0x000010, "Member 'BP_BtlPhaseFighting_C_SwitchEachInitiateProc::CallFunc_CheckProgressToHoldup_ReturnValue' has a wrong offset!");

// Function BP_BtlPhaseFighting.BP_BtlPhaseFighting_C.SetupAllCharacter
// 0x0048 (0x0048 - 0x0000)
struct BP_BtlPhaseFighting_C_SetupAllCharacter final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CallFunc_GetAllCharacterList_ReturnValue;          // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlPhaseFighting_C_SetupAllCharacter) == 0x000008, "Wrong alignment on BP_BtlPhaseFighting_C_SetupAllCharacter");
static_assert(sizeof(BP_BtlPhaseFighting_C_SetupAllCharacter) == 0x000048, "Wrong size on BP_BtlPhaseFighting_C_SetupAllCharacter");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetupAllCharacter, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_BtlPhaseFighting_C_SetupAllCharacter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetupAllCharacter, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_BtlPhaseFighting_C_SetupAllCharacter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetupAllCharacter, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_BtlPhaseFighting_C_SetupAllCharacter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetupAllCharacter, CallFunc_GetAllCharacterList_ReturnValue) == 0x000010, "Member 'BP_BtlPhaseFighting_C_SetupAllCharacter::CallFunc_GetAllCharacterList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetupAllCharacter, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_BtlPhaseFighting_C_SetupAllCharacter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetupAllCharacter, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_BtlPhaseFighting_C_SetupAllCharacter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetupAllCharacter, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_BtlPhaseFighting_C_SetupAllCharacter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetupAllCharacter, K2Node_DynamicCast_AsBP_Btl_Character_Base) == 0x000038, "Member 'BP_BtlPhaseFighting_C_SetupAllCharacter::K2Node_DynamicCast_AsBP_Btl_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetupAllCharacter, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_BtlPhaseFighting_C_SetupAllCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BtlPhaseFighting.BP_BtlPhaseFighting_C.CreateNextPhase
// 0x0110 (0x0110 - 0x0000)
struct BP_BtlPhaseFighting_C_CreateNextPhase final
{
public:
	EBtlPhaseType                                 Phase;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlPhase*                              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABtlPhase*                              Actor;                                             // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetInitialTransform_trans;                // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetSubLevelActor_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlPhaseEscape_C*                   CallFunc_FinishSpawningActor_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetInitialTransform_trans_1;              // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetSubLevelActor_ReturnValue_1;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlPhaseEscape_C*                   CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABtlPhase*                              CallFunc_GetNextPhaseInBP_ReturnValue;             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetSubLevelActor_ReturnValue_2;           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetInitialTransform_trans_2;              // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2; // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlPhaseDead_C*                     CallFunc_FinishSpawningActor_ReturnValue_2;        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlPhaseFighting_C_CreateNextPhase) == 0x000010, "Wrong alignment on BP_BtlPhaseFighting_C_CreateNextPhase");
static_assert(sizeof(BP_BtlPhaseFighting_C_CreateNextPhase) == 0x000110, "Wrong size on BP_BtlPhaseFighting_C_CreateNextPhase");
static_assert(offsetof(BP_BtlPhaseFighting_C_CreateNextPhase, Phase) == 0x000000, "Member 'BP_BtlPhaseFighting_C_CreateNextPhase::Phase' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_CreateNextPhase, ReturnValue) == 0x000008, "Member 'BP_BtlPhaseFighting_C_CreateNextPhase::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_CreateNextPhase, Actor) == 0x000010, "Member 'BP_BtlPhaseFighting_C_CreateNextPhase::Actor' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_CreateNextPhase, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'BP_BtlPhaseFighting_C_CreateNextPhase::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_CreateNextPhase, CallFunc_GetInitialTransform_trans) == 0x000020, "Member 'BP_BtlPhaseFighting_C_CreateNextPhase::CallFunc_GetInitialTransform_trans' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_CreateNextPhase, CallFunc_GetSubLevelActor_ReturnValue) == 0x000050, "Member 'BP_BtlPhaseFighting_C_CreateNextPhase::CallFunc_GetSubLevelActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_CreateNextPhase, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000058, "Member 'BP_BtlPhaseFighting_C_CreateNextPhase::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_CreateNextPhase, CallFunc_FinishSpawningActor_ReturnValue) == 0x000060, "Member 'BP_BtlPhaseFighting_C_CreateNextPhase::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_CreateNextPhase, CallFunc_GetInitialTransform_trans_1) == 0x000070, "Member 'BP_BtlPhaseFighting_C_CreateNextPhase::CallFunc_GetInitialTransform_trans_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_CreateNextPhase, CallFunc_GetSubLevelActor_ReturnValue_1) == 0x0000A0, "Member 'BP_BtlPhaseFighting_C_CreateNextPhase::CallFunc_GetSubLevelActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_CreateNextPhase, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x0000A8, "Member 'BP_BtlPhaseFighting_C_CreateNextPhase::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_CreateNextPhase, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x0000B0, "Member 'BP_BtlPhaseFighting_C_CreateNextPhase::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_CreateNextPhase, CallFunc_GetNextPhaseInBP_ReturnValue) == 0x0000B8, "Member 'BP_BtlPhaseFighting_C_CreateNextPhase::CallFunc_GetNextPhaseInBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_CreateNextPhase, CallFunc_GetSubLevelActor_ReturnValue_2) == 0x0000C0, "Member 'BP_BtlPhaseFighting_C_CreateNextPhase::CallFunc_GetSubLevelActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_CreateNextPhase, CallFunc_GetInitialTransform_trans_2) == 0x0000D0, "Member 'BP_BtlPhaseFighting_C_CreateNextPhase::CallFunc_GetInitialTransform_trans_2' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_CreateNextPhase, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2) == 0x000100, "Member 'BP_BtlPhaseFighting_C_CreateNextPhase::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_CreateNextPhase, CallFunc_FinishSpawningActor_ReturnValue_2) == 0x000108, "Member 'BP_BtlPhaseFighting_C_CreateNextPhase::CallFunc_FinishSpawningActor_ReturnValue_2' has a wrong offset!");

// Function BP_BtlPhaseFighting.BP_BtlPhaseFighting_C.ProcPreAct
// 0x0018 (0x0018 - 0x0000)
struct BP_BtlPhaseFighting_C_ProcPreAct final
{
public:
	bool                                          CallFunc_CheckIgnoreShowingCharacterAtPreAct_ReturnValue; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 CallFunc_GetMainAction_MainCharacter;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnemy_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlPhaseFighting_C_ProcPreAct) == 0x000008, "Wrong alignment on BP_BtlPhaseFighting_C_ProcPreAct");
static_assert(sizeof(BP_BtlPhaseFighting_C_ProcPreAct) == 0x000018, "Wrong size on BP_BtlPhaseFighting_C_ProcPreAct");
static_assert(offsetof(BP_BtlPhaseFighting_C_ProcPreAct, CallFunc_CheckIgnoreShowingCharacterAtPreAct_ReturnValue) == 0x000000, "Member 'BP_BtlPhaseFighting_C_ProcPreAct::CallFunc_CheckIgnoreShowingCharacterAtPreAct_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ProcPreAct, CallFunc_GetMainAction_MainCharacter) == 0x000008, "Member 'BP_BtlPhaseFighting_C_ProcPreAct::CallFunc_GetMainAction_MainCharacter' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ProcPreAct, CallFunc_IsEnemy_ReturnValue) == 0x000010, "Member 'BP_BtlPhaseFighting_C_ProcPreAct::CallFunc_IsEnemy_ReturnValue' has a wrong offset!");

// Function BP_BtlPhaseFighting.BP_BtlPhaseFighting_C.PreActRelocation
// 0x0010 (0x0010 - 0x0000)
struct BP_BtlPhaseFighting_C_PreActRelocation final
{
public:
	class ABP_BtlCharacterBase_C*                 CallFunc_GetMainAction_MainCharacter;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnemy_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlPhaseFighting_C_PreActRelocation) == 0x000008, "Wrong alignment on BP_BtlPhaseFighting_C_PreActRelocation");
static_assert(sizeof(BP_BtlPhaseFighting_C_PreActRelocation) == 0x000010, "Wrong size on BP_BtlPhaseFighting_C_PreActRelocation");
static_assert(offsetof(BP_BtlPhaseFighting_C_PreActRelocation, CallFunc_GetMainAction_MainCharacter) == 0x000000, "Member 'BP_BtlPhaseFighting_C_PreActRelocation::CallFunc_GetMainAction_MainCharacter' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_PreActRelocation, CallFunc_IsEnemy_ReturnValue) == 0x000008, "Member 'BP_BtlPhaseFighting_C_PreActRelocation::CallFunc_IsEnemy_ReturnValue' has a wrong offset!");

// Function BP_BtlPhaseFighting.BP_BtlPhaseFighting_C.PlayPreActCamera
// 0x0010 (0x0010 - 0x0000)
struct BP_BtlPhaseFighting_C_PlayPreActCamera final
{
public:
	class ABP_BtlCharacterBase_C*                 CallFunc_GetMainAction_MainCharacter;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBoss_ReturnValue;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckDownContinuedState_ReturnValue;      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemy_ReturnValue;                      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlPhaseFighting_C_PlayPreActCamera) == 0x000008, "Wrong alignment on BP_BtlPhaseFighting_C_PlayPreActCamera");
static_assert(sizeof(BP_BtlPhaseFighting_C_PlayPreActCamera) == 0x000010, "Wrong size on BP_BtlPhaseFighting_C_PlayPreActCamera");
static_assert(offsetof(BP_BtlPhaseFighting_C_PlayPreActCamera, CallFunc_GetMainAction_MainCharacter) == 0x000000, "Member 'BP_BtlPhaseFighting_C_PlayPreActCamera::CallFunc_GetMainAction_MainCharacter' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_PlayPreActCamera, CallFunc_IsBoss_ReturnValue) == 0x000008, "Member 'BP_BtlPhaseFighting_C_PlayPreActCamera::CallFunc_IsBoss_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_PlayPreActCamera, CallFunc_CheckDownContinuedState_ReturnValue) == 0x000009, "Member 'BP_BtlPhaseFighting_C_PlayPreActCamera::CallFunc_CheckDownContinuedState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_PlayPreActCamera, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'BP_BtlPhaseFighting_C_PlayPreActCamera::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_PlayPreActCamera, CallFunc_IsEnemy_ReturnValue) == 0x00000B, "Member 'BP_BtlPhaseFighting_C_PlayPreActCamera::CallFunc_IsEnemy_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_PlayPreActCamera, CallFunc_BooleanAND_ReturnValue) == 0x00000C, "Member 'BP_BtlPhaseFighting_C_PlayPreActCamera::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_BtlPhaseFighting.BP_BtlPhaseFighting_C.MakeOtherAlloutMember
// 0x0080 (0x0080 - 0x0000)
struct BP_BtlPhaseFighting_C_MakeOtherAlloutMember final
{
public:
	TArray<class ABP_BtlCharacterBase_C*>         OtherMembers;                                      // 0x0000(0x0010)(Parm, OutParm)
	TArray<class ABP_BtlCharacterBase_C*>         List;                                              // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 CallFunc_GetEventMainAction_EventMainChara;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CallFunc_GetPlayerList_ReturnValue;                // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPossibleAlloutMember_ReturnValue;       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlPhaseFighting_C_MakeOtherAlloutMember) == 0x000008, "Wrong alignment on BP_BtlPhaseFighting_C_MakeOtherAlloutMember");
static_assert(sizeof(BP_BtlPhaseFighting_C_MakeOtherAlloutMember) == 0x000080, "Wrong size on BP_BtlPhaseFighting_C_MakeOtherAlloutMember");
static_assert(offsetof(BP_BtlPhaseFighting_C_MakeOtherAlloutMember, OtherMembers) == 0x000000, "Member 'BP_BtlPhaseFighting_C_MakeOtherAlloutMember::OtherMembers' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_MakeOtherAlloutMember, List) == 0x000010, "Member 'BP_BtlPhaseFighting_C_MakeOtherAlloutMember::List' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_MakeOtherAlloutMember, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_BtlPhaseFighting_C_MakeOtherAlloutMember::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_MakeOtherAlloutMember, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_BtlPhaseFighting_C_MakeOtherAlloutMember::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_MakeOtherAlloutMember, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_BtlPhaseFighting_C_MakeOtherAlloutMember::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_MakeOtherAlloutMember, CallFunc_GetEventMainAction_EventMainChara) == 0x000030, "Member 'BP_BtlPhaseFighting_C_MakeOtherAlloutMember::CallFunc_GetEventMainAction_EventMainChara' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_MakeOtherAlloutMember, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_BtlPhaseFighting_C_MakeOtherAlloutMember::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_MakeOtherAlloutMember, CallFunc_Greater_IntInt_ReturnValue) == 0x00003C, "Member 'BP_BtlPhaseFighting_C_MakeOtherAlloutMember::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_MakeOtherAlloutMember, CallFunc_Array_RemoveItem_ReturnValue) == 0x00003D, "Member 'BP_BtlPhaseFighting_C_MakeOtherAlloutMember::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_MakeOtherAlloutMember, CallFunc_GetPlayerList_ReturnValue) == 0x000040, "Member 'BP_BtlPhaseFighting_C_MakeOtherAlloutMember::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_MakeOtherAlloutMember, CallFunc_Array_Length_ReturnValue_1) == 0x000050, "Member 'BP_BtlPhaseFighting_C_MakeOtherAlloutMember::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_MakeOtherAlloutMember, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_BtlPhaseFighting_C_MakeOtherAlloutMember::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_MakeOtherAlloutMember, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_BtlPhaseFighting_C_MakeOtherAlloutMember::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_MakeOtherAlloutMember, K2Node_DynamicCast_AsBP_Btl_Character_Base) == 0x000068, "Member 'BP_BtlPhaseFighting_C_MakeOtherAlloutMember::K2Node_DynamicCast_AsBP_Btl_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_MakeOtherAlloutMember, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_BtlPhaseFighting_C_MakeOtherAlloutMember::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_MakeOtherAlloutMember, CallFunc_Array_AddUnique_ReturnValue) == 0x000074, "Member 'BP_BtlPhaseFighting_C_MakeOtherAlloutMember::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_MakeOtherAlloutMember, CallFunc_IsPossibleAlloutMember_ReturnValue) == 0x000078, "Member 'BP_BtlPhaseFighting_C_MakeOtherAlloutMember::CallFunc_IsPossibleAlloutMember_ReturnValue' has a wrong offset!");

// Function BP_BtlPhaseFighting.BP_BtlPhaseFighting_C.SetupAlloutAttack
// 0x0070 (0x0070 - 0x0000)
struct BP_BtlPhaseFighting_C_SetupAlloutAttack final
{
public:
	class ABP_BtlCharacterBase_C*                 MainCharacter;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlCharacterBase_C*                 HERO;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_BtlCharacterBase_C*>         CallFunc_MakeOtherAlloutMember_OtherMembers;       // 0x0010(0x0010)(ReferenceParm)
	struct FTransform                             CallFunc_GetInitialTransform_trans;                // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetSubLevelActor_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlAlloutController_C*              CallFunc_FinishSpawningActor_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlPhaseFighting_C_SetupAlloutAttack) == 0x000010, "Wrong alignment on BP_BtlPhaseFighting_C_SetupAlloutAttack");
static_assert(sizeof(BP_BtlPhaseFighting_C_SetupAlloutAttack) == 0x000070, "Wrong size on BP_BtlPhaseFighting_C_SetupAlloutAttack");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetupAlloutAttack, MainCharacter) == 0x000000, "Member 'BP_BtlPhaseFighting_C_SetupAlloutAttack::MainCharacter' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetupAlloutAttack, HERO) == 0x000008, "Member 'BP_BtlPhaseFighting_C_SetupAlloutAttack::HERO' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetupAlloutAttack, CallFunc_MakeOtherAlloutMember_OtherMembers) == 0x000010, "Member 'BP_BtlPhaseFighting_C_SetupAlloutAttack::CallFunc_MakeOtherAlloutMember_OtherMembers' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetupAlloutAttack, CallFunc_GetInitialTransform_trans) == 0x000020, "Member 'BP_BtlPhaseFighting_C_SetupAlloutAttack::CallFunc_GetInitialTransform_trans' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetupAlloutAttack, CallFunc_GetSubLevelActor_ReturnValue) == 0x000050, "Member 'BP_BtlPhaseFighting_C_SetupAlloutAttack::CallFunc_GetSubLevelActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetupAlloutAttack, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000058, "Member 'BP_BtlPhaseFighting_C_SetupAlloutAttack::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetupAlloutAttack, CallFunc_FinishSpawningActor_ReturnValue) == 0x000060, "Member 'BP_BtlPhaseFighting_C_SetupAlloutAttack::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_BtlPhaseFighting.BP_BtlPhaseFighting_C.RotateEnemyAnchorForAllout
// 0x0010 (0x0010 - 0x0000)
struct BP_BtlPhaseFighting_C_RotateEnemyAnchorForAllout final
{
public:
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlPhaseFighting_C_RotateEnemyAnchorForAllout) == 0x000004, "Wrong alignment on BP_BtlPhaseFighting_C_RotateEnemyAnchorForAllout");
static_assert(sizeof(BP_BtlPhaseFighting_C_RotateEnemyAnchorForAllout) == 0x000010, "Wrong size on BP_BtlPhaseFighting_C_RotateEnemyAnchorForAllout");
static_assert(offsetof(BP_BtlPhaseFighting_C_RotateEnemyAnchorForAllout, CallFunc_MakeRotator_ReturnValue) == 0x000000, "Member 'BP_BtlPhaseFighting_C_RotateEnemyAnchorForAllout::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_RotateEnemyAnchorForAllout, CallFunc_K2_SetActorRotation_ReturnValue) == 0x00000C, "Member 'BP_BtlPhaseFighting_C_RotateEnemyAnchorForAllout::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function BP_BtlPhaseFighting.BP_BtlPhaseFighting_C.SetupTargetsForAllout
// 0x0048 (0x0048 - 0x0000)
struct BP_BtlPhaseFighting_C_SetupTargetsForAllout final
{
public:
	TArray<class ABtlActor*>                      List;                                              // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CallFunc_GetEnemyList_ReturnValue;                 // 0x0020(0x0010)(ReferenceParm)
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckAlive_ReturnValue;                   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPossibleAITarget_ReturnValue;           // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlPhaseFighting_C_SetupTargetsForAllout) == 0x000008, "Wrong alignment on BP_BtlPhaseFighting_C_SetupTargetsForAllout");
static_assert(sizeof(BP_BtlPhaseFighting_C_SetupTargetsForAllout) == 0x000048, "Wrong size on BP_BtlPhaseFighting_C_SetupTargetsForAllout");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetupTargetsForAllout, List) == 0x000000, "Member 'BP_BtlPhaseFighting_C_SetupTargetsForAllout::List' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetupTargetsForAllout, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_BtlPhaseFighting_C_SetupTargetsForAllout::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetupTargetsForAllout, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_BtlPhaseFighting_C_SetupTargetsForAllout::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetupTargetsForAllout, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_BtlPhaseFighting_C_SetupTargetsForAllout::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetupTargetsForAllout, CallFunc_GetEnemyList_ReturnValue) == 0x000020, "Member 'BP_BtlPhaseFighting_C_SetupTargetsForAllout::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetupTargetsForAllout, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_BtlPhaseFighting_C_SetupTargetsForAllout::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetupTargetsForAllout, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_BtlPhaseFighting_C_SetupTargetsForAllout::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetupTargetsForAllout, CallFunc_Array_AddUnique_ReturnValue) == 0x00003C, "Member 'BP_BtlPhaseFighting_C_SetupTargetsForAllout::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetupTargetsForAllout, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_BtlPhaseFighting_C_SetupTargetsForAllout::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetupTargetsForAllout, CallFunc_CheckAlive_ReturnValue) == 0x000041, "Member 'BP_BtlPhaseFighting_C_SetupTargetsForAllout::CallFunc_CheckAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetupTargetsForAllout, CallFunc_IsPossibleAITarget_ReturnValue) == 0x000042, "Member 'BP_BtlPhaseFighting_C_SetupTargetsForAllout::CallFunc_IsPossibleAITarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetupTargetsForAllout, CallFunc_BooleanAND_ReturnValue) == 0x000043, "Member 'BP_BtlPhaseFighting_C_SetupTargetsForAllout::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_BtlPhaseFighting.BP_BtlPhaseFighting_C.SetAllCharacterVisible
// 0x0050 (0x0050 - 0x0000)
struct BP_BtlPhaseFighting_C_SetAllCharacterVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              Target;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CallFunc_GetAllCharacterList_ReturnValue;          // 0x0020(0x0010)(ReferenceParm)
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlPhaseFighting_C_SetAllCharacterVisible) == 0x000008, "Wrong alignment on BP_BtlPhaseFighting_C_SetAllCharacterVisible");
static_assert(sizeof(BP_BtlPhaseFighting_C_SetAllCharacterVisible) == 0x000050, "Wrong size on BP_BtlPhaseFighting_C_SetAllCharacterVisible");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetAllCharacterVisible, Visible) == 0x000000, "Member 'BP_BtlPhaseFighting_C_SetAllCharacterVisible::Visible' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetAllCharacterVisible, Target) == 0x000008, "Member 'BP_BtlPhaseFighting_C_SetAllCharacterVisible::Target' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetAllCharacterVisible, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_BtlPhaseFighting_C_SetAllCharacterVisible::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetAllCharacterVisible, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_BtlPhaseFighting_C_SetAllCharacterVisible::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetAllCharacterVisible, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_BtlPhaseFighting_C_SetAllCharacterVisible::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetAllCharacterVisible, CallFunc_GetAllCharacterList_ReturnValue) == 0x000020, "Member 'BP_BtlPhaseFighting_C_SetAllCharacterVisible::CallFunc_GetAllCharacterList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetAllCharacterVisible, K2Node_DynamicCast_AsBP_Btl_Character_Base) == 0x000030, "Member 'BP_BtlPhaseFighting_C_SetAllCharacterVisible::K2Node_DynamicCast_AsBP_Btl_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetAllCharacterVisible, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_BtlPhaseFighting_C_SetAllCharacterVisible::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetAllCharacterVisible, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_BtlPhaseFighting_C_SetAllCharacterVisible::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetAllCharacterVisible, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_BtlPhaseFighting_C_SetAllCharacterVisible::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_SetAllCharacterVisible, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_BtlPhaseFighting_C_SetAllCharacterVisible::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BtlPhaseFighting.BP_BtlPhaseFighting_C.HideExceptAlloutParticipants
// 0x0080 (0x0080 - 0x0000)
struct BP_BtlPhaseFighting_C_HideExceptAlloutParticipants final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABtlActor*>                      CallFunc_GetAllCharacterList_ReturnValue;          // 0x0010(0x0010)(ReferenceParm)
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPossibleEventTarget_ReturnValue;        // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABtlActor*>                      CallFunc_GetPlayerList_ReturnValue;                // 0x0048(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base_1;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPossibleAlloutMember_ReturnValue;       // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlPhaseFighting_C_HideExceptAlloutParticipants) == 0x000008, "Wrong alignment on BP_BtlPhaseFighting_C_HideExceptAlloutParticipants");
static_assert(sizeof(BP_BtlPhaseFighting_C_HideExceptAlloutParticipants) == 0x000080, "Wrong size on BP_BtlPhaseFighting_C_HideExceptAlloutParticipants");
static_assert(offsetof(BP_BtlPhaseFighting_C_HideExceptAlloutParticipants, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_BtlPhaseFighting_C_HideExceptAlloutParticipants::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_HideExceptAlloutParticipants, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_BtlPhaseFighting_C_HideExceptAlloutParticipants::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_HideExceptAlloutParticipants, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_BtlPhaseFighting_C_HideExceptAlloutParticipants::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_HideExceptAlloutParticipants, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'BP_BtlPhaseFighting_C_HideExceptAlloutParticipants::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_HideExceptAlloutParticipants, CallFunc_GetAllCharacterList_ReturnValue) == 0x000010, "Member 'BP_BtlPhaseFighting_C_HideExceptAlloutParticipants::CallFunc_GetAllCharacterList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_HideExceptAlloutParticipants, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_BtlPhaseFighting_C_HideExceptAlloutParticipants::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_HideExceptAlloutParticipants, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_BtlPhaseFighting_C_HideExceptAlloutParticipants::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_HideExceptAlloutParticipants, CallFunc_IsPossibleEventTarget_ReturnValue) == 0x00002C, "Member 'BP_BtlPhaseFighting_C_HideExceptAlloutParticipants::CallFunc_IsPossibleEventTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_HideExceptAlloutParticipants, K2Node_DynamicCast_AsBP_Btl_Character_Base) == 0x000030, "Member 'BP_BtlPhaseFighting_C_HideExceptAlloutParticipants::K2Node_DynamicCast_AsBP_Btl_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_HideExceptAlloutParticipants, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_BtlPhaseFighting_C_HideExceptAlloutParticipants::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_HideExceptAlloutParticipants, Temp_int_Loop_Counter_Variable_1) == 0x00003C, "Member 'BP_BtlPhaseFighting_C_HideExceptAlloutParticipants::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_HideExceptAlloutParticipants, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_BtlPhaseFighting_C_HideExceptAlloutParticipants::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_HideExceptAlloutParticipants, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_BtlPhaseFighting_C_HideExceptAlloutParticipants::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_HideExceptAlloutParticipants, CallFunc_GetPlayerList_ReturnValue) == 0x000048, "Member 'BP_BtlPhaseFighting_C_HideExceptAlloutParticipants::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_HideExceptAlloutParticipants, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'BP_BtlPhaseFighting_C_HideExceptAlloutParticipants::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_HideExceptAlloutParticipants, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'BP_BtlPhaseFighting_C_HideExceptAlloutParticipants::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_HideExceptAlloutParticipants, CallFunc_Less_IntInt_ReturnValue_1) == 0x000068, "Member 'BP_BtlPhaseFighting_C_HideExceptAlloutParticipants::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_HideExceptAlloutParticipants, K2Node_DynamicCast_AsBP_Btl_Character_Base_1) == 0x000070, "Member 'BP_BtlPhaseFighting_C_HideExceptAlloutParticipants::K2Node_DynamicCast_AsBP_Btl_Character_Base_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_HideExceptAlloutParticipants, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'BP_BtlPhaseFighting_C_HideExceptAlloutParticipants::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_HideExceptAlloutParticipants, CallFunc_IsPossibleAlloutMember_ReturnValue) == 0x000079, "Member 'BP_BtlPhaseFighting_C_HideExceptAlloutParticipants::CallFunc_IsPossibleAlloutMember_ReturnValue' has a wrong offset!");

// Function BP_BtlPhaseFighting.BP_BtlPhaseFighting_C.RotateHeroToCenter
// 0x0018 (0x0018 - 0x0000)
struct BP_BtlPhaseFighting_C_RotateHeroToCenter final
{
public:
	class ABtlActor*                              CallFunc_GetHero_ReturnValue;                      // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlPhaseFighting_C_RotateHeroToCenter) == 0x000008, "Wrong alignment on BP_BtlPhaseFighting_C_RotateHeroToCenter");
static_assert(sizeof(BP_BtlPhaseFighting_C_RotateHeroToCenter) == 0x000018, "Wrong size on BP_BtlPhaseFighting_C_RotateHeroToCenter");
static_assert(offsetof(BP_BtlPhaseFighting_C_RotateHeroToCenter, CallFunc_GetHero_ReturnValue) == 0x000000, "Member 'BP_BtlPhaseFighting_C_RotateHeroToCenter::CallFunc_GetHero_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_RotateHeroToCenter, K2Node_DynamicCast_AsBP_Btl_Character_Base) == 0x000008, "Member 'BP_BtlPhaseFighting_C_RotateHeroToCenter::K2Node_DynamicCast_AsBP_Btl_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_RotateHeroToCenter, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_BtlPhaseFighting_C_RotateHeroToCenter::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BtlPhaseFighting.BP_BtlPhaseFighting_C.HideDeadPlayer
// 0x0040 (0x0040 - 0x0000)
struct BP_BtlPhaseFighting_C_HideDeadPlayer final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABtlActor*>                      CallFunc_GetPlayerList_ReturnValue;                // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_ReturnValue;                       // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlPhaseFighting_C_HideDeadPlayer) == 0x000008, "Wrong alignment on BP_BtlPhaseFighting_C_HideDeadPlayer");
static_assert(sizeof(BP_BtlPhaseFighting_C_HideDeadPlayer) == 0x000040, "Wrong size on BP_BtlPhaseFighting_C_HideDeadPlayer");
static_assert(offsetof(BP_BtlPhaseFighting_C_HideDeadPlayer, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_BtlPhaseFighting_C_HideDeadPlayer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_HideDeadPlayer, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_BtlPhaseFighting_C_HideDeadPlayer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_HideDeadPlayer, CallFunc_GetPlayerList_ReturnValue) == 0x000008, "Member 'BP_BtlPhaseFighting_C_HideDeadPlayer::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_HideDeadPlayer, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_BtlPhaseFighting_C_HideDeadPlayer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_HideDeadPlayer, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_BtlPhaseFighting_C_HideDeadPlayer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_HideDeadPlayer, K2Node_DynamicCast_AsBP_Btl_Character_Base) == 0x000028, "Member 'BP_BtlPhaseFighting_C_HideDeadPlayer::K2Node_DynamicCast_AsBP_Btl_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_HideDeadPlayer, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_BtlPhaseFighting_C_HideDeadPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_HideDeadPlayer, CallFunc_IsDead_ReturnValue) == 0x000031, "Member 'BP_BtlPhaseFighting_C_HideDeadPlayer::CallFunc_IsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_HideDeadPlayer, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_BtlPhaseFighting_C_HideDeadPlayer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_HideDeadPlayer, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_BtlPhaseFighting_C_HideDeadPlayer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_HideDeadPlayer, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_BtlPhaseFighting_C_HideDeadPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlPhaseFighting.BP_BtlPhaseFighting_C.ProcAutoSkillRecovery
// 0x0010 (0x0010 - 0x0000)
struct BP_BtlPhaseFighting_C_ProcAutoSkillRecovery final
{
public:
	class ABP_BtlCharacterBase_C*                 CallFunc_GetMainAction_MainCharacter;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoAutoSkillRecovery_RecoveryValid;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlPhaseFighting_C_ProcAutoSkillRecovery) == 0x000008, "Wrong alignment on BP_BtlPhaseFighting_C_ProcAutoSkillRecovery");
static_assert(sizeof(BP_BtlPhaseFighting_C_ProcAutoSkillRecovery) == 0x000010, "Wrong size on BP_BtlPhaseFighting_C_ProcAutoSkillRecovery");
static_assert(offsetof(BP_BtlPhaseFighting_C_ProcAutoSkillRecovery, CallFunc_GetMainAction_MainCharacter) == 0x000000, "Member 'BP_BtlPhaseFighting_C_ProcAutoSkillRecovery::CallFunc_GetMainAction_MainCharacter' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_ProcAutoSkillRecovery, CallFunc_DoAutoSkillRecovery_RecoveryValid) == 0x000008, "Member 'BP_BtlPhaseFighting_C_ProcAutoSkillRecovery::CallFunc_DoAutoSkillRecovery_RecoveryValid' has a wrong offset!");

// Function BP_BtlPhaseFighting.BP_BtlPhaseFighting_C.Proc Before Command Select
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlPhaseFighting_C_Proc_Before_Command_Select final
{
public:
	class ABP_BtlCharacterBase_C*                 CallFunc_GetMainAction_MainCharacter;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlPhaseFighting_C_Proc_Before_Command_Select) == 0x000008, "Wrong alignment on BP_BtlPhaseFighting_C_Proc_Before_Command_Select");
static_assert(sizeof(BP_BtlPhaseFighting_C_Proc_Before_Command_Select) == 0x000008, "Wrong size on BP_BtlPhaseFighting_C_Proc_Before_Command_Select");
static_assert(offsetof(BP_BtlPhaseFighting_C_Proc_Before_Command_Select, CallFunc_GetMainAction_MainCharacter) == 0x000000, "Member 'BP_BtlPhaseFighting_C_Proc_Before_Command_Select::CallFunc_GetMainAction_MainCharacter' has a wrong offset!");

// Function BP_BtlPhaseFighting.BP_BtlPhaseFighting_C.Proc Switch to Rush
// 0x0003 (0x0003 - 0x0000)
struct BP_BtlPhaseFighting_C_Proc_Switch_to_Rush final
{
public:
	bool                                          CallFunc_CheckInRush_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckInRush_ReturnValue_1;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckRequestRushMode_ReturnValue;         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlPhaseFighting_C_Proc_Switch_to_Rush) == 0x000001, "Wrong alignment on BP_BtlPhaseFighting_C_Proc_Switch_to_Rush");
static_assert(sizeof(BP_BtlPhaseFighting_C_Proc_Switch_to_Rush) == 0x000003, "Wrong size on BP_BtlPhaseFighting_C_Proc_Switch_to_Rush");
static_assert(offsetof(BP_BtlPhaseFighting_C_Proc_Switch_to_Rush, CallFunc_CheckInRush_ReturnValue) == 0x000000, "Member 'BP_BtlPhaseFighting_C_Proc_Switch_to_Rush::CallFunc_CheckInRush_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_Proc_Switch_to_Rush, CallFunc_CheckInRush_ReturnValue_1) == 0x000001, "Member 'BP_BtlPhaseFighting_C_Proc_Switch_to_Rush::CallFunc_CheckInRush_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_Proc_Switch_to_Rush, CallFunc_CheckRequestRushMode_ReturnValue) == 0x000002, "Member 'BP_BtlPhaseFighting_C_Proc_Switch_to_Rush::CallFunc_CheckRequestRushMode_ReturnValue' has a wrong offset!");

// Function BP_BtlPhaseFighting.BP_BtlPhaseFighting_C.DoAttackByRush
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlPhaseFighting_C_DoAttackByRush final
{
public:
	class ABP_BtlCharacterBase_C*                 MainCharacter;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlPhaseFighting_C_DoAttackByRush) == 0x000008, "Wrong alignment on BP_BtlPhaseFighting_C_DoAttackByRush");
static_assert(sizeof(BP_BtlPhaseFighting_C_DoAttackByRush) == 0x000008, "Wrong size on BP_BtlPhaseFighting_C_DoAttackByRush");
static_assert(offsetof(BP_BtlPhaseFighting_C_DoAttackByRush, MainCharacter) == 0x000000, "Member 'BP_BtlPhaseFighting_C_DoAttackByRush::MainCharacter' has a wrong offset!");

// Function BP_BtlPhaseFighting.BP_BtlPhaseFighting_C.SyncProgressTimingInBP
// 0x0001 (0x0001 - 0x0000)
struct BP_BtlPhaseFighting_C_SyncProgressTimingInBP final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlPhaseFighting_C_SyncProgressTimingInBP) == 0x000001, "Wrong alignment on BP_BtlPhaseFighting_C_SyncProgressTimingInBP");
static_assert(sizeof(BP_BtlPhaseFighting_C_SyncProgressTimingInBP) == 0x000001, "Wrong size on BP_BtlPhaseFighting_C_SyncProgressTimingInBP");
static_assert(offsetof(BP_BtlPhaseFighting_C_SyncProgressTimingInBP, ReturnValue) == 0x000000, "Member 'BP_BtlPhaseFighting_C_SyncProgressTimingInBP::ReturnValue' has a wrong offset!");

// Function BP_BtlPhaseFighting.BP_BtlPhaseFighting_C.RestoreSpecificModelsFromAllout
// 0x0050 (0x0050 - 0x0000)
struct BP_BtlPhaseFighting_C_RestoreSpecificModelsFromAllout final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CallFunc_GetPlayerList_ReturnValue;                // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBtlAegisInterface>    K2Node_DynamicCast_AsBtl_Aegis_Interface;          // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOrgia_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlPhaseFighting_C_RestoreSpecificModelsFromAllout) == 0x000008, "Wrong alignment on BP_BtlPhaseFighting_C_RestoreSpecificModelsFromAllout");
static_assert(sizeof(BP_BtlPhaseFighting_C_RestoreSpecificModelsFromAllout) == 0x000050, "Wrong size on BP_BtlPhaseFighting_C_RestoreSpecificModelsFromAllout");
static_assert(offsetof(BP_BtlPhaseFighting_C_RestoreSpecificModelsFromAllout, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_BtlPhaseFighting_C_RestoreSpecificModelsFromAllout::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_RestoreSpecificModelsFromAllout, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_BtlPhaseFighting_C_RestoreSpecificModelsFromAllout::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_RestoreSpecificModelsFromAllout, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_BtlPhaseFighting_C_RestoreSpecificModelsFromAllout::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_RestoreSpecificModelsFromAllout, CallFunc_GetPlayerList_ReturnValue) == 0x000010, "Member 'BP_BtlPhaseFighting_C_RestoreSpecificModelsFromAllout::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_RestoreSpecificModelsFromAllout, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_BtlPhaseFighting_C_RestoreSpecificModelsFromAllout::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_RestoreSpecificModelsFromAllout, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_BtlPhaseFighting_C_RestoreSpecificModelsFromAllout::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_RestoreSpecificModelsFromAllout, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_BtlPhaseFighting_C_RestoreSpecificModelsFromAllout::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_RestoreSpecificModelsFromAllout, K2Node_DynamicCast_AsBtl_Aegis_Interface) == 0x000038, "Member 'BP_BtlPhaseFighting_C_RestoreSpecificModelsFromAllout::K2Node_DynamicCast_AsBtl_Aegis_Interface' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_RestoreSpecificModelsFromAllout, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_BtlPhaseFighting_C_RestoreSpecificModelsFromAllout::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_RestoreSpecificModelsFromAllout, CallFunc_IsOrgia_ReturnValue) == 0x000049, "Member 'BP_BtlPhaseFighting_C_RestoreSpecificModelsFromAllout::CallFunc_IsOrgia_ReturnValue' has a wrong offset!");

// Function BP_BtlPhaseFighting.BP_BtlPhaseFighting_C.FinalizeAlloutAnnihilation
// 0x0001 (0x0001 - 0x0000)
struct BP_BtlPhaseFighting_C_FinalizeAlloutAnnihilation final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlPhaseFighting_C_FinalizeAlloutAnnihilation) == 0x000001, "Wrong alignment on BP_BtlPhaseFighting_C_FinalizeAlloutAnnihilation");
static_assert(sizeof(BP_BtlPhaseFighting_C_FinalizeAlloutAnnihilation) == 0x000001, "Wrong size on BP_BtlPhaseFighting_C_FinalizeAlloutAnnihilation");
static_assert(offsetof(BP_BtlPhaseFighting_C_FinalizeAlloutAnnihilation, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_BtlPhaseFighting_C_FinalizeAlloutAnnihilation::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlPhaseFighting.BP_BtlPhaseFighting_C.CheckProgressNextPhaseInBP
// 0x0002 (0x0002 - 0x0000)
struct BP_BtlPhaseFighting_C_CheckProgressNextPhaseInBP final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlPhaseFighting_C_CheckProgressNextPhaseInBP) == 0x000001, "Wrong alignment on BP_BtlPhaseFighting_C_CheckProgressNextPhaseInBP");
static_assert(sizeof(BP_BtlPhaseFighting_C_CheckProgressNextPhaseInBP) == 0x000002, "Wrong size on BP_BtlPhaseFighting_C_CheckProgressNextPhaseInBP");
static_assert(offsetof(BP_BtlPhaseFighting_C_CheckProgressNextPhaseInBP, ReturnValue) == 0x000000, "Member 'BP_BtlPhaseFighting_C_CheckProgressNextPhaseInBP::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseFighting_C_CheckProgressNextPhaseInBP, CallFunc_BooleanOR_ReturnValue) == 0x000001, "Member 'BP_BtlPhaseFighting_C_CheckProgressNextPhaseInBP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

