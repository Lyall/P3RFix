#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtlPhaseEscape

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_BtlPhaseEscape.BP_BtlPhaseEscape_C.ExecuteUbergraph_BP_BtlPhaseEscape
// 0x0068 (0x0068 - 0x0000)
struct BP_BtlPhaseEscape_C_ExecuteUbergraph_BP_BtlPhaseEscape final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CallFunc_GetPlayerList_ReturnValue;                // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlHumanBase_C*                     K2Node_DynamicCast_AsBP_Btl_Human_Base;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_BtlPhaseEscape_C_ExecuteUbergraph_BP_BtlPhaseEscape) == 0x000008, "Wrong alignment on BP_BtlPhaseEscape_C_ExecuteUbergraph_BP_BtlPhaseEscape");
static_assert(sizeof(BP_BtlPhaseEscape_C_ExecuteUbergraph_BP_BtlPhaseEscape) == 0x000068, "Wrong size on BP_BtlPhaseEscape_C_ExecuteUbergraph_BP_BtlPhaseEscape");
static_assert(offsetof(BP_BtlPhaseEscape_C_ExecuteUbergraph_BP_BtlPhaseEscape, EntryPoint) == 0x000000, "Member 'BP_BtlPhaseEscape_C_ExecuteUbergraph_BP_BtlPhaseEscape::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_ExecuteUbergraph_BP_BtlPhaseEscape, Temp_int_Variable) == 0x000004, "Member 'BP_BtlPhaseEscape_C_ExecuteUbergraph_BP_BtlPhaseEscape::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_ExecuteUbergraph_BP_BtlPhaseEscape, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_BtlPhaseEscape_C_ExecuteUbergraph_BP_BtlPhaseEscape::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_ExecuteUbergraph_BP_BtlPhaseEscape, CallFunc_GetPlayerList_ReturnValue) == 0x000010, "Member 'BP_BtlPhaseEscape_C_ExecuteUbergraph_BP_BtlPhaseEscape::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_ExecuteUbergraph_BP_BtlPhaseEscape, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_BtlPhaseEscape_C_ExecuteUbergraph_BP_BtlPhaseEscape::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_ExecuteUbergraph_BP_BtlPhaseEscape, CallFunc_Array_Length_ReturnValue_1) == 0x000024, "Member 'BP_BtlPhaseEscape_C_ExecuteUbergraph_BP_BtlPhaseEscape::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_ExecuteUbergraph_BP_BtlPhaseEscape, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_BtlPhaseEscape_C_ExecuteUbergraph_BP_BtlPhaseEscape::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_ExecuteUbergraph_BP_BtlPhaseEscape, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_BtlPhaseEscape_C_ExecuteUbergraph_BP_BtlPhaseEscape::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_ExecuteUbergraph_BP_BtlPhaseEscape, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_BtlPhaseEscape_C_ExecuteUbergraph_BP_BtlPhaseEscape::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_ExecuteUbergraph_BP_BtlPhaseEscape, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_BtlPhaseEscape_C_ExecuteUbergraph_BP_BtlPhaseEscape::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_ExecuteUbergraph_BP_BtlPhaseEscape, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_BtlPhaseEscape_C_ExecuteUbergraph_BP_BtlPhaseEscape::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_ExecuteUbergraph_BP_BtlPhaseEscape, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_BtlPhaseEscape_C_ExecuteUbergraph_BP_BtlPhaseEscape::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_ExecuteUbergraph_BP_BtlPhaseEscape, K2Node_DynamicCast_AsBP_Btl_Human_Base) == 0x000048, "Member 'BP_BtlPhaseEscape_C_ExecuteUbergraph_BP_BtlPhaseEscape::K2Node_DynamicCast_AsBP_Btl_Human_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_ExecuteUbergraph_BP_BtlPhaseEscape, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_BtlPhaseEscape_C_ExecuteUbergraph_BP_BtlPhaseEscape::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_ExecuteUbergraph_BP_BtlPhaseEscape, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000051, "Member 'BP_BtlPhaseEscape_C_ExecuteUbergraph_BP_BtlPhaseEscape::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_ExecuteUbergraph_BP_BtlPhaseEscape, K2Node_CreateDelegate_OutputDelegate) == 0x000054, "Member 'BP_BtlPhaseEscape_C_ExecuteUbergraph_BP_BtlPhaseEscape::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_BtlPhaseEscape.BP_BtlPhaseEscape_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_BtlPhaseEscape_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlPhaseEscape_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_BtlPhaseEscape_C_ReceiveTick");
static_assert(sizeof(BP_BtlPhaseEscape_C_ReceiveTick) == 0x000004, "Wrong size on BP_BtlPhaseEscape_C_ReceiveTick");
static_assert(offsetof(BP_BtlPhaseEscape_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_BtlPhaseEscape_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_BtlPhaseEscape.BP_BtlPhaseEscape_C.GetNextPhaseInBP
// 0x0060 (0x0060 - 0x0000)
struct BP_BtlPhaseEscape_C_GetNextPhaseInBP final
{
public:
	class ABtlPhase*                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABtlPhaseResult*                        Phase;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckNeedResult_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0xF];                                       // 0x0011(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetInitialTransform_trans;                // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABtlPhaseResult*                        CallFunc_FinishSpawningActor_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlPhaseEscape_C_GetNextPhaseInBP) == 0x000010, "Wrong alignment on BP_BtlPhaseEscape_C_GetNextPhaseInBP");
static_assert(sizeof(BP_BtlPhaseEscape_C_GetNextPhaseInBP) == 0x000060, "Wrong size on BP_BtlPhaseEscape_C_GetNextPhaseInBP");
static_assert(offsetof(BP_BtlPhaseEscape_C_GetNextPhaseInBP, ReturnValue) == 0x000000, "Member 'BP_BtlPhaseEscape_C_GetNextPhaseInBP::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_GetNextPhaseInBP, Phase) == 0x000008, "Member 'BP_BtlPhaseEscape_C_GetNextPhaseInBP::Phase' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_GetNextPhaseInBP, CallFunc_CheckNeedResult_ReturnValue) == 0x000010, "Member 'BP_BtlPhaseEscape_C_GetNextPhaseInBP::CallFunc_CheckNeedResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_GetNextPhaseInBP, CallFunc_GetInitialTransform_trans) == 0x000020, "Member 'BP_BtlPhaseEscape_C_GetNextPhaseInBP::CallFunc_GetInitialTransform_trans' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_GetNextPhaseInBP, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000050, "Member 'BP_BtlPhaseEscape_C_GetNextPhaseInBP::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_GetNextPhaseInBP, CallFunc_FinishSpawningActor_ReturnValue) == 0x000058, "Member 'BP_BtlPhaseEscape_C_GetNextPhaseInBP::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_BtlPhaseEscape.BP_BtlPhaseEscape_C.Setup
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlPhaseEscape_C_Setup final
{
public:
	class ABP_BtlEventAssistant_C*                CallFunc_GetActorOfClass_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlPhaseEscape_C_Setup) == 0x000008, "Wrong alignment on BP_BtlPhaseEscape_C_Setup");
static_assert(sizeof(BP_BtlPhaseEscape_C_Setup) == 0x000008, "Wrong size on BP_BtlPhaseEscape_C_Setup");
static_assert(offsetof(BP_BtlPhaseEscape_C_Setup, CallFunc_GetActorOfClass_ReturnValue) == 0x000000, "Member 'BP_BtlPhaseEscape_C_Setup::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");

// Function BP_BtlPhaseEscape.BP_BtlPhaseEscape_C.AllocateMembers
// 0x0088 (0x0088 - 0x0000)
struct BP_BtlPhaseEscape_C_AllocateMembers final
{
public:
	TArray<class ABP_BtlCharacterBase_C*>         List;                                              // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_GetHero_ReturnValue;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_GetHero_ReturnValue_1;                    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABtlActor*>                      CallFunc_GetPlayerList_ReturnValue;                // 0x0040(0x0010)(ReferenceParm)
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base_1;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base_2;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckAlive_ReturnValue;                   // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlPhaseEscape_C_AllocateMembers) == 0x000008, "Wrong alignment on BP_BtlPhaseEscape_C_AllocateMembers");
static_assert(sizeof(BP_BtlPhaseEscape_C_AllocateMembers) == 0x000088, "Wrong size on BP_BtlPhaseEscape_C_AllocateMembers");
static_assert(offsetof(BP_BtlPhaseEscape_C_AllocateMembers, List) == 0x000000, "Member 'BP_BtlPhaseEscape_C_AllocateMembers::List' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_AllocateMembers, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_BtlPhaseEscape_C_AllocateMembers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_AllocateMembers, CallFunc_GetHero_ReturnValue) == 0x000018, "Member 'BP_BtlPhaseEscape_C_AllocateMembers::CallFunc_GetHero_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_AllocateMembers, K2Node_DynamicCast_AsBP_Btl_Character_Base) == 0x000020, "Member 'BP_BtlPhaseEscape_C_AllocateMembers::K2Node_DynamicCast_AsBP_Btl_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_AllocateMembers, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_BtlPhaseEscape_C_AllocateMembers::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_AllocateMembers, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_BtlPhaseEscape_C_AllocateMembers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_AllocateMembers, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_BtlPhaseEscape_C_AllocateMembers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_AllocateMembers, CallFunc_GetHero_ReturnValue_1) == 0x000038, "Member 'BP_BtlPhaseEscape_C_AllocateMembers::CallFunc_GetHero_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_AllocateMembers, CallFunc_GetPlayerList_ReturnValue) == 0x000040, "Member 'BP_BtlPhaseEscape_C_AllocateMembers::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_AllocateMembers, K2Node_DynamicCast_AsBP_Btl_Character_Base_1) == 0x000050, "Member 'BP_BtlPhaseEscape_C_AllocateMembers::K2Node_DynamicCast_AsBP_Btl_Character_Base_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_AllocateMembers, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_BtlPhaseEscape_C_AllocateMembers::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_AllocateMembers, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_BtlPhaseEscape_C_AllocateMembers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_AllocateMembers, CallFunc_Array_RemoveItem_ReturnValue) == 0x000068, "Member 'BP_BtlPhaseEscape_C_AllocateMembers::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_AllocateMembers, K2Node_DynamicCast_AsBP_Btl_Character_Base_2) == 0x000070, "Member 'BP_BtlPhaseEscape_C_AllocateMembers::K2Node_DynamicCast_AsBP_Btl_Character_Base_2' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_AllocateMembers, K2Node_DynamicCast_bSuccess_2) == 0x000078, "Member 'BP_BtlPhaseEscape_C_AllocateMembers::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_AllocateMembers, CallFunc_CheckAlive_ReturnValue) == 0x000079, "Member 'BP_BtlPhaseEscape_C_AllocateMembers::CallFunc_CheckAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_AllocateMembers, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'BP_BtlPhaseEscape_C_AllocateMembers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_AllocateMembers, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'BP_BtlPhaseEscape_C_AllocateMembers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_AllocateMembers, CallFunc_Array_AddUnique_ReturnValue) == 0x000084, "Member 'BP_BtlPhaseEscape_C_AllocateMembers::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_BtlPhaseEscape.BP_BtlPhaseEscape_C.Setup All Members Visibility
// 0x0048 (0x0048 - 0x0000)
struct BP_BtlPhaseEscape_C_Setup_All_Members_Visibility final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CallFunc_GetPlayerList_ReturnValue;                // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_ReturnValue;                       // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlPhaseEscape_C_Setup_All_Members_Visibility) == 0x000008, "Wrong alignment on BP_BtlPhaseEscape_C_Setup_All_Members_Visibility");
static_assert(sizeof(BP_BtlPhaseEscape_C_Setup_All_Members_Visibility) == 0x000048, "Wrong size on BP_BtlPhaseEscape_C_Setup_All_Members_Visibility");
static_assert(offsetof(BP_BtlPhaseEscape_C_Setup_All_Members_Visibility, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_BtlPhaseEscape_C_Setup_All_Members_Visibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_Setup_All_Members_Visibility, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_BtlPhaseEscape_C_Setup_All_Members_Visibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_Setup_All_Members_Visibility, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_BtlPhaseEscape_C_Setup_All_Members_Visibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_Setup_All_Members_Visibility, CallFunc_GetPlayerList_ReturnValue) == 0x000010, "Member 'BP_BtlPhaseEscape_C_Setup_All_Members_Visibility::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_Setup_All_Members_Visibility, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_BtlPhaseEscape_C_Setup_All_Members_Visibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_Setup_All_Members_Visibility, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_BtlPhaseEscape_C_Setup_All_Members_Visibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_Setup_All_Members_Visibility, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_BtlPhaseEscape_C_Setup_All_Members_Visibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_Setup_All_Members_Visibility, K2Node_DynamicCast_AsBP_Btl_Character_Base) == 0x000038, "Member 'BP_BtlPhaseEscape_C_Setup_All_Members_Visibility::K2Node_DynamicCast_AsBP_Btl_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_Setup_All_Members_Visibility, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_BtlPhaseEscape_C_Setup_All_Members_Visibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_Setup_All_Members_Visibility, CallFunc_IsDead_ReturnValue) == 0x000041, "Member 'BP_BtlPhaseEscape_C_Setup_All_Members_Visibility::CallFunc_IsDead_ReturnValue' has a wrong offset!");

// Function BP_BtlPhaseEscape.BP_BtlPhaseEscape_C.HideAllEnemies
// 0x0048 (0x0048 - 0x0000)
struct BP_BtlPhaseEscape_C_HideAllEnemies final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CallFunc_GetEnemyList_ReturnValue;                 // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlPhaseEscape_C_HideAllEnemies) == 0x000008, "Wrong alignment on BP_BtlPhaseEscape_C_HideAllEnemies");
static_assert(sizeof(BP_BtlPhaseEscape_C_HideAllEnemies) == 0x000048, "Wrong size on BP_BtlPhaseEscape_C_HideAllEnemies");
static_assert(offsetof(BP_BtlPhaseEscape_C_HideAllEnemies, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_BtlPhaseEscape_C_HideAllEnemies::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_HideAllEnemies, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_BtlPhaseEscape_C_HideAllEnemies::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_HideAllEnemies, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_BtlPhaseEscape_C_HideAllEnemies::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_HideAllEnemies, CallFunc_GetEnemyList_ReturnValue) == 0x000010, "Member 'BP_BtlPhaseEscape_C_HideAllEnemies::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_HideAllEnemies, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_BtlPhaseEscape_C_HideAllEnemies::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_HideAllEnemies, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_BtlPhaseEscape_C_HideAllEnemies::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_HideAllEnemies, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_BtlPhaseEscape_C_HideAllEnemies::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_HideAllEnemies, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_BtlPhaseEscape_C_HideAllEnemies::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_HideAllEnemies, K2Node_DynamicCast_AsBP_Btl_Character_Base) == 0x000038, "Member 'BP_BtlPhaseEscape_C_HideAllEnemies::K2Node_DynamicCast_AsBP_Btl_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseEscape_C_HideAllEnemies, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_BtlPhaseEscape_C_HideAllEnemies::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BtlPhaseEscape.BP_BtlPhaseEscape_C.CheckProgressNextPhaseInBP
// 0x0001 (0x0001 - 0x0000)
struct BP_BtlPhaseEscape_C_CheckProgressNextPhaseInBP final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlPhaseEscape_C_CheckProgressNextPhaseInBP) == 0x000001, "Wrong alignment on BP_BtlPhaseEscape_C_CheckProgressNextPhaseInBP");
static_assert(sizeof(BP_BtlPhaseEscape_C_CheckProgressNextPhaseInBP) == 0x000001, "Wrong size on BP_BtlPhaseEscape_C_CheckProgressNextPhaseInBP");
static_assert(offsetof(BP_BtlPhaseEscape_C_CheckProgressNextPhaseInBP, ReturnValue) == 0x000000, "Member 'BP_BtlPhaseEscape_C_CheckProgressNextPhaseInBP::ReturnValue' has a wrong offset!");

}

