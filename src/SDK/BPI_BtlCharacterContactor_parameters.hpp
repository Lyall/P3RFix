#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_BtlCharacterContactor

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPI_BtlCharacterContactor.BPI_BtlCharacterContactor_C.CheckNyxCoreMode
// 0x0001 (0x0001 - 0x0000)
struct BPI_BtlCharacterContactor_C_CheckNyxCoreMode final
{
public:
	bool                                          NyxCoreMode;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_BtlCharacterContactor_C_CheckNyxCoreMode) == 0x000001, "Wrong alignment on BPI_BtlCharacterContactor_C_CheckNyxCoreMode");
static_assert(sizeof(BPI_BtlCharacterContactor_C_CheckNyxCoreMode) == 0x000001, "Wrong size on BPI_BtlCharacterContactor_C_CheckNyxCoreMode");
static_assert(offsetof(BPI_BtlCharacterContactor_C_CheckNyxCoreMode, NyxCoreMode) == 0x000000, "Member 'BPI_BtlCharacterContactor_C_CheckNyxCoreMode::NyxCoreMode' has a wrong offset!");

// Function BPI_BtlCharacterContactor.BPI_BtlCharacterContactor_C.EncountHeroRunStart
// 0x0004 (0x0004 - 0x0000)
struct BPI_BtlCharacterContactor_C_EncountHeroRunStart final
{
public:
	float                                         StartAnimationTime;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_BtlCharacterContactor_C_EncountHeroRunStart) == 0x000004, "Wrong alignment on BPI_BtlCharacterContactor_C_EncountHeroRunStart");
static_assert(sizeof(BPI_BtlCharacterContactor_C_EncountHeroRunStart) == 0x000004, "Wrong size on BPI_BtlCharacterContactor_C_EncountHeroRunStart");
static_assert(offsetof(BPI_BtlCharacterContactor_C_EncountHeroRunStart, StartAnimationTime) == 0x000000, "Member 'BPI_BtlCharacterContactor_C_EncountHeroRunStart::StartAnimationTime' has a wrong offset!");

// Function BPI_BtlCharacterContactor.BPI_BtlCharacterContactor_C.EncountHeroGetShowActor
// 0x0010 (0x0010 - 0x0000)
struct BPI_BtlCharacterContactor_C_EncountHeroGetShowActor final
{
public:
	TArray<class AActor*>                         ShowActors;                                        // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BPI_BtlCharacterContactor_C_EncountHeroGetShowActor) == 0x000008, "Wrong alignment on BPI_BtlCharacterContactor_C_EncountHeroGetShowActor");
static_assert(sizeof(BPI_BtlCharacterContactor_C_EncountHeroGetShowActor) == 0x000010, "Wrong size on BPI_BtlCharacterContactor_C_EncountHeroGetShowActor");
static_assert(offsetof(BPI_BtlCharacterContactor_C_EncountHeroGetShowActor, ShowActors) == 0x000000, "Member 'BPI_BtlCharacterContactor_C_EncountHeroGetShowActor::ShowActors' has a wrong offset!");

// Function BPI_BtlCharacterContactor.BPI_BtlCharacterContactor_C.CheckSkeletalMeshValid
// 0x0001 (0x0001 - 0x0000)
struct BPI_BtlCharacterContactor_C_CheckSkeletalMeshValid final
{
public:
	bool                                          IsValid;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_BtlCharacterContactor_C_CheckSkeletalMeshValid) == 0x000001, "Wrong alignment on BPI_BtlCharacterContactor_C_CheckSkeletalMeshValid");
static_assert(sizeof(BPI_BtlCharacterContactor_C_CheckSkeletalMeshValid) == 0x000001, "Wrong size on BPI_BtlCharacterContactor_C_CheckSkeletalMeshValid");
static_assert(offsetof(BPI_BtlCharacterContactor_C_CheckSkeletalMeshValid, IsValid) == 0x000000, "Member 'BPI_BtlCharacterContactor_C_CheckSkeletalMeshValid::IsValid' has a wrong offset!");

}

