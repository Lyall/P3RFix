#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LS_Btl_UI_Encount

#include "Basic.hpp"


namespace SDK::Params
{

// Function LS_Btl_UI_Encount.SequenceDirector_C.ExecuteUbergraph_SequenceDirector
// 0x0020 (0x0020 - 0x0000)
struct SequenceDirector_C_ExecuteUbergraph_SequenceDirector final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlEncountAssistant_C*              K2Node_CustomEvent_BP_BtlEncountAssistant;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlEncountAssistant_C*              K2Node_CustomEvent_BP_BtlEncountAssistant_2;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlEncountAssistant_C*              K2Node_CustomEvent_BP_BtlEncountAssistant_1;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector) == 0x000008, "Wrong alignment on SequenceDirector_C_ExecuteUbergraph_SequenceDirector");
static_assert(sizeof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector) == 0x000020, "Wrong size on SequenceDirector_C_ExecuteUbergraph_SequenceDirector");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, EntryPoint) == 0x000000, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::EntryPoint' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_BP_BtlEncountAssistant) == 0x000008, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_BP_BtlEncountAssistant' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_BP_BtlEncountAssistant_2) == 0x000010, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_BP_BtlEncountAssistant_2' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_BP_BtlEncountAssistant_1) == 0x000018, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_BP_BtlEncountAssistant_1' has a wrong offset!");

// Function LS_Btl_UI_Encount.SequenceDirector_C.RequestSequenceEvent1
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_RequestSequenceEvent1 final
{
public:
	class ABP_BtlEncountAssistant_C*              BP_BtlEncountAssistant;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_RequestSequenceEvent1) == 0x000008, "Wrong alignment on SequenceDirector_C_RequestSequenceEvent1");
static_assert(sizeof(SequenceDirector_C_RequestSequenceEvent1) == 0x000008, "Wrong size on SequenceDirector_C_RequestSequenceEvent1");
static_assert(offsetof(SequenceDirector_C_RequestSequenceEvent1, BP_BtlEncountAssistant) == 0x000000, "Member 'SequenceDirector_C_RequestSequenceEvent1::BP_BtlEncountAssistant' has a wrong offset!");

// Function LS_Btl_UI_Encount.SequenceDirector_C.RequestSummonEnemy
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_RequestSummonEnemy final
{
public:
	class ABP_BtlEncountAssistant_C*              BP_BtlEncountAssistant;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_RequestSummonEnemy) == 0x000008, "Wrong alignment on SequenceDirector_C_RequestSummonEnemy");
static_assert(sizeof(SequenceDirector_C_RequestSummonEnemy) == 0x000008, "Wrong size on SequenceDirector_C_RequestSummonEnemy");
static_assert(offsetof(SequenceDirector_C_RequestSummonEnemy, BP_BtlEncountAssistant) == 0x000000, "Member 'SequenceDirector_C_RequestSummonEnemy::BP_BtlEncountAssistant' has a wrong offset!");

// Function LS_Btl_UI_Encount.SequenceDirector_C.HeroRunStop
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_HeroRunStop final
{
public:
	class ABP_BtlEncountAssistant_C*              BP_BtlEncountAssistant;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_HeroRunStop) == 0x000008, "Wrong alignment on SequenceDirector_C_HeroRunStop");
static_assert(sizeof(SequenceDirector_C_HeroRunStop) == 0x000008, "Wrong size on SequenceDirector_C_HeroRunStop");
static_assert(offsetof(SequenceDirector_C_HeroRunStop, BP_BtlEncountAssistant) == 0x000000, "Member 'SequenceDirector_C_HeroRunStop::BP_BtlEncountAssistant' has a wrong offset!");

// Function LS_Btl_UI_Encount.SequenceDirector_C.SequenceEvent__ENTRYPOINTSequenceDirector_0
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0 final
{
public:
	class ABP_BtlEncountAssistant_C*              BP_BtlEncountAssistant;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0) == 0x000008, "Wrong alignment on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0");
static_assert(sizeof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0) == 0x000008, "Wrong size on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0");
static_assert(offsetof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0, BP_BtlEncountAssistant) == 0x000000, "Member 'SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0::BP_BtlEncountAssistant' has a wrong offset!");

// Function LS_Btl_UI_Encount.SequenceDirector_C.SequenceEvent__ENTRYPOINTSequenceDirector_1
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1 final
{
public:
	class ABP_BtlEncountAssistant_C*              BP_BtlEncountAssistant;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1) == 0x000008, "Wrong alignment on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1");
static_assert(sizeof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1) == 0x000008, "Wrong size on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1");
static_assert(offsetof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1, BP_BtlEncountAssistant) == 0x000000, "Member 'SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1::BP_BtlEncountAssistant' has a wrong offset!");

// Function LS_Btl_UI_Encount.SequenceDirector_C.SequenceEvent__ENTRYPOINTSequenceDirector_2
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_2 final
{
public:
	class ABP_BtlEncountAssistant_C*              BP_BtlEncountAssistant;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_2) == 0x000008, "Wrong alignment on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_2");
static_assert(sizeof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_2) == 0x000008, "Wrong size on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_2");
static_assert(offsetof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_2, BP_BtlEncountAssistant) == 0x000000, "Member 'SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_2::BP_BtlEncountAssistant' has a wrong offset!");

}

