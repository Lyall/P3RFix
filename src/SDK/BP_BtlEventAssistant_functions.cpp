#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtlEventAssistant

#include "Basic.hpp"

#include "BP_BtlEventAssistant_classes.hpp"
#include "BP_BtlEventAssistant_parameters.hpp"


namespace SDK
{

// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.HasLoadedEvent__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::HasLoadedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "HasLoadedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.On End Event__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::On_End_Event__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "On End Event__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.On End FadeIn__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::On_End_FadeIn__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "On End FadeIn__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.On End FadeOut__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::On_End_FadeOut__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "On End FadeOut__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.On End Prepare Play Video__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::On_End_Prepare_Play_Video__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "On End Prepare Play Video__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.On End Open MediaPlayer__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::On_End_Open_MediaPlayer__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "On End Open MediaPlayer__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.On Request Shuffle Time Start__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::On_Request_Shuffle_Time_Start__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "On Request Shuffle Time Start__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.HasFinisedShiftLoad__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::HasFinisedShiftLoad__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "HasFinisedShiftLoad__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.On Request Result Start__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::On_Request_Result_Start__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "On Request Result Start__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.On Request Summon Enemies For Serial Encount__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::On_Request_Summon_Enemies_For_Serial_Encount__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "On Request Summon Enemies For Serial Encount__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.ExecuteUbergraph_BP_BtlEventAssistant
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::ExecuteUbergraph_BP_BtlEventAssistant(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "ExecuteUbergraph_BP_BtlEventAssistant");

	Params::BP_BtlEventAssistant_C_ExecuteUbergraph_BP_BtlEventAssistant Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.On Has Finished Called From Controller
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::On_Has_Finished_Called_From_Controller()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "On Has Finished Called From Controller");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.On Prepare Play Video
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::On_Prepare_Play_Video()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "On Prepare Play Video");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Character Animation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_BtlPerformer_C*               Performer                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::BCD_Character_Animation(class ABP_BtlPerformer_C* Performer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Character Animation");

	Params::BP_BtlEventAssistant_C_BCD_Character_Animation Parms{};

	Parms.Performer = Performer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.On Has Finished Event
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::On_Has_Finished_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "On Has Finished Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.On Play Event With Main Chara
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_BtlCharacterBase_C*           Invoke_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_BtlCharacterBase_C*           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::On_Play_Event_With_Main_Chara(class ABP_BtlCharacterBase_C* Invoke_0, class ABP_BtlCharacterBase_C* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "On Play Event With Main Chara");

	Params::BP_BtlEventAssistant_C_On_Play_Event_With_Main_Chara Parms{};

	Parms.Invoke_0 = Invoke_0;
	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.On Play Event
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::On_Play_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "On Play Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.On Load Seq Async
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class ULevelSequence>    LevelSequence                                          (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::On_Load_Seq_Async(TSoftObjectPtr<class ULevelSequence> LevelSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "On Load Seq Async");

	Params::BP_BtlEventAssistant_C_On_Load_Seq_Async Parms{};

	Parms.LevelSequence = LevelSequence;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "ReceiveTick");

	Params::BP_BtlEventAssistant_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_BtlEventAssistant_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD All Player Rotate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         NewRotation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BtlEventAssistant_C::BCD_All_Player_Rotate(const struct FRotator& NewRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD All Player Rotate");

	Params::BP_BtlEventAssistant_C_BCD_All_Player_Rotate Parms{};

	Parms.NewRotation = std::move(NewRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Set Targets Visible
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BtlEventAssistant_C::BCD_Set_Targets_Visible(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Set Targets Visible");

	Params::BP_BtlEventAssistant_C_BCD_Set_Targets_Visible Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Relocation Player Only
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::BCD_Relocation_Player_Only()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Relocation Player Only");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Adjust Chara Root To
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EBtlEventAreaType                       Area                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::BCD_Adjust_Chara_Root_To(EBtlEventAreaType Area)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Adjust Chara Root To");

	Params::BP_BtlEventAssistant_C_BCD_Adjust_Chara_Root_To Parms{};

	Parms.Area = Area;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD All Player Visible
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    WithDeadChara                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BtlEventAssistant_C::BCD_All_Player_Visible(bool Visible, bool WithDeadChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD All Player Visible");

	Params::BP_BtlEventAssistant_C_BCD_All_Player_Visible Parms{};

	Parms.Visible = Visible;
	Parms.WithDeadChara = WithDeadChara;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Set Visible Other Scene Chara
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BtlEventAssistant_C::BCD_Set_Visible_Other_Scene_Chara(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Set Visible Other Scene Chara");

	Params::BP_BtlEventAssistant_C_BCD_Set_Visible_Other_Scene_Chara Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Result Start
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::BCD_Result_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Result Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Set BG Visible
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BtlEventAssistant_C::BCD_Set_BG_Visible(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Set BG Visible");

	Params::BP_BtlEventAssistant_C_BCD_Set_BG_Visible Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Play Allout SE
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::BCD_Play_Allout_SE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Play Allout SE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Play SE
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::BCD_Play_SE(int32 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Play SE");

	Params::BP_BtlEventAssistant_C_BCD_Play_SE Parms{};

	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Play Persona Scene Animation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EBtlEventAreaType                       Area                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBtlPersonaSceneAnimationType           Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    UseOriginalBlend                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::BCD_Play_Persona_Scene_Animation(EBtlEventAreaType Area, EBtlPersonaSceneAnimationType Type, bool UseOriginalBlend, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Play Persona Scene Animation");

	Params::BP_BtlEventAssistant_C_BCD_Play_Persona_Scene_Animation Parms{};

	Parms.Area = Area;
	Parms.Type = Type;
	Parms.UseOriginalBlend = UseOriginalBlend;
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Shake Start
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBtlShakeType                           Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::BCD_Shake_Start(float Time, EBtlShakeType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Shake Start");

	Params::BP_BtlEventAssistant_C_BCD_Shake_Start Parms{};

	Parms.Time = Time;
	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Play Persona Animation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EBtlEventAreaType                       Area                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBtlPersonaAnimationType                Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    UseOriginalBlend                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::BCD_Play_Persona_Animation(EBtlEventAreaType Area, EBtlPersonaAnimationType Type, bool UseOriginalBlend, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Play Persona Animation");

	Params::BP_BtlEventAssistant_C_BCD_Play_Persona_Animation Parms{};

	Parms.Area = Area;
	Parms.Type = Type;
	Parms.UseOriginalBlend = UseOriginalBlend;
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Persona Set Location
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EBtlEventAreaType                       Area                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// bool                                    WorldTransform                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::BCD_Persona_Set_Location(EBtlEventAreaType Area, const struct FTransform& Transform, bool WorldTransform, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Persona Set Location");

	Params::BP_BtlEventAssistant_C_BCD_Persona_Set_Location Parms{};

	Parms.Area = Area;
	Parms.Transform = std::move(Transform);
	Parms.WorldTransform = WorldTransform;
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Set Persona Visible
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EBtlEventAreaType                       Area                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::BCD_Set_Persona_Visible(EBtlEventAreaType Area, bool Visible, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Set Persona Visible");

	Params::BP_BtlEventAssistant_C_BCD_Set_Persona_Visible Parms{};

	Parms.Area = Area;
	Parms.Visible = Visible;
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Hide Others
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::BCD_Hide_Others()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Hide Others");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Effect Detach
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           EffectName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::BCD_Effect_Detach(const class FString& EffectName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Effect Detach");

	Params::BP_BtlEventAssistant_C_BCD_Effect_Detach Parms{};

	Parms.EffectName = std::move(EffectName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Play Effect At Persona Socket
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UNiagaraSystem*                   Niagara                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Socket_Name                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Effect_Name                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// EBtlEventAreaType                       Area_Type                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       Trans                                                  (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// bool                                    NotAttach                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReferenceRotate                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::BCD_Play_Effect_At_Persona_Socket(class UNiagaraSystem* Niagara, class FName Socket_Name, const class FString& Effect_Name, EBtlEventAreaType Area_Type, const struct FTransform& Trans, bool NotAttach, bool ReferenceRotate, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Play Effect At Persona Socket");

	Params::BP_BtlEventAssistant_C_BCD_Play_Effect_At_Persona_Socket Parms{};

	Parms.Niagara = Niagara;
	Parms.Socket_Name = Socket_Name;
	Parms.Effect_Name = std::move(Effect_Name);
	Parms.Area_Type = Area_Type;
	Parms.Trans = std::move(Trans);
	Parms.NotAttach = NotAttach;
	Parms.ReferenceRotate = ReferenceRotate;
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Effect At Chara Transform
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UNiagaraSystem*                   Niagara                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBtlEventAreaType                       Area_Type                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           EffectName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   Life_Seconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       Trans                                                  (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void ABP_BtlEventAssistant_C::BCD_Effect_At_Chara_Transform(class UNiagaraSystem* Niagara, EBtlEventAreaType Area_Type, const class FString& EffectName, float Life_Seconds, const struct FTransform& Trans)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Effect At Chara Transform");

	Params::BP_BtlEventAssistant_C_BCD_Effect_At_Chara_Transform Parms{};

	Parms.Niagara = Niagara;
	Parms.Area_Type = Area_Type;
	Parms.EffectName = std::move(EffectName);
	Parms.Life_Seconds = Life_Seconds;
	Parms.Trans = std::move(Trans);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Effect At Weapon Socket Transfrom
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UNiagaraSystem*                   Niagara                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Socket_Name                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Effect_Name                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// EBtlEventAreaType                       Area_Type                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       Trans                                                  (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// bool                                    NotAttach                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BtlEventAssistant_C::BCD_Effect_At_Weapon_Socket_Transfrom(class UNiagaraSystem* Niagara, class FName Socket_Name, const class FString& Effect_Name, EBtlEventAreaType Area_Type, const struct FTransform& Trans, bool NotAttach)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Effect At Weapon Socket Transfrom");

	Params::BP_BtlEventAssistant_C_BCD_Effect_At_Weapon_Socket_Transfrom Parms{};

	Parms.Niagara = Niagara;
	Parms.Socket_Name = Socket_Name;
	Parms.Effect_Name = std::move(Effect_Name);
	Parms.Area_Type = Area_Type;
	Parms.Trans = std::move(Trans);
	Parms.NotAttach = NotAttach;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Effect At Socket Transform
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UNiagaraSystem*                   Niagara                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             SocketName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           EffectName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// EBtlEventAreaType                       Area                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       Trans                                                  (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// bool                                    NotAttach                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BtlEventAssistant_C::BCD_Effect_At_Socket_Transform(class UNiagaraSystem* Niagara, class FName SocketName, const class FString& EffectName, EBtlEventAreaType Area, const struct FTransform& Trans, bool NotAttach)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Effect At Socket Transform");

	Params::BP_BtlEventAssistant_C_BCD_Effect_At_Socket_Transform Parms{};

	Parms.Niagara = Niagara;
	Parms.SocketName = SocketName;
	Parms.EffectName = std::move(EffectName);
	Parms.Area = Area;
	Parms.Trans = std::move(Trans);
	Parms.NotAttach = NotAttach;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Effect At Weapon Socket
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UNiagaraSystem*                   Niagara                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Socket_Name                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Effect_Name                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// EBtlEventAreaType                       Area_Type                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::BCD_Effect_At_Weapon_Socket(class UNiagaraSystem* Niagara, class FName Socket_Name, const class FString& Effect_Name, EBtlEventAreaType Area_Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Effect At Weapon Socket");

	Params::BP_BtlEventAssistant_C_BCD_Effect_At_Weapon_Socket Parms{};

	Parms.Niagara = Niagara;
	Parms.Socket_Name = Socket_Name;
	Parms.Effect_Name = std::move(Effect_Name);
	Parms.Area_Type = Area_Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Set Transform at Character Persona Spawn Effect
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EBtlEventAreaType                       NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::BCD_Set_Transform_at_Character_Persona_Spawn_Effect(EBtlEventAreaType NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Set Transform at Character Persona Spawn Effect");

	Params::BP_BtlEventAssistant_C_BCD_Set_Transform_at_Character_Persona_Spawn_Effect Parms{};

	Parms.NewParam = NewParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Set Transform Persona Spawn Effect
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void ABP_BtlEventAssistant_C::BCD_Set_Transform_Persona_Spawn_Effect(const struct FTransform& Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Set Transform Persona Spawn Effect");

	Params::BP_BtlEventAssistant_C_BCD_Set_Transform_Persona_Spawn_Effect Parms{};

	Parms.Transform = std::move(Transform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Set Vislble Persona Spawn Effect
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BtlEventAssistant_C::BCD_Set_Vislble_Persona_Spawn_Effect(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Set Vislble Persona Spawn Effect");

	Params::BP_BtlEventAssistant_C_BCD_Set_Vislble_Persona_Spawn_Effect Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Effect At Socket
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UNiagaraSystem*                   Niagara                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Socket_Name                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Effect_Name                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// EBtlEventAreaType                       Area_Type                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::BCD_Effect_At_Socket(class UNiagaraSystem* Niagara, class FName Socket_Name, const class FString& Effect_Name, EBtlEventAreaType Area_Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Effect At Socket");

	Params::BP_BtlEventAssistant_C_BCD_Effect_At_Socket Parms{};

	Parms.Niagara = Niagara;
	Parms.Socket_Name = Socket_Name;
	Parms.Effect_Name = std::move(Effect_Name);
	Parms.Area_Type = Area_Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.CustomEvent_1
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::CustomEvent_1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "CustomEvent_1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.CustomEvent_0
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::CustomEvent_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "CustomEvent_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Stop Effect
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           EffectName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::BCD_Stop_Effect(const class FString& EffectName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Stop Effect");

	Params::BP_BtlEventAssistant_C_BCD_Stop_Effect Parms{};

	Parms.EffectName = std::move(EffectName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Effect At Chara
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UNiagaraSystem*                   Niagara                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBtlEventAreaType                       Area_Type                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           EffectName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   Life_Seconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::BCD_Effect_At_Chara(class UNiagaraSystem* Niagara, EBtlEventAreaType Area_Type, const class FString& EffectName, float Life_Seconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Effect At Chara");

	Params::BP_BtlEventAssistant_C_BCD_Effect_At_Chara Parms{};

	Parms.Niagara = Niagara;
	Parms.Area_Type = Area_Type;
	Parms.EffectName = std::move(EffectName);
	Parms.Life_Seconds = Life_Seconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Effect World
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UNiagaraSystem*                   Niagara                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// class FString                           EffectName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   Life_Seconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CueId                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::BCD_Effect_World(class UNiagaraSystem* Niagara, const struct FTransform& Transform, const class FString& EffectName, float Life_Seconds, int32 CueId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Effect World");

	Params::BP_BtlEventAssistant_C_BCD_Effect_World Parms{};

	Parms.Niagara = Niagara;
	Parms.Transform = std::move(Transform);
	Parms.EffectName = std::move(EffectName);
	Parms.Life_Seconds = Life_Seconds;
	Parms.CueId = CueId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Set Camera
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InterpTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   X                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Y                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Z                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Roll                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Pitch                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Yaw                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBtlCutsceneBlendType                   BlendType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   BlendExp                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::BCD_Set_Camera(float InterpTime, float X, float Y, float Z, float Roll, float Pitch, float Yaw, EBtlCutsceneBlendType BlendType, float BlendExp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Set Camera");

	Params::BP_BtlEventAssistant_C_BCD_Set_Camera Parms{};

	Parms.InterpTime = InterpTime;
	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;
	Parms.Roll = Roll;
	Parms.Pitch = Pitch;
	Parms.Yaw = Yaw;
	Parms.BlendType = BlendType;
	Parms.BlendExp = BlendExp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Set Chara Camera
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InterpTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Radium_Ration                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Height_Ration                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Rotate_Degree                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBtlEventAreaType                       TargetType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Socket_Name                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBtlCutsceneBlendType                   BlendType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   BlendExp                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Pan                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Roll                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    UseCommonCylinder                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BtlEventAssistant_C::BCD_Set_Chara_Camera(float InterpTime, float Radium_Ration, float Height_Ration, float Rotate_Degree, EBtlEventAreaType TargetType, class FName Socket_Name, EBtlCutsceneBlendType BlendType, float BlendExp, float Pan, float Roll, bool UseCommonCylinder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Set Chara Camera");

	Params::BP_BtlEventAssistant_C_BCD_Set_Chara_Camera Parms{};

	Parms.InterpTime = InterpTime;
	Parms.Radium_Ration = Radium_Ration;
	Parms.Height_Ration = Height_Ration;
	Parms.Rotate_Degree = Rotate_Degree;
	Parms.TargetType = TargetType;
	Parms.Socket_Name = Socket_Name;
	Parms.BlendType = BlendType;
	Parms.BlendExp = BlendExp;
	Parms.Pan = Pan;
	Parms.Roll = Roll;
	Parms.UseCommonCylinder = UseCommonCylinder;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Play Video
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::BCD_Play_Video()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Play Video");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Close WBP
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::BCD_Close_WBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Close WBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Show WBP
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::BCD_Show_WBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Show WBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD FadeIN Wipe
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EBtlFadeType                            Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Frame                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::BCD_FadeIN_Wipe(EBtlFadeType Type, int32 Frame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD FadeIN Wipe");

	Params::BP_BtlEventAssistant_C_BCD_FadeIN_Wipe Parms{};

	Parms.Type = Type;
	Parms.Frame = Frame;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD FadeOUT Wipe
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EBtlFadeType                            Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Frame                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::BCD_FadeOUT_Wipe(EBtlFadeType Type, int32 Frame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD FadeOUT Wipe");

	Params::BP_BtlEventAssistant_C_BCD_FadeOUT_Wipe Parms{};

	Parms.Type = Type;
	Parms.Frame = Frame;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD_FadeIn
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::BCD_FadeIn(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD_FadeIn");

	Params::BP_BtlEventAssistant_C_BCD_FadeIn Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD_FadeOut
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::BCD_FadeOut(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD_FadeOut");

	Params::BP_BtlEventAssistant_C_BCD_FadeOut Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Target Enemy Reset Stencil
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::BCD_Target_Enemy_Reset_Stencil()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Target Enemy Reset Stencil");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Target Enemy Set Stencil
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::BCD_Target_Enemy_Set_Stencil()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Target Enemy Set Stencil");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Target Enemy Visible
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    WithDeadChara                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BtlEventAssistant_C::BCD_Target_Enemy_Visible(bool Visible, bool WithDeadChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Target Enemy Visible");

	Params::BP_BtlEventAssistant_C_BCD_Target_Enemy_Visible Parms{};

	Parms.Visible = Visible;
	Parms.WithDeadChara = WithDeadChara;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD All Enemy Summon For Serial Encount
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::BCD_All_Enemy_Summon_For_Serial_Encount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD All Enemy Summon For Serial Encount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Targets Play Effect
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UNiagaraSystem*                   FX                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             SocketName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    UseLocationOnly                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    SpawnFrontPosition                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   SENo                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::BCD_Targets_Play_Effect(class UNiagaraSystem* FX, class FName SocketName, bool UseLocationOnly, bool SpawnFrontPosition, int32 SENo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Targets Play Effect");

	Params::BP_BtlEventAssistant_C_BCD_Targets_Play_Effect Parms{};

	Parms.FX = FX;
	Parms.SocketName = SocketName;
	Parms.UseLocationOnly = UseLocationOnly;
	Parms.SpawnFrontPosition = SpawnFrontPosition;
	Parms.SENo = SENo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD All Enemy Rotate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         NewRotation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BtlEventAssistant_C::BCD_All_Enemy_Rotate(const struct FRotator& NewRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD All Enemy Rotate");

	Params::BP_BtlEventAssistant_C_BCD_All_Enemy_Rotate Parms{};

	Parms.NewRotation = std::move(NewRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD All Enemy Visible
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    WithDeadChara                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BtlEventAssistant_C::BCD_All_Enemy_Visible(bool Visible, bool WithDeadChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD All Enemy Visible");

	Params::BP_BtlEventAssistant_C_BCD_All_Enemy_Visible Parms{};

	Parms.Visible = Visible;
	Parms.WithDeadChara = WithDeadChara;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD All Enemy Play Effect
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UNiagaraSystem*                   FX                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             SocketName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    UseLocationOnly                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   SENo                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::BCD_All_Enemy_Play_Effect(class UNiagaraSystem* FX, class FName SocketName, bool UseLocationOnly, int32 SENo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD All Enemy Play Effect");

	Params::BP_BtlEventAssistant_C_BCD_All_Enemy_Play_Effect Parms{};

	Parms.FX = FX;
	Parms.SocketName = SocketName;
	Parms.UseLocationOnly = UseLocationOnly;
	Parms.SENo = SENo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD All Enemy Color
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FColor                           Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Alpha                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::BCD_All_Enemy_Color(const struct FColor& Color, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD All Enemy Color");

	Params::BP_BtlEventAssistant_C_BCD_All_Enemy_Color Parms{};

	Parms.Color = std::move(Color);
	Parms.Alpha = Alpha;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD All Enemy Play Allout Dead
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::BCD_All_Enemy_Play_Allout_Dead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD All Enemy Play Allout Dead");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD All Enemy Play Animation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EBtlAnimationType                       Anim                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBtlAnimationType                       Anim_Next                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::BCD_All_Enemy_Play_Animation(EBtlAnimationType Anim, EBtlAnimationType Anim_Next)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD All Enemy Play Animation");

	Params::BP_BtlEventAssistant_C_BCD_All_Enemy_Play_Animation Parms{};

	Parms.Anim = Anim;
	Parms.Anim_Next = Anim_Next;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Allout Play Voice Run into Enemy
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::BCD_Allout_Play_Voice_Run_into_Enemy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Allout Play Voice Run into Enemy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Play Allout Finish Tex
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::BCD_Play_Allout_Finish_Tex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Play Allout Finish Tex");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Result Capture
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::BCD_Result_Capture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Result Capture");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Start Shuffle Time
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::BCD_Start_Shuffle_Time()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Start Shuffle Time");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Shift Play Catch Sequence
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::BCD_Shift_Play_Catch_Sequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Shift Play Catch Sequence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.On Unload Shift Stuff
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::On_Unload_Shift_Stuff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "On Unload Shift Stuff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.On Load Shift Stuff
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABtlActor*                        CharaFrom                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABtlActor*                        CharaTo                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::On_Load_Shift_Stuff(class ABtlActor* CharaFrom, class ABtlActor* CharaTo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "On Load Shift Stuff");

	Params::BP_BtlEventAssistant_C_On_Load_Shift_Stuff Parms{};

	Parms.CharaFrom = CharaFrom;
	Parms.CharaTo = CharaTo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Show NyxAvatar Feather Effect
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::BCD_Show_NyxAvatar_Feather_Effect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Show NyxAvatar Feather Effect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Show Monorail Rush Effect
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::BCD_Show_Monorail_Rush_Effect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Show Monorail Rush Effect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD SetPartyPanelVisible
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsVisible                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BtlEventAssistant_C::BCD_SetPartyPanelVisible(bool IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD SetPartyPanelVisible");

	Params::BP_BtlEventAssistant_C_BCD_SetPartyPanelVisible Parms{};

	Parms.IsVisible = IsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD ShowSkillName
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SkillId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsEnemy                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::BCD_ShowSkillName(int32 SkillId, bool IsEnemy, float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD ShowSkillName");

	Params::BP_BtlEventAssistant_C_BCD_ShowSkillName Parms{};

	Parms.SkillId = SkillId;
	Parms.IsEnemy = IsEnemy;
	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCD Call Jyokyohelp
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EBtlJyokyohelpType                      Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::BCD_Call_Jyokyohelp(EBtlJyokyohelpType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCD Call Jyokyohelp");

	Params::BP_BtlEventAssistant_C_BCD_Call_Jyokyohelp Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.OnLoaded_AC88E505430191437A26DAAA3C28A967
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::OnLoaded_AC88E505430191437A26DAAA3C28A967(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "OnLoaded_AC88E505430191437A26DAAA3C28A967");

	Params::BP_BtlEventAssistant_C_OnLoaded_AC88E505430191437A26DAAA3C28A967 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.OnLoaded_691412D54C4C232F9A57179F9A7D72FA
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::OnLoaded_691412D54C4C232F9A57179F9A7D72FA(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "OnLoaded_691412D54C4C232F9A57179F9A7D72FA");

	Params::BP_BtlEventAssistant_C_OnLoaded_691412D54C4C232F9A57179F9A7D72FA Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.OnLoaded_EAEC04644E0DEDCEA74F079822A00578
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::OnLoaded_EAEC04644E0DEDCEA74F079822A00578(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "OnLoaded_EAEC04644E0DEDCEA74F079822A00578");

	Params::BP_BtlEventAssistant_C_OnLoaded_EAEC04644E0DEDCEA74F079822A00578 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.Setup Mannequin
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::Setup_Mannequin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "Setup Mannequin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.InitializePerformer
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::InitializePerformer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "InitializePerformer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.SearchPerformer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_BtlCharacterBase_C*           SearchCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BtlEventAssistant_C::SearchPerformer(class ABP_BtlCharacterBase_C* SearchCharacter, bool* Found)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "SearchPerformer");

	Params::BP_BtlEventAssistant_C_SearchPerformer Parms{};

	Parms.SearchCharacter = SearchCharacter;

	UObject::ProcessEvent(Func, &Parms);

	if (Found != nullptr)
		*Found = Parms.Found;
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.SpawnEffect
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UNiagaraSystem*                   Niagara                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// bool                                    Auto_Destroy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    UseLocationOnly                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UNiagaraComponent*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UNiagaraComponent* ABP_BtlEventAssistant_C::SpawnEffect(class UNiagaraSystem* Niagara, const struct FTransform& Transform, bool Auto_Destroy, bool UseLocationOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "SpawnEffect");

	Params::BP_BtlEventAssistant_C_SpawnEffect Parms{};

	Parms.Niagara = Niagara;
	Parms.Transform = std::move(Transform);
	Parms.Auto_Destroy = Auto_Destroy;
	Parms.UseLocationOnly = UseLocationOnly;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.GetTransformFromArea
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBtlEventAreaType                       AreaType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)

struct FTransform ABP_BtlEventAssistant_C::GetTransformFromArea(EBtlEventAreaType AreaType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "GetTransformFromArea");

	Params::BP_BtlEventAssistant_C_GetTransformFromArea Parms{};

	Parms.AreaType = AreaType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.LinkAssistantToPerformer
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::LinkAssistantToPerformer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "LinkAssistantToPerformer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.Play Camera
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InterpTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::Play_Camera(const struct FTransform& Transform, float InterpTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "Play Camera");

	Params::BP_BtlEventAssistant_C_Play_Camera Parms{};

	Parms.Transform = std::move(Transform);
	Parms.InterpTime = InterpTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.SetupCamera
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::SetupCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "SetupCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.SetCameraView
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   Interp_Time                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::SetCameraView(const struct FTransform& Transform, float Interp_Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "SetCameraView");

	Params::BP_BtlEventAssistant_C_SetCameraView Parms{};

	Parms.Transform = std::move(Transform);
	Parms.Interp_Time = Interp_Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.Arrange Target Camera
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACineCameraActor*                 Camera                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::Arrange_Target_Camera(class ACineCameraActor** Camera)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "Arrange Target Camera");

	Params::BP_BtlEventAssistant_C_Arrange_Target_Camera Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Camera != nullptr)
		*Camera = Parms.Camera;
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.LookatCharacter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_BtlCharacterBase_C*           Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::LookatCharacter(class ABP_BtlCharacterBase_C* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "LookatCharacter");

	Params::BP_BtlEventAssistant_C_LookatCharacter Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.GetTargetPerformer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBtlEventAreaType                       TargetType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_BtlPerformer_C*               Performer                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::GetTargetPerformer(EBtlEventAreaType TargetType, class ABP_BtlPerformer_C** Performer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "GetTargetPerformer");

	Params::BP_BtlEventAssistant_C_GetTargetPerformer Parms{};

	Parms.TargetType = TargetType;

	UObject::ProcessEvent(Func, &Parms);

	if (Performer != nullptr)
		*Performer = Parms.Performer;
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.SetupBtlEnvironment
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::SetupBtlEnvironment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "SetupBtlEnvironment");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.Set All Character Visible
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NotAffectGuest                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BtlEventAssistant_C::Set_All_Character_Visible(bool Visible, bool NotAffectGuest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "Set All Character Visible");

	Params::BP_BtlEventAssistant_C_Set_All_Character_Visible Parms{};

	Parms.Visible = Visible;
	Parms.NotAffectGuest = NotAffectGuest;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.SetFadeBind
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::SetFadeBind()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "SetFadeBind");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.SetBtlGui
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_BtlGuiComponent_C*            NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::SetBtlGui(class UBP_BtlGuiComponent_C* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "SetBtlGui");

	Params::BP_BtlEventAssistant_C_SetBtlGui Parms{};

	Parms.NewParam = NewParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.Relocation Characters
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::Relocation_Characters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "Relocation Characters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.FadeOutBySecond
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Second                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::FadeOutBySecond(float Second)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "FadeOutBySecond");

	Params::BP_BtlEventAssistant_C_FadeOutBySecond Parms{};

	Parms.Second = Second;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.FadeInBySecond
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Second                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::FadeInBySecond(float Second)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "FadeInBySecond");

	Params::BP_BtlEventAssistant_C_FadeInBySecond Parms{};

	Parms.Second = Second;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.Call End FadeIn
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::Call_End_FadeIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "Call End FadeIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.Call End FadeOut
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::Call_End_FadeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "Call End FadeOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.LoadMediaPlayer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMediaPlayer*                     MediaPlayer_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBaseMediaSource*                 MediaSource                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::LoadMediaPlayer(class UMediaPlayer* MediaPlayer_0, class UBaseMediaSource* MediaSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "LoadMediaPlayer");

	Params::BP_BtlEventAssistant_C_LoadMediaPlayer Parms{};

	Parms.MediaPlayer_0 = MediaPlayer_0;
	Parms.MediaSource = MediaSource;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.PauseVideo
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::PauseVideo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "PauseVideo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.PreparePlayVideo
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::PreparePlayVideo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "PreparePlayVideo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.CleanUpVideo
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::CleanUpVideo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "CleanUpVideo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.Call End Open MediaPlayer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           OpenedUrl                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::Call_End_Open_MediaPlayer(const class FString& OpenedUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "Call End Open MediaPlayer");

	Params::BP_BtlEventAssistant_C_Call_End_Open_MediaPlayer Parms{};

	Parms.OpenedUrl = std::move(OpenedUrl);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.Set PersonaSpawnEffect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UNiagaraComponent*                Effect                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::Set_PersonaSpawnEffect(class UNiagaraComponent* Effect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "Set PersonaSpawnEffect");

	Params::BP_BtlEventAssistant_C_Set_PersonaSpawnEffect Parms{};

	Parms.Effect = Effect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.Restore Lights
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::Restore_Lights()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "Restore Lights");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.Init Lights
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::Init_Lights()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "Init Lights");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.Set BG Visible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BtlEventAssistant_C::Set_BG_Visible(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "Set BG Visible");

	Params::BP_BtlEventAssistant_C_Set_BG_Visible Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.SetMembers
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_BtlCharacterBase_C*>   Participants                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_BtlEventAssistant_C::SetMembers(TArray<class ABP_BtlCharacterBase_C*>& Participants)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "SetMembers");

	Params::BP_BtlEventAssistant_C_SetMembers Parms{};

	Parms.Participants = std::move(Participants);

	UObject::ProcessEvent(Func, &Parms);

	Participants = std::move(Parms.Participants);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.GetEnemyList
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABtlActor*>                ReturnValue                                            (Parm, OutParm, ReturnParm)

TArray<class ABtlActor*> ABP_BtlEventAssistant_C::GetEnemyList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "GetEnemyList");

	Params::BP_BtlEventAssistant_C_GetEnemyList Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.SetupEnemyDeadPower
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::SetupEnemyDeadPower()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "SetupEnemyDeadPower");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.ExtractLocation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void ABP_BtlEventAssistant_C::ExtractLocation(const struct FTransform& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "ExtractLocation");

	Params::BP_BtlEventAssistant_C_ExtractLocation Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.GetBCDCamera
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACineCameraActor*                 Output                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::GetBCDCamera(class ACineCameraActor** Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "GetBCDCamera");

	Params::BP_BtlEventAssistant_C_GetBCDCamera Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.SetupPartyMembers
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_BtlCharacterBase_C*>   Others                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_BtlEventAssistant_C::SetupPartyMembers(TArray<class ABP_BtlCharacterBase_C*>& Others)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "SetupPartyMembers");

	Params::BP_BtlEventAssistant_C_SetupPartyMembers Parms{};

	Parms.Others = std::move(Others);

	UObject::ProcessEvent(Func, &Parms);

	Others = std::move(Parms.Others);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.ClearAllMembers
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::ClearAllMembers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "ClearAllMembers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.SetCameraViewAdvance
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InterpTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBtlCutsceneBlendType                   BlendType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   BlendExp                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::SetCameraViewAdvance(const struct FTransform& Transform, float InterpTime, EBtlCutsceneBlendType BlendType, float BlendExp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "SetCameraViewAdvance");

	Params::BP_BtlEventAssistant_C_SetCameraViewAdvance Parms{};

	Parms.Transform = std::move(Transform);
	Parms.InterpTime = InterpTime;
	Parms.BlendType = BlendType;
	Parms.BlendExp = BlendExp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.GetTargetPerfomerCutscene
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBtlEventAreaType                       AreaType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_BtlPerformer_C*               Performer                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::GetTargetPerfomerCutscene(EBtlEventAreaType AreaType, class ABP_BtlPerformer_C** Performer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "GetTargetPerfomerCutscene");

	Params::BP_BtlEventAssistant_C_GetTargetPerfomerCutscene Parms{};

	Parms.AreaType = AreaType;

	UObject::ProcessEvent(Func, &Parms);

	if (Performer != nullptr)
		*Performer = Parms.Performer;
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCDCameraTick
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::BCDCameraTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCDCameraTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCDCharaCameraTick
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::BCDCharaCameraTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCDCharaCameraTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.BCDMoveCameraTick
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::BCDMoveCameraTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "BCDMoveCameraTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.ConvertTransformFromCharaCylinder
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       Transform                                              (Parm, OutParm, IsPlainOldData, NoDestructor)

void ABP_BtlEventAssistant_C::ConvertTransformFromCharaCylinder(struct FTransform* Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "ConvertTransformFromCharaCylinder");

	Params::BP_BtlEventAssistant_C_ConvertTransformFromCharaCylinder Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Transform != nullptr)
		*Transform = std::move(Parms.Transform);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.Clear
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::Clear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "Clear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.SetSequenceCharaRoot
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void ABP_BtlEventAssistant_C::SetSequenceCharaRoot(const struct FTransform& Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "SetSequenceCharaRoot");

	Params::BP_BtlEventAssistant_C_SetSequenceCharaRoot Parms{};

	Parms.Transform = std::move(Transform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.ShowFieldEffect
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ANiagaraActor*                    Niagara                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::ShowFieldEffect(class ANiagaraActor* Niagara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "ShowFieldEffect");

	Params::BP_BtlEventAssistant_C_ShowFieldEffect Parms{};

	Parms.Niagara = Niagara;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.UpdateTimes
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::UpdateTimes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "UpdateTimes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.SetVisibleOthers
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BtlEventAssistant_C::SetVisibleOthers(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "SetVisibleOthers");

	Params::BP_BtlEventAssistant_C_SetVisibleOthers Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.SetupStuff
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::SetupStuff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "SetupStuff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.GetHero
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_BtlCharacterBase_C*           HERO                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlEventAssistant_C::GetHero(class ABP_BtlCharacterBase_C** HERO)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "GetHero");

	Params::BP_BtlEventAssistant_C_GetHero Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HERO != nullptr)
		*HERO = Parms.HERO;
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.Relocation Characters for Command
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::Relocation_Characters_for_Command()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "Relocation Characters for Command");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlEventAssistant.BP_BtlEventAssistant_C.UpdateEnemyTeammateTheurgia
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlEventAssistant_C::UpdateEnemyTeammateTheurgia()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlEventAssistant_C", "UpdateEnemyTeammateTheurgia");

	UObject::ProcessEvent(Func, nullptr);
}

}

