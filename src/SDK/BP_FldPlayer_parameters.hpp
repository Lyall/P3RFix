#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FldPlayer

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_FldPlayer.BP_FldPlayer_C.SetForceNeautralPose
// 0x0020 (0x0020 - 0x0000)
struct BP_FldPlayer_C_SetForceNeautralPose final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UABP_CH_MeshBase_C*                     K2Node_DynamicCast_AsABP_CH_Mesh_Base;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FldPlayer_C_SetForceNeautralPose) == 0x000008, "Wrong alignment on BP_FldPlayer_C_SetForceNeautralPose");
static_assert(sizeof(BP_FldPlayer_C_SetForceNeautralPose) == 0x000020, "Wrong size on BP_FldPlayer_C_SetForceNeautralPose");
static_assert(offsetof(BP_FldPlayer_C_SetForceNeautralPose, Enable) == 0x000000, "Member 'BP_FldPlayer_C_SetForceNeautralPose::Enable' has a wrong offset!");
static_assert(offsetof(BP_FldPlayer_C_SetForceNeautralPose, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'BP_FldPlayer_C_SetForceNeautralPose::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FldPlayer_C_SetForceNeautralPose, K2Node_DynamicCast_AsABP_CH_Mesh_Base) == 0x000010, "Member 'BP_FldPlayer_C_SetForceNeautralPose::K2Node_DynamicCast_AsABP_CH_Mesh_Base' has a wrong offset!");
static_assert(offsetof(BP_FldPlayer_C_SetForceNeautralPose, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_FldPlayer_C_SetForceNeautralPose::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_FldPlayer.BP_FldPlayer_C.SetForceMainWaitPose
// 0x0020 (0x0020 - 0x0000)
struct BP_FldPlayer_C_SetForceMainWaitPose final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UABP_CH_MeshBase_C*                     K2Node_DynamicCast_AsABP_CH_Mesh_Base;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FldPlayer_C_SetForceMainWaitPose) == 0x000008, "Wrong alignment on BP_FldPlayer_C_SetForceMainWaitPose");
static_assert(sizeof(BP_FldPlayer_C_SetForceMainWaitPose) == 0x000020, "Wrong size on BP_FldPlayer_C_SetForceMainWaitPose");
static_assert(offsetof(BP_FldPlayer_C_SetForceMainWaitPose, Enable) == 0x000000, "Member 'BP_FldPlayer_C_SetForceMainWaitPose::Enable' has a wrong offset!");
static_assert(offsetof(BP_FldPlayer_C_SetForceMainWaitPose, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'BP_FldPlayer_C_SetForceMainWaitPose::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FldPlayer_C_SetForceMainWaitPose, K2Node_DynamicCast_AsABP_CH_Mesh_Base) == 0x000010, "Member 'BP_FldPlayer_C_SetForceMainWaitPose::K2Node_DynamicCast_AsABP_CH_Mesh_Base' has a wrong offset!");
static_assert(offsetof(BP_FldPlayer_C_SetForceMainWaitPose, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_FldPlayer_C_SetForceMainWaitPose::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_FldPlayer.BP_FldPlayer_C.SetIsTurned
// 0x0020 (0x0020 - 0x0000)
struct BP_FldPlayer_C_SetIsTurned final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UABP_PC0001_C*                          K2Node_DynamicCast_AsABP_PC0001;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FldPlayer_C_SetIsTurned) == 0x000008, "Wrong alignment on BP_FldPlayer_C_SetIsTurned");
static_assert(sizeof(BP_FldPlayer_C_SetIsTurned) == 0x000020, "Wrong size on BP_FldPlayer_C_SetIsTurned");
static_assert(offsetof(BP_FldPlayer_C_SetIsTurned, Enable) == 0x000000, "Member 'BP_FldPlayer_C_SetIsTurned::Enable' has a wrong offset!");
static_assert(offsetof(BP_FldPlayer_C_SetIsTurned, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'BP_FldPlayer_C_SetIsTurned::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FldPlayer_C_SetIsTurned, K2Node_DynamicCast_AsABP_PC0001) == 0x000010, "Member 'BP_FldPlayer_C_SetIsTurned::K2Node_DynamicCast_AsABP_PC0001' has a wrong offset!");
static_assert(offsetof(BP_FldPlayer_C_SetIsTurned, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_FldPlayer_C_SetIsTurned::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

