#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_ABPCostume

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BPFL_ABPCostume.BPFL_ABPCostume_C.GetSkirtVectors
// 0x0300 (0x0300 - 0x0000)
struct BPFL_ABPCostume_C_GetSkirtVectors final
{
public:
	class APawn*                                  PawnOwner;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SkirtRootName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SkirtRootEndName;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SkirtRootParentName;                               // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkirtRootZcoff_In;                                 // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkirtRootYcoff_In;                                 // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              LeftLegSkirtBS_Out;                                // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RightLegSkirtBS_Out;                               // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               SkirtRootRot_Out;                                  // 0x0040(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         SkirtRootYcoff;                                    // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkirtRootZcoff;                                    // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SkirtRootParent;                                   // 0x0054(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SkirtRootEnd;                                      // 0x005C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SkirtRoot;                                         // 0x0064(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  LocalPawnOwner;                                    // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RightLegSkirtBS;                                   // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              LeftLegSkirtBS;                                    // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               SkirtRootRot;                                      // 0x0088(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_GetComponentByClass_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_1;         // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_1;          // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_118[0x8];                                      // 0x0118(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_2;         // 0x0120(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_2;          // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_168[0x8];                                      // 0x0168(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_3;         // 0x0170(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_3;          // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B8[0x8];                                      // 0x01B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_4;         // 0x01C0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_4;          // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_5;         // 0x0200(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_5;          // 0x0230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x023C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_248[0x8];                                      // 0x0248(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_6;         // 0x0250(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_Get2Dvector_outPutVector;                 // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Get2Dvector_debugParam;                   // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x02A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x02B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Get2Dvector_outPutVector_1;               // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Get2Dvector_debugParam_1;                 // 0x02D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x02E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_ABPCostume_C_GetSkirtVectors) == 0x000010, "Wrong alignment on BPFL_ABPCostume_C_GetSkirtVectors");
static_assert(sizeof(BPFL_ABPCostume_C_GetSkirtVectors) == 0x000300, "Wrong size on BPFL_ABPCostume_C_GetSkirtVectors");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, PawnOwner) == 0x000000, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::PawnOwner' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, SkirtRootName) == 0x000008, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::SkirtRootName' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, SkirtRootEndName) == 0x000010, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::SkirtRootEndName' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, SkirtRootParentName) == 0x000018, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::SkirtRootParentName' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, SkirtRootZcoff_In) == 0x000020, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::SkirtRootZcoff_In' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, SkirtRootYcoff_In) == 0x000024, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::SkirtRootYcoff_In' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, __WorldContext) == 0x000028, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, LeftLegSkirtBS_Out) == 0x000030, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::LeftLegSkirtBS_Out' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, RightLegSkirtBS_Out) == 0x000038, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::RightLegSkirtBS_Out' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, SkirtRootRot_Out) == 0x000040, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::SkirtRootRot_Out' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, SkirtRootYcoff) == 0x00004C, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::SkirtRootYcoff' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, SkirtRootZcoff) == 0x000050, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::SkirtRootZcoff' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, SkirtRootParent) == 0x000054, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::SkirtRootParent' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, SkirtRootEnd) == 0x00005C, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::SkirtRootEnd' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, SkirtRoot) == 0x000064, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::SkirtRoot' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, LocalPawnOwner) == 0x000070, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::LocalPawnOwner' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, RightLegSkirtBS) == 0x000078, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::RightLegSkirtBS' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, LeftLegSkirtBS) == 0x000080, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::LeftLegSkirtBS' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, SkirtRootRot) == 0x000088, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::SkirtRootRot' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, CallFunc_GetComponentByClass_ReturnValue) == 0x000098, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, CallFunc_GetSocketTransform_ReturnValue) == 0x0000A0, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, CallFunc_GetSocketTransform_ReturnValue_1) == 0x0000D0, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::CallFunc_GetSocketTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, CallFunc_TransformLocation_ReturnValue) == 0x000100, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, CallFunc_TransformLocation_ReturnValue_1) == 0x00010C, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::CallFunc_TransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, CallFunc_GetSocketTransform_ReturnValue_2) == 0x000120, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::CallFunc_GetSocketTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000150, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, CallFunc_TransformLocation_ReturnValue_2) == 0x00015C, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::CallFunc_TransformLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, CallFunc_GetSocketTransform_ReturnValue_3) == 0x000170, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::CallFunc_GetSocketTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, CallFunc_TransformLocation_ReturnValue_3) == 0x0001A0, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::CallFunc_TransformLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0001AC, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, CallFunc_GetSocketTransform_ReturnValue_4) == 0x0001C0, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::CallFunc_GetSocketTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, CallFunc_TransformLocation_ReturnValue_4) == 0x0001F0, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::CallFunc_TransformLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, CallFunc_GetSocketTransform_ReturnValue_5) == 0x000200, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::CallFunc_GetSocketTransform_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, CallFunc_TransformLocation_ReturnValue_5) == 0x000230, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::CallFunc_TransformLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x00023C, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, CallFunc_GetSocketTransform_ReturnValue_6) == 0x000250, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::CallFunc_GetSocketTransform_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, CallFunc_Get2Dvector_outPutVector) == 0x000280, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::CallFunc_Get2Dvector_outPutVector' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, CallFunc_Get2Dvector_debugParam) == 0x000288, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::CallFunc_Get2Dvector_debugParam' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, CallFunc_BreakTransform_Location) == 0x000298, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, CallFunc_BreakTransform_Rotation) == 0x0002A4, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, CallFunc_BreakTransform_Scale) == 0x0002B0, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, CallFunc_BreakRotator_Roll) == 0x0002BC, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, CallFunc_BreakRotator_Pitch) == 0x0002C0, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, CallFunc_BreakRotator_Yaw) == 0x0002C4, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, CallFunc_Get2Dvector_outPutVector_1) == 0x0002C8, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::CallFunc_Get2Dvector_outPutVector_1' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, CallFunc_Get2Dvector_debugParam_1) == 0x0002D0, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::CallFunc_Get2Dvector_debugParam_1' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0002E0, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0002E4, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetSkirtVectors, CallFunc_MakeRotator_ReturnValue) == 0x0002E8, "Member 'BPFL_ABPCostume_C_GetSkirtVectors::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");

// Function BPFL_ABPCostume.BPFL_ABPCostume_C.Get2Dvector
// 0x00D8 (0x00D8 - 0x0000)
struct BPFL_ABPCostume_C_Get2Dvector final
{
public:
	struct FVector                                LegInput;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BS_UnitValue;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpineInput;                                        // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              OutPutVector;                                      // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 DebugParam;                                        // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                SpineVectorLocal;                                  // 0x0040(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BSunitValueLocal;                                  // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VectorZ;                                           // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VectorY;                                           // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VectorX;                                           // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_ABPCostume_C_Get2Dvector) == 0x000008, "Wrong alignment on BPFL_ABPCostume_C_Get2Dvector");
static_assert(sizeof(BPFL_ABPCostume_C_Get2Dvector) == 0x0000D8, "Wrong size on BPFL_ABPCostume_C_Get2Dvector");
static_assert(offsetof(BPFL_ABPCostume_C_Get2Dvector, LegInput) == 0x000000, "Member 'BPFL_ABPCostume_C_Get2Dvector::LegInput' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get2Dvector, BS_UnitValue) == 0x00000C, "Member 'BPFL_ABPCostume_C_Get2Dvector::BS_UnitValue' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get2Dvector, SpineInput) == 0x000010, "Member 'BPFL_ABPCostume_C_Get2Dvector::SpineInput' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get2Dvector, __WorldContext) == 0x000020, "Member 'BPFL_ABPCostume_C_Get2Dvector::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get2Dvector, OutPutVector) == 0x000028, "Member 'BPFL_ABPCostume_C_Get2Dvector::OutPutVector' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get2Dvector, DebugParam) == 0x000030, "Member 'BPFL_ABPCostume_C_Get2Dvector::DebugParam' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get2Dvector, SpineVectorLocal) == 0x000040, "Member 'BPFL_ABPCostume_C_Get2Dvector::SpineVectorLocal' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get2Dvector, BSunitValueLocal) == 0x00004C, "Member 'BPFL_ABPCostume_C_Get2Dvector::BSunitValueLocal' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get2Dvector, VectorZ) == 0x000050, "Member 'BPFL_ABPCostume_C_Get2Dvector::VectorZ' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get2Dvector, VectorY) == 0x000054, "Member 'BPFL_ABPCostume_C_Get2Dvector::VectorY' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get2Dvector, VectorX) == 0x000058, "Member 'BPFL_ABPCostume_C_Get2Dvector::VectorX' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get2Dvector, CallFunc_BreakVector_X) == 0x00005C, "Member 'BPFL_ABPCostume_C_Get2Dvector::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get2Dvector, CallFunc_BreakVector_Y) == 0x000060, "Member 'BPFL_ABPCostume_C_Get2Dvector::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get2Dvector, CallFunc_BreakVector_Z) == 0x000064, "Member 'BPFL_ABPCostume_C_Get2Dvector::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get2Dvector, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000068, "Member 'BPFL_ABPCostume_C_Get2Dvector::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get2Dvector, CallFunc_BreakVector_X_1) == 0x00006C, "Member 'BPFL_ABPCostume_C_Get2Dvector::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get2Dvector, CallFunc_BreakVector_Y_1) == 0x000070, "Member 'BPFL_ABPCostume_C_Get2Dvector::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get2Dvector, CallFunc_BreakVector_Z_1) == 0x000074, "Member 'BPFL_ABPCostume_C_Get2Dvector::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get2Dvector, CallFunc_MakeVector_ReturnValue) == 0x000078, "Member 'BPFL_ABPCostume_C_Get2Dvector::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get2Dvector, CallFunc_Normal_ReturnValue) == 0x000084, "Member 'BPFL_ABPCostume_C_Get2Dvector::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get2Dvector, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x000090, "Member 'BPFL_ABPCostume_C_Get2Dvector::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get2Dvector, CallFunc_MakeVector_ReturnValue_1) == 0x000094, "Member 'BPFL_ABPCostume_C_Get2Dvector::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get2Dvector, CallFunc_MakeVector2D_ReturnValue) == 0x0000A0, "Member 'BPFL_ABPCostume_C_Get2Dvector::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get2Dvector, CallFunc_Normal_ReturnValue_1) == 0x0000A8, "Member 'BPFL_ABPCostume_C_Get2Dvector::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get2Dvector, CallFunc_Normal2D_ReturnValue) == 0x0000B4, "Member 'BPFL_ABPCostume_C_Get2Dvector::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get2Dvector, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000BC, "Member 'BPFL_ABPCostume_C_Get2Dvector::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get2Dvector, CallFunc_DegAcos_ReturnValue) == 0x0000C0, "Member 'BPFL_ABPCostume_C_Get2Dvector::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get2Dvector, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000C4, "Member 'BPFL_ABPCostume_C_Get2Dvector::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get2Dvector, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000C8, "Member 'BPFL_ABPCostume_C_Get2Dvector::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get2Dvector, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000CC, "Member 'BPFL_ABPCostume_C_Get2Dvector::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get2Dvector, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x0000D0, "Member 'BPFL_ABPCostume_C_Get2Dvector::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");

// Function BPFL_ABPCostume.BPFL_ABPCostume_C.GetAngleBetween
// 0x00A0 (0x00A0 - 0x0000)
struct BPFL_ABPCostume_C_GetAngleBetween final
{
public:
	struct FVector                                InBetweenVector;                                   // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InTargetVector;                                    // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ConstraintXZ;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ConstraintXY;                                      // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutAngle;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LengthVal;                                         // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DotVal;                                            // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetVector;                                      // 0x0034(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BetweenVector;                                     // 0x0040(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_1;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_1;        // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_ABPCostume_C_GetAngleBetween) == 0x000008, "Wrong alignment on BPFL_ABPCostume_C_GetAngleBetween");
static_assert(sizeof(BPFL_ABPCostume_C_GetAngleBetween) == 0x0000A0, "Wrong size on BPFL_ABPCostume_C_GetAngleBetween");
static_assert(offsetof(BPFL_ABPCostume_C_GetAngleBetween, InBetweenVector) == 0x000000, "Member 'BPFL_ABPCostume_C_GetAngleBetween::InBetweenVector' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetAngleBetween, InTargetVector) == 0x00000C, "Member 'BPFL_ABPCostume_C_GetAngleBetween::InTargetVector' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetAngleBetween, ConstraintXZ) == 0x000018, "Member 'BPFL_ABPCostume_C_GetAngleBetween::ConstraintXZ' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetAngleBetween, ConstraintXY) == 0x000019, "Member 'BPFL_ABPCostume_C_GetAngleBetween::ConstraintXY' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetAngleBetween, __WorldContext) == 0x000020, "Member 'BPFL_ABPCostume_C_GetAngleBetween::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetAngleBetween, OutAngle) == 0x000028, "Member 'BPFL_ABPCostume_C_GetAngleBetween::OutAngle' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetAngleBetween, LengthVal) == 0x00002C, "Member 'BPFL_ABPCostume_C_GetAngleBetween::LengthVal' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetAngleBetween, DotVal) == 0x000030, "Member 'BPFL_ABPCostume_C_GetAngleBetween::DotVal' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetAngleBetween, TargetVector) == 0x000034, "Member 'BPFL_ABPCostume_C_GetAngleBetween::TargetVector' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetAngleBetween, BetweenVector) == 0x000040, "Member 'BPFL_ABPCostume_C_GetAngleBetween::BetweenVector' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetAngleBetween, CallFunc_BreakVector_X) == 0x00004C, "Member 'BPFL_ABPCostume_C_GetAngleBetween::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetAngleBetween, CallFunc_BreakVector_Y) == 0x000050, "Member 'BPFL_ABPCostume_C_GetAngleBetween::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetAngleBetween, CallFunc_BreakVector_Z) == 0x000054, "Member 'BPFL_ABPCostume_C_GetAngleBetween::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetAngleBetween, CallFunc_MakeVector_ReturnValue) == 0x000058, "Member 'BPFL_ABPCostume_C_GetAngleBetween::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetAngleBetween, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000064, "Member 'BPFL_ABPCostume_C_GetAngleBetween::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetAngleBetween, CallFunc_DegAcos_ReturnValue) == 0x000068, "Member 'BPFL_ABPCostume_C_GetAngleBetween::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetAngleBetween, CallFunc_VSize_ReturnValue) == 0x00006C, "Member 'BPFL_ABPCostume_C_GetAngleBetween::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetAngleBetween, CallFunc_VSize_ReturnValue_1) == 0x000070, "Member 'BPFL_ABPCostume_C_GetAngleBetween::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetAngleBetween, CallFunc_Dot_VectorVector_ReturnValue) == 0x000074, "Member 'BPFL_ABPCostume_C_GetAngleBetween::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetAngleBetween, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000078, "Member 'BPFL_ABPCostume_C_GetAngleBetween::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetAngleBetween, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x00007C, "Member 'BPFL_ABPCostume_C_GetAngleBetween::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetAngleBetween, CallFunc_BreakVector_X_1) == 0x000080, "Member 'BPFL_ABPCostume_C_GetAngleBetween::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetAngleBetween, CallFunc_BreakVector_Y_1) == 0x000084, "Member 'BPFL_ABPCostume_C_GetAngleBetween::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetAngleBetween, CallFunc_BreakVector_Z_1) == 0x000088, "Member 'BPFL_ABPCostume_C_GetAngleBetween::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetAngleBetween, CallFunc_MakeVector_ReturnValue_1) == 0x00008C, "Member 'BPFL_ABPCostume_C_GetAngleBetween::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetAngleBetween, CallFunc_NotEqual_FloatFloat_ReturnValue_1) == 0x000098, "Member 'BPFL_ABPCostume_C_GetAngleBetween::CallFunc_NotEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_GetAngleBetween, CallFunc_BooleanAND_ReturnValue) == 0x000099, "Member 'BPFL_ABPCostume_C_GetAngleBetween::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BPFL_ABPCostume.BPFL_ABPCostume_C.Get Leg Rotate From Skirt Vector
// 0x0110 (0x0110 - 0x0000)
struct BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector final
{
public:
	bool                                          CalcDirection_L_;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          AnimInstance;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   InUpLegName;                                       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   InPreserveUpLegName;                               // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotateZ;                                           // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotateY;                                           // 0x0034(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Skeltal;                                           // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ResultZ_Rotate;                                    // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ResultY_Rotate;                                    // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PitchLengthVal;                                    // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PitchDotVal;                                       // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         YawLengthVal;                                      // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         YawDotVal;                                         // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue;            // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue_1;          // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAngleBetween_OutAngle;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue_2;          // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_CalculateDirection_ReturnValue;           // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FE[0x2];                                       // 0x00FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector) == 0x000008, "Wrong alignment on BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector");
static_assert(sizeof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector) == 0x000110, "Wrong size on BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, CalcDirection_L_) == 0x000000, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::CalcDirection_L_' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, SkeletalMesh) == 0x000008, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, AnimInstance) == 0x000010, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::AnimInstance' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, InUpLegName) == 0x000018, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::InUpLegName' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, InPreserveUpLegName) == 0x000020, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::InPreserveUpLegName' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, __WorldContext) == 0x000028, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, RotateZ) == 0x000030, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::RotateZ' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, RotateY) == 0x000034, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::RotateY' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, Skeltal) == 0x000038, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::Skeltal' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, ResultZ_Rotate) == 0x000040, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::ResultZ_Rotate' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, ResultY_Rotate) == 0x000044, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::ResultY_Rotate' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, PitchLengthVal) == 0x000048, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::PitchLengthVal' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, PitchDotVal) == 0x00004C, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::PitchDotVal' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, YawLengthVal) == 0x000050, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::YawLengthVal' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, YawDotVal) == 0x000054, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::YawDotVal' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, CallFunc_GetSocketRotation_ReturnValue) == 0x000058, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::CallFunc_GetSocketRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, CallFunc_GetSocketRotation_ReturnValue_1) == 0x000064, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::CallFunc_GetSocketRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, CallFunc_GetForwardVector_ReturnValue) == 0x000070, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, CallFunc_GetForwardVector_ReturnValue_1) == 0x00007C, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, CallFunc_BreakVector_X) == 0x000088, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, CallFunc_BreakVector_Y) == 0x00008C, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, CallFunc_BreakVector_Z) == 0x000090, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, CallFunc_BreakVector_X_1) == 0x000094, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, CallFunc_BreakVector_Y_1) == 0x000098, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, CallFunc_BreakVector_Z_1) == 0x00009C, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, CallFunc_MakeVector_ReturnValue) == 0x0000A0, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, CallFunc_MakeVector_ReturnValue_1) == 0x0000AC, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, CallFunc_Normal_ReturnValue) == 0x0000B8, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, CallFunc_Normal_ReturnValue_1) == 0x0000C4, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, CallFunc_GetAngleBetween_OutAngle) == 0x0000D0, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::CallFunc_GetAngleBetween_OutAngle' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, CallFunc_GetSocketRotation_ReturnValue_2) == 0x0000D4, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::CallFunc_GetSocketRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, CallFunc_GetRightVector_ReturnValue) == 0x0000E0, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x0000EC, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, CallFunc_CalculateDirection_ReturnValue) == 0x0000F8, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::CallFunc_CalculateDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000FC, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x0000FD, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, CallFunc_SelectFloat_ReturnValue) == 0x000100, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, CallFunc_SelectFloat_ReturnValue_1) == 0x000104, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, CallFunc_Add_FloatFloat_ReturnValue) == 0x000108, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00010C, "Member 'BPFL_ABPCostume_C_Get_Leg_Rotate_From_Skirt_Vector::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function BPFL_ABPCostume.BPFL_ABPCostume_C.Get Matrix
// 0x0120 (0x0120 - 0x0000)
struct BPFL_ABPCostume_C_Get_Matrix final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SocketName;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERelativeTransformSpace                       TransformSpace;                                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Inverse;                                           // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMatrix                                Matrix;                                            // 0x0020(0x0040)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USkeletalMeshComponent*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	struct FMatrix                                CallFunc_Conv_TransformToMatrix_ReturnValue;       // 0x00A0(0x0040)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMatrix                                CallFunc_Matrix_GetInverse_ReturnValue;            // 0x00E0(0x0040)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_ABPCostume_C_Get_Matrix) == 0x000010, "Wrong alignment on BPFL_ABPCostume_C_Get_Matrix");
static_assert(sizeof(BPFL_ABPCostume_C_Get_Matrix) == 0x000120, "Wrong size on BPFL_ABPCostume_C_Get_Matrix");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Matrix, Actor) == 0x000000, "Member 'BPFL_ABPCostume_C_Get_Matrix::Actor' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Matrix, SocketName) == 0x000008, "Member 'BPFL_ABPCostume_C_Get_Matrix::SocketName' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Matrix, TransformSpace) == 0x000010, "Member 'BPFL_ABPCostume_C_Get_Matrix::TransformSpace' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Matrix, Inverse) == 0x000011, "Member 'BPFL_ABPCostume_C_Get_Matrix::Inverse' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Matrix, __WorldContext) == 0x000018, "Member 'BPFL_ABPCostume_C_Get_Matrix::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Matrix, Matrix) == 0x000020, "Member 'BPFL_ABPCostume_C_Get_Matrix::Matrix' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Matrix, CallFunc_GetComponentByClass_ReturnValue) == 0x000060, "Member 'BPFL_ABPCostume_C_Get_Matrix::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Matrix, CallFunc_GetSocketTransform_ReturnValue) == 0x000070, "Member 'BPFL_ABPCostume_C_Get_Matrix::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Matrix, CallFunc_Conv_TransformToMatrix_ReturnValue) == 0x0000A0, "Member 'BPFL_ABPCostume_C_Get_Matrix::CallFunc_Conv_TransformToMatrix_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ABPCostume_C_Get_Matrix, CallFunc_Matrix_GetInverse_ReturnValue) == 0x0000E0, "Member 'BPFL_ABPCostume_C_Get_Matrix::CallFunc_Matrix_GetInverse_ReturnValue' has a wrong offset!");

}

