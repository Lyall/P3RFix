#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtlAlloutController

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FBtlAlloutSequencer_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_BtlAlloutController.BP_BtlAlloutController_C.ExecuteUbergraph_BP_BtlAlloutController
// 0x01D0 (0x01D0 - 0x0000)
struct BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	TSoftObjectPtr<class ULevelSequence>          CallFunc_ChoiceSequence_Start;                     // 0x0018(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          CallFunc_ChoiceSequence_BeforeShuffle;             // 0x0040(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          CallFunc_ChoiceSequence_AfterShuffle;              // 0x0068(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNewBattleOutfitForAlloutFinish_ReturnValue; // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetID_ReturnValue;                        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckGeneralAttackAnnihilation_ReturnValue; // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B[0x5];                                       // 0x009B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetInitialTransform_trans;                // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetSubLevelActor_ReturnValue;             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlAlloutFinishActor_C*             CallFunc_FinishSpawningActor_ReturnValue;          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         K2Node_DynamicCast_AsLevel_Sequence;               // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetAlloutLevelName_LevelName;             // 0x010C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetAlloutLevelName_LevelName_1;           // 0x0114(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable_1;                            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         K2Node_DynamicCast_AsLevel_Sequence_1;             // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_1;          // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable_2;                            // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         K2Node_DynamicCast_AsLevel_Sequence_2;             // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_182[0x6];                                      // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_2;                       // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x0190(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Check_Model_Load_Finished_IsLoadEnded;    // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_2;            // 0x01A4(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_3;            // 0x01B4(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController) == 0x000010, "Wrong alignment on BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController");
static_assert(sizeof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController) == 0x0001D0, "Wrong size on BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, EntryPoint) == 0x000000, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, K2Node_Event_EndPlayReason) == 0x000004, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, CallFunc_BooleanAND_ReturnValue_1) == 0x000006, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, CallFunc_ChoiceSequence_Start) == 0x000018, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::CallFunc_ChoiceSequence_Start' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, CallFunc_ChoiceSequence_BeforeShuffle) == 0x000040, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::CallFunc_ChoiceSequence_BeforeShuffle' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, CallFunc_ChoiceSequence_AfterShuffle) == 0x000068, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::CallFunc_ChoiceSequence_AfterShuffle' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000090, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, CallFunc_IsNewBattleOutfitForAlloutFinish_ReturnValue) == 0x000091, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::CallFunc_IsNewBattleOutfitForAlloutFinish_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, CallFunc_GetID_ReturnValue) == 0x000094, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::CallFunc_GetID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x000098, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, CallFunc_CheckGeneralAttackAnnihilation_ReturnValue) == 0x000099, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::CallFunc_CheckGeneralAttackAnnihilation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, CallFunc_IsValid_ReturnValue) == 0x00009A, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, CallFunc_GetInitialTransform_trans) == 0x0000A0, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::CallFunc_GetInitialTransform_trans' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, CallFunc_GetSubLevelActor_ReturnValue) == 0x0000D0, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::CallFunc_GetSubLevelActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, CallFunc_IsValid_ReturnValue_1) == 0x0000D8, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000E0, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000E8, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, Temp_object_Variable) == 0x0000F0, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000F8, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, K2Node_DynamicCast_AsLevel_Sequence) == 0x000100, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::K2Node_DynamicCast_AsLevel_Sequence' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, K2Node_DynamicCast_bSuccess) == 0x000108, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, CallFunc_GetAlloutLevelName_LevelName) == 0x00010C, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::CallFunc_GetAlloutLevelName_LevelName' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, CallFunc_GetAlloutLevelName_LevelName_1) == 0x000114, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::CallFunc_GetAlloutLevelName_LevelName_1' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, K2Node_CustomEvent_Loaded) == 0x000120, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, CallFunc_BooleanAND_ReturnValue_2) == 0x000128, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, Temp_object_Variable_1) == 0x000130, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, K2Node_DynamicCast_AsLevel_Sequence_1) == 0x000138, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::K2Node_DynamicCast_AsLevel_Sequence_1' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, K2Node_DynamicCast_bSuccess_1) == 0x000140, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, CallFunc_GetSequencePlayer_ReturnValue) == 0x000148, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, CallFunc_IsPlaying_ReturnValue) == 0x000150, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, CallFunc_GetSequencePlayer_ReturnValue_1) == 0x000158, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::CallFunc_GetSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, K2Node_CustomEvent_Loaded_1) == 0x000160, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, CallFunc_BooleanAND_ReturnValue_3) == 0x000168, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, Temp_object_Variable_2) == 0x000170, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, K2Node_DynamicCast_AsLevel_Sequence_2) == 0x000178, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::K2Node_DynamicCast_AsLevel_Sequence_2' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, K2Node_DynamicCast_bSuccess_2) == 0x000180, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, CallFunc_BooleanAND_ReturnValue_4) == 0x000181, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, K2Node_CustomEvent_Loaded_2) == 0x000188, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::K2Node_CustomEvent_Loaded_2' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, K2Node_CreateDelegate_OutputDelegate_1) == 0x000190, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, CallFunc_Check_Model_Load_Finished_IsLoadEnded) == 0x0001A0, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::CallFunc_Check_Model_Load_Finished_IsLoadEnded' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, K2Node_CreateDelegate_OutputDelegate_2) == 0x0001A4, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController, K2Node_CreateDelegate_OutputDelegate_3) == 0x0001B4, "Member 'BP_BtlAlloutController_C_ExecuteUbergraph_BP_BtlAlloutController::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");

// Function BP_BtlAlloutController.BP_BtlAlloutController_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_BtlAlloutController_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlAlloutController_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_BtlAlloutController_C_ReceiveEndPlay");
static_assert(sizeof(BP_BtlAlloutController_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_BtlAlloutController_C_ReceiveEndPlay");
static_assert(offsetof(BP_BtlAlloutController_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_BtlAlloutController_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_BtlAlloutController.BP_BtlAlloutController_C.OnLoaded_8A46DB4444D35F946B17A2966A1BE30A
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlAlloutController_C_OnLoaded_8A46DB4444D35F946B17A2966A1BE30A final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlAlloutController_C_OnLoaded_8A46DB4444D35F946B17A2966A1BE30A) == 0x000008, "Wrong alignment on BP_BtlAlloutController_C_OnLoaded_8A46DB4444D35F946B17A2966A1BE30A");
static_assert(sizeof(BP_BtlAlloutController_C_OnLoaded_8A46DB4444D35F946B17A2966A1BE30A) == 0x000008, "Wrong size on BP_BtlAlloutController_C_OnLoaded_8A46DB4444D35F946B17A2966A1BE30A");
static_assert(offsetof(BP_BtlAlloutController_C_OnLoaded_8A46DB4444D35F946B17A2966A1BE30A, Loaded) == 0x000000, "Member 'BP_BtlAlloutController_C_OnLoaded_8A46DB4444D35F946B17A2966A1BE30A::Loaded' has a wrong offset!");

// Function BP_BtlAlloutController.BP_BtlAlloutController_C.OnLoaded_B41915304C41D101349591ABD3C3600E
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlAlloutController_C_OnLoaded_B41915304C41D101349591ABD3C3600E final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlAlloutController_C_OnLoaded_B41915304C41D101349591ABD3C3600E) == 0x000008, "Wrong alignment on BP_BtlAlloutController_C_OnLoaded_B41915304C41D101349591ABD3C3600E");
static_assert(sizeof(BP_BtlAlloutController_C_OnLoaded_B41915304C41D101349591ABD3C3600E) == 0x000008, "Wrong size on BP_BtlAlloutController_C_OnLoaded_B41915304C41D101349591ABD3C3600E");
static_assert(offsetof(BP_BtlAlloutController_C_OnLoaded_B41915304C41D101349591ABD3C3600E, Loaded) == 0x000000, "Member 'BP_BtlAlloutController_C_OnLoaded_B41915304C41D101349591ABD3C3600E::Loaded' has a wrong offset!");

// Function BP_BtlAlloutController.BP_BtlAlloutController_C.OnLoaded_A90C9119438CAE6B812937BD67180638
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlAlloutController_C_OnLoaded_A90C9119438CAE6B812937BD67180638 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlAlloutController_C_OnLoaded_A90C9119438CAE6B812937BD67180638) == 0x000008, "Wrong alignment on BP_BtlAlloutController_C_OnLoaded_A90C9119438CAE6B812937BD67180638");
static_assert(sizeof(BP_BtlAlloutController_C_OnLoaded_A90C9119438CAE6B812937BD67180638) == 0x000008, "Wrong size on BP_BtlAlloutController_C_OnLoaded_A90C9119438CAE6B812937BD67180638");
static_assert(offsetof(BP_BtlAlloutController_C_OnLoaded_A90C9119438CAE6B812937BD67180638, Loaded) == 0x000000, "Member 'BP_BtlAlloutController_C_OnLoaded_A90C9119438CAE6B812937BD67180638::Loaded' has a wrong offset!");

// Function BP_BtlAlloutController.BP_BtlAlloutController_C.GetAlloutLevelName
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlAlloutController_C_GetAlloutLevelName final
{
public:
	class FName                                   LevelName;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlAlloutController_C_GetAlloutLevelName) == 0x000004, "Wrong alignment on BP_BtlAlloutController_C_GetAlloutLevelName");
static_assert(sizeof(BP_BtlAlloutController_C_GetAlloutLevelName) == 0x000008, "Wrong size on BP_BtlAlloutController_C_GetAlloutLevelName");
static_assert(offsetof(BP_BtlAlloutController_C_GetAlloutLevelName, LevelName) == 0x000000, "Member 'BP_BtlAlloutController_C_GetAlloutLevelName::LevelName' has a wrong offset!");

// Function BP_BtlAlloutController.BP_BtlAlloutController_C.PlayAlloutStartupSequence
// 0x0020 (0x0020 - 0x0000)
struct BP_BtlAlloutController_C_PlayAlloutStartupSequence final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class ALevelSequenceActor*                    CallFunc_CreateLevelSequencePlayer_OutActor;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_CreateLevelSequencePlayer_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlAlloutController_C_PlayAlloutStartupSequence) == 0x000008, "Wrong alignment on BP_BtlAlloutController_C_PlayAlloutStartupSequence");
static_assert(sizeof(BP_BtlAlloutController_C_PlayAlloutStartupSequence) == 0x000020, "Wrong size on BP_BtlAlloutController_C_PlayAlloutStartupSequence");
static_assert(offsetof(BP_BtlAlloutController_C_PlayAlloutStartupSequence, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_BtlAlloutController_C_PlayAlloutStartupSequence::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_PlayAlloutStartupSequence, CallFunc_CreateLevelSequencePlayer_OutActor) == 0x000010, "Member 'BP_BtlAlloutController_C_PlayAlloutStartupSequence::CallFunc_CreateLevelSequencePlayer_OutActor' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_PlayAlloutStartupSequence, CallFunc_CreateLevelSequencePlayer_ReturnValue) == 0x000018, "Member 'BP_BtlAlloutController_C_PlayAlloutStartupSequence::CallFunc_CreateLevelSequencePlayer_ReturnValue' has a wrong offset!");

// Function BP_BtlAlloutController.BP_BtlAlloutController_C.PlayAllout2ndSequence
// 0x0030 (0x0030 - 0x0000)
struct BP_BtlAlloutController_C_PlayAllout2ndSequence final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACineCameraActor*                       CallFunc_GetBCDCamera_Output;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class ALevelSequenceActor*                    CallFunc_CreateLevelSequencePlayer_OutActor;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_CreateLevelSequencePlayer_ReturnValue;    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlAlloutController_C_PlayAllout2ndSequence) == 0x000008, "Wrong alignment on BP_BtlAlloutController_C_PlayAllout2ndSequence");
static_assert(sizeof(BP_BtlAlloutController_C_PlayAllout2ndSequence) == 0x000030, "Wrong size on BP_BtlAlloutController_C_PlayAllout2ndSequence");
static_assert(offsetof(BP_BtlAlloutController_C_PlayAllout2ndSequence, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_BtlAlloutController_C_PlayAllout2ndSequence::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_PlayAllout2ndSequence, CallFunc_GetBCDCamera_Output) == 0x000008, "Member 'BP_BtlAlloutController_C_PlayAllout2ndSequence::CallFunc_GetBCDCamera_Output' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_PlayAllout2ndSequence, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_BtlAlloutController_C_PlayAllout2ndSequence::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_PlayAllout2ndSequence, CallFunc_CreateLevelSequencePlayer_OutActor) == 0x000020, "Member 'BP_BtlAlloutController_C_PlayAllout2ndSequence::CallFunc_CreateLevelSequencePlayer_OutActor' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_PlayAllout2ndSequence, CallFunc_CreateLevelSequencePlayer_ReturnValue) == 0x000028, "Member 'BP_BtlAlloutController_C_PlayAllout2ndSequence::CallFunc_CreateLevelSequencePlayer_ReturnValue' has a wrong offset!");

// Function BP_BtlAlloutController.BP_BtlAlloutController_C.PlayAllout3rdSequence
// 0x0020 (0x0020 - 0x0000)
struct BP_BtlAlloutController_C_PlayAllout3rdSequence final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class ALevelSequenceActor*                    CallFunc_CreateLevelSequencePlayer_OutActor;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_CreateLevelSequencePlayer_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlAlloutController_C_PlayAllout3rdSequence) == 0x000008, "Wrong alignment on BP_BtlAlloutController_C_PlayAllout3rdSequence");
static_assert(sizeof(BP_BtlAlloutController_C_PlayAllout3rdSequence) == 0x000020, "Wrong size on BP_BtlAlloutController_C_PlayAllout3rdSequence");
static_assert(offsetof(BP_BtlAlloutController_C_PlayAllout3rdSequence, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_BtlAlloutController_C_PlayAllout3rdSequence::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_PlayAllout3rdSequence, CallFunc_CreateLevelSequencePlayer_OutActor) == 0x000010, "Member 'BP_BtlAlloutController_C_PlayAllout3rdSequence::CallFunc_CreateLevelSequencePlayer_OutActor' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_PlayAllout3rdSequence, CallFunc_CreateLevelSequencePlayer_ReturnValue) == 0x000018, "Member 'BP_BtlAlloutController_C_PlayAllout3rdSequence::CallFunc_CreateLevelSequencePlayer_ReturnValue' has a wrong offset!");

// Function BP_BtlAlloutController.BP_BtlAlloutController_C.Setup
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlAlloutController_C_Setup final
{
public:
	class ABP_BtlEventAssistant_C*                CallFunc_GetActorOfClass_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlAlloutController_C_Setup) == 0x000008, "Wrong alignment on BP_BtlAlloutController_C_Setup");
static_assert(sizeof(BP_BtlAlloutController_C_Setup) == 0x000008, "Wrong size on BP_BtlAlloutController_C_Setup");
static_assert(offsetof(BP_BtlAlloutController_C_Setup, CallFunc_GetActorOfClass_ReturnValue) == 0x000000, "Member 'BP_BtlAlloutController_C_Setup::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");

// Function BP_BtlAlloutController.BP_BtlAlloutController_C.AllocateMembers
// 0x0038 (0x0038 - 0x0000)
struct BP_BtlAlloutController_C_AllocateMembers final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 CallFunc_Array_Get_Item_1;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 CallFunc_Array_Get_Item_2;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlAlloutController_C_AllocateMembers) == 0x000008, "Wrong alignment on BP_BtlAlloutController_C_AllocateMembers");
static_assert(sizeof(BP_BtlAlloutController_C_AllocateMembers) == 0x000038, "Wrong size on BP_BtlAlloutController_C_AllocateMembers");
static_assert(offsetof(BP_BtlAlloutController_C_AllocateMembers, Index_0) == 0x000000, "Member 'BP_BtlAlloutController_C_AllocateMembers::Index_0' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_AllocateMembers, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_BtlAlloutController_C_AllocateMembers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_AllocateMembers, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_BtlAlloutController_C_AllocateMembers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_AllocateMembers, CallFunc_Greater_IntInt_ReturnValue) == 0x000014, "Member 'BP_BtlAlloutController_C_AllocateMembers::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_AllocateMembers, CallFunc_Array_Get_Item_1) == 0x000018, "Member 'BP_BtlAlloutController_C_AllocateMembers::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_AllocateMembers, CallFunc_Array_Length_ReturnValue_1) == 0x000020, "Member 'BP_BtlAlloutController_C_AllocateMembers::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_AllocateMembers, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000024, "Member 'BP_BtlAlloutController_C_AllocateMembers::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_AllocateMembers, CallFunc_Array_Get_Item_2) == 0x000028, "Member 'BP_BtlAlloutController_C_AllocateMembers::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_AllocateMembers, CallFunc_Array_Length_ReturnValue_2) == 0x000030, "Member 'BP_BtlAlloutController_C_AllocateMembers::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_AllocateMembers, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000034, "Member 'BP_BtlAlloutController_C_AllocateMembers::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_BtlAlloutController.BP_BtlAlloutController_C.ChoiceSequence
// 0x01A0 (0x01A0 - 0x0000)
struct BP_BtlAlloutController_C_ChoiceSequence final
{
public:
	TSoftObjectPtr<class ULevelSequence>          Start;                                             // 0x0000(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          BeforeShuffle;                                     // 0x0028(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          AfterShuffle;                                      // 0x0050(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	struct FFBtlAlloutSequencer                   Table;                                             // 0x0078(0x0050)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          SeqToPlay_B;                                       // 0x00C8(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          SeqToPlay_A;                                       // 0x00F0(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          CallFunc_CheckGeneralAttackAnnihilation_ReturnValue; // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetID_ReturnValue;                        // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBtlAlloutSequencer                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x0148(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlAlloutController_C_ChoiceSequence) == 0x000008, "Wrong alignment on BP_BtlAlloutController_C_ChoiceSequence");
static_assert(sizeof(BP_BtlAlloutController_C_ChoiceSequence) == 0x0001A0, "Wrong size on BP_BtlAlloutController_C_ChoiceSequence");
static_assert(offsetof(BP_BtlAlloutController_C_ChoiceSequence, Start) == 0x000000, "Member 'BP_BtlAlloutController_C_ChoiceSequence::Start' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ChoiceSequence, BeforeShuffle) == 0x000028, "Member 'BP_BtlAlloutController_C_ChoiceSequence::BeforeShuffle' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ChoiceSequence, AfterShuffle) == 0x000050, "Member 'BP_BtlAlloutController_C_ChoiceSequence::AfterShuffle' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ChoiceSequence, Table) == 0x000078, "Member 'BP_BtlAlloutController_C_ChoiceSequence::Table' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ChoiceSequence, SeqToPlay_B) == 0x0000C8, "Member 'BP_BtlAlloutController_C_ChoiceSequence::SeqToPlay_B' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ChoiceSequence, SeqToPlay_A) == 0x0000F0, "Member 'BP_BtlAlloutController_C_ChoiceSequence::SeqToPlay_A' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ChoiceSequence, CallFunc_CheckGeneralAttackAnnihilation_ReturnValue) == 0x000118, "Member 'BP_BtlAlloutController_C_ChoiceSequence::CallFunc_CheckGeneralAttackAnnihilation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ChoiceSequence, CallFunc_GetID_ReturnValue) == 0x00011C, "Member 'BP_BtlAlloutController_C_ChoiceSequence::CallFunc_GetID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ChoiceSequence, CallFunc_Conv_IntToString_ReturnValue) == 0x000120, "Member 'BP_BtlAlloutController_C_ChoiceSequence::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ChoiceSequence, CallFunc_Concat_StrStr_ReturnValue) == 0x000130, "Member 'BP_BtlAlloutController_C_ChoiceSequence::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ChoiceSequence, CallFunc_Conv_StringToName_ReturnValue) == 0x000140, "Member 'BP_BtlAlloutController_C_ChoiceSequence::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ChoiceSequence, CallFunc_GetDataTableRowFromName_OutRow) == 0x000148, "Member 'BP_BtlAlloutController_C_ChoiceSequence::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_ChoiceSequence, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000198, "Member 'BP_BtlAlloutController_C_ChoiceSequence::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_BtlAlloutController.BP_BtlAlloutController_C.StopASequence
// 0x0028 (0x0028 - 0x0000)
struct BP_BtlAlloutController_C_StopASequence final
{
public:
	class ALevelSequenceActor*                    Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_1;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlAlloutController_C_StopASequence) == 0x000008, "Wrong alignment on BP_BtlAlloutController_C_StopASequence");
static_assert(sizeof(BP_BtlAlloutController_C_StopASequence) == 0x000028, "Wrong size on BP_BtlAlloutController_C_StopASequence");
static_assert(offsetof(BP_BtlAlloutController_C_StopASequence, Target) == 0x000000, "Member 'BP_BtlAlloutController_C_StopASequence::Target' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_StopASequence, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_BtlAlloutController_C_StopASequence::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_StopASequence, CallFunc_GetSequencePlayer_ReturnValue) == 0x000010, "Member 'BP_BtlAlloutController_C_StopASequence::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_StopASequence, CallFunc_GetSequencePlayer_ReturnValue_1) == 0x000018, "Member 'BP_BtlAlloutController_C_StopASequence::CallFunc_GetSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_StopASequence, CallFunc_IsPlaying_ReturnValue) == 0x000020, "Member 'BP_BtlAlloutController_C_StopASequence::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");

// Function BP_BtlAlloutController.BP_BtlAlloutController_C.SetupMembersEventMode
// 0x0040 (0x0040 - 0x0000)
struct BP_BtlAlloutController_C_SetupMembersEventMode final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 CallFunc_GetCharacter_Character;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlCharacterBase_C*                 CallFunc_GetCharacter_Character_1;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 CallFunc_GetCharacter_Character_2;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 CallFunc_GetCharacter_Character_3;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlAlloutController_C_SetupMembersEventMode) == 0x000008, "Wrong alignment on BP_BtlAlloutController_C_SetupMembersEventMode");
static_assert(sizeof(BP_BtlAlloutController_C_SetupMembersEventMode) == 0x000040, "Wrong size on BP_BtlAlloutController_C_SetupMembersEventMode");
static_assert(offsetof(BP_BtlAlloutController_C_SetupMembersEventMode, Enable) == 0x000000, "Member 'BP_BtlAlloutController_C_SetupMembersEventMode::Enable' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_SetupMembersEventMode, CallFunc_GetCharacter_Character) == 0x000008, "Member 'BP_BtlAlloutController_C_SetupMembersEventMode::CallFunc_GetCharacter_Character' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_SetupMembersEventMode, CallFunc_GetCharacter_Character_1) == 0x000010, "Member 'BP_BtlAlloutController_C_SetupMembersEventMode::CallFunc_GetCharacter_Character_1' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_SetupMembersEventMode, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_BtlAlloutController_C_SetupMembersEventMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_SetupMembersEventMode, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_BtlAlloutController_C_SetupMembersEventMode::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_SetupMembersEventMode, CallFunc_GetCharacter_Character_2) == 0x000020, "Member 'BP_BtlAlloutController_C_SetupMembersEventMode::CallFunc_GetCharacter_Character_2' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_SetupMembersEventMode, CallFunc_IsValid_ReturnValue_2) == 0x000028, "Member 'BP_BtlAlloutController_C_SetupMembersEventMode::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_SetupMembersEventMode, CallFunc_GetCharacter_Character_3) == 0x000030, "Member 'BP_BtlAlloutController_C_SetupMembersEventMode::CallFunc_GetCharacter_Character_3' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_SetupMembersEventMode, CallFunc_IsValid_ReturnValue_3) == 0x000038, "Member 'BP_BtlAlloutController_C_SetupMembersEventMode::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function BP_BtlAlloutController.BP_BtlAlloutController_C.PlayAlloutFinish
// 0x0001 (0x0001 - 0x0000)
struct BP_BtlAlloutController_C_PlayAlloutFinish final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlAlloutController_C_PlayAlloutFinish) == 0x000001, "Wrong alignment on BP_BtlAlloutController_C_PlayAlloutFinish");
static_assert(sizeof(BP_BtlAlloutController_C_PlayAlloutFinish) == 0x000001, "Wrong size on BP_BtlAlloutController_C_PlayAlloutFinish");
static_assert(offsetof(BP_BtlAlloutController_C_PlayAlloutFinish, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_BtlAlloutController_C_PlayAlloutFinish::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlAlloutController.BP_BtlAlloutController_C.Check Model Load Finished
// 0x0020 (0x0020 - 0x0000)
struct BP_BtlAlloutController_C_Check_Model_Load_Finished final
{
public:
	bool                                          IsLoadEnded;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsModelLoadEnd;                                    // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlCharacterBase_C*                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SyncModelsForAlloutAttack_ReturnValue;    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SyncModelsForAlloutAttack_ReturnValue_1;  // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlAlloutController_C_Check_Model_Load_Finished) == 0x000008, "Wrong alignment on BP_BtlAlloutController_C_Check_Model_Load_Finished");
static_assert(sizeof(BP_BtlAlloutController_C_Check_Model_Load_Finished) == 0x000020, "Wrong size on BP_BtlAlloutController_C_Check_Model_Load_Finished");
static_assert(offsetof(BP_BtlAlloutController_C_Check_Model_Load_Finished, IsLoadEnded) == 0x000000, "Member 'BP_BtlAlloutController_C_Check_Model_Load_Finished::IsLoadEnded' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_Check_Model_Load_Finished, IsModelLoadEnd) == 0x000001, "Member 'BP_BtlAlloutController_C_Check_Model_Load_Finished::IsModelLoadEnd' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_Check_Model_Load_Finished, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_BtlAlloutController_C_Check_Model_Load_Finished::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_Check_Model_Load_Finished, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_BtlAlloutController_C_Check_Model_Load_Finished::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_Check_Model_Load_Finished, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_BtlAlloutController_C_Check_Model_Load_Finished::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_Check_Model_Load_Finished, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_BtlAlloutController_C_Check_Model_Load_Finished::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_Check_Model_Load_Finished, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_BtlAlloutController_C_Check_Model_Load_Finished::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_Check_Model_Load_Finished, CallFunc_SyncModelsForAlloutAttack_ReturnValue) == 0x00001C, "Member 'BP_BtlAlloutController_C_Check_Model_Load_Finished::CallFunc_SyncModelsForAlloutAttack_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_Check_Model_Load_Finished, CallFunc_Less_IntInt_ReturnValue) == 0x00001D, "Member 'BP_BtlAlloutController_C_Check_Model_Load_Finished::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_Check_Model_Load_Finished, CallFunc_SyncModelsForAlloutAttack_ReturnValue_1) == 0x00001E, "Member 'BP_BtlAlloutController_C_Check_Model_Load_Finished::CallFunc_SyncModelsForAlloutAttack_ReturnValue_1' has a wrong offset!");

// Function BP_BtlAlloutController.BP_BtlAlloutController_C.Load Character Specific Model For Allout
// 0x0020 (0x0020 - 0x0000)
struct BP_BtlAlloutController_C_Load_Character_Specific_Model_For_Allout final
{
public:
	bool                                          IsModelLoadEnd;                                    // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlCharacterBase_C*                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlAlloutController_C_Load_Character_Specific_Model_For_Allout) == 0x000008, "Wrong alignment on BP_BtlAlloutController_C_Load_Character_Specific_Model_For_Allout");
static_assert(sizeof(BP_BtlAlloutController_C_Load_Character_Specific_Model_For_Allout) == 0x000020, "Wrong size on BP_BtlAlloutController_C_Load_Character_Specific_Model_For_Allout");
static_assert(offsetof(BP_BtlAlloutController_C_Load_Character_Specific_Model_For_Allout, IsModelLoadEnd) == 0x000000, "Member 'BP_BtlAlloutController_C_Load_Character_Specific_Model_For_Allout::IsModelLoadEnd' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_Load_Character_Specific_Model_For_Allout, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_BtlAlloutController_C_Load_Character_Specific_Model_For_Allout::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_Load_Character_Specific_Model_For_Allout, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_BtlAlloutController_C_Load_Character_Specific_Model_For_Allout::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_Load_Character_Specific_Model_For_Allout, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_BtlAlloutController_C_Load_Character_Specific_Model_For_Allout::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_Load_Character_Specific_Model_For_Allout, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_BtlAlloutController_C_Load_Character_Specific_Model_For_Allout::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_Load_Character_Specific_Model_For_Allout, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_BtlAlloutController_C_Load_Character_Specific_Model_For_Allout::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_Load_Character_Specific_Model_For_Allout, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_BtlAlloutController_C_Load_Character_Specific_Model_For_Allout::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BtlAlloutController.BP_BtlAlloutController_C.SetupMembersForAllout
// 0x0050 (0x0050 - 0x0000)
struct BP_BtlAlloutController_C_SetupMembersForAllout final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBtlAegisInterface>    K2Node_DynamicCast_AsBtl_Aegis_Interface;          // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBtlAegisInterface>    K2Node_DynamicCast_AsBtl_Aegis_Interface_1;        // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOrgia_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOrgia_ReturnValue_1;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlAlloutController_C_SetupMembersForAllout) == 0x000008, "Wrong alignment on BP_BtlAlloutController_C_SetupMembersForAllout");
static_assert(sizeof(BP_BtlAlloutController_C_SetupMembersForAllout) == 0x000050, "Wrong size on BP_BtlAlloutController_C_SetupMembersForAllout");
static_assert(offsetof(BP_BtlAlloutController_C_SetupMembersForAllout, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_BtlAlloutController_C_SetupMembersForAllout::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_SetupMembersForAllout, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_BtlAlloutController_C_SetupMembersForAllout::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_SetupMembersForAllout, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_BtlAlloutController_C_SetupMembersForAllout::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_SetupMembersForAllout, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_BtlAlloutController_C_SetupMembersForAllout::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_SetupMembersForAllout, K2Node_DynamicCast_AsBtl_Aegis_Interface) == 0x000018, "Member 'BP_BtlAlloutController_C_SetupMembersForAllout::K2Node_DynamicCast_AsBtl_Aegis_Interface' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_SetupMembersForAllout, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_BtlAlloutController_C_SetupMembersForAllout::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_SetupMembersForAllout, K2Node_DynamicCast_AsBtl_Aegis_Interface_1) == 0x000030, "Member 'BP_BtlAlloutController_C_SetupMembersForAllout::K2Node_DynamicCast_AsBtl_Aegis_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_SetupMembersForAllout, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_BtlAlloutController_C_SetupMembersForAllout::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_SetupMembersForAllout, CallFunc_IsOrgia_ReturnValue) == 0x000041, "Member 'BP_BtlAlloutController_C_SetupMembersForAllout::CallFunc_IsOrgia_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_SetupMembersForAllout, CallFunc_IsOrgia_ReturnValue_1) == 0x000042, "Member 'BP_BtlAlloutController_C_SetupMembersForAllout::CallFunc_IsOrgia_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_SetupMembersForAllout, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_BtlAlloutController_C_SetupMembersForAllout::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_SetupMembersForAllout, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_BtlAlloutController_C_SetupMembersForAllout::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BtlAlloutController.BP_BtlAlloutController_C.DestroySequence
// 0x0004 (0x0004 - 0x0000)
struct BP_BtlAlloutController_C_DestroySequence final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlAlloutController_C_DestroySequence) == 0x000001, "Wrong alignment on BP_BtlAlloutController_C_DestroySequence");
static_assert(sizeof(BP_BtlAlloutController_C_DestroySequence) == 0x000004, "Wrong size on BP_BtlAlloutController_C_DestroySequence");
static_assert(offsetof(BP_BtlAlloutController_C_DestroySequence, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_BtlAlloutController_C_DestroySequence::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_DestroySequence, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_BtlAlloutController_C_DestroySequence::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_DestroySequence, CallFunc_IsValid_ReturnValue_2) == 0x000002, "Member 'BP_BtlAlloutController_C_DestroySequence::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlAlloutController_C_DestroySequence, CallFunc_IsValid_ReturnValue_3) == 0x000003, "Member 'BP_BtlAlloutController_C_DestroySequence::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

}

