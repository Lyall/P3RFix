#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtlUICameraComponent

#include "Basic.hpp"

#include "Xrd777_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_BtlUICameraComponent.BP_BtlUICameraComponent_C.ExecuteUbergraph_BP_BtlUICameraComponent
// 0x00A0 (0x00A0 - 0x0000)
struct BP_BtlUICameraComponent_C_ExecuteUbergraph_BP_BtlUICameraComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0xB];                                        // 0x0005(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetInitialTransform_trans;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlUICameraRoot_C*                  CallFunc_FinishSpawningActor_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetInitialTransform_trans_1;              // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlUICameraRoot_C*                  CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlUICameraComponent_C_ExecuteUbergraph_BP_BtlUICameraComponent) == 0x000010, "Wrong alignment on BP_BtlUICameraComponent_C_ExecuteUbergraph_BP_BtlUICameraComponent");
static_assert(sizeof(BP_BtlUICameraComponent_C_ExecuteUbergraph_BP_BtlUICameraComponent) == 0x0000A0, "Wrong size on BP_BtlUICameraComponent_C_ExecuteUbergraph_BP_BtlUICameraComponent");
static_assert(offsetof(BP_BtlUICameraComponent_C_ExecuteUbergraph_BP_BtlUICameraComponent, EntryPoint) == 0x000000, "Member 'BP_BtlUICameraComponent_C_ExecuteUbergraph_BP_BtlUICameraComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_ExecuteUbergraph_BP_BtlUICameraComponent, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_BtlUICameraComponent_C_ExecuteUbergraph_BP_BtlUICameraComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_ExecuteUbergraph_BP_BtlUICameraComponent, CallFunc_GetInitialTransform_trans) == 0x000010, "Member 'BP_BtlUICameraComponent_C_ExecuteUbergraph_BP_BtlUICameraComponent::CallFunc_GetInitialTransform_trans' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_ExecuteUbergraph_BP_BtlUICameraComponent, K2Node_Event_EndPlayReason) == 0x000040, "Member 'BP_BtlUICameraComponent_C_ExecuteUbergraph_BP_BtlUICameraComponent::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_ExecuteUbergraph_BP_BtlUICameraComponent, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000048, "Member 'BP_BtlUICameraComponent_C_ExecuteUbergraph_BP_BtlUICameraComponent::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_ExecuteUbergraph_BP_BtlUICameraComponent, CallFunc_FinishSpawningActor_ReturnValue) == 0x000050, "Member 'BP_BtlUICameraComponent_C_ExecuteUbergraph_BP_BtlUICameraComponent::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_ExecuteUbergraph_BP_BtlUICameraComponent, CallFunc_IsValid_ReturnValue_1) == 0x000058, "Member 'BP_BtlUICameraComponent_C_ExecuteUbergraph_BP_BtlUICameraComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_ExecuteUbergraph_BP_BtlUICameraComponent, CallFunc_GetInitialTransform_trans_1) == 0x000060, "Member 'BP_BtlUICameraComponent_C_ExecuteUbergraph_BP_BtlUICameraComponent::CallFunc_GetInitialTransform_trans_1' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_ExecuteUbergraph_BP_BtlUICameraComponent, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000090, "Member 'BP_BtlUICameraComponent_C_ExecuteUbergraph_BP_BtlUICameraComponent::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_ExecuteUbergraph_BP_BtlUICameraComponent, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000098, "Member 'BP_BtlUICameraComponent_C_ExecuteUbergraph_BP_BtlUICameraComponent::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");

// Function BP_BtlUICameraComponent.BP_BtlUICameraComponent_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_BtlUICameraComponent_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlUICameraComponent_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_BtlUICameraComponent_C_ReceiveEndPlay");
static_assert(sizeof(BP_BtlUICameraComponent_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_BtlUICameraComponent_C_ReceiveEndPlay");
static_assert(offsetof(BP_BtlUICameraComponent_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_BtlUICameraComponent_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_BtlUICameraComponent.BP_BtlUICameraComponent_C.UILook At Target
// 0x0180 (0x0180 - 0x0000)
struct BP_BtlUICameraComponent_C_UILook_At_Target final
{
public:
	class UBtlTargetsManagerComponent*            BtlTargetsManager_0;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBtlGuiState                                  State;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BossBattle;                                        // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RotateExParam;                                     // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChangeCommandCamera;                               // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LocalBossBattle;                                   // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              MainCharacter;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBtlGuiState                                  StateTemp;                                         // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CallFunc_GetTargets_ReturnValue;                   // 0x0030(0x0010)(ReferenceParm)
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDeltaTime_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x006F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x00B4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13E[0x2];                                      // 0x013E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_GetMainCharacter_ReturnValue;             // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CallFunc_GetTargets_ReturnValue_1;                 // 0x0158(0x0010)(ReferenceParm)
	class ABtlActor*                              CallFunc_Array_Get_Item_1;                         // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnemy_ReturnValue;                      // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0176(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_177[0x1];                                      // 0x0177(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlUICameraComponent_C_UILook_At_Target) == 0x000010, "Wrong alignment on BP_BtlUICameraComponent_C_UILook_At_Target");
static_assert(sizeof(BP_BtlUICameraComponent_C_UILook_At_Target) == 0x000180, "Wrong size on BP_BtlUICameraComponent_C_UILook_At_Target");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, BtlTargetsManager_0) == 0x000000, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::BtlTargetsManager_0' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, State) == 0x000008, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::State' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, BossBattle) == 0x000009, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::BossBattle' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, RotateExParam) == 0x00000C, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::RotateExParam' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, ChangeCommandCamera) == 0x000018, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::ChangeCommandCamera' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, LocalBossBattle) == 0x000019, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::LocalBossBattle' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, MainCharacter) == 0x000020, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::MainCharacter' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, StateTemp) == 0x000028, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::StateTemp' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, CallFunc_GetTargets_ReturnValue) == 0x000030, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::CallFunc_GetTargets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, K2Node_DynamicCast_AsBP_Btl_Character_Base) == 0x000040, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::K2Node_DynamicCast_AsBP_Btl_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000058, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, CallFunc_BooleanAND_ReturnValue) == 0x000059, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, Temp_int_Array_Index_Variable) == 0x00005C, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, CallFunc_GetDeltaTime_ReturnValue) == 0x000060, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::CallFunc_GetDeltaTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000064, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, CallFunc_IsValid_ReturnValue) == 0x000065, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000066, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000067, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000068, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, CallFunc_BooleanOR_ReturnValue) == 0x000069, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, CallFunc_BooleanOR_ReturnValue_1) == 0x00006A, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, CallFunc_BooleanOR_ReturnValue_2) == 0x00006B, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, CallFunc_Not_PreBool_ReturnValue) == 0x00006C, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x00006D, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, CallFunc_Not_PreBool_ReturnValue_1) == 0x00006E, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, Temp_bool_True_if_break_was_hit_Variable) == 0x00006F, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, CallFunc_Not_PreBool_ReturnValue_2) == 0x000070, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000078, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000080, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x0000B0, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x0000B4, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x00013C, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, CallFunc_BooleanOR_ReturnValue_3) == 0x00013D, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, CallFunc_GetMainCharacter_ReturnValue) == 0x000140, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::CallFunc_GetMainCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, CallFunc_Not_PreBool_ReturnValue_3) == 0x000148, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, Temp_int_Loop_Counter_Variable) == 0x00014C, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, CallFunc_Add_IntInt_ReturnValue) == 0x000150, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, CallFunc_GetTargets_ReturnValue_1) == 0x000158, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::CallFunc_GetTargets_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, CallFunc_Array_Get_Item_1) == 0x000168, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, CallFunc_Array_Length_ReturnValue) == 0x000170, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, CallFunc_IsEnemy_ReturnValue) == 0x000174, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::CallFunc_IsEnemy_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, CallFunc_Less_IntInt_ReturnValue) == 0x000175, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, CallFunc_BooleanAND_ReturnValue_1) == 0x000176, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, CallFunc_Array_Length_ReturnValue_1) == 0x000178, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UILook_At_Target, CallFunc_Greater_IntInt_ReturnValue) == 0x00017C, "Member 'BP_BtlUICameraComponent_C_UILook_At_Target::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BtlUICameraComponent.BP_BtlUICameraComponent_C.UpdateCraneParam
// 0x0088 (0x0088 - 0x0000)
struct BP_BtlUICameraComponent_C_UpdateCraneParam final
{
public:
	float                                         Lerp;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              Action;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlUICameraRoot_C*                  CameraRoot;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBtlGuiState                                  State;                                             // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BossBattle;                                        // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DeltaTime;                                         // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlUICameraRoot_C*                  Root;                                              // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABtlActor*                              Actor;                                             // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LerpParam;                                         // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47[0x1];                                       // 0x0047(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlUICameraComponent_C_UpdateCraneParam) == 0x000008, "Wrong alignment on BP_BtlUICameraComponent_C_UpdateCraneParam");
static_assert(sizeof(BP_BtlUICameraComponent_C_UpdateCraneParam) == 0x000088, "Wrong size on BP_BtlUICameraComponent_C_UpdateCraneParam");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateCraneParam, Lerp) == 0x000000, "Member 'BP_BtlUICameraComponent_C_UpdateCraneParam::Lerp' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateCraneParam, Action) == 0x000008, "Member 'BP_BtlUICameraComponent_C_UpdateCraneParam::Action' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateCraneParam, CameraRoot) == 0x000010, "Member 'BP_BtlUICameraComponent_C_UpdateCraneParam::CameraRoot' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateCraneParam, State) == 0x000018, "Member 'BP_BtlUICameraComponent_C_UpdateCraneParam::State' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateCraneParam, BossBattle) == 0x000019, "Member 'BP_BtlUICameraComponent_C_UpdateCraneParam::BossBattle' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateCraneParam, DeltaTime) == 0x00001C, "Member 'BP_BtlUICameraComponent_C_UpdateCraneParam::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateCraneParam, Root) == 0x000020, "Member 'BP_BtlUICameraComponent_C_UpdateCraneParam::Root' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateCraneParam, Actor) == 0x000028, "Member 'BP_BtlUICameraComponent_C_UpdateCraneParam::Actor' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateCraneParam, LerpParam) == 0x000030, "Member 'BP_BtlUICameraComponent_C_UpdateCraneParam::LerpParam' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateCraneParam, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000034, "Member 'BP_BtlUICameraComponent_C_UpdateCraneParam::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateCraneParam, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_BtlUICameraComponent_C_UpdateCraneParam::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateCraneParam, CallFunc_FClamp_ReturnValue) == 0x00003C, "Member 'BP_BtlUICameraComponent_C_UpdateCraneParam::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateCraneParam, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000040, "Member 'BP_BtlUICameraComponent_C_UpdateCraneParam::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateCraneParam, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000041, "Member 'BP_BtlUICameraComponent_C_UpdateCraneParam::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateCraneParam, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000042, "Member 'BP_BtlUICameraComponent_C_UpdateCraneParam::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateCraneParam, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000043, "Member 'BP_BtlUICameraComponent_C_UpdateCraneParam::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateCraneParam, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000044, "Member 'BP_BtlUICameraComponent_C_UpdateCraneParam::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateCraneParam, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000045, "Member 'BP_BtlUICameraComponent_C_UpdateCraneParam::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateCraneParam, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000046, "Member 'BP_BtlUICameraComponent_C_UpdateCraneParam::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateCraneParam, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000048, "Member 'BP_BtlUICameraComponent_C_UpdateCraneParam::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateCraneParam, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00004C, "Member 'BP_BtlUICameraComponent_C_UpdateCraneParam::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateCraneParam, CallFunc_GetFloatValue_ReturnValue) == 0x000050, "Member 'BP_BtlUICameraComponent_C_UpdateCraneParam::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateCraneParam, CallFunc_Add_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_BtlUICameraComponent_C_UpdateCraneParam::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateCraneParam, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000058, "Member 'BP_BtlUICameraComponent_C_UpdateCraneParam::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateCraneParam, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00005C, "Member 'BP_BtlUICameraComponent_C_UpdateCraneParam::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateCraneParam, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000060, "Member 'BP_BtlUICameraComponent_C_UpdateCraneParam::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateCraneParam, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000064, "Member 'BP_BtlUICameraComponent_C_UpdateCraneParam::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateCraneParam, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x000068, "Member 'BP_BtlUICameraComponent_C_UpdateCraneParam::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateCraneParam, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00006C, "Member 'BP_BtlUICameraComponent_C_UpdateCraneParam::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateCraneParam, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000070, "Member 'BP_BtlUICameraComponent_C_UpdateCraneParam::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateCraneParam, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000074, "Member 'BP_BtlUICameraComponent_C_UpdateCraneParam::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateCraneParam, CallFunc_GetFloatValue_ReturnValue_1) == 0x000078, "Member 'BP_BtlUICameraComponent_C_UpdateCraneParam::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateCraneParam, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00007C, "Member 'BP_BtlUICameraComponent_C_UpdateCraneParam::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateCraneParam, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000080, "Member 'BP_BtlUICameraComponent_C_UpdateCraneParam::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateCraneParam, CallFunc_FMax_ReturnValue) == 0x000084, "Member 'BP_BtlUICameraComponent_C_UpdateCraneParam::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function BP_BtlUICameraComponent.BP_BtlUICameraComponent_C.MakeEnemyListCenterPos
// 0x00A8 (0x00A8 - 0x0000)
struct BP_BtlUICameraComponent_C_MakeEnemyListCenterPos final
{
public:
	struct FVector                                EnemyListCenterPos;                                // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VectorWork;                                        // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CallFunc_GetEnemyList_ReturnValue;                 // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Divide_VectorInt_ReturnValue;             // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCylinderCommon_CenterBottom;           // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCylinderCommon_Radius;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCylinderCommon_Height;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCylinderCommon_CenterCylinder;         // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCylinderCommon_LocalCylinderLocation;  // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlUICameraComponent_C_MakeEnemyListCenterPos) == 0x000008, "Wrong alignment on BP_BtlUICameraComponent_C_MakeEnemyListCenterPos");
static_assert(sizeof(BP_BtlUICameraComponent_C_MakeEnemyListCenterPos) == 0x0000A8, "Wrong size on BP_BtlUICameraComponent_C_MakeEnemyListCenterPos");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeEnemyListCenterPos, EnemyListCenterPos) == 0x000000, "Member 'BP_BtlUICameraComponent_C_MakeEnemyListCenterPos::EnemyListCenterPos' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeEnemyListCenterPos, VectorWork) == 0x00000C, "Member 'BP_BtlUICameraComponent_C_MakeEnemyListCenterPos::VectorWork' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeEnemyListCenterPos, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_BtlUICameraComponent_C_MakeEnemyListCenterPos::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeEnemyListCenterPos, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_BtlUICameraComponent_C_MakeEnemyListCenterPos::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeEnemyListCenterPos, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_BtlUICameraComponent_C_MakeEnemyListCenterPos::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeEnemyListCenterPos, CallFunc_GetEnemyList_ReturnValue) == 0x000028, "Member 'BP_BtlUICameraComponent_C_MakeEnemyListCenterPos::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeEnemyListCenterPos, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_BtlUICameraComponent_C_MakeEnemyListCenterPos::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeEnemyListCenterPos, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_BtlUICameraComponent_C_MakeEnemyListCenterPos::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeEnemyListCenterPos, CallFunc_Max_ReturnValue) == 0x000048, "Member 'BP_BtlUICameraComponent_C_MakeEnemyListCenterPos::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeEnemyListCenterPos, K2Node_DynamicCast_AsBP_Btl_Character_Base) == 0x000050, "Member 'BP_BtlUICameraComponent_C_MakeEnemyListCenterPos::K2Node_DynamicCast_AsBP_Btl_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeEnemyListCenterPos, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_BtlUICameraComponent_C_MakeEnemyListCenterPos::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeEnemyListCenterPos, CallFunc_Divide_VectorInt_ReturnValue) == 0x00005C, "Member 'BP_BtlUICameraComponent_C_MakeEnemyListCenterPos::CallFunc_Divide_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeEnemyListCenterPos, CallFunc_GetCylinderCommon_CenterBottom) == 0x000068, "Member 'BP_BtlUICameraComponent_C_MakeEnemyListCenterPos::CallFunc_GetCylinderCommon_CenterBottom' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeEnemyListCenterPos, CallFunc_GetCylinderCommon_Radius) == 0x000074, "Member 'BP_BtlUICameraComponent_C_MakeEnemyListCenterPos::CallFunc_GetCylinderCommon_Radius' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeEnemyListCenterPos, CallFunc_GetCylinderCommon_Height) == 0x000078, "Member 'BP_BtlUICameraComponent_C_MakeEnemyListCenterPos::CallFunc_GetCylinderCommon_Height' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeEnemyListCenterPos, CallFunc_GetCylinderCommon_CenterCylinder) == 0x00007C, "Member 'BP_BtlUICameraComponent_C_MakeEnemyListCenterPos::CallFunc_GetCylinderCommon_CenterCylinder' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeEnemyListCenterPos, CallFunc_GetCylinderCommon_LocalCylinderLocation) == 0x000088, "Member 'BP_BtlUICameraComponent_C_MakeEnemyListCenterPos::CallFunc_GetCylinderCommon_LocalCylinderLocation' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeEnemyListCenterPos, CallFunc_Add_VectorVector_ReturnValue) == 0x000094, "Member 'BP_BtlUICameraComponent_C_MakeEnemyListCenterPos::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeEnemyListCenterPos, CallFunc_Array_Length_ReturnValue_1) == 0x0000A0, "Member 'BP_BtlUICameraComponent_C_MakeEnemyListCenterPos::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeEnemyListCenterPos, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_BtlUICameraComponent_C_MakeEnemyListCenterPos::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BtlUICameraComponent.BP_BtlUICameraComponent_C.MakeTargetListCenterPos
// 0x00B8 (0x00B8 - 0x0000)
struct BP_BtlUICameraComponent_C_MakeTargetListCenterPos final
{
public:
	struct FVector                                TargetListCenterPos;                               // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VectorWork;                                        // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeEnemyListCenterPos_EnemyListCenterPos; // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CallFunc_GetTargets_ReturnValue;                   // 0x0038(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Divide_VectorInt_ReturnValue;             // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCylinderCommon_CenterBottom;           // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCylinderCommon_Radius;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCylinderCommon_Height;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCylinderCommon_CenterCylinder;         // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCylinderCommon_LocalCylinderLocation;  // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlUICameraComponent_C_MakeTargetListCenterPos) == 0x000008, "Wrong alignment on BP_BtlUICameraComponent_C_MakeTargetListCenterPos");
static_assert(sizeof(BP_BtlUICameraComponent_C_MakeTargetListCenterPos) == 0x0000B8, "Wrong size on BP_BtlUICameraComponent_C_MakeTargetListCenterPos");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeTargetListCenterPos, TargetListCenterPos) == 0x000000, "Member 'BP_BtlUICameraComponent_C_MakeTargetListCenterPos::TargetListCenterPos' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeTargetListCenterPos, VectorWork) == 0x00000C, "Member 'BP_BtlUICameraComponent_C_MakeTargetListCenterPos::VectorWork' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeTargetListCenterPos, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_BtlUICameraComponent_C_MakeTargetListCenterPos::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeTargetListCenterPos, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_BtlUICameraComponent_C_MakeTargetListCenterPos::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeTargetListCenterPos, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_BtlUICameraComponent_C_MakeTargetListCenterPos::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeTargetListCenterPos, CallFunc_MakeEnemyListCenterPos_EnemyListCenterPos) == 0x000024, "Member 'BP_BtlUICameraComponent_C_MakeTargetListCenterPos::CallFunc_MakeEnemyListCenterPos_EnemyListCenterPos' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeTargetListCenterPos, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_BtlUICameraComponent_C_MakeTargetListCenterPos::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeTargetListCenterPos, CallFunc_GetTargets_ReturnValue) == 0x000038, "Member 'BP_BtlUICameraComponent_C_MakeTargetListCenterPos::CallFunc_GetTargets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeTargetListCenterPos, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_BtlUICameraComponent_C_MakeTargetListCenterPos::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeTargetListCenterPos, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_BtlUICameraComponent_C_MakeTargetListCenterPos::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeTargetListCenterPos, CallFunc_Max_ReturnValue) == 0x000058, "Member 'BP_BtlUICameraComponent_C_MakeTargetListCenterPos::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeTargetListCenterPos, K2Node_DynamicCast_AsBP_Btl_Character_Base) == 0x000060, "Member 'BP_BtlUICameraComponent_C_MakeTargetListCenterPos::K2Node_DynamicCast_AsBP_Btl_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeTargetListCenterPos, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_BtlUICameraComponent_C_MakeTargetListCenterPos::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeTargetListCenterPos, CallFunc_Divide_VectorInt_ReturnValue) == 0x00006C, "Member 'BP_BtlUICameraComponent_C_MakeTargetListCenterPos::CallFunc_Divide_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeTargetListCenterPos, CallFunc_GetCylinderCommon_CenterBottom) == 0x000078, "Member 'BP_BtlUICameraComponent_C_MakeTargetListCenterPos::CallFunc_GetCylinderCommon_CenterBottom' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeTargetListCenterPos, CallFunc_GetCylinderCommon_Radius) == 0x000084, "Member 'BP_BtlUICameraComponent_C_MakeTargetListCenterPos::CallFunc_GetCylinderCommon_Radius' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeTargetListCenterPos, CallFunc_GetCylinderCommon_Height) == 0x000088, "Member 'BP_BtlUICameraComponent_C_MakeTargetListCenterPos::CallFunc_GetCylinderCommon_Height' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeTargetListCenterPos, CallFunc_GetCylinderCommon_CenterCylinder) == 0x00008C, "Member 'BP_BtlUICameraComponent_C_MakeTargetListCenterPos::CallFunc_GetCylinderCommon_CenterCylinder' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeTargetListCenterPos, CallFunc_GetCylinderCommon_LocalCylinderLocation) == 0x000098, "Member 'BP_BtlUICameraComponent_C_MakeTargetListCenterPos::CallFunc_GetCylinderCommon_LocalCylinderLocation' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeTargetListCenterPos, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A4, "Member 'BP_BtlUICameraComponent_C_MakeTargetListCenterPos::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeTargetListCenterPos, CallFunc_Array_Length_ReturnValue_1) == 0x0000B0, "Member 'BP_BtlUICameraComponent_C_MakeTargetListCenterPos::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_MakeTargetListCenterPos, CallFunc_Less_IntInt_ReturnValue) == 0x0000B4, "Member 'BP_BtlUICameraComponent_C_MakeTargetListCenterPos::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BtlUICameraComponent.BP_BtlUICameraComponent_C.Setup Look At Rot
// 0x00E0 (0x00E0 - 0x0000)
struct BP_BtlUICameraComponent_C_Setup_Look_At_Rot final
{
public:
	class ABtlActor*                              MainCharacter;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlTargetsManagerComponent*            TargetManager;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BossBattle;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0050(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BtlUICameraComponent_C_Setup_Look_At_Rot) == 0x000010, "Wrong alignment on BP_BtlUICameraComponent_C_Setup_Look_At_Rot");
static_assert(sizeof(BP_BtlUICameraComponent_C_Setup_Look_At_Rot) == 0x0000E0, "Wrong size on BP_BtlUICameraComponent_C_Setup_Look_At_Rot");
static_assert(offsetof(BP_BtlUICameraComponent_C_Setup_Look_At_Rot, MainCharacter) == 0x000000, "Member 'BP_BtlUICameraComponent_C_Setup_Look_At_Rot::MainCharacter' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_Setup_Look_At_Rot, TargetManager) == 0x000008, "Member 'BP_BtlUICameraComponent_C_Setup_Look_At_Rot::TargetManager' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_Setup_Look_At_Rot, BossBattle) == 0x000010, "Member 'BP_BtlUICameraComponent_C_Setup_Look_At_Rot::BossBattle' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_Setup_Look_At_Rot, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_BtlUICameraComponent_C_Setup_Look_At_Rot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_Setup_Look_At_Rot, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000018, "Member 'BP_BtlUICameraComponent_C_Setup_Look_At_Rot::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_Setup_Look_At_Rot, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000020, "Member 'BP_BtlUICameraComponent_C_Setup_Look_At_Rot::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_Setup_Look_At_Rot, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000050, "Member 'BP_BtlUICameraComponent_C_Setup_Look_At_Rot::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");

// Function BP_BtlUICameraComponent.BP_BtlUICameraComponent_C.UpdateActorTransform
// 0x01F0 (0x01F0 - 0x0000)
struct BP_BtlUICameraComponent_C_UpdateActorTransform final
{
public:
	float                                         Lerp;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              Action;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlUICameraRoot_C*                  CameraRoot;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RotateExParam;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempYaw;                                           // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempPitch;                                         // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LerpTemp;                                          // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlUICameraRoot_C*                  Root;                                              // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RotateWork;                                        // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0060(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x00FC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeTargetListCenterPos_TargetListCenterPos; // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeEnemyListCenterPos_EnemyListCenterPos; // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_1;            // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetCranePitch_pitch;                      // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlUICameraComponent_C_UpdateActorTransform) == 0x000010, "Wrong alignment on BP_BtlUICameraComponent_C_UpdateActorTransform");
static_assert(sizeof(BP_BtlUICameraComponent_C_UpdateActorTransform) == 0x0001F0, "Wrong size on BP_BtlUICameraComponent_C_UpdateActorTransform");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, Lerp) == 0x000000, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::Lerp' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, Action) == 0x000008, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::Action' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, CameraRoot) == 0x000010, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::CameraRoot' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, RotateExParam) == 0x000018, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::RotateExParam' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, TempYaw) == 0x000024, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::TempYaw' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, TempPitch) == 0x000028, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::TempPitch' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, LerpTemp) == 0x00002C, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::LerpTemp' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, Root) == 0x000030, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::Root' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, RotateWork) == 0x000038, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::RotateWork' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, CallFunc_BreakVector_X) == 0x000040, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, CallFunc_BreakVector_Y) == 0x000044, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, CallFunc_BreakVector_Z) == 0x000048, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00004C, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, CallFunc_GetActorForwardVector_ReturnValue) == 0x000050, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, CallFunc_GetTransform_ReturnValue) == 0x000060, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000090, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, CallFunc_BreakTransform_Location) == 0x00009C, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, CallFunc_BreakTransform_Rotation) == 0x0000A8, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, CallFunc_BreakTransform_Scale) == 0x0000B4, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, CallFunc_BreakVector_X_1) == 0x0000C0, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, CallFunc_BreakVector_Y_1) == 0x0000C4, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, CallFunc_BreakVector_Z_1) == 0x0000C8, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, CallFunc_Add_VectorVector_ReturnValue) == 0x0000CC, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, CallFunc_MakeVector_ReturnValue) == 0x0000D8, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, CallFunc_RotateAngleAxis_ReturnValue) == 0x0000E4, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000F0, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0000FC, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000184, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, CallFunc_MakeTargetListCenterPos_TargetListCenterPos) == 0x000188, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::CallFunc_MakeTargetListCenterPos_TargetListCenterPos' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, CallFunc_MakeEnemyListCenterPos_EnemyListCenterPos) == 0x000194, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::CallFunc_MakeEnemyListCenterPos_EnemyListCenterPos' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, CallFunc_VLerp_ReturnValue) == 0x0001A0, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0001AC, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, CallFunc_RotateAngleAxis_ReturnValue_1) == 0x0001B8, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::CallFunc_RotateAngleAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x0001C4, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, CallFunc_FindLookAtRotation_ReturnValue) == 0x0001D0, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, CallFunc_GetCranePitch_pitch) == 0x0001DC, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::CallFunc_GetCranePitch_pitch' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, CallFunc_BreakRotator_Roll) == 0x0001E0, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, CallFunc_BreakRotator_Pitch) == 0x0001E4, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_UpdateActorTransform, CallFunc_BreakRotator_Yaw) == 0x0001E8, "Member 'BP_BtlUICameraComponent_C_UpdateActorTransform::CallFunc_BreakRotator_Yaw' has a wrong offset!");

// Function BP_BtlUICameraComponent.BP_BtlUICameraComponent_C.GetCommandCameraTransform
// 0x0080 (0x0080 - 0x0000)
struct BP_BtlUICameraComponent_C_GetCommandCameraTransform final
{
public:
	class ABtlActor*                              Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlTargetsManagerComponent*            TargetManager;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Transform;                                         // 0x0010(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlUICameraComponent_C_GetCommandCameraTransform) == 0x000010, "Wrong alignment on BP_BtlUICameraComponent_C_GetCommandCameraTransform");
static_assert(sizeof(BP_BtlUICameraComponent_C_GetCommandCameraTransform) == 0x000080, "Wrong size on BP_BtlUICameraComponent_C_GetCommandCameraTransform");
static_assert(offsetof(BP_BtlUICameraComponent_C_GetCommandCameraTransform, Action) == 0x000000, "Member 'BP_BtlUICameraComponent_C_GetCommandCameraTransform::Action' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_GetCommandCameraTransform, TargetManager) == 0x000008, "Member 'BP_BtlUICameraComponent_C_GetCommandCameraTransform::TargetManager' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_GetCommandCameraTransform, Transform) == 0x000010, "Member 'BP_BtlUICameraComponent_C_GetCommandCameraTransform::Transform' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_GetCommandCameraTransform, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000040, "Member 'BP_BtlUICameraComponent_C_GetCommandCameraTransform::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_GetCommandCameraTransform, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000050, "Member 'BP_BtlUICameraComponent_C_GetCommandCameraTransform::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");

// Function BP_BtlUICameraComponent.BP_BtlUICameraComponent_C.SetEncountID
// 0x0060 (0x0060 - 0x0000)
struct BP_BtlUICameraComponent_C_SetEncountID final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlMainConductor_C*                 K2Node_DynamicCast_AsBP_Btl_Main_Conductor;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BtlCoreComponent_C*                 CallFunc_GetBtlCore_BtlCore;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlEncountParam                       CallFunc_GetEncountParamForBP_ReturnValue;         // 0x0020(0x0024)(NoDestructor)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlUICameraComponent_C_SetEncountID) == 0x000008, "Wrong alignment on BP_BtlUICameraComponent_C_SetEncountID");
static_assert(sizeof(BP_BtlUICameraComponent_C_SetEncountID) == 0x000060, "Wrong size on BP_BtlUICameraComponent_C_SetEncountID");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetEncountID, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_BtlUICameraComponent_C_SetEncountID::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetEncountID, K2Node_DynamicCast_AsBP_Btl_Main_Conductor) == 0x000008, "Member 'BP_BtlUICameraComponent_C_SetEncountID::K2Node_DynamicCast_AsBP_Btl_Main_Conductor' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetEncountID, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_BtlUICameraComponent_C_SetEncountID::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetEncountID, CallFunc_GetBtlCore_BtlCore) == 0x000018, "Member 'BP_BtlUICameraComponent_C_SetEncountID::CallFunc_GetBtlCore_BtlCore' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetEncountID, CallFunc_GetEncountParamForBP_ReturnValue) == 0x000020, "Member 'BP_BtlUICameraComponent_C_SetEncountID::CallFunc_GetEncountParamForBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetEncountID, CallFunc_Conv_IntToString_ReturnValue) == 0x000048, "Member 'BP_BtlUICameraComponent_C_SetEncountID::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetEncountID, CallFunc_Conv_StringToName_ReturnValue) == 0x000058, "Member 'BP_BtlUICameraComponent_C_SetEncountID::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

// Function BP_BtlUICameraComponent.BP_BtlUICameraComponent_C.GetCranePitch
// 0x0068 (0x0068 - 0x0000)
struct BP_BtlUICameraComponent_C_GetCranePitch final
{
public:
	struct FVector                                Vector1;                                           // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Vector2;                                           // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pitch;                                             // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAsin_ReturnValue;                      // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlUICameraComponent_C_GetCranePitch) == 0x000004, "Wrong alignment on BP_BtlUICameraComponent_C_GetCranePitch");
static_assert(sizeof(BP_BtlUICameraComponent_C_GetCranePitch) == 0x000068, "Wrong size on BP_BtlUICameraComponent_C_GetCranePitch");
static_assert(offsetof(BP_BtlUICameraComponent_C_GetCranePitch, Vector1) == 0x000000, "Member 'BP_BtlUICameraComponent_C_GetCranePitch::Vector1' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_GetCranePitch, Vector2) == 0x00000C, "Member 'BP_BtlUICameraComponent_C_GetCranePitch::Vector2' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_GetCranePitch, Pitch) == 0x000018, "Member 'BP_BtlUICameraComponent_C_GetCranePitch::Pitch' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_GetCranePitch, CallFunc_BreakVector_X) == 0x00001C, "Member 'BP_BtlUICameraComponent_C_GetCranePitch::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_GetCranePitch, CallFunc_BreakVector_Y) == 0x000020, "Member 'BP_BtlUICameraComponent_C_GetCranePitch::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_GetCranePitch, CallFunc_BreakVector_Z) == 0x000024, "Member 'BP_BtlUICameraComponent_C_GetCranePitch::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_GetCranePitch, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000028, "Member 'BP_BtlUICameraComponent_C_GetCranePitch::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_GetCranePitch, CallFunc_BreakVector_X_1) == 0x000034, "Member 'BP_BtlUICameraComponent_C_GetCranePitch::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_GetCranePitch, CallFunc_BreakVector_Y_1) == 0x000038, "Member 'BP_BtlUICameraComponent_C_GetCranePitch::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_GetCranePitch, CallFunc_BreakVector_Z_1) == 0x00003C, "Member 'BP_BtlUICameraComponent_C_GetCranePitch::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_GetCranePitch, CallFunc_VSize_ReturnValue) == 0x000040, "Member 'BP_BtlUICameraComponent_C_GetCranePitch::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_GetCranePitch, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_BtlUICameraComponent_C_GetCranePitch::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_GetCranePitch, CallFunc_FMax_ReturnValue) == 0x000048, "Member 'BP_BtlUICameraComponent_C_GetCranePitch::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_GetCranePitch, CallFunc_Abs_ReturnValue) == 0x00004C, "Member 'BP_BtlUICameraComponent_C_GetCranePitch::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_GetCranePitch, CallFunc_Abs_ReturnValue_1) == 0x000050, "Member 'BP_BtlUICameraComponent_C_GetCranePitch::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_GetCranePitch, CallFunc_SignOfFloat_ReturnValue) == 0x000054, "Member 'BP_BtlUICameraComponent_C_GetCranePitch::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_GetCranePitch, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000058, "Member 'BP_BtlUICameraComponent_C_GetCranePitch::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_GetCranePitch, CallFunc_DegAsin_ReturnValue) == 0x00005C, "Member 'BP_BtlUICameraComponent_C_GetCranePitch::CallFunc_DegAsin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_GetCranePitch, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000060, "Member 'BP_BtlUICameraComponent_C_GetCranePitch::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_GetCranePitch, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000064, "Member 'BP_BtlUICameraComponent_C_GetCranePitch::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_BtlUICameraComponent.BP_BtlUICameraComponent_C.SetPitchYaw
// 0x0088 (0x0088 - 0x0000)
struct BP_BtlUICameraComponent_C_SetPitchYaw final
{
public:
	float                                         Yaw;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pitch;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlUICameraRoot_C*                  Root;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lerp;                                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LerpTemp;                                          // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlUICameraRoot_C*                  RootTemp;                                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PitchTemp;                                         // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         YawTemp;                                           // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SignOfFloat_ReturnValue;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_1;                // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlUICameraComponent_C_SetPitchYaw) == 0x000008, "Wrong alignment on BP_BtlUICameraComponent_C_SetPitchYaw");
static_assert(sizeof(BP_BtlUICameraComponent_C_SetPitchYaw) == 0x000088, "Wrong size on BP_BtlUICameraComponent_C_SetPitchYaw");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetPitchYaw, Yaw) == 0x000000, "Member 'BP_BtlUICameraComponent_C_SetPitchYaw::Yaw' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetPitchYaw, Pitch) == 0x000004, "Member 'BP_BtlUICameraComponent_C_SetPitchYaw::Pitch' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetPitchYaw, Root) == 0x000008, "Member 'BP_BtlUICameraComponent_C_SetPitchYaw::Root' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetPitchYaw, Lerp) == 0x000010, "Member 'BP_BtlUICameraComponent_C_SetPitchYaw::Lerp' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetPitchYaw, LerpTemp) == 0x000014, "Member 'BP_BtlUICameraComponent_C_SetPitchYaw::LerpTemp' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetPitchYaw, RootTemp) == 0x000018, "Member 'BP_BtlUICameraComponent_C_SetPitchYaw::RootTemp' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetPitchYaw, PitchTemp) == 0x000020, "Member 'BP_BtlUICameraComponent_C_SetPitchYaw::PitchTemp' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetPitchYaw, YawTemp) == 0x000024, "Member 'BP_BtlUICameraComponent_C_SetPitchYaw::YawTemp' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetPitchYaw, Temp_bool_Variable) == 0x000028, "Member 'BP_BtlUICameraComponent_C_SetPitchYaw::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetPitchYaw, CallFunc_SignOfFloat_ReturnValue) == 0x00002C, "Member 'BP_BtlUICameraComponent_C_SetPitchYaw::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetPitchYaw, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_BtlUICameraComponent_C_SetPitchYaw::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetPitchYaw, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000034, "Member 'BP_BtlUICameraComponent_C_SetPitchYaw::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetPitchYaw, CallFunc_FMin_ReturnValue) == 0x000038, "Member 'BP_BtlUICameraComponent_C_SetPitchYaw::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetPitchYaw, CallFunc_Add_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_BtlUICameraComponent_C_SetPitchYaw::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetPitchYaw, CallFunc_FMax_ReturnValue) == 0x000040, "Member 'BP_BtlUICameraComponent_C_SetPitchYaw::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetPitchYaw, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_BtlUICameraComponent_C_SetPitchYaw::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetPitchYaw, CallFunc_Abs_ReturnValue) == 0x000048, "Member 'BP_BtlUICameraComponent_C_SetPitchYaw::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetPitchYaw, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00004C, "Member 'BP_BtlUICameraComponent_C_SetPitchYaw::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetPitchYaw, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000050, "Member 'BP_BtlUICameraComponent_C_SetPitchYaw::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetPitchYaw, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000054, "Member 'BP_BtlUICameraComponent_C_SetPitchYaw::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetPitchYaw, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000058, "Member 'BP_BtlUICameraComponent_C_SetPitchYaw::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetPitchYaw, CallFunc_SignOfFloat_ReturnValue_1) == 0x00005C, "Member 'BP_BtlUICameraComponent_C_SetPitchYaw::CallFunc_SignOfFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetPitchYaw, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000060, "Member 'BP_BtlUICameraComponent_C_SetPitchYaw::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetPitchYaw, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000064, "Member 'BP_BtlUICameraComponent_C_SetPitchYaw::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetPitchYaw, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000068, "Member 'BP_BtlUICameraComponent_C_SetPitchYaw::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetPitchYaw, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x00006C, "Member 'BP_BtlUICameraComponent_C_SetPitchYaw::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetPitchYaw, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000070, "Member 'BP_BtlUICameraComponent_C_SetPitchYaw::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetPitchYaw, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000074, "Member 'BP_BtlUICameraComponent_C_SetPitchYaw::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetPitchYaw, CallFunc_Abs_ReturnValue_1) == 0x000078, "Member 'BP_BtlUICameraComponent_C_SetPitchYaw::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetPitchYaw, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00007C, "Member 'BP_BtlUICameraComponent_C_SetPitchYaw::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_SetPitchYaw, K2Node_Select_Default) == 0x000080, "Member 'BP_BtlUICameraComponent_C_SetPitchYaw::K2Node_Select_Default' has a wrong offset!");

// Function BP_BtlUICameraComponent.BP_BtlUICameraComponent_C.PlayUICommandCamera
// 0x0040 (0x0040 - 0x0000)
struct BP_BtlUICameraComponent_C_PlayUICommandCamera final
{
public:
	class ABtlActor*                              Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlUICameraComponent_C_PlayUICommandCamera) == 0x000010, "Wrong alignment on BP_BtlUICameraComponent_C_PlayUICommandCamera");
static_assert(sizeof(BP_BtlUICameraComponent_C_PlayUICommandCamera) == 0x000040, "Wrong size on BP_BtlUICameraComponent_C_PlayUICommandCamera");
static_assert(offsetof(BP_BtlUICameraComponent_C_PlayUICommandCamera, Action) == 0x000000, "Member 'BP_BtlUICameraComponent_C_PlayUICommandCamera::Action' has a wrong offset!");
static_assert(offsetof(BP_BtlUICameraComponent_C_PlayUICommandCamera, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'BP_BtlUICameraComponent_C_PlayUICommandCamera::CallFunc_GetTransform_ReturnValue' has a wrong offset!");

}

