#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtlGuiCore

#include "Basic.hpp"

#include "Xrd777_structs.hpp"


namespace SDK::Params
{

// Function BP_BtlGuiCore.BP_BtlGuiCore_C.ExecuteUbergraph_BP_BtlGuiCore
// 0x0130 (0x0130 - 0x0000)
struct BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_deltaTime;                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInputAnalogKeyState_ReturnValue;       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDebug_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  CallFunc_AttachChild_Object;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AttachChild_Sucsess;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  CallFunc_AttachChild_Object_1;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AttachChild_Sucsess_1;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  CallFunc_AttachChild_Object_2;                     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AttachChild_Sucsess_2;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiIcon_C*                       K2Node_DynamicCast_AsBP_Btl_Gui_Icon;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  CallFunc_AttachChild_Object_3;                     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AttachChild_Sucsess_3;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  CallFunc_AttachChild_Object_4;                     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AttachChild_Sucsess_4;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  CallFunc_AttachChild_Object_5;                     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AttachChild_Sucsess_5;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  CallFunc_AttachChild_Object_6;                     // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AttachChild_Sucsess_6;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  CallFunc_AttachChild_Object_7;                     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AttachChild_Sucsess_7;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  CallFunc_AttachChild_Object_8;                     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AttachChild_Sucsess_8;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  CallFunc_AttachChild_Object_9;                     // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AttachChild_Sucsess_9;                    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  CallFunc_AttachChild_Object_10;                    // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AttachChild_Sucsess_10;                   // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  CallFunc_AttachChild_Object_11;                    // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AttachChild_Sucsess_11;                   // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  CallFunc_AttachChild_Object_12;                    // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AttachChild_Sucsess_12;                   // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  CallFunc_AttachChild_Object_13;                    // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AttachChild_Sucsess_13;                   // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_122[0x2];                                      // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore) == 0x000008, "Wrong alignment on BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore");
static_assert(sizeof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore) == 0x000130, "Wrong size on BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, EntryPoint) == 0x000000, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_IsValid_ReturnValue_1) == 0x000005, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, Temp_bool_Has_Been_Initd_Variable) == 0x000006, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, K2Node_Event_deltaTime) == 0x000008, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::K2Node_Event_deltaTime' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, Temp_bool_IsClosed_Variable) == 0x000018, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_GetInputAnalogKeyState_ReturnValue) == 0x00001C, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_GetInputAnalogKeyState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, K2Node_SwitchInteger_CmpSuccess) == 0x000028, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_Percent_IntInt_ReturnValue) == 0x00002C, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_IsDebug_ReturnValue) == 0x000030, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_IsDebug_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_AttachChild_Object) == 0x000038, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_AttachChild_Object' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_AttachChild_Sucsess) == 0x000040, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_AttachChild_Sucsess' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_Less_IntInt_ReturnValue) == 0x000041, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_AttachChild_Object_1) == 0x000048, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_AttachChild_Object_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_AttachChild_Sucsess_1) == 0x000050, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_AttachChild_Sucsess_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_AttachChild_Object_2) == 0x000058, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_AttachChild_Object_2' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_AttachChild_Sucsess_2) == 0x000060, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_AttachChild_Sucsess_2' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, K2Node_DynamicCast_AsBP_Btl_Gui_Icon) == 0x000068, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::K2Node_DynamicCast_AsBP_Btl_Gui_Icon' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_AttachChild_Object_3) == 0x000078, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_AttachChild_Object_3' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_AttachChild_Sucsess_3) == 0x000080, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_AttachChild_Sucsess_3' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_AttachChild_Object_4) == 0x000088, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_AttachChild_Object_4' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_AttachChild_Sucsess_4) == 0x000090, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_AttachChild_Sucsess_4' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_AttachChild_Object_5) == 0x000098, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_AttachChild_Object_5' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_AttachChild_Sucsess_5) == 0x0000A0, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_AttachChild_Sucsess_5' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_AttachChild_Object_6) == 0x0000A8, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_AttachChild_Object_6' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_AttachChild_Sucsess_6) == 0x0000B0, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_AttachChild_Sucsess_6' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_AttachChild_Object_7) == 0x0000B8, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_AttachChild_Object_7' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_AttachChild_Sucsess_7) == 0x0000C0, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_AttachChild_Sucsess_7' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_AttachChild_Object_8) == 0x0000C8, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_AttachChild_Object_8' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_AttachChild_Sucsess_8) == 0x0000D0, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_AttachChild_Sucsess_8' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_AttachChild_Object_9) == 0x0000D8, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_AttachChild_Object_9' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_AttachChild_Sucsess_9) == 0x0000E0, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_AttachChild_Sucsess_9' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_AttachChild_Object_10) == 0x0000E8, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_AttachChild_Object_10' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_AttachChild_Sucsess_10) == 0x0000F0, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_AttachChild_Sucsess_10' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_AttachChild_Object_11) == 0x0000F8, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_AttachChild_Object_11' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_AttachChild_Sucsess_11) == 0x000100, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_AttachChild_Sucsess_11' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_AttachChild_Object_12) == 0x000108, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_AttachChild_Object_12' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_AttachChild_Sucsess_12) == 0x000110, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_AttachChild_Sucsess_12' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_AttachChild_Object_13) == 0x000118, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_AttachChild_Object_13' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_AttachChild_Sucsess_13) == 0x000120, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_AttachChild_Sucsess_13' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, K2Node_SwitchInteger_CmpSuccess_1) == 0x000121, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_Add_IntInt_ReturnValue_1) == 0x000124, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, CallFunc_Add_IntInt_ReturnValue_2) == 0x000128, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore, K2Node_Event_DeltaSeconds) == 0x00012C, "Member 'BP_BtlGuiCore_C_ExecuteUbergraph_BP_BtlGuiCore::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function BP_BtlGuiCore.BP_BtlGuiCore_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_BtlGuiCore_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlGuiCore_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_BtlGuiCore_C_ReceiveTick");
static_assert(sizeof(BP_BtlGuiCore_C_ReceiveTick) == 0x000004, "Wrong size on BP_BtlGuiCore_C_ReceiveTick");
static_assert(offsetof(BP_BtlGuiCore_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_BtlGuiCore_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_BtlGuiCore.BP_BtlGuiCore_C.GuiActorUpdate
// 0x0004 (0x0004 - 0x0000)
struct BP_BtlGuiCore_C_GuiActorUpdate final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlGuiCore_C_GuiActorUpdate) == 0x000004, "Wrong alignment on BP_BtlGuiCore_C_GuiActorUpdate");
static_assert(sizeof(BP_BtlGuiCore_C_GuiActorUpdate) == 0x000004, "Wrong size on BP_BtlGuiCore_C_GuiActorUpdate");
static_assert(offsetof(BP_BtlGuiCore_C_GuiActorUpdate, DeltaTime) == 0x000000, "Member 'BP_BtlGuiCore_C_GuiActorUpdate::DeltaTime' has a wrong offset!");

// Function BP_BtlGuiCore.BP_BtlGuiCore_C.TopUIBisible
// 0x0070 (0x0070 - 0x0000)
struct BP_BtlGuiCore_C_TopUIBisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlGuiBaseActor_C*                  CallFunc_FindGuiActorByName_GuiActor;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindGuiActorByName_sucsess;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlTopUI_C*                         K2Node_DynamicCast_AsBP_Btl_Top_UI;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBtlGuiDrawComponent*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetGroupDrawItem_idAry;                   // 0x0038(0x0010)(ReferenceParm)
	TArray<class UBtlGuiDrawObjectCore*>          CallFunc_GetGroupDrawItem_objAry;                  // 0x0048(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBtlGuiDrawObjectCore*                  CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InRange_IntInt_ReturnValue;               // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiCore_C_TopUIBisible) == 0x000008, "Wrong alignment on BP_BtlGuiCore_C_TopUIBisible");
static_assert(sizeof(BP_BtlGuiCore_C_TopUIBisible) == 0x000070, "Wrong size on BP_BtlGuiCore_C_TopUIBisible");
static_assert(offsetof(BP_BtlGuiCore_C_TopUIBisible, Visible) == 0x000000, "Member 'BP_BtlGuiCore_C_TopUIBisible::Visible' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_TopUIBisible, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_BtlGuiCore_C_TopUIBisible::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_TopUIBisible, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_BtlGuiCore_C_TopUIBisible::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_TopUIBisible, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_BtlGuiCore_C_TopUIBisible::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_TopUIBisible, CallFunc_FindGuiActorByName_GuiActor) == 0x000010, "Member 'BP_BtlGuiCore_C_TopUIBisible::CallFunc_FindGuiActorByName_GuiActor' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_TopUIBisible, CallFunc_FindGuiActorByName_sucsess) == 0x000018, "Member 'BP_BtlGuiCore_C_TopUIBisible::CallFunc_FindGuiActorByName_sucsess' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_TopUIBisible, K2Node_DynamicCast_AsBP_Btl_Top_UI) == 0x000020, "Member 'BP_BtlGuiCore_C_TopUIBisible::K2Node_DynamicCast_AsBP_Btl_Top_UI' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_TopUIBisible, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_BtlGuiCore_C_TopUIBisible::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_TopUIBisible, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'BP_BtlGuiCore_C_TopUIBisible::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_TopUIBisible, CallFunc_GetGroupDrawItem_idAry) == 0x000038, "Member 'BP_BtlGuiCore_C_TopUIBisible::CallFunc_GetGroupDrawItem_idAry' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_TopUIBisible, CallFunc_GetGroupDrawItem_objAry) == 0x000048, "Member 'BP_BtlGuiCore_C_TopUIBisible::CallFunc_GetGroupDrawItem_objAry' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_TopUIBisible, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_BtlGuiCore_C_TopUIBisible::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_TopUIBisible, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_BtlGuiCore_C_TopUIBisible::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_TopUIBisible, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'BP_BtlGuiCore_C_TopUIBisible::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_TopUIBisible, CallFunc_InRange_IntInt_ReturnValue) == 0x000069, "Member 'BP_BtlGuiCore_C_TopUIBisible::CallFunc_InRange_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BtlGuiCore.BP_BtlGuiCore_C.silhouetteBisible
// 0x0138 (0x0138 - 0x0000)
struct BP_BtlGuiCore_C_SilhouetteBisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlGuiBaseActor_C*                  CallFunc_FindGuiActorByName_GuiActor;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindGuiActorByName_sucsess;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlTargetSelect_C*                  K2Node_DynamicCast_AsBP_Btl_Target_Select;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBtlGuiDrawComponent*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetGroupDrawItem_idAry;                   // 0x0048(0x0010)(ReferenceParm)
	TArray<class UBtlGuiDrawObjectCore*>          CallFunc_GetGroupDrawItem_objAry;                  // 0x0058(0x0010)(ReferenceParm)
	class UBtlGuiDrawObjectCore*                  CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlGuiBaseActor_C*                  CallFunc_FindGuiActorByName_GuiActor_1;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindGuiActorByName_sucsess_1;             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlSkillList_C*                     K2Node_DynamicCast_AsBP_Btl_Skill_List;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBtlGuiDrawComponent*                   CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetGroupDrawItem_idAry_1;                 // 0x00A0(0x0010)(ReferenceParm)
	TArray<class UBtlGuiDrawObjectCore*>          CallFunc_GetGroupDrawItem_objAry_1;                // 0x00B0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBtlGuiDrawObjectCore*                  CallFunc_Array_Get_Item_1;                         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  CallFunc_FindGuiActorByName_GuiActor_2;            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindGuiActorByName_sucsess_2;             // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlTopUI_C*                         K2Node_DynamicCast_AsBP_Btl_Top_UI;                // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBtlGuiDrawComponent*                   CallFunc_GetComponentByClass_ReturnValue_2;        // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetGroupDrawItem_idAry_2;                 // 0x0100(0x0010)(ReferenceParm)
	TArray<class UBtlGuiDrawObjectCore*>          CallFunc_GetGroupDrawItem_objAry_2;                // 0x0110(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBtlGuiDrawObjectCore*                  CallFunc_Array_Get_Item_2;                         // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiCore_C_SilhouetteBisible) == 0x000008, "Wrong alignment on BP_BtlGuiCore_C_SilhouetteBisible");
static_assert(sizeof(BP_BtlGuiCore_C_SilhouetteBisible) == 0x000138, "Wrong size on BP_BtlGuiCore_C_SilhouetteBisible");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, Visible) == 0x000000, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::Visible' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, Temp_int_Array_Index_Variable_1) == 0x000008, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, Temp_int_Array_Index_Variable_2) == 0x000014, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, CallFunc_FindGuiActorByName_GuiActor) == 0x000018, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::CallFunc_FindGuiActorByName_GuiActor' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, CallFunc_FindGuiActorByName_sucsess) == 0x000020, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::CallFunc_FindGuiActorByName_sucsess' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, Temp_int_Loop_Counter_Variable_1) == 0x000024, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, K2Node_DynamicCast_AsBP_Btl_Target_Select) == 0x000028, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::K2Node_DynamicCast_AsBP_Btl_Target_Select' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, CallFunc_GetComponentByClass_ReturnValue) == 0x000038, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, CallFunc_GetGroupDrawItem_idAry) == 0x000048, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::CallFunc_GetGroupDrawItem_idAry' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, CallFunc_GetGroupDrawItem_objAry) == 0x000058, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::CallFunc_GetGroupDrawItem_objAry' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, Temp_int_Loop_Counter_Variable_2) == 0x000074, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, CallFunc_FindGuiActorByName_GuiActor_1) == 0x000078, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::CallFunc_FindGuiActorByName_GuiActor_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, CallFunc_FindGuiActorByName_sucsess_1) == 0x000080, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::CallFunc_FindGuiActorByName_sucsess_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, K2Node_DynamicCast_AsBP_Btl_Skill_List) == 0x000088, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::K2Node_DynamicCast_AsBP_Btl_Skill_List' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, CallFunc_Less_IntInt_ReturnValue) == 0x000091, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000098, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, CallFunc_GetGroupDrawItem_idAry_1) == 0x0000A0, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::CallFunc_GetGroupDrawItem_idAry_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, CallFunc_GetGroupDrawItem_objAry_1) == 0x0000B0, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::CallFunc_GetGroupDrawItem_objAry_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000C0, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, CallFunc_Array_Get_Item_1) == 0x0000C8, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, CallFunc_Array_Length_ReturnValue_1) == 0x0000D0, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000D4, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, CallFunc_FindGuiActorByName_GuiActor_2) == 0x0000D8, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::CallFunc_FindGuiActorByName_GuiActor_2' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, CallFunc_FindGuiActorByName_sucsess_2) == 0x0000E0, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::CallFunc_FindGuiActorByName_sucsess_2' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, K2Node_DynamicCast_AsBP_Btl_Top_UI) == 0x0000E8, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::K2Node_DynamicCast_AsBP_Btl_Top_UI' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, K2Node_DynamicCast_bSuccess_2) == 0x0000F0, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, CallFunc_GetComponentByClass_ReturnValue_2) == 0x0000F8, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::CallFunc_GetComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, CallFunc_GetGroupDrawItem_idAry_2) == 0x000100, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::CallFunc_GetGroupDrawItem_idAry_2' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, CallFunc_GetGroupDrawItem_objAry_2) == 0x000110, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::CallFunc_GetGroupDrawItem_objAry_2' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, CallFunc_Array_Length_ReturnValue_2) == 0x000120, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, CallFunc_Array_Get_Item_2) == 0x000128, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SilhouetteBisible, CallFunc_Less_IntInt_ReturnValue_2) == 0x000130, "Member 'BP_BtlGuiCore_C_SilhouetteBisible::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_BtlGuiCore.BP_BtlGuiCore_C.UpdateDraw
// 0x0004 (0x0004 - 0x0000)
struct BP_BtlGuiCore_C_UpdateDraw final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlGuiCore_C_UpdateDraw) == 0x000004, "Wrong alignment on BP_BtlGuiCore_C_UpdateDraw");
static_assert(sizeof(BP_BtlGuiCore_C_UpdateDraw) == 0x000004, "Wrong size on BP_BtlGuiCore_C_UpdateDraw");
static_assert(offsetof(BP_BtlGuiCore_C_UpdateDraw, DeltaTime) == 0x000000, "Member 'BP_BtlGuiCore_C_UpdateDraw::DeltaTime' has a wrong offset!");

// Function BP_BtlGuiCore.BP_BtlGuiCore_C.UpdateCapture
// 0x0020 (0x0020 - 0x0000)
struct BP_BtlGuiCore_C_UpdateCapture final
{
public:
	class ABP_BtlGuiBaseActor_C*                  CallFunc_FindGuiActorByName_GuiActor;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindGuiActorByName_sucsess;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiCapture_C*                    K2Node_DynamicCast_AsBP_Btl_Gui_Capture;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiCore_C_UpdateCapture) == 0x000008, "Wrong alignment on BP_BtlGuiCore_C_UpdateCapture");
static_assert(sizeof(BP_BtlGuiCore_C_UpdateCapture) == 0x000020, "Wrong size on BP_BtlGuiCore_C_UpdateCapture");
static_assert(offsetof(BP_BtlGuiCore_C_UpdateCapture, CallFunc_FindGuiActorByName_GuiActor) == 0x000000, "Member 'BP_BtlGuiCore_C_UpdateCapture::CallFunc_FindGuiActorByName_GuiActor' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_UpdateCapture, CallFunc_FindGuiActorByName_sucsess) == 0x000008, "Member 'BP_BtlGuiCore_C_UpdateCapture::CallFunc_FindGuiActorByName_sucsess' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_UpdateCapture, K2Node_DynamicCast_AsBP_Btl_Gui_Capture) == 0x000010, "Member 'BP_BtlGuiCore_C_UpdateCapture::K2Node_DynamicCast_AsBP_Btl_Gui_Capture' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_UpdateCapture, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_BtlGuiCore_C_UpdateCapture::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BtlGuiCore.BP_BtlGuiCore_C.ClearKeyHelp
// 0x0001 (0x0001 - 0x0000)
struct BP_BtlGuiCore_C_ClearKeyHelp final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiCore_C_ClearKeyHelp) == 0x000001, "Wrong alignment on BP_BtlGuiCore_C_ClearKeyHelp");
static_assert(sizeof(BP_BtlGuiCore_C_ClearKeyHelp) == 0x000001, "Wrong size on BP_BtlGuiCore_C_ClearKeyHelp");
static_assert(offsetof(BP_BtlGuiCore_C_ClearKeyHelp, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_BtlGuiCore_C_ClearKeyHelp::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlGuiCore.BP_BtlGuiCore_C.PartyPanelVisible
// 0x0002 (0x0002 - 0x0000)
struct BP_BtlGuiCore_C_PartyPanelVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiCore_C_PartyPanelVisible) == 0x000001, "Wrong alignment on BP_BtlGuiCore_C_PartyPanelVisible");
static_assert(sizeof(BP_BtlGuiCore_C_PartyPanelVisible) == 0x000002, "Wrong size on BP_BtlGuiCore_C_PartyPanelVisible");
static_assert(offsetof(BP_BtlGuiCore_C_PartyPanelVisible, Visible) == 0x000000, "Member 'BP_BtlGuiCore_C_PartyPanelVisible::Visible' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_PartyPanelVisible, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_BtlGuiCore_C_PartyPanelVisible::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlGuiCore.BP_BtlGuiCore_C.UIPanelVisible
// 0x0002 (0x0002 - 0x0000)
struct BP_BtlGuiCore_C_UIPanelVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiCore_C_UIPanelVisible) == 0x000001, "Wrong alignment on BP_BtlGuiCore_C_UIPanelVisible");
static_assert(sizeof(BP_BtlGuiCore_C_UIPanelVisible) == 0x000002, "Wrong size on BP_BtlGuiCore_C_UIPanelVisible");
static_assert(offsetof(BP_BtlGuiCore_C_UIPanelVisible, Visible) == 0x000000, "Member 'BP_BtlGuiCore_C_UIPanelVisible::Visible' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_UIPanelVisible, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_BtlGuiCore_C_UIPanelVisible::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlGuiCore.BP_BtlGuiCore_C.SetCaptureEnable
// 0x0028 (0x0028 - 0x0000)
struct BP_BtlGuiCore_C_SetCaptureEnable final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  CallFunc_FindGuiActorByName_GuiActor;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindGuiActorByName_sucsess;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiCapture_C*                    K2Node_DynamicCast_AsBP_Btl_Gui_Capture;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiCore_C_SetCaptureEnable) == 0x000008, "Wrong alignment on BP_BtlGuiCore_C_SetCaptureEnable");
static_assert(sizeof(BP_BtlGuiCore_C_SetCaptureEnable) == 0x000028, "Wrong size on BP_BtlGuiCore_C_SetCaptureEnable");
static_assert(offsetof(BP_BtlGuiCore_C_SetCaptureEnable, Enable) == 0x000000, "Member 'BP_BtlGuiCore_C_SetCaptureEnable::Enable' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SetCaptureEnable, CallFunc_FindGuiActorByName_GuiActor) == 0x000008, "Member 'BP_BtlGuiCore_C_SetCaptureEnable::CallFunc_FindGuiActorByName_GuiActor' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SetCaptureEnable, CallFunc_FindGuiActorByName_sucsess) == 0x000010, "Member 'BP_BtlGuiCore_C_SetCaptureEnable::CallFunc_FindGuiActorByName_sucsess' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SetCaptureEnable, K2Node_DynamicCast_AsBP_Btl_Gui_Capture) == 0x000018, "Member 'BP_BtlGuiCore_C_SetCaptureEnable::K2Node_DynamicCast_AsBP_Btl_Gui_Capture' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SetCaptureEnable, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_BtlGuiCore_C_SetCaptureEnable::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BtlGuiCore.BP_BtlGuiCore_C.SetupPartyPanelActiveActor
// 0x0010 (0x0010 - 0x0000)
struct BP_BtlGuiCore_C_SetupPartyPanelActiveActor final
{
public:
	class ABtlActor*                              ActiveActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiCore_C_SetupPartyPanelActiveActor) == 0x000008, "Wrong alignment on BP_BtlGuiCore_C_SetupPartyPanelActiveActor");
static_assert(sizeof(BP_BtlGuiCore_C_SetupPartyPanelActiveActor) == 0x000010, "Wrong size on BP_BtlGuiCore_C_SetupPartyPanelActiveActor");
static_assert(offsetof(BP_BtlGuiCore_C_SetupPartyPanelActiveActor, ActiveActor) == 0x000000, "Member 'BP_BtlGuiCore_C_SetupPartyPanelActiveActor::ActiveActor' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SetupPartyPanelActiveActor, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_BtlGuiCore_C_SetupPartyPanelActiveActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlGuiCore.BP_BtlGuiCore_C.SetPromiseType
// 0x0028 (0x0028 - 0x0000)
struct BP_BtlGuiCore_C_SetPromiseType final
{
public:
	uint8                                         PromiseTpye;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  CallFunc_FindGuiActorByName_GuiActor;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindGuiActorByName_sucsess;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuard_C*                         K2Node_DynamicCast_AsBP_Btl_Guard;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiCore_C_SetPromiseType) == 0x000008, "Wrong alignment on BP_BtlGuiCore_C_SetPromiseType");
static_assert(sizeof(BP_BtlGuiCore_C_SetPromiseType) == 0x000028, "Wrong size on BP_BtlGuiCore_C_SetPromiseType");
static_assert(offsetof(BP_BtlGuiCore_C_SetPromiseType, PromiseTpye) == 0x000000, "Member 'BP_BtlGuiCore_C_SetPromiseType::PromiseTpye' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SetPromiseType, CallFunc_FindGuiActorByName_GuiActor) == 0x000008, "Member 'BP_BtlGuiCore_C_SetPromiseType::CallFunc_FindGuiActorByName_GuiActor' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SetPromiseType, CallFunc_FindGuiActorByName_sucsess) == 0x000010, "Member 'BP_BtlGuiCore_C_SetPromiseType::CallFunc_FindGuiActorByName_sucsess' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SetPromiseType, K2Node_DynamicCast_AsBP_Btl_Guard) == 0x000018, "Member 'BP_BtlGuiCore_C_SetPromiseType::K2Node_DynamicCast_AsBP_Btl_Guard' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SetPromiseType, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_BtlGuiCore_C_SetPromiseType::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BtlGuiCore.BP_BtlGuiCore_C.CreateTargetList
// 0x0018 (0x0018 - 0x0000)
struct BP_BtlGuiCore_C_CreateTargetList final
{
public:
	TArray<class ABtlActor*>                      ActionList;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          IsHPBar;                                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsSillhouetteOnly;                                 // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsStencilEnemyOnly;                                // 0x0012(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiCore_C_CreateTargetList) == 0x000008, "Wrong alignment on BP_BtlGuiCore_C_CreateTargetList");
static_assert(sizeof(BP_BtlGuiCore_C_CreateTargetList) == 0x000018, "Wrong size on BP_BtlGuiCore_C_CreateTargetList");
static_assert(offsetof(BP_BtlGuiCore_C_CreateTargetList, ActionList) == 0x000000, "Member 'BP_BtlGuiCore_C_CreateTargetList::ActionList' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CreateTargetList, IsHPBar) == 0x000010, "Member 'BP_BtlGuiCore_C_CreateTargetList::IsHPBar' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CreateTargetList, IsSillhouetteOnly) == 0x000011, "Member 'BP_BtlGuiCore_C_CreateTargetList::IsSillhouetteOnly' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CreateTargetList, IsStencilEnemyOnly) == 0x000012, "Member 'BP_BtlGuiCore_C_CreateTargetList::IsStencilEnemyOnly' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CreateTargetList, CallFunc_IsValid_ReturnValue) == 0x000013, "Member 'BP_BtlGuiCore_C_CreateTargetList::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlGuiCore.BP_BtlGuiCore_C.UpdateTargetList
// 0x0018 (0x0018 - 0x0000)
struct BP_BtlGuiCore_C_UpdateTargetList final
{
public:
	TArray<class ABtlActor*>                      ActionList;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiCore_C_UpdateTargetList) == 0x000008, "Wrong alignment on BP_BtlGuiCore_C_UpdateTargetList");
static_assert(sizeof(BP_BtlGuiCore_C_UpdateTargetList) == 0x000018, "Wrong size on BP_BtlGuiCore_C_UpdateTargetList");
static_assert(offsetof(BP_BtlGuiCore_C_UpdateTargetList, ActionList) == 0x000000, "Member 'BP_BtlGuiCore_C_UpdateTargetList::ActionList' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_UpdateTargetList, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_BtlGuiCore_C_UpdateTargetList::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlGuiCore.BP_BtlGuiCore_C.ClearTargetList
// 0x0001 (0x0001 - 0x0000)
struct BP_BtlGuiCore_C_ClearTargetList final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiCore_C_ClearTargetList) == 0x000001, "Wrong alignment on BP_BtlGuiCore_C_ClearTargetList");
static_assert(sizeof(BP_BtlGuiCore_C_ClearTargetList) == 0x000001, "Wrong size on BP_BtlGuiCore_C_ClearTargetList");
static_assert(offsetof(BP_BtlGuiCore_C_ClearTargetList, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_BtlGuiCore_C_ClearTargetList::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlGuiCore.BP_BtlGuiCore_C.UpdateTargetListAnim
// 0x0018 (0x0018 - 0x0000)
struct BP_BtlGuiCore_C_UpdateTargetListAnim final
{
public:
	TArray<class ABtlActor*>                      ActionList;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          SkipMovingAnimation;                               // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiCore_C_UpdateTargetListAnim) == 0x000008, "Wrong alignment on BP_BtlGuiCore_C_UpdateTargetListAnim");
static_assert(sizeof(BP_BtlGuiCore_C_UpdateTargetListAnim) == 0x000018, "Wrong size on BP_BtlGuiCore_C_UpdateTargetListAnim");
static_assert(offsetof(BP_BtlGuiCore_C_UpdateTargetListAnim, ActionList) == 0x000000, "Member 'BP_BtlGuiCore_C_UpdateTargetListAnim::ActionList' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_UpdateTargetListAnim, SkipMovingAnimation) == 0x000010, "Member 'BP_BtlGuiCore_C_UpdateTargetListAnim::SkipMovingAnimation' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_UpdateTargetListAnim, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_BtlGuiCore_C_UpdateTargetListAnim::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlGuiCore.BP_BtlGuiCore_C.SwitchUIColorSilluette
// 0x0028 (0x0028 - 0x0000)
struct BP_BtlGuiCore_C_SwitchUIColorSilluette final
{
public:
	bool                                          IsUIColor;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  CallFunc_FindGuiActorByName_GuiActor;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindGuiActorByName_sucsess;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiCapture_C*                    K2Node_DynamicCast_AsBP_Btl_Gui_Capture;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiCore_C_SwitchUIColorSilluette) == 0x000008, "Wrong alignment on BP_BtlGuiCore_C_SwitchUIColorSilluette");
static_assert(sizeof(BP_BtlGuiCore_C_SwitchUIColorSilluette) == 0x000028, "Wrong size on BP_BtlGuiCore_C_SwitchUIColorSilluette");
static_assert(offsetof(BP_BtlGuiCore_C_SwitchUIColorSilluette, IsUIColor) == 0x000000, "Member 'BP_BtlGuiCore_C_SwitchUIColorSilluette::IsUIColor' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SwitchUIColorSilluette, CallFunc_FindGuiActorByName_GuiActor) == 0x000008, "Member 'BP_BtlGuiCore_C_SwitchUIColorSilluette::CallFunc_FindGuiActorByName_GuiActor' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SwitchUIColorSilluette, CallFunc_FindGuiActorByName_sucsess) == 0x000010, "Member 'BP_BtlGuiCore_C_SwitchUIColorSilluette::CallFunc_FindGuiActorByName_sucsess' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SwitchUIColorSilluette, K2Node_DynamicCast_AsBP_Btl_Gui_Capture) == 0x000018, "Member 'BP_BtlGuiCore_C_SwitchUIColorSilluette::K2Node_DynamicCast_AsBP_Btl_Gui_Capture' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SwitchUIColorSilluette, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_BtlGuiCore_C_SwitchUIColorSilluette::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BtlGuiCore.BP_BtlGuiCore_C.SetPartyPanelVisible
// 0x0018 (0x0018 - 0x0000)
struct BP_BtlGuiCore_C_SetPartyPanelVisible final
{
public:
	bool                                          Vidible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_GetAction_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnemy_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiCore_C_SetPartyPanelVisible) == 0x000008, "Wrong alignment on BP_BtlGuiCore_C_SetPartyPanelVisible");
static_assert(sizeof(BP_BtlGuiCore_C_SetPartyPanelVisible) == 0x000018, "Wrong size on BP_BtlGuiCore_C_SetPartyPanelVisible");
static_assert(offsetof(BP_BtlGuiCore_C_SetPartyPanelVisible, Vidible) == 0x000000, "Member 'BP_BtlGuiCore_C_SetPartyPanelVisible::Vidible' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SetPartyPanelVisible, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_BtlGuiCore_C_SetPartyPanelVisible::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SetPartyPanelVisible, CallFunc_GetAction_ReturnValue) == 0x000008, "Member 'BP_BtlGuiCore_C_SetPartyPanelVisible::CallFunc_GetAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SetPartyPanelVisible, CallFunc_IsEnemy_ReturnValue) == 0x000010, "Member 'BP_BtlGuiCore_C_SetPartyPanelVisible::CallFunc_IsEnemy_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SetPartyPanelVisible, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'BP_BtlGuiCore_C_SetPartyPanelVisible::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SetPartyPanelVisible, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'BP_BtlGuiCore_C_SetPartyPanelVisible::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_BtlGuiCore.BP_BtlGuiCore_C.ClearKeyHelpOffset
// 0x0001 (0x0001 - 0x0000)
struct BP_BtlGuiCore_C_ClearKeyHelpOffset final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiCore_C_ClearKeyHelpOffset) == 0x000001, "Wrong alignment on BP_BtlGuiCore_C_ClearKeyHelpOffset");
static_assert(sizeof(BP_BtlGuiCore_C_ClearKeyHelpOffset) == 0x000001, "Wrong size on BP_BtlGuiCore_C_ClearKeyHelpOffset");
static_assert(offsetof(BP_BtlGuiCore_C_ClearKeyHelpOffset, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_BtlGuiCore_C_ClearKeyHelpOffset::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlGuiCore.BP_BtlGuiCore_C.CreateSkillName
// 0x0038 (0x0038 - 0x0000)
struct BP_BtlGuiCore_C_CreateSkillName final
{
public:
	int32                                         SkillId;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEnemy;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  CallFunc_FindGuiActorByName_GuiActor;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindGuiActorByName_sucsess;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  CallFunc_AttachChild_Object;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AttachChild_Sucsess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlSkillNamePanel_C*                K2Node_DynamicCast_AsBP_Btl_Skill_Name_Panel;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiCore_C_CreateSkillName) == 0x000008, "Wrong alignment on BP_BtlGuiCore_C_CreateSkillName");
static_assert(sizeof(BP_BtlGuiCore_C_CreateSkillName) == 0x000038, "Wrong size on BP_BtlGuiCore_C_CreateSkillName");
static_assert(offsetof(BP_BtlGuiCore_C_CreateSkillName, SkillId) == 0x000000, "Member 'BP_BtlGuiCore_C_CreateSkillName::SkillId' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CreateSkillName, IsEnemy) == 0x000004, "Member 'BP_BtlGuiCore_C_CreateSkillName::IsEnemy' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CreateSkillName, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'BP_BtlGuiCore_C_CreateSkillName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CreateSkillName, CallFunc_FindGuiActorByName_GuiActor) == 0x000008, "Member 'BP_BtlGuiCore_C_CreateSkillName::CallFunc_FindGuiActorByName_GuiActor' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CreateSkillName, CallFunc_FindGuiActorByName_sucsess) == 0x000010, "Member 'BP_BtlGuiCore_C_CreateSkillName::CallFunc_FindGuiActorByName_sucsess' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CreateSkillName, CallFunc_AttachChild_Object) == 0x000018, "Member 'BP_BtlGuiCore_C_CreateSkillName::CallFunc_AttachChild_Object' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CreateSkillName, CallFunc_AttachChild_Sucsess) == 0x000020, "Member 'BP_BtlGuiCore_C_CreateSkillName::CallFunc_AttachChild_Sucsess' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CreateSkillName, K2Node_DynamicCast_AsBP_Btl_Skill_Name_Panel) == 0x000028, "Member 'BP_BtlGuiCore_C_CreateSkillName::K2Node_DynamicCast_AsBP_Btl_Skill_Name_Panel' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CreateSkillName, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_BtlGuiCore_C_CreateSkillName::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BtlGuiCore.BP_BtlGuiCore_C.CreateCommonText
// 0x0038 (0x0038 - 0x0000)
struct BP_BtlGuiCore_C_CreateCommonText final
{
public:
	int32                                         Key;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEnemy;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  CallFunc_FindGuiActorByName_GuiActor;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindGuiActorByName_sucsess;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  CallFunc_AttachChild_Object;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AttachChild_Sucsess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlSkillNamePanel_C*                K2Node_DynamicCast_AsBP_Btl_Skill_Name_Panel;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiCore_C_CreateCommonText) == 0x000008, "Wrong alignment on BP_BtlGuiCore_C_CreateCommonText");
static_assert(sizeof(BP_BtlGuiCore_C_CreateCommonText) == 0x000038, "Wrong size on BP_BtlGuiCore_C_CreateCommonText");
static_assert(offsetof(BP_BtlGuiCore_C_CreateCommonText, Key) == 0x000000, "Member 'BP_BtlGuiCore_C_CreateCommonText::Key' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CreateCommonText, IsEnemy) == 0x000004, "Member 'BP_BtlGuiCore_C_CreateCommonText::IsEnemy' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CreateCommonText, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'BP_BtlGuiCore_C_CreateCommonText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CreateCommonText, CallFunc_FindGuiActorByName_GuiActor) == 0x000008, "Member 'BP_BtlGuiCore_C_CreateCommonText::CallFunc_FindGuiActorByName_GuiActor' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CreateCommonText, CallFunc_FindGuiActorByName_sucsess) == 0x000010, "Member 'BP_BtlGuiCore_C_CreateCommonText::CallFunc_FindGuiActorByName_sucsess' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CreateCommonText, CallFunc_AttachChild_Object) == 0x000018, "Member 'BP_BtlGuiCore_C_CreateCommonText::CallFunc_AttachChild_Object' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CreateCommonText, CallFunc_AttachChild_Sucsess) == 0x000020, "Member 'BP_BtlGuiCore_C_CreateCommonText::CallFunc_AttachChild_Sucsess' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CreateCommonText, K2Node_DynamicCast_AsBP_Btl_Skill_Name_Panel) == 0x000028, "Member 'BP_BtlGuiCore_C_CreateCommonText::K2Node_DynamicCast_AsBP_Btl_Skill_Name_Panel' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CreateCommonText, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_BtlGuiCore_C_CreateCommonText::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BtlGuiCore.BP_BtlGuiCore_C.ClearSkillName
// 0x0020 (0x0020 - 0x0000)
struct BP_BtlGuiCore_C_ClearSkillName final
{
public:
	class ABP_BtlGuiBaseActor_C*                  CallFunc_FindGuiActorByName_GuiActor;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindGuiActorByName_sucsess;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlSkillNamePanel_C*                K2Node_DynamicCast_AsBP_Btl_Skill_Name_Panel;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiCore_C_ClearSkillName) == 0x000008, "Wrong alignment on BP_BtlGuiCore_C_ClearSkillName");
static_assert(sizeof(BP_BtlGuiCore_C_ClearSkillName) == 0x000020, "Wrong size on BP_BtlGuiCore_C_ClearSkillName");
static_assert(offsetof(BP_BtlGuiCore_C_ClearSkillName, CallFunc_FindGuiActorByName_GuiActor) == 0x000000, "Member 'BP_BtlGuiCore_C_ClearSkillName::CallFunc_FindGuiActorByName_GuiActor' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ClearSkillName, CallFunc_FindGuiActorByName_sucsess) == 0x000008, "Member 'BP_BtlGuiCore_C_ClearSkillName::CallFunc_FindGuiActorByName_sucsess' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ClearSkillName, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_BtlGuiCore_C_ClearSkillName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ClearSkillName, K2Node_DynamicCast_AsBP_Btl_Skill_Name_Panel) == 0x000010, "Member 'BP_BtlGuiCore_C_ClearSkillName::K2Node_DynamicCast_AsBP_Btl_Skill_Name_Panel' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ClearSkillName, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_BtlGuiCore_C_ClearSkillName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ClearSkillName, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000019, "Member 'BP_BtlGuiCore_C_ClearSkillName::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ClearSkillName, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x00001A, "Member 'BP_BtlGuiCore_C_ClearSkillName::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ClearSkillName, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'BP_BtlGuiCore_C_ClearSkillName::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_BtlGuiCore.BP_BtlGuiCore_C.SetItemName
// 0x0038 (0x0038 - 0x0000)
struct BP_BtlGuiCore_C_SetItemName final
{
public:
	int32                                         ItemId;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEnemy;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  CallFunc_FindGuiActorByName_GuiActor;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindGuiActorByName_sucsess;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  CallFunc_AttachChild_Object;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AttachChild_Sucsess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlSkillNamePanel_C*                K2Node_DynamicCast_AsBP_Btl_Skill_Name_Panel;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiCore_C_SetItemName) == 0x000008, "Wrong alignment on BP_BtlGuiCore_C_SetItemName");
static_assert(sizeof(BP_BtlGuiCore_C_SetItemName) == 0x000038, "Wrong size on BP_BtlGuiCore_C_SetItemName");
static_assert(offsetof(BP_BtlGuiCore_C_SetItemName, ItemId) == 0x000000, "Member 'BP_BtlGuiCore_C_SetItemName::ItemId' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SetItemName, IsEnemy) == 0x000004, "Member 'BP_BtlGuiCore_C_SetItemName::IsEnemy' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SetItemName, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'BP_BtlGuiCore_C_SetItemName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SetItemName, CallFunc_FindGuiActorByName_GuiActor) == 0x000008, "Member 'BP_BtlGuiCore_C_SetItemName::CallFunc_FindGuiActorByName_GuiActor' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SetItemName, CallFunc_FindGuiActorByName_sucsess) == 0x000010, "Member 'BP_BtlGuiCore_C_SetItemName::CallFunc_FindGuiActorByName_sucsess' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SetItemName, CallFunc_AttachChild_Object) == 0x000018, "Member 'BP_BtlGuiCore_C_SetItemName::CallFunc_AttachChild_Object' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SetItemName, CallFunc_AttachChild_Sucsess) == 0x000020, "Member 'BP_BtlGuiCore_C_SetItemName::CallFunc_AttachChild_Sucsess' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SetItemName, K2Node_DynamicCast_AsBP_Btl_Skill_Name_Panel) == 0x000028, "Member 'BP_BtlGuiCore_C_SetItemName::K2Node_DynamicCast_AsBP_Btl_Skill_Name_Panel' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SetItemName, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_BtlGuiCore_C_SetItemName::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BtlGuiCore.BP_BtlGuiCore_C.CreateSummonText
// 0x0038 (0x0038 - 0x0000)
struct BP_BtlGuiCore_C_CreateSummonText final
{
public:
	bool                                          IsEnemy;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  CallFunc_FindGuiActorByName_GuiActor;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindGuiActorByName_sucsess;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  CallFunc_AttachChild_Object;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AttachChild_Sucsess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlSkillNamePanel_C*                K2Node_DynamicCast_AsBP_Btl_Skill_Name_Panel;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiCore_C_CreateSummonText) == 0x000008, "Wrong alignment on BP_BtlGuiCore_C_CreateSummonText");
static_assert(sizeof(BP_BtlGuiCore_C_CreateSummonText) == 0x000038, "Wrong size on BP_BtlGuiCore_C_CreateSummonText");
static_assert(offsetof(BP_BtlGuiCore_C_CreateSummonText, IsEnemy) == 0x000000, "Member 'BP_BtlGuiCore_C_CreateSummonText::IsEnemy' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CreateSummonText, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_BtlGuiCore_C_CreateSummonText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CreateSummonText, CallFunc_FindGuiActorByName_GuiActor) == 0x000008, "Member 'BP_BtlGuiCore_C_CreateSummonText::CallFunc_FindGuiActorByName_GuiActor' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CreateSummonText, CallFunc_FindGuiActorByName_sucsess) == 0x000010, "Member 'BP_BtlGuiCore_C_CreateSummonText::CallFunc_FindGuiActorByName_sucsess' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CreateSummonText, CallFunc_AttachChild_Object) == 0x000018, "Member 'BP_BtlGuiCore_C_CreateSummonText::CallFunc_AttachChild_Object' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CreateSummonText, CallFunc_AttachChild_Sucsess) == 0x000020, "Member 'BP_BtlGuiCore_C_CreateSummonText::CallFunc_AttachChild_Sucsess' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CreateSummonText, K2Node_DynamicCast_AsBP_Btl_Skill_Name_Panel) == 0x000028, "Member 'BP_BtlGuiCore_C_CreateSummonText::K2Node_DynamicCast_AsBP_Btl_Skill_Name_Panel' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CreateSummonText, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_BtlGuiCore_C_CreateSummonText::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BtlGuiCore.BP_BtlGuiCore_C.CallAddLoadPersona
// 0x0020 (0x0020 - 0x0000)
struct BP_BtlGuiCore_C_CallAddLoadPersona final
{
public:
	class ABP_BtlGuiBaseActor_C*                  CallFunc_FindGuiActorByName_GuiActor;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindGuiActorByName_sucsess;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlSkillList_C*                     K2Node_DynamicCast_AsBP_Btl_Skill_List;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiCore_C_CallAddLoadPersona) == 0x000008, "Wrong alignment on BP_BtlGuiCore_C_CallAddLoadPersona");
static_assert(sizeof(BP_BtlGuiCore_C_CallAddLoadPersona) == 0x000020, "Wrong size on BP_BtlGuiCore_C_CallAddLoadPersona");
static_assert(offsetof(BP_BtlGuiCore_C_CallAddLoadPersona, CallFunc_FindGuiActorByName_GuiActor) == 0x000000, "Member 'BP_BtlGuiCore_C_CallAddLoadPersona::CallFunc_FindGuiActorByName_GuiActor' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CallAddLoadPersona, CallFunc_FindGuiActorByName_sucsess) == 0x000008, "Member 'BP_BtlGuiCore_C_CallAddLoadPersona::CallFunc_FindGuiActorByName_sucsess' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CallAddLoadPersona, K2Node_DynamicCast_AsBP_Btl_Skill_List) == 0x000010, "Member 'BP_BtlGuiCore_C_CallAddLoadPersona::K2Node_DynamicCast_AsBP_Btl_Skill_List' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CallAddLoadPersona, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_BtlGuiCore_C_CallAddLoadPersona::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BtlGuiCore.BP_BtlGuiCore_C.SetTargetInfo
// 0x0010 (0x0010 - 0x0000)
struct BP_BtlGuiCore_C_SetTargetInfo final
{
public:
	class ABtlActor*                              Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoAnimation;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiCore_C_SetTargetInfo) == 0x000008, "Wrong alignment on BP_BtlGuiCore_C_SetTargetInfo");
static_assert(sizeof(BP_BtlGuiCore_C_SetTargetInfo) == 0x000010, "Wrong size on BP_BtlGuiCore_C_SetTargetInfo");
static_assert(offsetof(BP_BtlGuiCore_C_SetTargetInfo, Actor) == 0x000000, "Member 'BP_BtlGuiCore_C_SetTargetInfo::Actor' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SetTargetInfo, NoAnimation) == 0x000008, "Member 'BP_BtlGuiCore_C_SetTargetInfo::NoAnimation' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SetTargetInfo, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_BtlGuiCore_C_SetTargetInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlGuiCore.BP_BtlGuiCore_C.ReleaseTargetInfo
// 0x0002 (0x0002 - 0x0000)
struct BP_BtlGuiCore_C_ReleaseTargetInfo final
{
public:
	bool                                          NoAnimation;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiCore_C_ReleaseTargetInfo) == 0x000001, "Wrong alignment on BP_BtlGuiCore_C_ReleaseTargetInfo");
static_assert(sizeof(BP_BtlGuiCore_C_ReleaseTargetInfo) == 0x000002, "Wrong size on BP_BtlGuiCore_C_ReleaseTargetInfo");
static_assert(offsetof(BP_BtlGuiCore_C_ReleaseTargetInfo, NoAnimation) == 0x000000, "Member 'BP_BtlGuiCore_C_ReleaseTargetInfo::NoAnimation' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_ReleaseTargetInfo, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_BtlGuiCore_C_ReleaseTargetInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlGuiCore.BP_BtlGuiCore_C.SetRushVisible
// 0x0003 (0x0003 - 0x0000)
struct BP_BtlGuiCore_C_SetRushVisible final
{
public:
	bool                                          IsRush;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          PushButton;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiCore_C_SetRushVisible) == 0x000001, "Wrong alignment on BP_BtlGuiCore_C_SetRushVisible");
static_assert(sizeof(BP_BtlGuiCore_C_SetRushVisible) == 0x000003, "Wrong size on BP_BtlGuiCore_C_SetRushVisible");
static_assert(offsetof(BP_BtlGuiCore_C_SetRushVisible, IsRush) == 0x000000, "Member 'BP_BtlGuiCore_C_SetRushVisible::IsRush' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SetRushVisible, PushButton) == 0x000001, "Member 'BP_BtlGuiCore_C_SetRushVisible::PushButton' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SetRushVisible, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_BtlGuiCore_C_SetRushVisible::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlGuiCore.BP_BtlGuiCore_C.SupportOffTargetInfo
// 0x0010 (0x0010 - 0x0000)
struct BP_BtlGuiCore_C_SupportOffTargetInfo final
{
public:
	class ABtlActor*                              Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiCore_C_SupportOffTargetInfo) == 0x000008, "Wrong alignment on BP_BtlGuiCore_C_SupportOffTargetInfo");
static_assert(sizeof(BP_BtlGuiCore_C_SupportOffTargetInfo) == 0x000010, "Wrong size on BP_BtlGuiCore_C_SupportOffTargetInfo");
static_assert(offsetof(BP_BtlGuiCore_C_SupportOffTargetInfo, Actor) == 0x000000, "Member 'BP_BtlGuiCore_C_SupportOffTargetInfo::Actor' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_SupportOffTargetInfo, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_BtlGuiCore_C_SupportOffTargetInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlGuiCore.BP_BtlGuiCore_C.UpdateParamPartyPanel
// 0x0030 (0x0030 - 0x0000)
struct BP_BtlGuiCore_C_UpdateParamPartyPanel final
{
public:
	class ABtlActor*                              Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SkillId;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetID_ReturnValue;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ChkAllCostOff_ReturnValue;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUnitSP_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUnitHP_ReturnValue;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillCost_Sucsess;                     // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBtlDataCostType                              CallFunc_GetSkillCost_Cost;                        // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSkillCost_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiCore_C_UpdateParamPartyPanel) == 0x000008, "Wrong alignment on BP_BtlGuiCore_C_UpdateParamPartyPanel");
static_assert(sizeof(BP_BtlGuiCore_C_UpdateParamPartyPanel) == 0x000030, "Wrong size on BP_BtlGuiCore_C_UpdateParamPartyPanel");
static_assert(offsetof(BP_BtlGuiCore_C_UpdateParamPartyPanel, Action) == 0x000000, "Member 'BP_BtlGuiCore_C_UpdateParamPartyPanel::Action' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_UpdateParamPartyPanel, SkillId) == 0x000008, "Member 'BP_BtlGuiCore_C_UpdateParamPartyPanel::SkillId' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_UpdateParamPartyPanel, CallFunc_GetID_ReturnValue) == 0x00000C, "Member 'BP_BtlGuiCore_C_UpdateParamPartyPanel::CallFunc_GetID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_UpdateParamPartyPanel, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_BtlGuiCore_C_UpdateParamPartyPanel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_UpdateParamPartyPanel, CallFunc_ChkAllCostOff_ReturnValue) == 0x000011, "Member 'BP_BtlGuiCore_C_UpdateParamPartyPanel::CallFunc_ChkAllCostOff_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_UpdateParamPartyPanel, CallFunc_GetUnitSP_ReturnValue) == 0x000014, "Member 'BP_BtlGuiCore_C_UpdateParamPartyPanel::CallFunc_GetUnitSP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_UpdateParamPartyPanel, CallFunc_GetUnitHP_ReturnValue) == 0x000018, "Member 'BP_BtlGuiCore_C_UpdateParamPartyPanel::CallFunc_GetUnitHP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_UpdateParamPartyPanel, CallFunc_GetSkillCost_Sucsess) == 0x00001C, "Member 'BP_BtlGuiCore_C_UpdateParamPartyPanel::CallFunc_GetSkillCost_Sucsess' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_UpdateParamPartyPanel, CallFunc_GetSkillCost_Cost) == 0x00001D, "Member 'BP_BtlGuiCore_C_UpdateParamPartyPanel::CallFunc_GetSkillCost_Cost' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_UpdateParamPartyPanel, CallFunc_GetSkillCost_ReturnValue) == 0x000020, "Member 'BP_BtlGuiCore_C_UpdateParamPartyPanel::CallFunc_GetSkillCost_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_UpdateParamPartyPanel, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'BP_BtlGuiCore_C_UpdateParamPartyPanel::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_UpdateParamPartyPanel, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_BtlGuiCore_C_UpdateParamPartyPanel::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_UpdateParamPartyPanel, K2Node_SwitchEnum_CmpSuccess) == 0x00002C, "Member 'BP_BtlGuiCore_C_UpdateParamPartyPanel::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_BtlGuiCore.BP_BtlGuiCore_C.VisibleKeyHelp
// 0x0002 (0x0002 - 0x0000)
struct BP_BtlGuiCore_C_VisibleKeyHelp final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiCore_C_VisibleKeyHelp) == 0x000001, "Wrong alignment on BP_BtlGuiCore_C_VisibleKeyHelp");
static_assert(sizeof(BP_BtlGuiCore_C_VisibleKeyHelp) == 0x000002, "Wrong size on BP_BtlGuiCore_C_VisibleKeyHelp");
static_assert(offsetof(BP_BtlGuiCore_C_VisibleKeyHelp, Visible) == 0x000000, "Member 'BP_BtlGuiCore_C_VisibleKeyHelp::Visible' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_VisibleKeyHelp, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_BtlGuiCore_C_VisibleKeyHelp::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlGuiCore.BP_BtlGuiCore_C.ClearDamagePanel
// 0x0001 (0x0001 - 0x0000)
struct BP_BtlGuiCore_C_ClearDamagePanel final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiCore_C_ClearDamagePanel) == 0x000001, "Wrong alignment on BP_BtlGuiCore_C_ClearDamagePanel");
static_assert(sizeof(BP_BtlGuiCore_C_ClearDamagePanel) == 0x000001, "Wrong size on BP_BtlGuiCore_C_ClearDamagePanel");
static_assert(offsetof(BP_BtlGuiCore_C_ClearDamagePanel, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_BtlGuiCore_C_ClearDamagePanel::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlGuiCore.BP_BtlGuiCore_C.CheckAttachComplered
// 0x0001 (0x0001 - 0x0000)
struct BP_BtlGuiCore_C_CheckAttachComplered final
{
public:
	bool                                          Completed;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiCore_C_CheckAttachComplered) == 0x000001, "Wrong alignment on BP_BtlGuiCore_C_CheckAttachComplered");
static_assert(sizeof(BP_BtlGuiCore_C_CheckAttachComplered) == 0x000001, "Wrong size on BP_BtlGuiCore_C_CheckAttachComplered");
static_assert(offsetof(BP_BtlGuiCore_C_CheckAttachComplered, Completed) == 0x000000, "Member 'BP_BtlGuiCore_C_CheckAttachComplered::Completed' has a wrong offset!");

// Function BP_BtlGuiCore.BP_BtlGuiCore_C.CreateSkillNameWithTime
// 0x0040 (0x0040 - 0x0000)
struct BP_BtlGuiCore_C_CreateSkillNameWithTime final
{
public:
	int32                                         SkillId;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEnemy;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Time;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  CallFunc_FindGuiActorByName_GuiActor;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindGuiActorByName_sucsess;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  CallFunc_AttachChild_Object;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AttachChild_Sucsess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlSkillNamePanel_C*                K2Node_DynamicCast_AsBP_Btl_Skill_Name_Panel;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiCore_C_CreateSkillNameWithTime) == 0x000008, "Wrong alignment on BP_BtlGuiCore_C_CreateSkillNameWithTime");
static_assert(sizeof(BP_BtlGuiCore_C_CreateSkillNameWithTime) == 0x000040, "Wrong size on BP_BtlGuiCore_C_CreateSkillNameWithTime");
static_assert(offsetof(BP_BtlGuiCore_C_CreateSkillNameWithTime, SkillId) == 0x000000, "Member 'BP_BtlGuiCore_C_CreateSkillNameWithTime::SkillId' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CreateSkillNameWithTime, IsEnemy) == 0x000004, "Member 'BP_BtlGuiCore_C_CreateSkillNameWithTime::IsEnemy' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CreateSkillNameWithTime, Time) == 0x000008, "Member 'BP_BtlGuiCore_C_CreateSkillNameWithTime::Time' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CreateSkillNameWithTime, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_BtlGuiCore_C_CreateSkillNameWithTime::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CreateSkillNameWithTime, CallFunc_FindGuiActorByName_GuiActor) == 0x000010, "Member 'BP_BtlGuiCore_C_CreateSkillNameWithTime::CallFunc_FindGuiActorByName_GuiActor' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CreateSkillNameWithTime, CallFunc_FindGuiActorByName_sucsess) == 0x000018, "Member 'BP_BtlGuiCore_C_CreateSkillNameWithTime::CallFunc_FindGuiActorByName_sucsess' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CreateSkillNameWithTime, CallFunc_AttachChild_Object) == 0x000020, "Member 'BP_BtlGuiCore_C_CreateSkillNameWithTime::CallFunc_AttachChild_Object' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CreateSkillNameWithTime, CallFunc_AttachChild_Sucsess) == 0x000028, "Member 'BP_BtlGuiCore_C_CreateSkillNameWithTime::CallFunc_AttachChild_Sucsess' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CreateSkillNameWithTime, K2Node_DynamicCast_AsBP_Btl_Skill_Name_Panel) == 0x000030, "Member 'BP_BtlGuiCore_C_CreateSkillNameWithTime::K2Node_DynamicCast_AsBP_Btl_Skill_Name_Panel' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiCore_C_CreateSkillNameWithTime, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_BtlGuiCore_C_CreateSkillNameWithTime::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

