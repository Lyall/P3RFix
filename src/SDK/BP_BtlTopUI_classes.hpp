#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtlTopUI

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_BtlGuiBaseActor_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BtlTopUI.BP_BtlTopUI_C
// 0x03B8 (0x0708 - 0x0350)
class ABP_BtlTopUI_C final : public ABP_BtlGuiBaseActor_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_BtlTopUI_C;                      // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBtlGuiDrawComponent*                   BtlGuiDrawFuka;                                    // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawComponent*                   BtlGuiDrawRT;                                      // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiResources*                       BtlGuiResources;                                   // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiPersonaStatusComponent*          BtlGuiPersonaStatus;                               // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiListComponent*                   BtlGuiListPersona;                                 // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBtlDataBaseComponent*                  BtlDataBase;                                       // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawComponent*                   BtlGuiDraw;                                        // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FukaCutinTimeline_FukaScale_A184887442952267BA1FEE9AF3A64D01; // 0x0390(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FukaCutinTimeline_FukaBkaclOutRate_A184887442952267BA1FEE9AF3A64D01; // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FukaCutinTimeline_FukaAngle_A184887442952267BA1FEE9AF3A64D01; // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FukaCutinTimeline_FukaOpenRate_A184887442952267BA1FEE9AF3A64D01; // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FukaCutinTimeline_FukaMoveRate_A184887442952267BA1FEE9AF3A64D01; // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            FukaCutinTimeline__Direction_A184887442952267BA1FEE9AF3A64D01; // 0x03AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AD[0x3];                                      // 0x03AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     FukaCutinTimeline;                                 // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FukaBlackOutTimeline_FukaBlackoutRate_03BD57A848389BCBEFDCFA8F06DA025E; // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            FukaBlackOutTimeline__Direction_03BD57A848389BCBEFDCFA8F06DA025E; // 0x03BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BD[0x3];                                      // 0x03BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     FukaBlackOutTimeline;                              // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SillhouetteTimeline_Sillhouette_01BEE83744D2000015CC9ABDB6D3CE1B; // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            SillhouetteTimeline__Direction_01BEE83744D2000015CC9ABDB6D3CE1B; // 0x03CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CD[0x3];                                      // 0x03CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     SillhouetteTimeline;                               // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OracleTimeline_TextRate_A1A5BBC94716AF4874D035B490AC6055; // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OracleTimeline_PadRate_A1A5BBC94716AF4874D035B490AC6055; // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OracleTimeline_PosLate_A1A5BBC94716AF4874D035B490AC6055; // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OracleTimeline_Alpha_A1A5BBC94716AF4874D035B490AC6055; // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            OracleTimeline__Direction_A1A5BBC94716AF4874D035B490AC6055; // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     OracleTimeline;                                    // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TheurgiaTimeline_TextAlpha_964CF91B41AB85FB4C1199A282E9147F; // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TheurgiaTimeline_Alpha_964CF91B41AB85FB4C1199A282E9147F; // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TheurgiaTimeline_lerp_964CF91B41AB85FB4C1199A282E9147F; // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TheurgiaTimeline__Direction_964CF91B41AB85FB4C1199A282E9147F; // 0x0404(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_405[0x3];                                      // 0x0405(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TheurgiaTimeline;                                  // 0x0408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Object7Timeline_TextAlpha_1F756AA04610ADD163455E9EE3108475; // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Object7Timeline_UnderAlpha_1F756AA04610ADD163455E9EE3108475; // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Object7Timeline__Direction_1F756AA04610ADD163455E9EE3108475; // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_419[0x7];                                      // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Object7Timeline;                                   // 0x0420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Object4Timeline_CommandUnder_8C0B861F4C5A7315E5DABE834AF2C613; // 0x0428(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Object4Timeline_CommandButton_8C0B861F4C5A7315E5DABE834AF2C613; // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Object4Timeline_CommandOpen_8C0B861F4C5A7315E5DABE834AF2C613; // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Object4Timeline__Direction_8C0B861F4C5A7315E5DABE834AF2C613; // 0x043C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43D[0x3];                                      // 0x043D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Object4Timeline;                                   // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Object2Timeline_Scale_0C65DF4647BD537447E50A8D98164A32; // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Object2Timeline__Direction_0C65DF4647BD537447E50A8D98164A32; // 0x044C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44D[0x3];                                      // 0x044D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Object2Timeline;                                   // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Object1Timeline_ShiftText_5B9C8381467F3BAF3707759C692145BC; // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Object1Timeline_shift_5B9C8381467F3BAF3707759C692145BC; // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Object1Timeline_BackMoonMask_5B9C8381467F3BAF3707759C692145BC; // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Object1Timeline_BackMoon_5B9C8381467F3BAF3707759C692145BC; // 0x0464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Object1Timeline__Direction_5B9C8381467F3BAF3707759C692145BC; // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_469[0x7];                                      // 0x0469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Object1Timeline;                                   // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOneMore;                                         // 0x0478(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_479[0x7];                                      // 0x0479(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      PlayerList;                                        // 0x0480(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	int32                                         SelectIdx;                                         // 0x0490(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_494[0x4];                                      // 0x0494(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  PossibleTakeOverList;                              // 0x0498(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         TakeOverCurID;                                     // 0x04A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              TopOffset;                                         // 0x04AC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CommandOffset;                                     // 0x04B4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              QUADOffset;                                        // 0x04BC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              TRIANGLEOffset;                                    // 0x04C4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CIRCLEOffset;                                      // 0x04CC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              XROSSOffset;                                       // 0x04D4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              R2Offset;                                          // 0x04DC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPersonaStatusOpen;                               // 0x04E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E5[0x3];                                      // 0x04E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PossibleTakeOverCount;                             // 0x04E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EC[0x4];                                      // 0x04EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBtlGuiDrawObjectSprite*>        CommandObject;                                     // 0x04F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UBtlGuiDrawObjectSprite*>        TheurgiaObject;                                    // 0x0500(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UBtlGuiDrawObjectSprite*>        BackMoonObject;                                    // 0x0510(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UBtlGuiDrawObjectCore*>          ObjectList1;                                       // 0x0520(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UBtlGuiDrawObjectCore*>          ObjectList2;                                       // 0x0530(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UBtlGuiDrawObjectCore*>          ObjectList3;                                       // 0x0540(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UBtlGuiDrawObjectCore*>          ObjectList4;                                       // 0x0550(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UBtlGuiDrawObjectCore*>          ObjectList5;                                       // 0x0560(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UBtlGuiDrawObjectCore*>          ObjectList6;                                       // 0x0570(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UBtlGuiDrawObjectCore*>          ObjectList7;                                       // 0x0580(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UBtlGuiDrawObjectCore*>          ObjectList8;                                       // 0x0590(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UBtlGuiDrawObjectCore*>          ObjectList9;                                       // 0x05A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         CountWork;                                         // 0x05B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PlayerScreenPos;                                   // 0x05B4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CommandScale;                                      // 0x05BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TopScale;                                          // 0x05C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C4[0x4];                                      // 0x05C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBtlGuiDrawObjectCore*>          ObjectListKeyCtrl;                                 // 0x05C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<bool>                                  KeyControl;                                        // 0x05D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ABP_BtlGuiBaseActor_C*                  Object;                                            // 0x05E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TheurgiaUseable;                                   // 0x05F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F1[0x3];                                      // 0x05F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Back_Moon;                                         // 0x05F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Back_Moon_Mask;                                    // 0x05F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Shift;                                             // 0x05FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Shift_Text;                                        // 0x0600(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Silhouette;                                        // 0x0604(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Vector2DWork;                                      // 0x0608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FloatWork;                                         // 0x0610(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scale;                                             // 0x0614(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Command_Under;                                     // 0x0618(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Command_Button;                                    // 0x0624(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Command_Open;                                      // 0x0628(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Under_Alpha;                                       // 0x062C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Text_Alpha;                                        // 0x0630(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lerp;                                              // 0x0634(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Alpha;                                             // 0x0638(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pos_Late;                                          // 0x063C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pad_Rate;                                          // 0x0640(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              TopLocalOffset;                                    // 0x0644(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CommandLocalOffset;                                // 0x064C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              OracleLocalOffset;                                 // 0x0654(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraLengthLocalOffset;                           // 0x065C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LengthRate;                                        // 0x0660(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SillhouetteCallFlag;                               // 0x0664(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_665[0x3];                                      // 0x0665(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBtlGuiDrawObjectCore*>          FukaCutinObj;                                      // 0x0668(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         FukaMoveRate;                                      // 0x0678(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Fuka_Open_Rate;                                    // 0x067C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Fuka_Scale;                                        // 0x0680(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Fuka_Angle;                                        // 0x0688(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FukaCutinStep;                                     // 0x068C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMoviePlayActorBattle*                  FukaMoviePlayer;                                   // 0x0690(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectRect*                  FukaBlackout;                                      // 0x0698(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FukaBlackoutRate;                                  // 0x06A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A4[0x4];                                      // 0x06A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBtlGuiDrawObjectSprite*                FukaEffect;                                        // 0x06A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FukaEffectSprNo;                                   // 0x06B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FukaEffectAlpha;                                   // 0x06B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectImage*                 FukaMovieTexture;                                  // 0x06B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Text_Rate;                                         // 0x06C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CommandVoiseTime;                                  // 0x06C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DelayWait;                                         // 0x06C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C9[0x3];                                      // 0x06C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CommandPos;                                        // 0x06CC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ItemPos;                                           // 0x06D4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PersonaPos;                                        // 0x06DC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              GuardPos;                                          // 0x06E4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              AttackPos;                                         // 0x06EC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ShiftPos;                                          // 0x06F4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6FC[0x4];                                      // 0x06FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             BtlTopUIParamTable;                                // 0x0700(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_BtlTopUI(int32 EntryPoint);
	void GuiActorEncountStart();
	void SetupVisible(bool Visible);
	void GuiActorStateExit();
	void GuiActorStateInit(bool Flag, int32 Param);
	void GuiActorBeginPlay();
	void ChangeStateTopUI();
	void RepInput(const struct FBtlInputKey& InputKey);
	void PushTouch();
	void PushL3();
	void PushOPTION();
	void PushR2();
	void PushLU();
	void PushLD();
	void PushR1();
	void OnAnalyze();
	void NextTarget();
	void BehindTarget();
	void ChangeItemList();
	void OnAttack();
	void OnTakeOver();
	void ChangePromise();
	void AgingInput();
	void GuiActorUnbindAction();
	void GuiActorBindAction();
	void ChangeSkillList();
	void StartOracleTimeline();
	void StartFukaCutinTimeline();
	void StartFukaBlackoutTimeline();
	void StartObject4Anim();
	void StartObject1Anim();
	void GuiActorUpdate(float DeltaTime);
	void FukaBlackOutTimeline__UpdateFunc();
	void FukaBlackOutTimeline__FinishedFunc();
	void FukaCutinTimeline__UpdateFunc();
	void FukaCutinTimeline__FinishedFunc();
	void SillhouetteTimeline__UpdateFunc();
	void SillhouetteTimeline__FinishedFunc();
	void OracleTimeline__UpdateFunc();
	void OracleTimeline__FinishedFunc();
	void TheurgiaTimeline__UpdateFunc();
	void TheurgiaTimeline__FinishedFunc();
	void Object7Timeline__UpdateFunc();
	void Object7Timeline__FinishedFunc();
	void Object4Timeline__CallTheurgiaUse__EventFunc();
	void Object4Timeline__PlaySound__EventFunc();
	void Object4Timeline__UpdateFunc();
	void Object4Timeline__FinishedFunc();
	void Object2Timeline__UpdateFunc();
	void Object2Timeline__FinishedFunc();
	void Object1Timeline__UpdateFunc();
	void Object1Timeline__FinishedFunc();
	void ShiftVisible(bool Visible);
	void SetCommandOffset(const struct FVector2D& NewParam, float Scale_0);
	void SetTheurgiaOffset(const struct FVector2D& Anchor, float Scale_0, bool TheurgiaUse);
	void ObjectList1Update(const struct FVector2D& Pos, float Angle, float Scale_0);
	void ObjectList2Update(const struct FVector2D& Pos, float Scale_0);
	void ObjectList3Update(const struct FVector2D& Pos, float Scale_0, float Alpha_0, float Scale2);
	void ObjectList4Update(const struct FVector2D& Pos, const struct FVector2D& Pos2, float Alpha_0, float Scale_0);
	void ObjectList5Update(const struct FVector2D& Pos, float Ancle, float Alpha_0, float Scale_0);
	void ObjectList6Update(float Alpha_0, float Scale_0, const struct FVector2D& Pos);
	void ObjectList7Update(const struct FVector2D& Pos, float Alpha_0, float TextAlpha, float Scale_0);
	void ObjectList8Update(const struct FVector2D& Pos, float Alpha_0, float Scale_0);
	void ObjectList9Update(float Alpha_0);
	void ObjectList10Update(float Alpha_0, const struct FVector2D& Pos, float PadRate, float TextRate);
	void ObjectList10Update2(float Alpha_0, const struct FVector2D& Pos);
	void AllAnimationStop();
	void SetTheurgiaSkillUseable(bool Condition);
	void InitAnimationParam();
	void StartFukaCutin();
	void GetCommandPosOffset(struct FVector2D* CommandPos_0, struct FVector2D* BoundaryPos);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BtlTopUI_C">();
	}
	static class ABP_BtlTopUI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BtlTopUI_C>();
	}
};
static_assert(alignof(ABP_BtlTopUI_C) == 0x000008, "Wrong alignment on ABP_BtlTopUI_C");
static_assert(sizeof(ABP_BtlTopUI_C) == 0x000708, "Wrong size on ABP_BtlTopUI_C");
static_assert(offsetof(ABP_BtlTopUI_C, UberGraphFrame_BP_BtlTopUI_C) == 0x000350, "Member 'ABP_BtlTopUI_C::UberGraphFrame_BP_BtlTopUI_C' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, BtlGuiDrawFuka) == 0x000358, "Member 'ABP_BtlTopUI_C::BtlGuiDrawFuka' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, BtlGuiDrawRT) == 0x000360, "Member 'ABP_BtlTopUI_C::BtlGuiDrawRT' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, BtlGuiResources) == 0x000368, "Member 'ABP_BtlTopUI_C::BtlGuiResources' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, BtlGuiPersonaStatus) == 0x000370, "Member 'ABP_BtlTopUI_C::BtlGuiPersonaStatus' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, BtlGuiListPersona) == 0x000378, "Member 'ABP_BtlTopUI_C::BtlGuiListPersona' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, BtlDataBase) == 0x000380, "Member 'ABP_BtlTopUI_C::BtlDataBase' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, BtlGuiDraw) == 0x000388, "Member 'ABP_BtlTopUI_C::BtlGuiDraw' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, FukaCutinTimeline_FukaScale_A184887442952267BA1FEE9AF3A64D01) == 0x000390, "Member 'ABP_BtlTopUI_C::FukaCutinTimeline_FukaScale_A184887442952267BA1FEE9AF3A64D01' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, FukaCutinTimeline_FukaBkaclOutRate_A184887442952267BA1FEE9AF3A64D01) == 0x00039C, "Member 'ABP_BtlTopUI_C::FukaCutinTimeline_FukaBkaclOutRate_A184887442952267BA1FEE9AF3A64D01' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, FukaCutinTimeline_FukaAngle_A184887442952267BA1FEE9AF3A64D01) == 0x0003A0, "Member 'ABP_BtlTopUI_C::FukaCutinTimeline_FukaAngle_A184887442952267BA1FEE9AF3A64D01' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, FukaCutinTimeline_FukaOpenRate_A184887442952267BA1FEE9AF3A64D01) == 0x0003A4, "Member 'ABP_BtlTopUI_C::FukaCutinTimeline_FukaOpenRate_A184887442952267BA1FEE9AF3A64D01' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, FukaCutinTimeline_FukaMoveRate_A184887442952267BA1FEE9AF3A64D01) == 0x0003A8, "Member 'ABP_BtlTopUI_C::FukaCutinTimeline_FukaMoveRate_A184887442952267BA1FEE9AF3A64D01' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, FukaCutinTimeline__Direction_A184887442952267BA1FEE9AF3A64D01) == 0x0003AC, "Member 'ABP_BtlTopUI_C::FukaCutinTimeline__Direction_A184887442952267BA1FEE9AF3A64D01' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, FukaCutinTimeline) == 0x0003B0, "Member 'ABP_BtlTopUI_C::FukaCutinTimeline' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, FukaBlackOutTimeline_FukaBlackoutRate_03BD57A848389BCBEFDCFA8F06DA025E) == 0x0003B8, "Member 'ABP_BtlTopUI_C::FukaBlackOutTimeline_FukaBlackoutRate_03BD57A848389BCBEFDCFA8F06DA025E' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, FukaBlackOutTimeline__Direction_03BD57A848389BCBEFDCFA8F06DA025E) == 0x0003BC, "Member 'ABP_BtlTopUI_C::FukaBlackOutTimeline__Direction_03BD57A848389BCBEFDCFA8F06DA025E' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, FukaBlackOutTimeline) == 0x0003C0, "Member 'ABP_BtlTopUI_C::FukaBlackOutTimeline' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, SillhouetteTimeline_Sillhouette_01BEE83744D2000015CC9ABDB6D3CE1B) == 0x0003C8, "Member 'ABP_BtlTopUI_C::SillhouetteTimeline_Sillhouette_01BEE83744D2000015CC9ABDB6D3CE1B' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, SillhouetteTimeline__Direction_01BEE83744D2000015CC9ABDB6D3CE1B) == 0x0003CC, "Member 'ABP_BtlTopUI_C::SillhouetteTimeline__Direction_01BEE83744D2000015CC9ABDB6D3CE1B' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, SillhouetteTimeline) == 0x0003D0, "Member 'ABP_BtlTopUI_C::SillhouetteTimeline' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, OracleTimeline_TextRate_A1A5BBC94716AF4874D035B490AC6055) == 0x0003D8, "Member 'ABP_BtlTopUI_C::OracleTimeline_TextRate_A1A5BBC94716AF4874D035B490AC6055' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, OracleTimeline_PadRate_A1A5BBC94716AF4874D035B490AC6055) == 0x0003DC, "Member 'ABP_BtlTopUI_C::OracleTimeline_PadRate_A1A5BBC94716AF4874D035B490AC6055' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, OracleTimeline_PosLate_A1A5BBC94716AF4874D035B490AC6055) == 0x0003E0, "Member 'ABP_BtlTopUI_C::OracleTimeline_PosLate_A1A5BBC94716AF4874D035B490AC6055' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, OracleTimeline_Alpha_A1A5BBC94716AF4874D035B490AC6055) == 0x0003E4, "Member 'ABP_BtlTopUI_C::OracleTimeline_Alpha_A1A5BBC94716AF4874D035B490AC6055' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, OracleTimeline__Direction_A1A5BBC94716AF4874D035B490AC6055) == 0x0003E8, "Member 'ABP_BtlTopUI_C::OracleTimeline__Direction_A1A5BBC94716AF4874D035B490AC6055' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, OracleTimeline) == 0x0003F0, "Member 'ABP_BtlTopUI_C::OracleTimeline' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, TheurgiaTimeline_TextAlpha_964CF91B41AB85FB4C1199A282E9147F) == 0x0003F8, "Member 'ABP_BtlTopUI_C::TheurgiaTimeline_TextAlpha_964CF91B41AB85FB4C1199A282E9147F' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, TheurgiaTimeline_Alpha_964CF91B41AB85FB4C1199A282E9147F) == 0x0003FC, "Member 'ABP_BtlTopUI_C::TheurgiaTimeline_Alpha_964CF91B41AB85FB4C1199A282E9147F' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, TheurgiaTimeline_lerp_964CF91B41AB85FB4C1199A282E9147F) == 0x000400, "Member 'ABP_BtlTopUI_C::TheurgiaTimeline_lerp_964CF91B41AB85FB4C1199A282E9147F' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, TheurgiaTimeline__Direction_964CF91B41AB85FB4C1199A282E9147F) == 0x000404, "Member 'ABP_BtlTopUI_C::TheurgiaTimeline__Direction_964CF91B41AB85FB4C1199A282E9147F' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, TheurgiaTimeline) == 0x000408, "Member 'ABP_BtlTopUI_C::TheurgiaTimeline' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Object7Timeline_TextAlpha_1F756AA04610ADD163455E9EE3108475) == 0x000410, "Member 'ABP_BtlTopUI_C::Object7Timeline_TextAlpha_1F756AA04610ADD163455E9EE3108475' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Object7Timeline_UnderAlpha_1F756AA04610ADD163455E9EE3108475) == 0x000414, "Member 'ABP_BtlTopUI_C::Object7Timeline_UnderAlpha_1F756AA04610ADD163455E9EE3108475' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Object7Timeline__Direction_1F756AA04610ADD163455E9EE3108475) == 0x000418, "Member 'ABP_BtlTopUI_C::Object7Timeline__Direction_1F756AA04610ADD163455E9EE3108475' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Object7Timeline) == 0x000420, "Member 'ABP_BtlTopUI_C::Object7Timeline' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Object4Timeline_CommandUnder_8C0B861F4C5A7315E5DABE834AF2C613) == 0x000428, "Member 'ABP_BtlTopUI_C::Object4Timeline_CommandUnder_8C0B861F4C5A7315E5DABE834AF2C613' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Object4Timeline_CommandButton_8C0B861F4C5A7315E5DABE834AF2C613) == 0x000434, "Member 'ABP_BtlTopUI_C::Object4Timeline_CommandButton_8C0B861F4C5A7315E5DABE834AF2C613' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Object4Timeline_CommandOpen_8C0B861F4C5A7315E5DABE834AF2C613) == 0x000438, "Member 'ABP_BtlTopUI_C::Object4Timeline_CommandOpen_8C0B861F4C5A7315E5DABE834AF2C613' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Object4Timeline__Direction_8C0B861F4C5A7315E5DABE834AF2C613) == 0x00043C, "Member 'ABP_BtlTopUI_C::Object4Timeline__Direction_8C0B861F4C5A7315E5DABE834AF2C613' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Object4Timeline) == 0x000440, "Member 'ABP_BtlTopUI_C::Object4Timeline' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Object2Timeline_Scale_0C65DF4647BD537447E50A8D98164A32) == 0x000448, "Member 'ABP_BtlTopUI_C::Object2Timeline_Scale_0C65DF4647BD537447E50A8D98164A32' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Object2Timeline__Direction_0C65DF4647BD537447E50A8D98164A32) == 0x00044C, "Member 'ABP_BtlTopUI_C::Object2Timeline__Direction_0C65DF4647BD537447E50A8D98164A32' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Object2Timeline) == 0x000450, "Member 'ABP_BtlTopUI_C::Object2Timeline' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Object1Timeline_ShiftText_5B9C8381467F3BAF3707759C692145BC) == 0x000458, "Member 'ABP_BtlTopUI_C::Object1Timeline_ShiftText_5B9C8381467F3BAF3707759C692145BC' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Object1Timeline_shift_5B9C8381467F3BAF3707759C692145BC) == 0x00045C, "Member 'ABP_BtlTopUI_C::Object1Timeline_shift_5B9C8381467F3BAF3707759C692145BC' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Object1Timeline_BackMoonMask_5B9C8381467F3BAF3707759C692145BC) == 0x000460, "Member 'ABP_BtlTopUI_C::Object1Timeline_BackMoonMask_5B9C8381467F3BAF3707759C692145BC' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Object1Timeline_BackMoon_5B9C8381467F3BAF3707759C692145BC) == 0x000464, "Member 'ABP_BtlTopUI_C::Object1Timeline_BackMoon_5B9C8381467F3BAF3707759C692145BC' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Object1Timeline__Direction_5B9C8381467F3BAF3707759C692145BC) == 0x000468, "Member 'ABP_BtlTopUI_C::Object1Timeline__Direction_5B9C8381467F3BAF3707759C692145BC' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Object1Timeline) == 0x000470, "Member 'ABP_BtlTopUI_C::Object1Timeline' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, IsOneMore) == 0x000478, "Member 'ABP_BtlTopUI_C::IsOneMore' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, PlayerList) == 0x000480, "Member 'ABP_BtlTopUI_C::PlayerList' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, SelectIdx) == 0x000490, "Member 'ABP_BtlTopUI_C::SelectIdx' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, PossibleTakeOverList) == 0x000498, "Member 'ABP_BtlTopUI_C::PossibleTakeOverList' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, TakeOverCurID) == 0x0004A8, "Member 'ABP_BtlTopUI_C::TakeOverCurID' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, TopOffset) == 0x0004AC, "Member 'ABP_BtlTopUI_C::TopOffset' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, CommandOffset) == 0x0004B4, "Member 'ABP_BtlTopUI_C::CommandOffset' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, QUADOffset) == 0x0004BC, "Member 'ABP_BtlTopUI_C::QUADOffset' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, TRIANGLEOffset) == 0x0004C4, "Member 'ABP_BtlTopUI_C::TRIANGLEOffset' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, CIRCLEOffset) == 0x0004CC, "Member 'ABP_BtlTopUI_C::CIRCLEOffset' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, XROSSOffset) == 0x0004D4, "Member 'ABP_BtlTopUI_C::XROSSOffset' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, R2Offset) == 0x0004DC, "Member 'ABP_BtlTopUI_C::R2Offset' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, IsPersonaStatusOpen) == 0x0004E4, "Member 'ABP_BtlTopUI_C::IsPersonaStatusOpen' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, PossibleTakeOverCount) == 0x0004E8, "Member 'ABP_BtlTopUI_C::PossibleTakeOverCount' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, CommandObject) == 0x0004F0, "Member 'ABP_BtlTopUI_C::CommandObject' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, TheurgiaObject) == 0x000500, "Member 'ABP_BtlTopUI_C::TheurgiaObject' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, BackMoonObject) == 0x000510, "Member 'ABP_BtlTopUI_C::BackMoonObject' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, ObjectList1) == 0x000520, "Member 'ABP_BtlTopUI_C::ObjectList1' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, ObjectList2) == 0x000530, "Member 'ABP_BtlTopUI_C::ObjectList2' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, ObjectList3) == 0x000540, "Member 'ABP_BtlTopUI_C::ObjectList3' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, ObjectList4) == 0x000550, "Member 'ABP_BtlTopUI_C::ObjectList4' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, ObjectList5) == 0x000560, "Member 'ABP_BtlTopUI_C::ObjectList5' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, ObjectList6) == 0x000570, "Member 'ABP_BtlTopUI_C::ObjectList6' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, ObjectList7) == 0x000580, "Member 'ABP_BtlTopUI_C::ObjectList7' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, ObjectList8) == 0x000590, "Member 'ABP_BtlTopUI_C::ObjectList8' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, ObjectList9) == 0x0005A0, "Member 'ABP_BtlTopUI_C::ObjectList9' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, CountWork) == 0x0005B0, "Member 'ABP_BtlTopUI_C::CountWork' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, PlayerScreenPos) == 0x0005B4, "Member 'ABP_BtlTopUI_C::PlayerScreenPos' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, CommandScale) == 0x0005BC, "Member 'ABP_BtlTopUI_C::CommandScale' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, TopScale) == 0x0005C0, "Member 'ABP_BtlTopUI_C::TopScale' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, ObjectListKeyCtrl) == 0x0005C8, "Member 'ABP_BtlTopUI_C::ObjectListKeyCtrl' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, KeyControl) == 0x0005D8, "Member 'ABP_BtlTopUI_C::KeyControl' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Object) == 0x0005E8, "Member 'ABP_BtlTopUI_C::Object' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, TheurgiaUseable) == 0x0005F0, "Member 'ABP_BtlTopUI_C::TheurgiaUseable' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Back_Moon) == 0x0005F4, "Member 'ABP_BtlTopUI_C::Back_Moon' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Back_Moon_Mask) == 0x0005F8, "Member 'ABP_BtlTopUI_C::Back_Moon_Mask' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Shift) == 0x0005FC, "Member 'ABP_BtlTopUI_C::Shift' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Shift_Text) == 0x000600, "Member 'ABP_BtlTopUI_C::Shift_Text' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Silhouette) == 0x000604, "Member 'ABP_BtlTopUI_C::Silhouette' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Vector2DWork) == 0x000608, "Member 'ABP_BtlTopUI_C::Vector2DWork' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, FloatWork) == 0x000610, "Member 'ABP_BtlTopUI_C::FloatWork' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Scale) == 0x000614, "Member 'ABP_BtlTopUI_C::Scale' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Command_Under) == 0x000618, "Member 'ABP_BtlTopUI_C::Command_Under' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Command_Button) == 0x000624, "Member 'ABP_BtlTopUI_C::Command_Button' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Command_Open) == 0x000628, "Member 'ABP_BtlTopUI_C::Command_Open' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Under_Alpha) == 0x00062C, "Member 'ABP_BtlTopUI_C::Under_Alpha' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Text_Alpha) == 0x000630, "Member 'ABP_BtlTopUI_C::Text_Alpha' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Lerp) == 0x000634, "Member 'ABP_BtlTopUI_C::Lerp' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Alpha) == 0x000638, "Member 'ABP_BtlTopUI_C::Alpha' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Pos_Late) == 0x00063C, "Member 'ABP_BtlTopUI_C::Pos_Late' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Pad_Rate) == 0x000640, "Member 'ABP_BtlTopUI_C::Pad_Rate' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, TopLocalOffset) == 0x000644, "Member 'ABP_BtlTopUI_C::TopLocalOffset' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, CommandLocalOffset) == 0x00064C, "Member 'ABP_BtlTopUI_C::CommandLocalOffset' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, OracleLocalOffset) == 0x000654, "Member 'ABP_BtlTopUI_C::OracleLocalOffset' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, CameraLengthLocalOffset) == 0x00065C, "Member 'ABP_BtlTopUI_C::CameraLengthLocalOffset' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, LengthRate) == 0x000660, "Member 'ABP_BtlTopUI_C::LengthRate' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, SillhouetteCallFlag) == 0x000664, "Member 'ABP_BtlTopUI_C::SillhouetteCallFlag' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, FukaCutinObj) == 0x000668, "Member 'ABP_BtlTopUI_C::FukaCutinObj' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, FukaMoveRate) == 0x000678, "Member 'ABP_BtlTopUI_C::FukaMoveRate' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Fuka_Open_Rate) == 0x00067C, "Member 'ABP_BtlTopUI_C::Fuka_Open_Rate' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Fuka_Scale) == 0x000680, "Member 'ABP_BtlTopUI_C::Fuka_Scale' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Fuka_Angle) == 0x000688, "Member 'ABP_BtlTopUI_C::Fuka_Angle' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, FukaCutinStep) == 0x00068C, "Member 'ABP_BtlTopUI_C::FukaCutinStep' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, FukaMoviePlayer) == 0x000690, "Member 'ABP_BtlTopUI_C::FukaMoviePlayer' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, FukaBlackout) == 0x000698, "Member 'ABP_BtlTopUI_C::FukaBlackout' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, FukaBlackoutRate) == 0x0006A0, "Member 'ABP_BtlTopUI_C::FukaBlackoutRate' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, FukaEffect) == 0x0006A8, "Member 'ABP_BtlTopUI_C::FukaEffect' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, FukaEffectSprNo) == 0x0006B0, "Member 'ABP_BtlTopUI_C::FukaEffectSprNo' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, FukaEffectAlpha) == 0x0006B4, "Member 'ABP_BtlTopUI_C::FukaEffectAlpha' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, FukaMovieTexture) == 0x0006B8, "Member 'ABP_BtlTopUI_C::FukaMovieTexture' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, Text_Rate) == 0x0006C0, "Member 'ABP_BtlTopUI_C::Text_Rate' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, CommandVoiseTime) == 0x0006C4, "Member 'ABP_BtlTopUI_C::CommandVoiseTime' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, DelayWait) == 0x0006C8, "Member 'ABP_BtlTopUI_C::DelayWait' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, CommandPos) == 0x0006CC, "Member 'ABP_BtlTopUI_C::CommandPos' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, ItemPos) == 0x0006D4, "Member 'ABP_BtlTopUI_C::ItemPos' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, PersonaPos) == 0x0006DC, "Member 'ABP_BtlTopUI_C::PersonaPos' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, GuardPos) == 0x0006E4, "Member 'ABP_BtlTopUI_C::GuardPos' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, AttackPos) == 0x0006EC, "Member 'ABP_BtlTopUI_C::AttackPos' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, ShiftPos) == 0x0006F4, "Member 'ABP_BtlTopUI_C::ShiftPos' has a wrong offset!");
static_assert(offsetof(ABP_BtlTopUI_C, BtlTopUIParamTable) == 0x000700, "Member 'ABP_BtlTopUI_C::BtlTopUIParamTable' has a wrong offset!");

}

