#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtlPromiseCommon

#include "Basic.hpp"

#include "BP_BtlPromiseCommon_classes.hpp"
#include "BP_BtlPromiseCommon_parameters.hpp"


namespace SDK
{

// Function BP_BtlPromiseCommon.BP_BtlPromiseCommon_C.ExecuteUbergraph_BP_BtlPromiseCommon
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlPromiseCommon_C::ExecuteUbergraph_BP_BtlPromiseCommon(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPromiseCommon_C", "ExecuteUbergraph_BP_BtlPromiseCommon");

	Params::BP_BtlPromiseCommon_C_ExecuteUbergraph_BP_BtlPromiseCommon Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlPromiseCommon.BP_BtlPromiseCommon_C.GuiActorEncountStart
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlPromiseCommon_C::GuiActorEncountStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPromiseCommon_C", "GuiActorEncountStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlPromiseCommon.BP_BtlPromiseCommon_C.DebugOutAnime
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlPromiseCommon_C::DebugOutAnime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPromiseCommon_C", "DebugOutAnime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlPromiseCommon.BP_BtlPromiseCommon_C.DebugInAnime
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlPromiseCommon_C::DebugInAnime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPromiseCommon_C", "DebugInAnime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlPromiseCommon.BP_BtlPromiseCommon_C.GuiActorUpdate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlPromiseCommon_C::GuiActorUpdate(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPromiseCommon_C", "GuiActorUpdate");

	Params::BP_BtlPromiseCommon_C_GuiActorUpdate Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlPromiseCommon.BP_BtlPromiseCommon_C.GuiActorUnbindAction
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlPromiseCommon_C::GuiActorUnbindAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPromiseCommon_C", "GuiActorUnbindAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlPromiseCommon.BP_BtlPromiseCommon_C.GuiActorBindAction
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlPromiseCommon_C::GuiActorBindAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPromiseCommon_C", "GuiActorBindAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlPromiseCommon.BP_BtlPromiseCommon_C.GuiActorStateInit
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlPromiseCommon_C::GuiActorStateInit(bool Flag, int32 Param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPromiseCommon_C", "GuiActorStateInit");

	Params::BP_BtlPromiseCommon_C_GuiActorStateInit Parms{};

	Parms.Flag = Flag;
	Parms.Param = Param;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlPromiseCommon.BP_BtlPromiseCommon_C.CallCANCEL
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlPromiseCommon_C::CallCANCEL()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPromiseCommon_C", "CallCANCEL");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlPromiseCommon.BP_BtlPromiseCommon_C.CallOK
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlPromiseCommon_C::CallOK()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPromiseCommon_C", "CallOK");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlPromiseCommon.BP_BtlPromiseCommon_C.ChangeStatePromice
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlPromiseCommon_C::ChangeStatePromice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPromiseCommon_C", "ChangeStatePromice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlPromiseCommon.BP_BtlPromiseCommon_C.GuiActorBeginPlay
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlPromiseCommon_C::GuiActorBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPromiseCommon_C", "GuiActorBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlPromiseCommon.BP_BtlPromiseCommon_C.Start OutAnime Decide
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlPromiseCommon_C::Start_OutAnime_Decide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPromiseCommon_C", "Start OutAnime Decide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlPromiseCommon.BP_BtlPromiseCommon_C.Start OutAnime
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlPromiseCommon_C::Start_OutAnime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPromiseCommon_C", "Start OutAnime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlPromiseCommon.BP_BtlPromiseCommon_C.Start In Anime
// (BlueprintCallable, BlueprintEvent)

void ABP_BtlPromiseCommon_C::Start_In_Anime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPromiseCommon_C", "Start In Anime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlPromiseCommon.BP_BtlPromiseCommon_C.OutAnimeDecide__UpdateFunc
// (BlueprintEvent)

void ABP_BtlPromiseCommon_C::OutAnimeDecide__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPromiseCommon_C", "OutAnimeDecide__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlPromiseCommon.BP_BtlPromiseCommon_C.OutAnimeDecide__FinishedFunc
// (BlueprintEvent)

void ABP_BtlPromiseCommon_C::OutAnimeDecide__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPromiseCommon_C", "OutAnimeDecide__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlPromiseCommon.BP_BtlPromiseCommon_C.OutAnime__UpdateFunc
// (BlueprintEvent)

void ABP_BtlPromiseCommon_C::OutAnime__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPromiseCommon_C", "OutAnime__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlPromiseCommon.BP_BtlPromiseCommon_C.OutAnime__FinishedFunc
// (BlueprintEvent)

void ABP_BtlPromiseCommon_C::OutAnime__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPromiseCommon_C", "OutAnime__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlPromiseCommon.BP_BtlPromiseCommon_C.InAnime__8. KeyStart__EventFunc
// (BlueprintEvent)

void ABP_BtlPromiseCommon_C::InAnime__8__KeyStart__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPromiseCommon_C", "InAnime__8. KeyStart__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlPromiseCommon.BP_BtlPromiseCommon_C.InAnime__UpdateFunc
// (BlueprintEvent)

void ABP_BtlPromiseCommon_C::InAnime__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPromiseCommon_C", "InAnime__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlPromiseCommon.BP_BtlPromiseCommon_C.InAnime__FinishedFunc
// (BlueprintEvent)

void ABP_BtlPromiseCommon_C::InAnime__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPromiseCommon_C", "InAnime__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlPromiseCommon.BP_BtlPromiseCommon_C.UnbindAllAction
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlPromiseCommon_C::UnbindAllAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPromiseCommon_C", "UnbindAllAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlPromiseCommon.BP_BtlPromiseCommon_C.CreateRectPrimitive
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector2D                        Size                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FColor                           Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FBtlGuiVertex>            NewParam                                               (Parm, OutParm)

void ABP_BtlPromiseCommon_C::CreateRectPrimitive(const struct FVector2D& Size, const struct FColor& Color, TArray<struct FBtlGuiVertex>* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPromiseCommon_C", "CreateRectPrimitive");

	Params::BP_BtlPromiseCommon_C_CreateRectPrimitive Parms{};

	Parms.Size = std::move(Size);
	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = std::move(Parms.NewParam);
}


// Function BP_BtlPromiseCommon.BP_BtlPromiseCommon_C.UpdateAnimation
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlPromiseCommon_C::UpdateAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPromiseCommon_C", "UpdateAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlPromiseCommon.BP_BtlPromiseCommon_C.ChangeColorButton
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlPromiseCommon_C::ChangeColorButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPromiseCommon_C", "ChangeColorButton");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlPromiseCommon.BP_BtlPromiseCommon_C.InitCancelAvaialble
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_BtlPromiseCommon_C::InitCancelAvaialble()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPromiseCommon_C", "InitCancelAvaialble");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlPromiseCommon.BP_BtlPromiseCommon_C.ActionEnd
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlPromiseCommon_C::ActionEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPromiseCommon_C", "ActionEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlPromiseCommon.BP_BtlPromiseCommon_C.Lerp Vector 2D
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector2D                        From                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        To                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlPromiseCommon_C::Lerp_Vector_2D(const struct FVector2D& From, const struct FVector2D& To, float Value, struct FVector2D* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPromiseCommon_C", "Lerp Vector 2D");

	Params::BP_BtlPromiseCommon_C_Lerp_Vector_2D Parms{};

	Parms.From = std::move(From);
	Parms.To = std::move(To);
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = std::move(Parms.Out);
}


// Function BP_BtlPromiseCommon.BP_BtlPromiseCommon_C.EnableKeyInput
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlPromiseCommon_C::EnableKeyInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPromiseCommon_C", "EnableKeyInput");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlPromiseCommon.BP_BtlPromiseCommon_C.ActionDecide
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlPromiseCommon_C::ActionDecide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPromiseCommon_C", "ActionDecide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlPromiseCommon.BP_BtlPromiseCommon_C.RefrectLocalizeData
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BtlPromiseCommon_C::RefrectLocalizeData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlPromiseCommon_C", "RefrectLocalizeData");

	UObject::ProcessEvent(Func, nullptr);
}

}

