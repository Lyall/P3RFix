#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CharacterBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CharacterBase.BP_CharacterBase_C
// 0x0070 (0x0610 - 0x05A0)
class ABP_CharacterBase_C : public ACharacterBaseCore
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class ABP_CharaPointLight_C*>          OverlapPointLights;                                // 0x05A8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	float                                         StartPosition_VG;                                  // 0x05B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndPosition_VG;                                    // 0x05BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       DynamicMIs;                                        // 0x05C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UMeshComponent*>                 Meshes;                                            // 0x05D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          bAllPointLightsMode;                               // 0x05E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E1[0x7];                                      // 0x05E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_CharaPointLight_C*>          AllPointLights;                                    // 0x05E8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ABP_CharaPointLight_C*>          ClosestPointLights;                                // 0x05F8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	float                                         LastRenderTimeOnScreen;                            // 0x0608(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_CharacterBase(int32 EntryPoint);
	void Event_ResetAllPointLightsMode();
	void Event_GetAllCharaPointLights();
	void LoadEndEvent();
	void ReceiveActorEndOverlap(class AActor* OtherActor);
	void ReceiveActorBeginOverlap(class AActor* OtherActor);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void CreateDMI(class UMeshComponent* MeshComponent);
	void SetDMIParameter_CS(class UMeshComponent* MeshComponent);
	void SetPointLightParameter(class UMaterialInstanceDynamic* MIDObjectReference);
	void SetDMIParameter_Tick();
	void SetScalarParameterValueEx(class UMaterialInstanceDynamic* Material, class FName ParameterName, float ParameterValue);
	void GetClosestPointLights(TArray<class ABP_CharaPointLight_C*>& PointLights, int32 NumOfLights);
	void SetOutlineMaterialParameter(class UMeshComponent* MeshComponent);
	void GetMeshChildlenComponents();
	void SetVectorParameterValueEx(class UMaterialInstanceDynamic* Material, class FName ParameterName, const struct FLinearColor& ParameterValue);
	void Set_Saccade(bool Enable);
	void Set_No_Blink(bool Enable);
	void Get_All_Chara_Point_Lights();
	void ResetAllPointLightsMode();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CharacterBase_C">();
	}
	static class ABP_CharacterBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CharacterBase_C>();
	}
};
static_assert(alignof(ABP_CharacterBase_C) == 0x000010, "Wrong alignment on ABP_CharacterBase_C");
static_assert(sizeof(ABP_CharacterBase_C) == 0x000610, "Wrong size on ABP_CharacterBase_C");
static_assert(offsetof(ABP_CharacterBase_C, UberGraphFrame) == 0x0005A0, "Member 'ABP_CharacterBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CharacterBase_C, OverlapPointLights) == 0x0005A8, "Member 'ABP_CharacterBase_C::OverlapPointLights' has a wrong offset!");
static_assert(offsetof(ABP_CharacterBase_C, StartPosition_VG) == 0x0005B8, "Member 'ABP_CharacterBase_C::StartPosition_VG' has a wrong offset!");
static_assert(offsetof(ABP_CharacterBase_C, EndPosition_VG) == 0x0005BC, "Member 'ABP_CharacterBase_C::EndPosition_VG' has a wrong offset!");
static_assert(offsetof(ABP_CharacterBase_C, DynamicMIs) == 0x0005C0, "Member 'ABP_CharacterBase_C::DynamicMIs' has a wrong offset!");
static_assert(offsetof(ABP_CharacterBase_C, Meshes) == 0x0005D0, "Member 'ABP_CharacterBase_C::Meshes' has a wrong offset!");
static_assert(offsetof(ABP_CharacterBase_C, bAllPointLightsMode) == 0x0005E0, "Member 'ABP_CharacterBase_C::bAllPointLightsMode' has a wrong offset!");
static_assert(offsetof(ABP_CharacterBase_C, AllPointLights) == 0x0005E8, "Member 'ABP_CharacterBase_C::AllPointLights' has a wrong offset!");
static_assert(offsetof(ABP_CharacterBase_C, ClosestPointLights) == 0x0005F8, "Member 'ABP_CharacterBase_C::ClosestPointLights' has a wrong offset!");
static_assert(offsetof(ABP_CharacterBase_C, LastRenderTimeOnScreen) == 0x000608, "Member 'ABP_CharacterBase_C::LastRenderTimeOnScreen' has a wrong offset!");

}

