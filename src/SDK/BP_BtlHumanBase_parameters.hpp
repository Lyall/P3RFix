#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtlHumanBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Xrd777_structs.hpp"
#include "FBtlAttackSEParam_structs.hpp"
#include "FBtlAttackSEExParam_structs.hpp"
#include "Engine_structs.hpp"
#include "FBtlTheurgiaSeq_structs.hpp"


namespace SDK::Params
{

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.ExecuteUbergraph_BP_BtlHumanBase
// 0x0AD0 (0x0AD0 - 0x0000)
struct BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_BtlFadeSync_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMesh_SkeletalMesh;             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BtlFadeSync_ReturnValue_1;                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         K2Node_DynamicCast_AsLevel_Sequence;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALevelSequenceActor*                    CallFunc_CreateLevelSequencePlayer_OutActor;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_CreateLevelSequencePlayer_ReturnValue;    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMesh_SkeletalMesh_1;           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMesh_SkeletalMesh_2;           // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0084(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_3;        // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96[0x2];                                       // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMesh_SkeletalMesh_3;           // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x00A4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMesh_SkeletalMesh_4;           // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMesh_SkeletalMesh_5;           // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         K2Node_DynamicCast_AsLevel_Sequence_1;             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_2;                       // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALevelSequenceActor*                    CallFunc_CreateLevelSequencePlayer_OutActor_1;     // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_CreateLevelSequencePlayer_ReturnValue_1;  // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x00F8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0108(0x0010)(ZeroConstructor, NoDestructor)
	class UObject*                                Temp_object_Variable_2;                            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         K2Node_DynamicCast_AsLevel_Sequence_2;             // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12A[0x6];                                      // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ALevelSequenceActor*                    CallFunc_CreateLevelSequencePlayer_OutActor_2;     // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_CreateLevelSequencePlayer_ReturnValue_2;  // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetSceneMontage_SceneAnimMontage;         // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_4;        // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_5;        // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_153[0x5];                                      // 0x0153(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_3;                       // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMesh_SkeletalMesh_6;           // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckUsingTakeoverOtherCamera_ReturnValue; // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckLoaded_ReturnValue;                  // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_172[0x6];                                      // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMesh_SkeletalMesh_7;           // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_2;      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAstreaColosseoEnemy_ReturnValue;        // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_182[0x6];                                      // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable_3;                            // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System;               // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         CallFunc_GetEffect_ReturnValue;                    // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded_4;                       // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x01B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetSceneMontage_SceneAnimMontage_1;       // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetSceneMontage_SceneAnimMontage_2;       // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetSceneMontage_SceneAnimMontage_3;       // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1EA[0x2];                                      // 0x01EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x01EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x01F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_6;            // 0x01FC(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_7;            // 0x020C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_BtlFadeSync_ReturnValue_2;                // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21D[0x3];                                      // 0x021D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckLoaded_ReturnValue_1;                // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         CallFunc_GetEffect_ReturnValue_1;                  // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_8;            // 0x0238(0x0010)(ZeroConstructor, NoDestructor)
	class UNiagaraSystem*                         CallFunc_GetEffect_ReturnValue_2;                  // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckLoaded_ReturnValue_2;                // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x3];                                      // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x0254(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_9;            // 0x0260(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_10;           // 0x0278(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable_4;                            // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded_5;                       // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         K2Node_DynamicCast_AsLevel_Sequence_3;             // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALevelSequenceActor*                    CallFunc_CreateLevelSequencePlayer_OutActor_3;     // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_CreateLevelSequencePlayer_ReturnValue_3;  // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 Temp_softobject_Variable;                          // 0x02C0(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 Temp_softobject_Variable_1;                        // 0x02E8(0x0028)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311[0x3];                                      // 0x0311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_1;                              // 0x0314(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 K2Node_Select_Default;                             // 0x0320(0x0028)(HasGetValueTypeHash)
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0350(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0380(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x038C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0398(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4[0x4];                                      // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x03A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_1;         // 0x03B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x03E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x03EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x03F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_404[0x4];                                      // 0x0404(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_1;      // 0x0408(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          CallFunc_GetTheurgiaSummonEffect_Effect;           // 0x0410(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingAstrea_ReturnValue;              // 0x0439(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x043A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43B[0x1];                                      // 0x043B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_5;                   // 0x043C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Hide;                           // 0x0444(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_445[0x3];                                      // 0x0445(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_11;           // 0x0448(0x0010)(ZeroConstructor, NoDestructor)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_2;      // 0x0458(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStrega_ReturnValue;                     // 0x0461(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_462[0x2];                                      // 0x0462(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_6;                   // 0x0464(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_6;        // 0x046C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBadStatusEscape_ReturnValue;         // 0x046D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46E[0x2];                                      // 0x046E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_12;           // 0x0470(0x0010)(ZeroConstructor, NoDestructor)
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_7;        // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBadStatusEscape_ReturnValue_1;       // 0x0489(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x048A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48B[0x5];                                      // 0x048B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CharacterBase_C*                    CallFunc_GetAppCharacterActor_Character;           // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_7;                   // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_13;           // 0x04A0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Check_Theurgia_Need_Common_Skill_Scene_ReturnValue; // 0x04B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B2[0x2];                                      // 0x04B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_8;                   // 0x04B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BC[0x4];                                      // 0x04BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_SpawnFukaForTheurgia_ReturnValue;         // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base;        // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckReadyCharacterBP_ReturnValue;        // 0x04D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D2[0x2];                                      // 0x04D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_14;           // 0x04D4(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsSkillFukaTheurgia_ReturnValue;          // 0x04E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckUsingTakeoverOtherCamera_ReturnValue_1; // 0x04E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ProcPreSkill_DonePreSkillCamera;          // 0x04E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E7[0x1];                                      // 0x04E7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_9;                   // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x04F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x04F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckReadyFukaForTheurgia_ReturnValue;    // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x04F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FA[0x2];                                      // 0x04FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_15;           // 0x04FC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_50C[0x4];                                      // 0x050C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlHumanBase_C*                     K2Node_DynamicCast_AsBP_Btl_Human_Base;            // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_519[0x7];                                      // 0x0519(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetSceneMontage_SceneAnimMontage_4;       // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSkillOrgia_ReturnValue;                 // 0x0529(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSkillFukaTheurgia_ReturnValue_1;        // 0x052A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52B[0x1];                                      // 0x052B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_2;                              // 0x052C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_534[0x4];                                      // 0x0534(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlHumanBase_C*                     K2Node_DynamicCast_AsBP_Btl_Human_Base_1;          // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_541[0x7];                                      // 0x0541(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_GetPersona_ReturnValue;                   // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlPersonaBase_C*                   K2Node_DynamicCast_AsBP_Btl_Persona_Base;          // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_559[0x7];                                      // 0x0559(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_GetPersona_ReturnValue_1;                 // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSkillMixraid_ReturnValue;               // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_569[0x7];                                      // 0x0569(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlPersonaBase_C*                   K2Node_DynamicCast_AsBP_Btl_Persona_Base_1;        // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_579[0x3];                                      // 0x0579(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_10;                  // 0x057C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_16;           // 0x0584(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0594(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOrgia_ReturnValue;                      // 0x0595(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_596[0x2];                                      // 0x0596(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_5;          // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSkillFukaTheurgia_ReturnValue_2;        // 0x059C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x059D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59E[0x2];                                      // 0x059E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlHumanBase_C*                     K2Node_DynamicCast_AsBP_Btl_Human_Base_2;          // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckTheurgiaPersonaKeepShowing_Show;     // 0x05A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AA[0x2];                                      // 0x05AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_11;                  // 0x05AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingOffensiveSkill_ReturnValue;        // 0x05B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B5[0x3];                                      // 0x05B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_17;           // 0x05B8(0x0010)(ZeroConstructor, NoDestructor)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_1;          // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FQualifiedFrameTime                    CallFunc_GetEndTime_ReturnValue;                   // 0x05D8(0x0010)(NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_5;                            // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue; // 0x05F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F4[0x4];                                      // 0x05F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_601[0x7];                                      // 0x0601(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0608(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_6;          // 0x0610(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SyncModelsForEvent_ReturnValue;           // 0x0614(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0615(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_616[0x2];                                      // 0x0616(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CallFunc_GetActionTargets_ReturnValue;             // 0x0618(0x0010)(ReferenceParm)
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_12;                  // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_18;           // 0x0638(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_7;          // 0x0648(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x064C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64D[0x3];                                      // 0x064D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_8;          // 0x0650(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_654[0x4];                                      // 0x0654(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_2;          // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_13;                  // 0x0660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_9;          // 0x0668(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnemy_ReturnValue;                      // 0x066C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsManualOperation_ReturnValue;            // 0x066D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsManualOperation_ReturnValue_1;          // 0x066E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x066F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPlayedStandbyCamera_ReturnValue;     // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_671[0x3];                                      // 0x0671(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_19;           // 0x0674(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0684(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_685[0x3];                                      // 0x0685(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_14;                  // 0x0688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_10;         // 0x0690(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_694[0x4];                                      // 0x0694(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CallFunc_GetActionTargets_ReturnValue_1;           // 0x0698(0x0010)(ReferenceParm)
	class ABtlActor*                              CallFunc_Array_Get_Item_1;                         // 0x06A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base_1;      // 0x06B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x06B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B9[0x3];                                      // 0x06B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_20;           // 0x06BC(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_11;         // 0x06CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x06D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D1[0x7];                                      // 0x06D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CallFunc_GetActionTargets_ReturnValue_2;           // 0x06D8(0x0010)(ReferenceParm)
	class FName                                   Temp_name_Variable_3;                              // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_12;         // 0x06F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F4[0x4];                                      // 0x06F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CallFunc_GetAllCharacterList_ReturnValue;          // 0x06F8(0x0010)(ReferenceParm)
	class FName                                   K2Node_CustomEvent_NotifyName_15;                  // 0x0708(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BtlFadeSync_ReturnValue_3;                // 0x0710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_711[0x7];                                      // 0x0711(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CallFunc_GetActionTargets_ReturnValue_3;           // 0x0718(0x0010)(ReferenceParm)
	class ABtlActor*                              CallFunc_Array_Get_Item_2;                         // 0x0728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_21;           // 0x0730(0x0010)(ZeroConstructor, NoDestructor)
	EBtlSceneAnimationType                        K2Node_CustomEvent_type_1;                         // 0x0740(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBtlSceneAnimationType                        K2Node_CustomEvent_Next;                           // 0x0741(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_742[0x2];                                      // 0x0742(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_13;         // 0x0744(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetSceneMontage_SceneAnimMontage_5;       // 0x0748(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0750(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_751[0x7];                                      // 0x0751(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetSceneMontage_SceneAnimMontage_6;       // 0x0758(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetSceneMontage_SceneAnimMontage_7;       // 0x0760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1; // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0770(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0771(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_772[0x6];                                      // 0x0772(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetSceneMontage_SceneAnimMontage_8;       // 0x0778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x0780(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_781[0x7];                                      // 0x0781(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetSceneMontage_SceneAnimMontage_9;       // 0x0788(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetSceneMontage_SceneAnimMontage_10;      // 0x0790(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2; // 0x0798(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x07A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x07A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBtlSceneAnimationType                        K2Node_CustomEvent_type;                           // 0x07A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A3[0x1];                                      // 0x07A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Blend;                          // 0x07A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_WithForceUpdate;                // 0x07A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_3;      // 0x07A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7AA[0x6];                                      // 0x07AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetSceneMontage_SceneAnimMontage_11;      // 0x07B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x07B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B9[0x7];                                      // 0x07B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetSceneMontage_SceneAnimMontage_12;      // 0x07C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetSceneMontage_SceneAnimMontage_13;      // 0x07C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3; // 0x07D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x07D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x07D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7DA[0x2];                                      // 0x07DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_16;                  // 0x07DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_22;           // 0x07E4(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsUsingOffensiveSkill_ReturnValue_1;      // 0x07F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F5[0x3];                                      // 0x07F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_17;                  // 0x07F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_23;           // 0x0800(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_14;         // 0x0810(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Get_Human_Notify_Notify_Name;             // 0x0814(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_8;        // 0x081C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81D[0x3];                                      // 0x081D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_18;                  // 0x0820(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0828(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_829[0x3];                                      // 0x0829(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_24;           // 0x082C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_19;                  // 0x083C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x0844(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_845[0x3];                                      // 0x0845(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_3;          // 0x0848(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_4;          // 0x0850(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_25;           // 0x0858(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x0868(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_869[0x7];                                      // 0x0869(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable_6;                            // 0x0870(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         K2Node_DynamicCast_AsLevel_Sequence_4;             // 0x0878(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x0880(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_881[0x3];                                      // 0x0881(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_15;         // 0x0884(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALevelSequenceActor*                    CallFunc_CreateLevelSequencePlayer_OutActor_4;     // 0x0888(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_CreateLevelSequencePlayer_ReturnValue_4;  // 0x0890(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckNeedToShowPersonaAtSummonShot_Show;  // 0x0898(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_899[0x7];                                      // 0x0899(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlPersonaBase_C*                   CallFunc_GetPersonaBP_BP_Btl_Persona;              // 0x08A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x08A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A9[0x7];                                      // 0x08A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_6;                       // 0x08B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x08B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8B9[0x3];                                      // 0x08B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_26;           // 0x08BC(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Get_Pre_Skill_Cam_Time_duration;          // 0x08CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Play_Pre_Skill_Cutin_Astrea_DelayTime;    // 0x08D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingAstrea_ReturnValue_1;            // 0x08D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D5[0x3];                                      // 0x08D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetCharaCameraRoot_CharaCameraRoot;       // 0x08D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x08E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0910(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0998(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_999[0x3];                                      // 0x0999(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_27;           // 0x099C(0x0010)(ZeroConstructor, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult_1;    // 0x09AC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue_1;       // 0x0A34(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_19;                   // 0x0A35(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A36[0x2];                                      // 0x0A36(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_28;           // 0x0A38(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_20;                   // 0x0A48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A49[0x3];                                      // 0x0A49(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_16;         // 0x0A4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_5;          // 0x0A50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0A58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_29;           // 0x0A5C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_30;           // 0x0A6C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_CriticalHindrance;                    // 0x0A7C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Rapid;                                // 0x0A7D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_HalfMode;                             // 0x0A7E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A7F[0x1];                                      // 0x0A7F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_31;           // 0x0A80(0x0010)(ZeroConstructor, NoDestructor)
	class UAppCharacterComp*                      CallFunc_GetAppCharacterComp_App_Character_Comp;   // 0x0A90(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CharacterBase_C*                    CallFunc_GetAppCharacterActor_Character_1;         // 0x0A98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCostumeChenged_ReturnValue;             // 0x0AA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_21;                   // 0x0AA1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA2[0x2];                                      // 0x0AA2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_32;           // 0x0AA4(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_Enable;                               // 0x0AB4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckNeedToDestroyPersonaForEvent_toDestroy; // 0x0AB5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x0AB6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AB7[0x1];                                      // 0x0AB7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlSummonGun_C*                     CallFunc_GetSummonGunBP_Gun;                       // 0x0AB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlSummonGun_C*                     CallFunc_GetSummonGunBP_Gun_1;                     // 0x0AC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_22;                   // 0x0AC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase) == 0x000010, "Wrong alignment on BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase");
static_assert(sizeof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase) == 0x000AD0, "Wrong size on BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, EntryPoint) == 0x000000, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_MakeLiteralByte_ReturnValue) == 0x000004, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_BtlFadeSync_ReturnValue) == 0x000018, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_BtlFadeSync_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetSkeletalMesh_SkeletalMesh) == 0x000020, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetSkeletalMesh_SkeletalMesh' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_BtlFadeSync_ReturnValue_1) == 0x000029, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_BtlFadeSync_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00002A, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x00002B, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_BooleanOR_ReturnValue) == 0x00002C, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, Temp_object_Variable) == 0x000030, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_DynamicCast_AsLevel_Sequence) == 0x000038, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_DynamicCast_AsLevel_Sequence' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_CreateLevelSequencePlayer_OutActor) == 0x000048, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_CreateLevelSequencePlayer_OutActor' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_CreateLevelSequencePlayer_ReturnValue) == 0x000050, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_CreateLevelSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetSkeletalMesh_SkeletalMesh_1) == 0x000058, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetSkeletalMesh_SkeletalMesh_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CustomEvent_Loaded_1) == 0x000060, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CreateDelegate_OutputDelegate_1) == 0x000068, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetSkeletalMesh_SkeletalMesh_2) == 0x000078, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetSkeletalMesh_SkeletalMesh_2' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x000080, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CreateDelegate_OutputDelegate_2) == 0x000084, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x000094, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_EqualEqual_NameName_ReturnValue_3) == 0x000095, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_EqualEqual_NameName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetSkeletalMesh_SkeletalMesh_3) == 0x000098, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetSkeletalMesh_SkeletalMesh_3' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_BooleanOR_ReturnValue_1) == 0x0000A0, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000A4, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetSkeletalMesh_SkeletalMesh_4) == 0x0000B8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetSkeletalMesh_SkeletalMesh_4' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetSkeletalMesh_SkeletalMesh_5) == 0x0000C0, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetSkeletalMesh_SkeletalMesh_5' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, Temp_object_Variable_1) == 0x0000C8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_DynamicCast_AsLevel_Sequence_1) == 0x0000D0, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_DynamicCast_AsLevel_Sequence_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_DynamicCast_bSuccess_1) == 0x0000D8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CustomEvent_Loaded_2) == 0x0000E0, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CustomEvent_Loaded_2' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_CreateLevelSequencePlayer_OutActor_1) == 0x0000E8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_CreateLevelSequencePlayer_OutActor_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_CreateLevelSequencePlayer_ReturnValue_1) == 0x0000F0, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_CreateLevelSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000F8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CreateDelegate_OutputDelegate_5) == 0x000108, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, Temp_object_Variable_2) == 0x000118, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_DynamicCast_AsLevel_Sequence_2) == 0x000120, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_DynamicCast_AsLevel_Sequence_2' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_DynamicCast_bSuccess_2) == 0x000128, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000129, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_CreateLevelSequencePlayer_OutActor_2) == 0x000130, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_CreateLevelSequencePlayer_OutActor_2' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_CreateLevelSequencePlayer_ReturnValue_2) == 0x000138, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_CreateLevelSequencePlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetSceneMontage_SceneAnimMontage) == 0x000140, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetSceneMontage_SceneAnimMontage' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsValid_ReturnValue) == 0x000148, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00014C, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_EqualEqual_NameName_ReturnValue_4) == 0x000150, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_EqualEqual_NameName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_EqualEqual_NameName_ReturnValue_5) == 0x000151, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_EqualEqual_NameName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_BooleanOR_ReturnValue_2) == 0x000152, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CustomEvent_Loaded_3) == 0x000158, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CustomEvent_Loaded_3' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000160, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000164, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetSkeletalMesh_SkeletalMesh_6) == 0x000168, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetSkeletalMesh_SkeletalMesh_6' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_CheckUsingTakeoverOtherCamera_ReturnValue) == 0x000170, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_CheckUsingTakeoverOtherCamera_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_CheckLoaded_ReturnValue) == 0x000171, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_CheckLoaded_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetSkeletalMesh_SkeletalMesh_7) == 0x000178, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetSkeletalMesh_SkeletalMesh_7' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_EqualEqual_FloatFloat_ReturnValue_2) == 0x000180, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_EqualEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsAstreaColosseoEnemy_ReturnValue) == 0x000181, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsAstreaColosseoEnemy_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, Temp_object_Variable_3) == 0x000188, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_DynamicCast_AsNiagara_System) == 0x000190, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_DynamicCast_AsNiagara_System' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_DynamicCast_bSuccess_3) == 0x000198, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetEffect_ReturnValue) == 0x0001A0, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CustomEvent_Loaded_4) == 0x0001A8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CustomEvent_Loaded_4' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x0001B0, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, Temp_name_Variable) == 0x0001B4, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0001BC, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetSceneMontage_SceneAnimMontage_1) == 0x0001C0, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetSceneMontage_SceneAnimMontage_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsValid_ReturnValue_1) == 0x0001C8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetSceneMontage_SceneAnimMontage_2) == 0x0001D0, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetSceneMontage_SceneAnimMontage_2' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetSceneMontage_SceneAnimMontage_3) == 0x0001D8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetSceneMontage_SceneAnimMontage_3' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x0001E0, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_SwitchEnum_CmpSuccess) == 0x0001E8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsValid_ReturnValue_2) == 0x0001E9, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CustomEvent_NotifyName) == 0x0001EC, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CustomEvent_NotifyName_1) == 0x0001F4, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CreateDelegate_OutputDelegate_6) == 0x0001FC, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CreateDelegate_OutputDelegate_7) == 0x00020C, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_BtlFadeSync_ReturnValue_2) == 0x00021C, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_BtlFadeSync_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CustomEvent_NotifyName_2) == 0x000220, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_CheckLoaded_ReturnValue_1) == 0x000228, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_CheckLoaded_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetEffect_ReturnValue_1) == 0x000230, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetEffect_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CreateDelegate_OutputDelegate_8) == 0x000238, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetEffect_ReturnValue_2) == 0x000248, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetEffect_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_CheckLoaded_ReturnValue_2) == 0x000250, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_CheckLoaded_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CustomEvent_NotifyName_3) == 0x000254, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00025C, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CreateDelegate_OutputDelegate_9) == 0x000260, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CustomEvent_NotifyName_4) == 0x000270, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CreateDelegate_OutputDelegate_10) == 0x000278, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000288, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, Temp_object_Variable_4) == 0x000290, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CustomEvent_Loaded_5) == 0x000298, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CustomEvent_Loaded_5' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_DynamicCast_AsLevel_Sequence_3) == 0x0002A0, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_DynamicCast_AsLevel_Sequence_3' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_DynamicCast_bSuccess_4) == 0x0002A8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_CreateLevelSequencePlayer_OutActor_3) == 0x0002B0, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_CreateLevelSequencePlayer_OutActor_3' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_CreateLevelSequencePlayer_ReturnValue_3) == 0x0002B8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_CreateLevelSequencePlayer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, Temp_softobject_Variable) == 0x0002C0, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, Temp_softobject_Variable_1) == 0x0002E8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, Temp_bool_Variable) == 0x000310, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, Temp_name_Variable_1) == 0x000314, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_Select_Default) == 0x000320, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetSocketTransform_ReturnValue) == 0x000350, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_BreakTransform_Location) == 0x000380, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_BreakTransform_Rotation) == 0x00038C, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_BreakTransform_Scale) == 0x000398, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x0003A8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetSocketTransform_ReturnValue_1) == 0x0003B0, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetSocketTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_BreakTransform_Location_1) == 0x0003E0, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_BreakTransform_Rotation_1) == 0x0003EC, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_BreakTransform_Scale_1) == 0x0003F8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_SpawnSystemAtLocation_ReturnValue_1) == 0x000408, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_SpawnSystemAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetTheurgiaSummonEffect_Effect) == 0x000410, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetTheurgiaSummonEffect_Effect' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsValid_ReturnValue_3) == 0x000438, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsPlayingAstrea_ReturnValue) == 0x000439, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsPlayingAstrea_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_BooleanAND_ReturnValue) == 0x00043A, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CustomEvent_NotifyName_5) == 0x00043C, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CustomEvent_NotifyName_5' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CustomEvent_Hide) == 0x000444, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CustomEvent_Hide' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CreateDelegate_OutputDelegate_11) == 0x000448, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_SpawnSystemAtLocation_ReturnValue_2) == 0x000458, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_SpawnSystemAtLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsValid_ReturnValue_4) == 0x000460, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsStrega_ReturnValue) == 0x000461, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsStrega_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CustomEvent_NotifyName_6) == 0x000464, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CustomEvent_NotifyName_6' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_EqualEqual_NameName_ReturnValue_6) == 0x00046C, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_EqualEqual_NameName_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_CheckBadStatusEscape_ReturnValue) == 0x00046D, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_CheckBadStatusEscape_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CreateDelegate_OutputDelegate_12) == 0x000470, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CustomEvent_Loaded) == 0x000480, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_EqualEqual_NameName_ReturnValue_7) == 0x000488, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_EqualEqual_NameName_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_CheckBadStatusEscape_ReturnValue_1) == 0x000489, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_CheckBadStatusEscape_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_BooleanOR_ReturnValue_3) == 0x00048A, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetAppCharacterActor_Character) == 0x000490, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetAppCharacterActor_Character' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CustomEvent_NotifyName_7) == 0x000498, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CustomEvent_NotifyName_7' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CreateDelegate_OutputDelegate_13) == 0x0004A0, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_BooleanAND_ReturnValue_1) == 0x0004B0, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_Check_Theurgia_Need_Common_Skill_Scene_ReturnValue) == 0x0004B1, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_Check_Theurgia_Need_Common_Skill_Scene_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CustomEvent_NotifyName_8) == 0x0004B4, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CustomEvent_NotifyName_8' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_SpawnFukaForTheurgia_ReturnValue) == 0x0004C0, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_SpawnFukaForTheurgia_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_DynamicCast_AsBP_Btl_Character_Base) == 0x0004C8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_DynamicCast_AsBP_Btl_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_DynamicCast_bSuccess_5) == 0x0004D0, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_CheckReadyCharacterBP_ReturnValue) == 0x0004D1, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_CheckReadyCharacterBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CreateDelegate_OutputDelegate_14) == 0x0004D4, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsSkillFukaTheurgia_ReturnValue) == 0x0004E4, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsSkillFukaTheurgia_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_CheckUsingTakeoverOtherCamera_ReturnValue_1) == 0x0004E5, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_CheckUsingTakeoverOtherCamera_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_ProcPreSkill_DonePreSkillCamera) == 0x0004E6, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_ProcPreSkill_DonePreSkillCamera' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CustomEvent_NotifyName_9) == 0x0004E8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CustomEvent_NotifyName_9' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x0004F0, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x0004F4, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_CheckReadyFukaForTheurgia_ReturnValue) == 0x0004F8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_CheckReadyFukaForTheurgia_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_BooleanAND_ReturnValue_2) == 0x0004F9, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CreateDelegate_OutputDelegate_15) == 0x0004FC, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_DynamicCast_AsBP_Btl_Human_Base) == 0x000510, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_DynamicCast_AsBP_Btl_Human_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_DynamicCast_bSuccess_6) == 0x000518, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetSceneMontage_SceneAnimMontage_4) == 0x000520, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetSceneMontage_SceneAnimMontage_4' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsValid_ReturnValue_5) == 0x000528, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsSkillOrgia_ReturnValue) == 0x000529, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsSkillOrgia_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsSkillFukaTheurgia_ReturnValue_1) == 0x00052A, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsSkillFukaTheurgia_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, Temp_name_Variable_2) == 0x00052C, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_DynamicCast_AsBP_Btl_Human_Base_1) == 0x000538, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_DynamicCast_AsBP_Btl_Human_Base_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_DynamicCast_bSuccess_7) == 0x000540, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetPersona_ReturnValue) == 0x000548, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetPersona_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_DynamicCast_AsBP_Btl_Persona_Base) == 0x000550, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_DynamicCast_AsBP_Btl_Persona_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_DynamicCast_bSuccess_8) == 0x000558, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetPersona_ReturnValue_1) == 0x000560, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetPersona_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsSkillMixraid_ReturnValue) == 0x000568, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsSkillMixraid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_DynamicCast_AsBP_Btl_Persona_Base_1) == 0x000570, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_DynamicCast_AsBP_Btl_Persona_Base_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_DynamicCast_bSuccess_9) == 0x000578, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CustomEvent_NotifyName_10) == 0x00057C, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CustomEvent_NotifyName_10' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CreateDelegate_OutputDelegate_16) == 0x000584, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsValid_ReturnValue_6) == 0x000594, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsOrgia_ReturnValue) == 0x000595, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsOrgia_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_Divide_FloatFloat_ReturnValue_5) == 0x000598, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_Divide_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsSkillFukaTheurgia_ReturnValue_2) == 0x00059C, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsSkillFukaTheurgia_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsValid_ReturnValue_7) == 0x00059D, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_DynamicCast_AsBP_Btl_Human_Base_2) == 0x0005A0, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_DynamicCast_AsBP_Btl_Human_Base_2' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_DynamicCast_bSuccess_10) == 0x0005A8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_CheckTheurgiaPersonaKeepShowing_Show) == 0x0005A9, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_CheckTheurgiaPersonaKeepShowing_Show' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CustomEvent_NotifyName_11) == 0x0005AC, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CustomEvent_NotifyName_11' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsUsingOffensiveSkill_ReturnValue) == 0x0005B4, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsUsingOffensiveSkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CreateDelegate_OutputDelegate_17) == 0x0005B8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetSequencePlayer_ReturnValue) == 0x0005C8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetSequencePlayer_ReturnValue_1) == 0x0005D0, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetEndTime_ReturnValue) == 0x0005D8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, Temp_object_Variable_5) == 0x0005E8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue) == 0x0005F0, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_DynamicCast_AsAnim_Montage) == 0x0005F8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_DynamicCast_bSuccess_11) == 0x000600, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000608, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_Divide_FloatFloat_ReturnValue_6) == 0x000610, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_Divide_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_SyncModelsForEvent_ReturnValue) == 0x000614, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_SyncModelsForEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_BooleanAND_ReturnValue_3) == 0x000615, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetActionTargets_ReturnValue) == 0x000618, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetActionTargets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_Array_Get_Item) == 0x000628, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CustomEvent_NotifyName_12) == 0x000630, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CustomEvent_NotifyName_12' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CreateDelegate_OutputDelegate_18) == 0x000638, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_Divide_FloatFloat_ReturnValue_7) == 0x000648, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_Divide_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_BooleanAND_ReturnValue_4) == 0x00064C, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_Divide_FloatFloat_ReturnValue_8) == 0x000650, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_Divide_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetSequencePlayer_ReturnValue_2) == 0x000658, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetSequencePlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CustomEvent_NotifyName_13) == 0x000660, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CustomEvent_NotifyName_13' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_Divide_FloatFloat_ReturnValue_9) == 0x000668, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_Divide_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsEnemy_ReturnValue) == 0x00066C, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsEnemy_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsManualOperation_ReturnValue) == 0x00066D, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsManualOperation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsManualOperation_ReturnValue_1) == 0x00066E, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsManualOperation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_Not_PreBool_ReturnValue) == 0x00066F, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_CheckPlayedStandbyCamera_ReturnValue) == 0x000670, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_CheckPlayedStandbyCamera_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CreateDelegate_OutputDelegate_19) == 0x000674, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CreateDelegate_OutputDelegate_19' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsValid_ReturnValue_8) == 0x000684, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CustomEvent_NotifyName_14) == 0x000688, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CustomEvent_NotifyName_14' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_Divide_FloatFloat_ReturnValue_10) == 0x000690, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_Divide_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetActionTargets_ReturnValue_1) == 0x000698, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetActionTargets_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_Array_Get_Item_1) == 0x0006A8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_DynamicCast_AsBP_Btl_Character_Base_1) == 0x0006B0, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_DynamicCast_AsBP_Btl_Character_Base_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_DynamicCast_bSuccess_12) == 0x0006B8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CreateDelegate_OutputDelegate_20) == 0x0006BC, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CreateDelegate_OutputDelegate_20' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_Divide_FloatFloat_ReturnValue_11) == 0x0006CC, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_Divide_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsValid_ReturnValue_9) == 0x0006D0, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetActionTargets_ReturnValue_2) == 0x0006D8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetActionTargets_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, Temp_name_Variable_3) == 0x0006E8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_Divide_FloatFloat_ReturnValue_12) == 0x0006F0, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_Divide_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetAllCharacterList_ReturnValue) == 0x0006F8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetAllCharacterList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CustomEvent_NotifyName_15) == 0x000708, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CustomEvent_NotifyName_15' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_BtlFadeSync_ReturnValue_3) == 0x000710, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_BtlFadeSync_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetActionTargets_ReturnValue_3) == 0x000718, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetActionTargets_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_Array_Get_Item_2) == 0x000728, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CreateDelegate_OutputDelegate_21) == 0x000730, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CreateDelegate_OutputDelegate_21' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CustomEvent_type_1) == 0x000740, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CustomEvent_type_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CustomEvent_Next) == 0x000741, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CustomEvent_Next' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_Divide_FloatFloat_ReturnValue_13) == 0x000744, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_Divide_FloatFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetSceneMontage_SceneAnimMontage_5) == 0x000748, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetSceneMontage_SceneAnimMontage_5' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsValid_ReturnValue_10) == 0x000750, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetSceneMontage_SceneAnimMontage_6) == 0x000758, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetSceneMontage_SceneAnimMontage_6' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetSceneMontage_SceneAnimMontage_7) == 0x000760, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetSceneMontage_SceneAnimMontage_7' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1) == 0x000768, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_SwitchEnum_CmpSuccess_1) == 0x000770, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsValid_ReturnValue_11) == 0x000771, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetSceneMontage_SceneAnimMontage_8) == 0x000778, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetSceneMontage_SceneAnimMontage_8' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsValid_ReturnValue_12) == 0x000780, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetSceneMontage_SceneAnimMontage_9) == 0x000788, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetSceneMontage_SceneAnimMontage_9' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetSceneMontage_SceneAnimMontage_10) == 0x000790, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetSceneMontage_SceneAnimMontage_10' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2) == 0x000798, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_SwitchEnum_CmpSuccess_2) == 0x0007A0, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsValid_ReturnValue_13) == 0x0007A1, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CustomEvent_type) == 0x0007A2, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CustomEvent_type' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CustomEvent_Blend) == 0x0007A4, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CustomEvent_Blend' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CustomEvent_WithForceUpdate) == 0x0007A8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CustomEvent_WithForceUpdate' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_EqualEqual_FloatFloat_ReturnValue_3) == 0x0007A9, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_EqualEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetSceneMontage_SceneAnimMontage_11) == 0x0007B0, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetSceneMontage_SceneAnimMontage_11' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsValid_ReturnValue_14) == 0x0007B8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetSceneMontage_SceneAnimMontage_12) == 0x0007C0, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetSceneMontage_SceneAnimMontage_12' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetSceneMontage_SceneAnimMontage_13) == 0x0007C8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetSceneMontage_SceneAnimMontage_13' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3) == 0x0007D0, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_SwitchEnum_CmpSuccess_3) == 0x0007D8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsValid_ReturnValue_15) == 0x0007D9, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CustomEvent_NotifyName_16) == 0x0007DC, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CustomEvent_NotifyName_16' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CreateDelegate_OutputDelegate_22) == 0x0007E4, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CreateDelegate_OutputDelegate_22' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsUsingOffensiveSkill_ReturnValue_1) == 0x0007F4, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsUsingOffensiveSkill_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CustomEvent_NotifyName_17) == 0x0007F8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CustomEvent_NotifyName_17' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CreateDelegate_OutputDelegate_23) == 0x000800, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CreateDelegate_OutputDelegate_23' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_Divide_FloatFloat_ReturnValue_14) == 0x000810, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_Divide_FloatFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_Get_Human_Notify_Notify_Name) == 0x000814, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_Get_Human_Notify_Notify_Name' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_EqualEqual_NameName_ReturnValue_8) == 0x00081C, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_EqualEqual_NameName_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CustomEvent_NotifyName_18) == 0x000820, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CustomEvent_NotifyName_18' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000828, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CreateDelegate_OutputDelegate_24) == 0x00082C, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CreateDelegate_OutputDelegate_24' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CustomEvent_NotifyName_19) == 0x00083C, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CustomEvent_NotifyName_19' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsValid_ReturnValue_16) == 0x000844, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetSequencePlayer_ReturnValue_3) == 0x000848, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetSequencePlayer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetSequencePlayer_ReturnValue_4) == 0x000850, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetSequencePlayer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CreateDelegate_OutputDelegate_25) == 0x000858, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CreateDelegate_OutputDelegate_25' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsValid_ReturnValue_17) == 0x000868, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, Temp_object_Variable_6) == 0x000870, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_DynamicCast_AsLevel_Sequence_4) == 0x000878, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_DynamicCast_AsLevel_Sequence_4' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_DynamicCast_bSuccess_13) == 0x000880, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_Divide_FloatFloat_ReturnValue_15) == 0x000884, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_Divide_FloatFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_CreateLevelSequencePlayer_OutActor_4) == 0x000888, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_CreateLevelSequencePlayer_OutActor_4' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_CreateLevelSequencePlayer_ReturnValue_4) == 0x000890, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_CreateLevelSequencePlayer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_CheckNeedToShowPersonaAtSummonShot_Show) == 0x000898, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_CheckNeedToShowPersonaAtSummonShot_Show' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetPersonaBP_BP_Btl_Persona) == 0x0008A0, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetPersonaBP_BP_Btl_Persona' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_Not_PreBool_ReturnValue_1) == 0x0008A8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CustomEvent_Loaded_6) == 0x0008B0, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CustomEvent_Loaded_6' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsValid_ReturnValue_18) == 0x0008B8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CreateDelegate_OutputDelegate_26) == 0x0008BC, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CreateDelegate_OutputDelegate_26' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_Get_Pre_Skill_Cam_Time_duration) == 0x0008CC, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_Get_Pre_Skill_Cam_Time_duration' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_Play_Pre_Skill_Cutin_Astrea_DelayTime) == 0x0008D0, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_Play_Pre_Skill_Cutin_Astrea_DelayTime' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsPlayingAstrea_ReturnValue_1) == 0x0008D4, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsPlayingAstrea_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetCharaCameraRoot_CharaCameraRoot) == 0x0008D8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetCharaCameraRoot_CharaCameraRoot' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_MakeTransform_ReturnValue) == 0x0008E0, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000910, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000998, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CreateDelegate_OutputDelegate_27) == 0x00099C, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CreateDelegate_OutputDelegate_27' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_K2_SetActorTransform_SweepHitResult_1) == 0x0009AC, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_K2_SetActorTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_K2_SetActorTransform_ReturnValue_1) == 0x000A34, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_K2_SetActorTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsValid_ReturnValue_19) == 0x000A35, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsValid_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CreateDelegate_OutputDelegate_28) == 0x000A38, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CreateDelegate_OutputDelegate_28' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsValid_ReturnValue_20) == 0x000A48, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsValid_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_Divide_FloatFloat_ReturnValue_16) == 0x000A4C, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_Divide_FloatFloat_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetSequencePlayer_ReturnValue_5) == 0x000A50, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetSequencePlayer_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_Event_DeltaSeconds) == 0x000A58, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CreateDelegate_OutputDelegate_29) == 0x000A5C, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CreateDelegate_OutputDelegate_29' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CreateDelegate_OutputDelegate_30) == 0x000A6C, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CreateDelegate_OutputDelegate_30' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_Event_CriticalHindrance) == 0x000A7C, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_Event_CriticalHindrance' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_Event_Rapid) == 0x000A7D, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_Event_Rapid' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_Event_HalfMode) == 0x000A7E, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_Event_HalfMode' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CreateDelegate_OutputDelegate_31) == 0x000A80, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CreateDelegate_OutputDelegate_31' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetAppCharacterComp_App_Character_Comp) == 0x000A90, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetAppCharacterComp_App_Character_Comp' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetAppCharacterActor_Character_1) == 0x000A98, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetAppCharacterActor_Character_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsCostumeChenged_ReturnValue) == 0x000AA0, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsCostumeChenged_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsValid_ReturnValue_21) == 0x000AA1, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsValid_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_CreateDelegate_OutputDelegate_32) == 0x000AA4, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_CreateDelegate_OutputDelegate_32' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, K2Node_Event_Enable) == 0x000AB4, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::K2Node_Event_Enable' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_CheckNeedToDestroyPersonaForEvent_toDestroy) == 0x000AB5, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_CheckNeedToDestroyPersonaForEvent_toDestroy' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x000AB6, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetSummonGunBP_Gun) == 0x000AB8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetSummonGunBP_Gun' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_GetSummonGunBP_Gun_1) == 0x000AC0, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_GetSummonGunBP_Gun_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase, CallFunc_IsValid_ReturnValue_22) == 0x000AC8, "Member 'BP_BtlHumanBase_C_ExecuteUbergraph_BP_BtlHumanBase::CallFunc_IsValid_ReturnValue_22' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.SetupForEventMode
// 0x0001 (0x0001 - 0x0000)
struct BP_BtlHumanBase_C_SetupForEventMode final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_SetupForEventMode) == 0x000001, "Wrong alignment on BP_BtlHumanBase_C_SetupForEventMode");
static_assert(sizeof(BP_BtlHumanBase_C_SetupForEventMode) == 0x000001, "Wrong size on BP_BtlHumanBase_C_SetupForEventMode");
static_assert(offsetof(BP_BtlHumanBase_C_SetupForEventMode, Enable) == 0x000000, "Member 'BP_BtlHumanBase_C_SetupForEventMode::Enable' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.HideForOtherAction
// 0x0003 (0x0003 - 0x0000)
struct BP_BtlHumanBase_C_HideForOtherAction final
{
public:
	bool                                          CriticalHindrance;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Rapid;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HalfMode;                                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_HideForOtherAction) == 0x000001, "Wrong alignment on BP_BtlHumanBase_C_HideForOtherAction");
static_assert(sizeof(BP_BtlHumanBase_C_HideForOtherAction) == 0x000003, "Wrong size on BP_BtlHumanBase_C_HideForOtherAction");
static_assert(offsetof(BP_BtlHumanBase_C_HideForOtherAction, CriticalHindrance) == 0x000000, "Member 'BP_BtlHumanBase_C_HideForOtherAction::CriticalHindrance' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_HideForOtherAction, Rapid) == 0x000001, "Member 'BP_BtlHumanBase_C_HideForOtherAction::Rapid' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_HideForOtherAction, HalfMode) == 0x000002, "Member 'BP_BtlHumanBase_C_HideForOtherAction::HalfMode' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_BtlHumanBase_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_BtlHumanBase_C_ReceiveTick");
static_assert(sizeof(BP_BtlHumanBase_C_ReceiveTick) == 0x000004, "Wrong size on BP_BtlHumanBase_C_ReceiveTick");
static_assert(offsetof(BP_BtlHumanBase_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_BtlHumanBase_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.Request Scene Animation Blend
// 0x000C (0x000C - 0x0000)
struct BP_BtlHumanBase_C_Request_Scene_Animation_Blend final
{
public:
	EBtlSceneAnimationType                        Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Blend;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WithForceUpdate;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_Request_Scene_Animation_Blend) == 0x000004, "Wrong alignment on BP_BtlHumanBase_C_Request_Scene_Animation_Blend");
static_assert(sizeof(BP_BtlHumanBase_C_Request_Scene_Animation_Blend) == 0x00000C, "Wrong size on BP_BtlHumanBase_C_Request_Scene_Animation_Blend");
static_assert(offsetof(BP_BtlHumanBase_C_Request_Scene_Animation_Blend, Type) == 0x000000, "Member 'BP_BtlHumanBase_C_Request_Scene_Animation_Blend::Type' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_Request_Scene_Animation_Blend, Blend) == 0x000004, "Member 'BP_BtlHumanBase_C_Request_Scene_Animation_Blend::Blend' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_Request_Scene_Animation_Blend, WithForceUpdate) == 0x000008, "Member 'BP_BtlHumanBase_C_Request_Scene_Animation_Blend::WithForceUpdate' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.Request Scene Animation
// 0x0002 (0x0002 - 0x0000)
struct BP_BtlHumanBase_C_Request_Scene_Animation final
{
public:
	EBtlSceneAnimationType                        Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBtlSceneAnimationType                        Next;                                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_Request_Scene_Animation) == 0x000001, "Wrong alignment on BP_BtlHumanBase_C_Request_Scene_Animation");
static_assert(sizeof(BP_BtlHumanBase_C_Request_Scene_Animation) == 0x000002, "Wrong size on BP_BtlHumanBase_C_Request_Scene_Animation");
static_assert(offsetof(BP_BtlHumanBase_C_Request_Scene_Animation, Type) == 0x000000, "Member 'BP_BtlHumanBase_C_Request_Scene_Animation::Type' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_Request_Scene_Animation, Next) == 0x000001, "Member 'BP_BtlHumanBase_C_Request_Scene_Animation::Next' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.On Play Summon Effect For Cutin
// 0x0001 (0x0001 - 0x0000)
struct BP_BtlHumanBase_C_On_Play_Summon_Effect_For_Cutin final
{
public:
	bool                                          Hide;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_On_Play_Summon_Effect_For_Cutin) == 0x000001, "Wrong alignment on BP_BtlHumanBase_C_On_Play_Summon_Effect_For_Cutin");
static_assert(sizeof(BP_BtlHumanBase_C_On_Play_Summon_Effect_For_Cutin) == 0x000001, "Wrong size on BP_BtlHumanBase_C_On_Play_Summon_Effect_For_Cutin");
static_assert(offsetof(BP_BtlHumanBase_C_On_Play_Summon_Effect_For_Cutin, Hide) == 0x000000, "Member 'BP_BtlHumanBase_C_On_Play_Summon_Effect_For_Cutin::Hide' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.OnLoaded_39703C644BB8B7F1591CD194C587EC2C
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlHumanBase_C_OnLoaded_39703C644BB8B7F1591CD194C587EC2C final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_OnLoaded_39703C644BB8B7F1591CD194C587EC2C) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_OnLoaded_39703C644BB8B7F1591CD194C587EC2C");
static_assert(sizeof(BP_BtlHumanBase_C_OnLoaded_39703C644BB8B7F1591CD194C587EC2C) == 0x000008, "Wrong size on BP_BtlHumanBase_C_OnLoaded_39703C644BB8B7F1591CD194C587EC2C");
static_assert(offsetof(BP_BtlHumanBase_C_OnLoaded_39703C644BB8B7F1591CD194C587EC2C, Loaded) == 0x000000, "Member 'BP_BtlHumanBase_C_OnLoaded_39703C644BB8B7F1591CD194C587EC2C::Loaded' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.OnLoaded_62BAAE974A7FECD02D7AAD99953F99E8
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlHumanBase_C_OnLoaded_62BAAE974A7FECD02D7AAD99953F99E8 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_OnLoaded_62BAAE974A7FECD02D7AAD99953F99E8) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_OnLoaded_62BAAE974A7FECD02D7AAD99953F99E8");
static_assert(sizeof(BP_BtlHumanBase_C_OnLoaded_62BAAE974A7FECD02D7AAD99953F99E8) == 0x000008, "Wrong size on BP_BtlHumanBase_C_OnLoaded_62BAAE974A7FECD02D7AAD99953F99E8");
static_assert(offsetof(BP_BtlHumanBase_C_OnLoaded_62BAAE974A7FECD02D7AAD99953F99E8, Loaded) == 0x000000, "Member 'BP_BtlHumanBase_C_OnLoaded_62BAAE974A7FECD02D7AAD99953F99E8::Loaded' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.OnLoaded_7F54C18F4A1DDEE0300C7F825E27F00D
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlHumanBase_C_OnLoaded_7F54C18F4A1DDEE0300C7F825E27F00D final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_OnLoaded_7F54C18F4A1DDEE0300C7F825E27F00D) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_OnLoaded_7F54C18F4A1DDEE0300C7F825E27F00D");
static_assert(sizeof(BP_BtlHumanBase_C_OnLoaded_7F54C18F4A1DDEE0300C7F825E27F00D) == 0x000008, "Wrong size on BP_BtlHumanBase_C_OnLoaded_7F54C18F4A1DDEE0300C7F825E27F00D");
static_assert(offsetof(BP_BtlHumanBase_C_OnLoaded_7F54C18F4A1DDEE0300C7F825E27F00D, Loaded) == 0x000000, "Member 'BP_BtlHumanBase_C_OnLoaded_7F54C18F4A1DDEE0300C7F825E27F00D::Loaded' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.OnLoaded_F113DF37497B013814369485A8D3119A
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlHumanBase_C_OnLoaded_F113DF37497B013814369485A8D3119A final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_OnLoaded_F113DF37497B013814369485A8D3119A) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_OnLoaded_F113DF37497B013814369485A8D3119A");
static_assert(sizeof(BP_BtlHumanBase_C_OnLoaded_F113DF37497B013814369485A8D3119A) == 0x000008, "Wrong size on BP_BtlHumanBase_C_OnLoaded_F113DF37497B013814369485A8D3119A");
static_assert(offsetof(BP_BtlHumanBase_C_OnLoaded_F113DF37497B013814369485A8D3119A, Loaded) == 0x000000, "Member 'BP_BtlHumanBase_C_OnLoaded_F113DF37497B013814369485A8D3119A::Loaded' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.OnLoaded_11E5446D479BE331AD47C49D6E50B257
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlHumanBase_C_OnLoaded_11E5446D479BE331AD47C49D6E50B257 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_OnLoaded_11E5446D479BE331AD47C49D6E50B257) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_OnLoaded_11E5446D479BE331AD47C49D6E50B257");
static_assert(sizeof(BP_BtlHumanBase_C_OnLoaded_11E5446D479BE331AD47C49D6E50B257) == 0x000008, "Wrong size on BP_BtlHumanBase_C_OnLoaded_11E5446D479BE331AD47C49D6E50B257");
static_assert(offsetof(BP_BtlHumanBase_C_OnLoaded_11E5446D479BE331AD47C49D6E50B257, Loaded) == 0x000000, "Member 'BP_BtlHumanBase_C_OnLoaded_11E5446D479BE331AD47C49D6E50B257::Loaded' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.OnCompleted_61411224401ADF8B4648E68625998B92
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlHumanBase_C_OnCompleted_61411224401ADF8B4648E68625998B92 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_OnCompleted_61411224401ADF8B4648E68625998B92) == 0x000004, "Wrong alignment on BP_BtlHumanBase_C_OnCompleted_61411224401ADF8B4648E68625998B92");
static_assert(sizeof(BP_BtlHumanBase_C_OnCompleted_61411224401ADF8B4648E68625998B92) == 0x000008, "Wrong size on BP_BtlHumanBase_C_OnCompleted_61411224401ADF8B4648E68625998B92");
static_assert(offsetof(BP_BtlHumanBase_C_OnCompleted_61411224401ADF8B4648E68625998B92, NotifyName) == 0x000000, "Member 'BP_BtlHumanBase_C_OnCompleted_61411224401ADF8B4648E68625998B92::NotifyName' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.OnBlendOut_61411224401ADF8B4648E68625998B92
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlHumanBase_C_OnBlendOut_61411224401ADF8B4648E68625998B92 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_OnBlendOut_61411224401ADF8B4648E68625998B92) == 0x000004, "Wrong alignment on BP_BtlHumanBase_C_OnBlendOut_61411224401ADF8B4648E68625998B92");
static_assert(sizeof(BP_BtlHumanBase_C_OnBlendOut_61411224401ADF8B4648E68625998B92) == 0x000008, "Wrong size on BP_BtlHumanBase_C_OnBlendOut_61411224401ADF8B4648E68625998B92");
static_assert(offsetof(BP_BtlHumanBase_C_OnBlendOut_61411224401ADF8B4648E68625998B92, NotifyName) == 0x000000, "Member 'BP_BtlHumanBase_C_OnBlendOut_61411224401ADF8B4648E68625998B92::NotifyName' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.OnInterrupted_61411224401ADF8B4648E68625998B92
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlHumanBase_C_OnInterrupted_61411224401ADF8B4648E68625998B92 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_OnInterrupted_61411224401ADF8B4648E68625998B92) == 0x000004, "Wrong alignment on BP_BtlHumanBase_C_OnInterrupted_61411224401ADF8B4648E68625998B92");
static_assert(sizeof(BP_BtlHumanBase_C_OnInterrupted_61411224401ADF8B4648E68625998B92) == 0x000008, "Wrong size on BP_BtlHumanBase_C_OnInterrupted_61411224401ADF8B4648E68625998B92");
static_assert(offsetof(BP_BtlHumanBase_C_OnInterrupted_61411224401ADF8B4648E68625998B92, NotifyName) == 0x000000, "Member 'BP_BtlHumanBase_C_OnInterrupted_61411224401ADF8B4648E68625998B92::NotifyName' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.OnNotifyBegin_61411224401ADF8B4648E68625998B92
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlHumanBase_C_OnNotifyBegin_61411224401ADF8B4648E68625998B92 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_OnNotifyBegin_61411224401ADF8B4648E68625998B92) == 0x000004, "Wrong alignment on BP_BtlHumanBase_C_OnNotifyBegin_61411224401ADF8B4648E68625998B92");
static_assert(sizeof(BP_BtlHumanBase_C_OnNotifyBegin_61411224401ADF8B4648E68625998B92) == 0x000008, "Wrong size on BP_BtlHumanBase_C_OnNotifyBegin_61411224401ADF8B4648E68625998B92");
static_assert(offsetof(BP_BtlHumanBase_C_OnNotifyBegin_61411224401ADF8B4648E68625998B92, NotifyName) == 0x000000, "Member 'BP_BtlHumanBase_C_OnNotifyBegin_61411224401ADF8B4648E68625998B92::NotifyName' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.OnNotifyEnd_61411224401ADF8B4648E68625998B92
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlHumanBase_C_OnNotifyEnd_61411224401ADF8B4648E68625998B92 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_OnNotifyEnd_61411224401ADF8B4648E68625998B92) == 0x000004, "Wrong alignment on BP_BtlHumanBase_C_OnNotifyEnd_61411224401ADF8B4648E68625998B92");
static_assert(sizeof(BP_BtlHumanBase_C_OnNotifyEnd_61411224401ADF8B4648E68625998B92) == 0x000008, "Wrong size on BP_BtlHumanBase_C_OnNotifyEnd_61411224401ADF8B4648E68625998B92");
static_assert(offsetof(BP_BtlHumanBase_C_OnNotifyEnd_61411224401ADF8B4648E68625998B92, NotifyName) == 0x000000, "Member 'BP_BtlHumanBase_C_OnNotifyEnd_61411224401ADF8B4648E68625998B92::NotifyName' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.OnLoaded_8FD473CC4F8621DE7DFD9A81895B9A45
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlHumanBase_C_OnLoaded_8FD473CC4F8621DE7DFD9A81895B9A45 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_OnLoaded_8FD473CC4F8621DE7DFD9A81895B9A45) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_OnLoaded_8FD473CC4F8621DE7DFD9A81895B9A45");
static_assert(sizeof(BP_BtlHumanBase_C_OnLoaded_8FD473CC4F8621DE7DFD9A81895B9A45) == 0x000008, "Wrong size on BP_BtlHumanBase_C_OnLoaded_8FD473CC4F8621DE7DFD9A81895B9A45");
static_assert(offsetof(BP_BtlHumanBase_C_OnLoaded_8FD473CC4F8621DE7DFD9A81895B9A45, Loaded) == 0x000000, "Member 'BP_BtlHumanBase_C_OnLoaded_8FD473CC4F8621DE7DFD9A81895B9A45::Loaded' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.OnCompleted_61411224401ADF8B4648E6865C8C331A
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlHumanBase_C_OnCompleted_61411224401ADF8B4648E6865C8C331A final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_OnCompleted_61411224401ADF8B4648E6865C8C331A) == 0x000004, "Wrong alignment on BP_BtlHumanBase_C_OnCompleted_61411224401ADF8B4648E6865C8C331A");
static_assert(sizeof(BP_BtlHumanBase_C_OnCompleted_61411224401ADF8B4648E6865C8C331A) == 0x000008, "Wrong size on BP_BtlHumanBase_C_OnCompleted_61411224401ADF8B4648E6865C8C331A");
static_assert(offsetof(BP_BtlHumanBase_C_OnCompleted_61411224401ADF8B4648E6865C8C331A, NotifyName) == 0x000000, "Member 'BP_BtlHumanBase_C_OnCompleted_61411224401ADF8B4648E6865C8C331A::NotifyName' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.OnBlendOut_61411224401ADF8B4648E6865C8C331A
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlHumanBase_C_OnBlendOut_61411224401ADF8B4648E6865C8C331A final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_OnBlendOut_61411224401ADF8B4648E6865C8C331A) == 0x000004, "Wrong alignment on BP_BtlHumanBase_C_OnBlendOut_61411224401ADF8B4648E6865C8C331A");
static_assert(sizeof(BP_BtlHumanBase_C_OnBlendOut_61411224401ADF8B4648E6865C8C331A) == 0x000008, "Wrong size on BP_BtlHumanBase_C_OnBlendOut_61411224401ADF8B4648E6865C8C331A");
static_assert(offsetof(BP_BtlHumanBase_C_OnBlendOut_61411224401ADF8B4648E6865C8C331A, NotifyName) == 0x000000, "Member 'BP_BtlHumanBase_C_OnBlendOut_61411224401ADF8B4648E6865C8C331A::NotifyName' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.OnInterrupted_61411224401ADF8B4648E6865C8C331A
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlHumanBase_C_OnInterrupted_61411224401ADF8B4648E6865C8C331A final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_OnInterrupted_61411224401ADF8B4648E6865C8C331A) == 0x000004, "Wrong alignment on BP_BtlHumanBase_C_OnInterrupted_61411224401ADF8B4648E6865C8C331A");
static_assert(sizeof(BP_BtlHumanBase_C_OnInterrupted_61411224401ADF8B4648E6865C8C331A) == 0x000008, "Wrong size on BP_BtlHumanBase_C_OnInterrupted_61411224401ADF8B4648E6865C8C331A");
static_assert(offsetof(BP_BtlHumanBase_C_OnInterrupted_61411224401ADF8B4648E6865C8C331A, NotifyName) == 0x000000, "Member 'BP_BtlHumanBase_C_OnInterrupted_61411224401ADF8B4648E6865C8C331A::NotifyName' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.OnNotifyBegin_61411224401ADF8B4648E6865C8C331A
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlHumanBase_C_OnNotifyBegin_61411224401ADF8B4648E6865C8C331A final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_OnNotifyBegin_61411224401ADF8B4648E6865C8C331A) == 0x000004, "Wrong alignment on BP_BtlHumanBase_C_OnNotifyBegin_61411224401ADF8B4648E6865C8C331A");
static_assert(sizeof(BP_BtlHumanBase_C_OnNotifyBegin_61411224401ADF8B4648E6865C8C331A) == 0x000008, "Wrong size on BP_BtlHumanBase_C_OnNotifyBegin_61411224401ADF8B4648E6865C8C331A");
static_assert(offsetof(BP_BtlHumanBase_C_OnNotifyBegin_61411224401ADF8B4648E6865C8C331A, NotifyName) == 0x000000, "Member 'BP_BtlHumanBase_C_OnNotifyBegin_61411224401ADF8B4648E6865C8C331A::NotifyName' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.OnNotifyEnd_61411224401ADF8B4648E6865C8C331A
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlHumanBase_C_OnNotifyEnd_61411224401ADF8B4648E6865C8C331A final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_OnNotifyEnd_61411224401ADF8B4648E6865C8C331A) == 0x000004, "Wrong alignment on BP_BtlHumanBase_C_OnNotifyEnd_61411224401ADF8B4648E6865C8C331A");
static_assert(sizeof(BP_BtlHumanBase_C_OnNotifyEnd_61411224401ADF8B4648E6865C8C331A) == 0x000008, "Wrong size on BP_BtlHumanBase_C_OnNotifyEnd_61411224401ADF8B4648E6865C8C331A");
static_assert(offsetof(BP_BtlHumanBase_C_OnNotifyEnd_61411224401ADF8B4648E6865C8C331A, NotifyName) == 0x000000, "Member 'BP_BtlHumanBase_C_OnNotifyEnd_61411224401ADF8B4648E6865C8C331A::NotifyName' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.OnCompleted_61411224401ADF8B4648E686E3B9AB8E
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlHumanBase_C_OnCompleted_61411224401ADF8B4648E686E3B9AB8E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_OnCompleted_61411224401ADF8B4648E686E3B9AB8E) == 0x000004, "Wrong alignment on BP_BtlHumanBase_C_OnCompleted_61411224401ADF8B4648E686E3B9AB8E");
static_assert(sizeof(BP_BtlHumanBase_C_OnCompleted_61411224401ADF8B4648E686E3B9AB8E) == 0x000008, "Wrong size on BP_BtlHumanBase_C_OnCompleted_61411224401ADF8B4648E686E3B9AB8E");
static_assert(offsetof(BP_BtlHumanBase_C_OnCompleted_61411224401ADF8B4648E686E3B9AB8E, NotifyName) == 0x000000, "Member 'BP_BtlHumanBase_C_OnCompleted_61411224401ADF8B4648E686E3B9AB8E::NotifyName' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.OnBlendOut_61411224401ADF8B4648E686E3B9AB8E
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlHumanBase_C_OnBlendOut_61411224401ADF8B4648E686E3B9AB8E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_OnBlendOut_61411224401ADF8B4648E686E3B9AB8E) == 0x000004, "Wrong alignment on BP_BtlHumanBase_C_OnBlendOut_61411224401ADF8B4648E686E3B9AB8E");
static_assert(sizeof(BP_BtlHumanBase_C_OnBlendOut_61411224401ADF8B4648E686E3B9AB8E) == 0x000008, "Wrong size on BP_BtlHumanBase_C_OnBlendOut_61411224401ADF8B4648E686E3B9AB8E");
static_assert(offsetof(BP_BtlHumanBase_C_OnBlendOut_61411224401ADF8B4648E686E3B9AB8E, NotifyName) == 0x000000, "Member 'BP_BtlHumanBase_C_OnBlendOut_61411224401ADF8B4648E686E3B9AB8E::NotifyName' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.OnInterrupted_61411224401ADF8B4648E686E3B9AB8E
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlHumanBase_C_OnInterrupted_61411224401ADF8B4648E686E3B9AB8E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_OnInterrupted_61411224401ADF8B4648E686E3B9AB8E) == 0x000004, "Wrong alignment on BP_BtlHumanBase_C_OnInterrupted_61411224401ADF8B4648E686E3B9AB8E");
static_assert(sizeof(BP_BtlHumanBase_C_OnInterrupted_61411224401ADF8B4648E686E3B9AB8E) == 0x000008, "Wrong size on BP_BtlHumanBase_C_OnInterrupted_61411224401ADF8B4648E686E3B9AB8E");
static_assert(offsetof(BP_BtlHumanBase_C_OnInterrupted_61411224401ADF8B4648E686E3B9AB8E, NotifyName) == 0x000000, "Member 'BP_BtlHumanBase_C_OnInterrupted_61411224401ADF8B4648E686E3B9AB8E::NotifyName' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.OnNotifyBegin_61411224401ADF8B4648E686E3B9AB8E
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlHumanBase_C_OnNotifyBegin_61411224401ADF8B4648E686E3B9AB8E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_OnNotifyBegin_61411224401ADF8B4648E686E3B9AB8E) == 0x000004, "Wrong alignment on BP_BtlHumanBase_C_OnNotifyBegin_61411224401ADF8B4648E686E3B9AB8E");
static_assert(sizeof(BP_BtlHumanBase_C_OnNotifyBegin_61411224401ADF8B4648E686E3B9AB8E) == 0x000008, "Wrong size on BP_BtlHumanBase_C_OnNotifyBegin_61411224401ADF8B4648E686E3B9AB8E");
static_assert(offsetof(BP_BtlHumanBase_C_OnNotifyBegin_61411224401ADF8B4648E686E3B9AB8E, NotifyName) == 0x000000, "Member 'BP_BtlHumanBase_C_OnNotifyBegin_61411224401ADF8B4648E686E3B9AB8E::NotifyName' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.OnNotifyEnd_61411224401ADF8B4648E686E3B9AB8E
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlHumanBase_C_OnNotifyEnd_61411224401ADF8B4648E686E3B9AB8E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_OnNotifyEnd_61411224401ADF8B4648E686E3B9AB8E) == 0x000004, "Wrong alignment on BP_BtlHumanBase_C_OnNotifyEnd_61411224401ADF8B4648E686E3B9AB8E");
static_assert(sizeof(BP_BtlHumanBase_C_OnNotifyEnd_61411224401ADF8B4648E686E3B9AB8E) == 0x000008, "Wrong size on BP_BtlHumanBase_C_OnNotifyEnd_61411224401ADF8B4648E686E3B9AB8E");
static_assert(offsetof(BP_BtlHumanBase_C_OnNotifyEnd_61411224401ADF8B4648E686E3B9AB8E, NotifyName) == 0x000000, "Member 'BP_BtlHumanBase_C_OnNotifyEnd_61411224401ADF8B4648E686E3B9AB8E::NotifyName' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.OnCompleted_61411224401ADF8B4648E68664820763
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlHumanBase_C_OnCompleted_61411224401ADF8B4648E68664820763 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_OnCompleted_61411224401ADF8B4648E68664820763) == 0x000004, "Wrong alignment on BP_BtlHumanBase_C_OnCompleted_61411224401ADF8B4648E68664820763");
static_assert(sizeof(BP_BtlHumanBase_C_OnCompleted_61411224401ADF8B4648E68664820763) == 0x000008, "Wrong size on BP_BtlHumanBase_C_OnCompleted_61411224401ADF8B4648E68664820763");
static_assert(offsetof(BP_BtlHumanBase_C_OnCompleted_61411224401ADF8B4648E68664820763, NotifyName) == 0x000000, "Member 'BP_BtlHumanBase_C_OnCompleted_61411224401ADF8B4648E68664820763::NotifyName' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.OnBlendOut_61411224401ADF8B4648E68664820763
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlHumanBase_C_OnBlendOut_61411224401ADF8B4648E68664820763 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_OnBlendOut_61411224401ADF8B4648E68664820763) == 0x000004, "Wrong alignment on BP_BtlHumanBase_C_OnBlendOut_61411224401ADF8B4648E68664820763");
static_assert(sizeof(BP_BtlHumanBase_C_OnBlendOut_61411224401ADF8B4648E68664820763) == 0x000008, "Wrong size on BP_BtlHumanBase_C_OnBlendOut_61411224401ADF8B4648E68664820763");
static_assert(offsetof(BP_BtlHumanBase_C_OnBlendOut_61411224401ADF8B4648E68664820763, NotifyName) == 0x000000, "Member 'BP_BtlHumanBase_C_OnBlendOut_61411224401ADF8B4648E68664820763::NotifyName' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.OnInterrupted_61411224401ADF8B4648E68664820763
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlHumanBase_C_OnInterrupted_61411224401ADF8B4648E68664820763 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_OnInterrupted_61411224401ADF8B4648E68664820763) == 0x000004, "Wrong alignment on BP_BtlHumanBase_C_OnInterrupted_61411224401ADF8B4648E68664820763");
static_assert(sizeof(BP_BtlHumanBase_C_OnInterrupted_61411224401ADF8B4648E68664820763) == 0x000008, "Wrong size on BP_BtlHumanBase_C_OnInterrupted_61411224401ADF8B4648E68664820763");
static_assert(offsetof(BP_BtlHumanBase_C_OnInterrupted_61411224401ADF8B4648E68664820763, NotifyName) == 0x000000, "Member 'BP_BtlHumanBase_C_OnInterrupted_61411224401ADF8B4648E68664820763::NotifyName' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.OnNotifyBegin_61411224401ADF8B4648E68664820763
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlHumanBase_C_OnNotifyBegin_61411224401ADF8B4648E68664820763 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_OnNotifyBegin_61411224401ADF8B4648E68664820763) == 0x000004, "Wrong alignment on BP_BtlHumanBase_C_OnNotifyBegin_61411224401ADF8B4648E68664820763");
static_assert(sizeof(BP_BtlHumanBase_C_OnNotifyBegin_61411224401ADF8B4648E68664820763) == 0x000008, "Wrong size on BP_BtlHumanBase_C_OnNotifyBegin_61411224401ADF8B4648E68664820763");
static_assert(offsetof(BP_BtlHumanBase_C_OnNotifyBegin_61411224401ADF8B4648E68664820763, NotifyName) == 0x000000, "Member 'BP_BtlHumanBase_C_OnNotifyBegin_61411224401ADF8B4648E68664820763::NotifyName' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.OnNotifyEnd_61411224401ADF8B4648E68664820763
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlHumanBase_C_OnNotifyEnd_61411224401ADF8B4648E68664820763 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_OnNotifyEnd_61411224401ADF8B4648E68664820763) == 0x000004, "Wrong alignment on BP_BtlHumanBase_C_OnNotifyEnd_61411224401ADF8B4648E68664820763");
static_assert(sizeof(BP_BtlHumanBase_C_OnNotifyEnd_61411224401ADF8B4648E68664820763) == 0x000008, "Wrong size on BP_BtlHumanBase_C_OnNotifyEnd_61411224401ADF8B4648E68664820763");
static_assert(offsetof(BP_BtlHumanBase_C_OnNotifyEnd_61411224401ADF8B4648E68664820763, NotifyName) == 0x000000, "Member 'BP_BtlHumanBase_C_OnNotifyEnd_61411224401ADF8B4648E68664820763::NotifyName' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.OnLoaded_B9DF62C147F2F3F56F19DB98E259B881
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlHumanBase_C_OnLoaded_B9DF62C147F2F3F56F19DB98E259B881 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_OnLoaded_B9DF62C147F2F3F56F19DB98E259B881) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_OnLoaded_B9DF62C147F2F3F56F19DB98E259B881");
static_assert(sizeof(BP_BtlHumanBase_C_OnLoaded_B9DF62C147F2F3F56F19DB98E259B881) == 0x000008, "Wrong size on BP_BtlHumanBase_C_OnLoaded_B9DF62C147F2F3F56F19DB98E259B881");
static_assert(offsetof(BP_BtlHumanBase_C_OnLoaded_B9DF62C147F2F3F56F19DB98E259B881, Loaded) == 0x000000, "Member 'BP_BtlHumanBase_C_OnLoaded_B9DF62C147F2F3F56F19DB98E259B881::Loaded' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.SetupSequenceCamera
// 0x0100 (0x0100 - 0x0000)
struct BP_BtlHumanBase_C_SetupSequenceCamera final
{
public:
	class ALevelSequenceActor*                    Sequence_Actor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Sequence_Root;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACineCameraActor*                       Sequence_Camera;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Loop;                                              // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Blend_Time_Sec;                                    // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LoopNum;                                           // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0060(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_SetupSequenceCamera) == 0x000010, "Wrong alignment on BP_BtlHumanBase_C_SetupSequenceCamera");
static_assert(sizeof(BP_BtlHumanBase_C_SetupSequenceCamera) == 0x000100, "Wrong size on BP_BtlHumanBase_C_SetupSequenceCamera");
static_assert(offsetof(BP_BtlHumanBase_C_SetupSequenceCamera, Sequence_Actor) == 0x000000, "Member 'BP_BtlHumanBase_C_SetupSequenceCamera::Sequence_Actor' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetupSequenceCamera, Sequence_Root) == 0x000008, "Member 'BP_BtlHumanBase_C_SetupSequenceCamera::Sequence_Root' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetupSequenceCamera, Sequence_Camera) == 0x000010, "Member 'BP_BtlHumanBase_C_SetupSequenceCamera::Sequence_Camera' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetupSequenceCamera, Loop) == 0x000018, "Member 'BP_BtlHumanBase_C_SetupSequenceCamera::Loop' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetupSequenceCamera, Blend_Time_Sec) == 0x00001C, "Member 'BP_BtlHumanBase_C_SetupSequenceCamera::Blend_Time_Sec' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetupSequenceCamera, LoopNum) == 0x000020, "Member 'BP_BtlHumanBase_C_SetupSequenceCamera::LoopNum' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetupSequenceCamera, CallFunc_GetSequencePlayer_ReturnValue) == 0x000028, "Member 'BP_BtlHumanBase_C_SetupSequenceCamera::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetupSequenceCamera, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'BP_BtlHumanBase_C_SetupSequenceCamera::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetupSequenceCamera, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000060, "Member 'BP_BtlHumanBase_C_SetupSequenceCamera::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetupSequenceCamera, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0000E8, "Member 'BP_BtlHumanBase_C_SetupSequenceCamera::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetupSequenceCamera, CallFunc_GetPlayerController_ReturnValue) == 0x0000F0, "Member 'BP_BtlHumanBase_C_SetupSequenceCamera::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.CreateCharacter
// 0x0090 (0x0090 - 0x0000)
struct BP_BtlHumanBase_C_CreateCharacter final
{
public:
	int32                                         PlayerId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAppCharacterComp*                      CompWork;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAppCharWeaponType                            WeaponType;                                        // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAppCharWeaponType                            Temp_byte_Variable;                                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAppCharWeaponType                            Temp_byte_Variable_1;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CharacterBase_C*                    CallFunc_GetAppCharacterActor_Character;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAppCharWeaponType                            K2Node_Select_Default;                             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0xE];                                       // 0x0022(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetInitialTransform_trans;                // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AppKoromaru_C*                      CallFunc_FinishSpawningActor_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AppCharacter_C*                     CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAppCharWeaponType                            K2Node_Select_Default_1;                           // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_CreateCharacter) == 0x000010, "Wrong alignment on BP_BtlHumanBase_C_CreateCharacter");
static_assert(sizeof(BP_BtlHumanBase_C_CreateCharacter) == 0x000090, "Wrong size on BP_BtlHumanBase_C_CreateCharacter");
static_assert(offsetof(BP_BtlHumanBase_C_CreateCharacter, PlayerId) == 0x000000, "Member 'BP_BtlHumanBase_C_CreateCharacter::PlayerId' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CreateCharacter, CompWork) == 0x000008, "Member 'BP_BtlHumanBase_C_CreateCharacter::CompWork' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CreateCharacter, WeaponType) == 0x000010, "Member 'BP_BtlHumanBase_C_CreateCharacter::WeaponType' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CreateCharacter, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000011, "Member 'BP_BtlHumanBase_C_CreateCharacter::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CreateCharacter, Temp_byte_Variable) == 0x000012, "Member 'BP_BtlHumanBase_C_CreateCharacter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CreateCharacter, Temp_byte_Variable_1) == 0x000013, "Member 'BP_BtlHumanBase_C_CreateCharacter::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CreateCharacter, CallFunc_SelectInt_ReturnValue) == 0x000014, "Member 'BP_BtlHumanBase_C_CreateCharacter::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CreateCharacter, CallFunc_GetAppCharacterActor_Character) == 0x000018, "Member 'BP_BtlHumanBase_C_CreateCharacter::CallFunc_GetAppCharacterActor_Character' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CreateCharacter, Temp_bool_Variable) == 0x000020, "Member 'BP_BtlHumanBase_C_CreateCharacter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CreateCharacter, K2Node_Select_Default) == 0x000021, "Member 'BP_BtlHumanBase_C_CreateCharacter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CreateCharacter, CallFunc_GetInitialTransform_trans) == 0x000030, "Member 'BP_BtlHumanBase_C_CreateCharacter::CallFunc_GetInitialTransform_trans' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CreateCharacter, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000060, "Member 'BP_BtlHumanBase_C_CreateCharacter::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CreateCharacter, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000068, "Member 'BP_BtlHumanBase_C_CreateCharacter::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CreateCharacter, CallFunc_FinishSpawningActor_ReturnValue) == 0x000070, "Member 'BP_BtlHumanBase_C_CreateCharacter::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CreateCharacter, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000078, "Member 'BP_BtlHumanBase_C_CreateCharacter::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CreateCharacter, Temp_bool_Variable_1) == 0x000080, "Member 'BP_BtlHumanBase_C_CreateCharacter::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CreateCharacter, K2Node_Select_Default_1) == 0x000081, "Member 'BP_BtlHumanBase_C_CreateCharacter::K2Node_Select_Default_1' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.CheckReadyCharacterBP
// 0x0001 (0x0001 - 0x0000)
struct BP_BtlHumanBase_C_CheckReadyCharacterBP final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_CheckReadyCharacterBP) == 0x000001, "Wrong alignment on BP_BtlHumanBase_C_CheckReadyCharacterBP");
static_assert(sizeof(BP_BtlHumanBase_C_CheckReadyCharacterBP) == 0x000001, "Wrong size on BP_BtlHumanBase_C_CheckReadyCharacterBP");
static_assert(offsetof(BP_BtlHumanBase_C_CheckReadyCharacterBP, ReturnValue) == 0x000000, "Member 'BP_BtlHumanBase_C_CheckReadyCharacterBP::ReturnValue' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.DestroyCharacter
// 0x0048 (0x0048 - 0x0000)
struct BP_BtlHumanBase_C_DestroyCharacter final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CharacterBase_C*                    CallFunc_GetAppCharacterActor_Character;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AAppCharWeaponBase*>             CallFunc_GetWeaponList_Weapon;                     // 0x0010(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAppCharWeaponBase*                     CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_DestroyCharacter) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_DestroyCharacter");
static_assert(sizeof(BP_BtlHumanBase_C_DestroyCharacter) == 0x000048, "Wrong size on BP_BtlHumanBase_C_DestroyCharacter");
static_assert(offsetof(BP_BtlHumanBase_C_DestroyCharacter, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_BtlHumanBase_C_DestroyCharacter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_DestroyCharacter, CallFunc_GetAppCharacterActor_Character) == 0x000008, "Member 'BP_BtlHumanBase_C_DestroyCharacter::CallFunc_GetAppCharacterActor_Character' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_DestroyCharacter, CallFunc_GetWeaponList_Weapon) == 0x000010, "Member 'BP_BtlHumanBase_C_DestroyCharacter::CallFunc_GetWeaponList_Weapon' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_DestroyCharacter, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_BtlHumanBase_C_DestroyCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_DestroyCharacter, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_BtlHumanBase_C_DestroyCharacter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_DestroyCharacter, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'BP_BtlHumanBase_C_DestroyCharacter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_DestroyCharacter, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_BtlHumanBase_C_DestroyCharacter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_DestroyCharacter, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_BtlHumanBase_C_DestroyCharacter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_DestroyCharacter, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_BtlHumanBase_C_DestroyCharacter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_DestroyCharacter, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_BtlHumanBase_C_DestroyCharacter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.SetEquipVisibility
// 0x0018 (0x0018 - 0x0000)
struct BP_BtlHumanBase_C_SetEquipVisibility final
{
public:
	class FName                                   AnimSection;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceHide;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ForceShowWeapon;                                   // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ForceHideWeapon;                                   // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          GunVisible;                                        // 0x000B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          WeaponVisible;                                     // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckHiddingWeaponMode_ReturnValue;       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_SetEquipVisibility) == 0x000004, "Wrong alignment on BP_BtlHumanBase_C_SetEquipVisibility");
static_assert(sizeof(BP_BtlHumanBase_C_SetEquipVisibility) == 0x000018, "Wrong size on BP_BtlHumanBase_C_SetEquipVisibility");
static_assert(offsetof(BP_BtlHumanBase_C_SetEquipVisibility, AnimSection) == 0x000000, "Member 'BP_BtlHumanBase_C_SetEquipVisibility::AnimSection' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetEquipVisibility, ForceHide) == 0x000008, "Member 'BP_BtlHumanBase_C_SetEquipVisibility::ForceHide' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetEquipVisibility, ForceShowWeapon) == 0x000009, "Member 'BP_BtlHumanBase_C_SetEquipVisibility::ForceShowWeapon' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetEquipVisibility, ForceHideWeapon) == 0x00000A, "Member 'BP_BtlHumanBase_C_SetEquipVisibility::ForceHideWeapon' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetEquipVisibility, GunVisible) == 0x00000B, "Member 'BP_BtlHumanBase_C_SetEquipVisibility::GunVisible' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetEquipVisibility, WeaponVisible) == 0x00000C, "Member 'BP_BtlHumanBase_C_SetEquipVisibility::WeaponVisible' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetEquipVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x00000D, "Member 'BP_BtlHumanBase_C_SetEquipVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetEquipVisibility, CallFunc_NotEqual_NameName_ReturnValue) == 0x00000E, "Member 'BP_BtlHumanBase_C_SetEquipVisibility::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetEquipVisibility, CallFunc_BooleanOR_ReturnValue) == 0x00000F, "Member 'BP_BtlHumanBase_C_SetEquipVisibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetEquipVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000010, "Member 'BP_BtlHumanBase_C_SetEquipVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetEquipVisibility, CallFunc_CheckHiddingWeaponMode_ReturnValue) == 0x000011, "Member 'BP_BtlHumanBase_C_SetEquipVisibility::CallFunc_CheckHiddingWeaponMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetEquipVisibility, CallFunc_BooleanOR_ReturnValue_1) == 0x000012, "Member 'BP_BtlHumanBase_C_SetEquipVisibility::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetEquipVisibility, CallFunc_BooleanOR_ReturnValue_2) == 0x000013, "Member 'BP_BtlHumanBase_C_SetEquipVisibility::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetEquipVisibility, K2Node_SwitchEnum_CmpSuccess) == 0x000014, "Member 'BP_BtlHumanBase_C_SetEquipVisibility::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetEquipVisibility, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000015, "Member 'BP_BtlHumanBase_C_SetEquipVisibility::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.GetSummonGun
// 0x0018 (0x0018 - 0x0000)
struct BP_BtlHumanBase_C_GetSummonGun final
{
public:
	class ABP_BtlSummonGun_C*                     AsBP_Btl_Summon_Gun;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlSummonGun_C*                     K2Node_DynamicCast_AsBP_Btl_Summon_Gun;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_GetSummonGun) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_GetSummonGun");
static_assert(sizeof(BP_BtlHumanBase_C_GetSummonGun) == 0x000018, "Wrong size on BP_BtlHumanBase_C_GetSummonGun");
static_assert(offsetof(BP_BtlHumanBase_C_GetSummonGun, AsBP_Btl_Summon_Gun) == 0x000000, "Member 'BP_BtlHumanBase_C_GetSummonGun::AsBP_Btl_Summon_Gun' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetSummonGun, K2Node_DynamicCast_AsBP_Btl_Summon_Gun) == 0x000008, "Member 'BP_BtlHumanBase_C_GetSummonGun::K2Node_DynamicCast_AsBP_Btl_Summon_Gun' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetSummonGun, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_BtlHumanBase_C_GetSummonGun::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.GetSummonGunBP
// 0x0018 (0x0018 - 0x0000)
struct BP_BtlHumanBase_C_GetSummonGunBP final
{
public:
	class ABP_BtlSummonGun_C*                     Gun;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlSummonGun_C*                     K2Node_DynamicCast_AsBP_Btl_Summon_Gun;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_GetSummonGunBP) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_GetSummonGunBP");
static_assert(sizeof(BP_BtlHumanBase_C_GetSummonGunBP) == 0x000018, "Wrong size on BP_BtlHumanBase_C_GetSummonGunBP");
static_assert(offsetof(BP_BtlHumanBase_C_GetSummonGunBP, Gun) == 0x000000, "Member 'BP_BtlHumanBase_C_GetSummonGunBP::Gun' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetSummonGunBP, K2Node_DynamicCast_AsBP_Btl_Summon_Gun) == 0x000008, "Member 'BP_BtlHumanBase_C_GetSummonGunBP::K2Node_DynamicCast_AsBP_Btl_Summon_Gun' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetSummonGunBP, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_BtlHumanBase_C_GetSummonGunBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.PlayPersonaSummon
// 0x0018 (0x0018 - 0x0000)
struct BP_BtlHumanBase_C_PlayPersonaSummon final
{
public:
	bool                                          CallFunc_IsRushAttack_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsManualOperation_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemy_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingOffensiveSkill_ReturnValue;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ALevelSequenceActor*                    CallFunc_CreateLevelSequencePlayer_OutActor;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_CreateLevelSequencePlayer_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_PlayPersonaSummon) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_PlayPersonaSummon");
static_assert(sizeof(BP_BtlHumanBase_C_PlayPersonaSummon) == 0x000018, "Wrong size on BP_BtlHumanBase_C_PlayPersonaSummon");
static_assert(offsetof(BP_BtlHumanBase_C_PlayPersonaSummon, CallFunc_IsRushAttack_ReturnValue) == 0x000000, "Member 'BP_BtlHumanBase_C_PlayPersonaSummon::CallFunc_IsRushAttack_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayPersonaSummon, CallFunc_IsManualOperation_ReturnValue) == 0x000001, "Member 'BP_BtlHumanBase_C_PlayPersonaSummon::CallFunc_IsManualOperation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayPersonaSummon, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_BtlHumanBase_C_PlayPersonaSummon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayPersonaSummon, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'BP_BtlHumanBase_C_PlayPersonaSummon::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayPersonaSummon, CallFunc_IsEnemy_ReturnValue) == 0x000004, "Member 'BP_BtlHumanBase_C_PlayPersonaSummon::CallFunc_IsEnemy_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayPersonaSummon, CallFunc_IsUsingOffensiveSkill_ReturnValue) == 0x000005, "Member 'BP_BtlHumanBase_C_PlayPersonaSummon::CallFunc_IsUsingOffensiveSkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayPersonaSummon, CallFunc_CreateLevelSequencePlayer_OutActor) == 0x000008, "Member 'BP_BtlHumanBase_C_PlayPersonaSummon::CallFunc_CreateLevelSequencePlayer_OutActor' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayPersonaSummon, CallFunc_CreateLevelSequencePlayer_ReturnValue) == 0x000010, "Member 'BP_BtlHumanBase_C_PlayPersonaSummon::CallFunc_CreateLevelSequencePlayer_ReturnValue' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.ShowSummonEffect
// 0x0001 (0x0001 - 0x0000)
struct BP_BtlHumanBase_C_ShowSummonEffect final
{
public:
	bool                                          IsTheurgiaSummon;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_ShowSummonEffect) == 0x000001, "Wrong alignment on BP_BtlHumanBase_C_ShowSummonEffect");
static_assert(sizeof(BP_BtlHumanBase_C_ShowSummonEffect) == 0x000001, "Wrong size on BP_BtlHumanBase_C_ShowSummonEffect");
static_assert(offsetof(BP_BtlHumanBase_C_ShowSummonEffect, IsTheurgiaSummon) == 0x000000, "Member 'BP_BtlHumanBase_C_ShowSummonEffect::IsTheurgiaSummon' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.Standby Cutin
// 0x0060 (0x0060 - 0x0000)
struct BP_BtlHumanBase_C_Standby_Cutin final
{
public:
	class AActor*                                 CallFunc_GetSubLevelActor_ReturnValue;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetInitialTransform_trans;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlCutinController_C*               CallFunc_FinishSpawningActor_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_Standby_Cutin) == 0x000010, "Wrong alignment on BP_BtlHumanBase_C_Standby_Cutin");
static_assert(sizeof(BP_BtlHumanBase_C_Standby_Cutin) == 0x000060, "Wrong size on BP_BtlHumanBase_C_Standby_Cutin");
static_assert(offsetof(BP_BtlHumanBase_C_Standby_Cutin, CallFunc_GetSubLevelActor_ReturnValue) == 0x000000, "Member 'BP_BtlHumanBase_C_Standby_Cutin::CallFunc_GetSubLevelActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_Standby_Cutin, CallFunc_GetInitialTransform_trans) == 0x000010, "Member 'BP_BtlHumanBase_C_Standby_Cutin::CallFunc_GetInitialTransform_trans' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_Standby_Cutin, K2Node_CreateDelegate_OutputDelegate) == 0x000040, "Member 'BP_BtlHumanBase_C_Standby_Cutin::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_Standby_Cutin, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000050, "Member 'BP_BtlHumanBase_C_Standby_Cutin::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_Standby_Cutin, CallFunc_FinishSpawningActor_ReturnValue) == 0x000058, "Member 'BP_BtlHumanBase_C_Standby_Cutin::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.DeleteSummonEffect
// 0x0001 (0x0001 - 0x0000)
struct BP_BtlHumanBase_C_DeleteSummonEffect final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_DeleteSummonEffect) == 0x000001, "Wrong alignment on BP_BtlHumanBase_C_DeleteSummonEffect");
static_assert(sizeof(BP_BtlHumanBase_C_DeleteSummonEffect) == 0x000001, "Wrong size on BP_BtlHumanBase_C_DeleteSummonEffect");
static_assert(offsetof(BP_BtlHumanBase_C_DeleteSummonEffect, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_BtlHumanBase_C_DeleteSummonEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.SetupAfterCutin
// 0x0020 (0x0020 - 0x0000)
struct BP_BtlHumanBase_C_SetupAfterCutin final
{
public:
	class ABP_BtlPersonaBase_C*                   PersonaBP;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABtlActor*                              CallFunc_GetPersona_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlPersonaBase_C*                   K2Node_DynamicCast_AsBP_Btl_Persona_Base;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingOffensiveSkill_ReturnValue;        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_SetupAfterCutin) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_SetupAfterCutin");
static_assert(sizeof(BP_BtlHumanBase_C_SetupAfterCutin) == 0x000020, "Wrong size on BP_BtlHumanBase_C_SetupAfterCutin");
static_assert(offsetof(BP_BtlHumanBase_C_SetupAfterCutin, PersonaBP) == 0x000000, "Member 'BP_BtlHumanBase_C_SetupAfterCutin::PersonaBP' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetupAfterCutin, CallFunc_GetPersona_ReturnValue) == 0x000008, "Member 'BP_BtlHumanBase_C_SetupAfterCutin::CallFunc_GetPersona_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetupAfterCutin, K2Node_DynamicCast_AsBP_Btl_Persona_Base) == 0x000010, "Member 'BP_BtlHumanBase_C_SetupAfterCutin::K2Node_DynamicCast_AsBP_Btl_Persona_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetupAfterCutin, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_BtlHumanBase_C_SetupAfterCutin::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetupAfterCutin, CallFunc_IsUsingOffensiveSkill_ReturnValue) == 0x000019, "Member 'BP_BtlHumanBase_C_SetupAfterCutin::CallFunc_IsUsingOffensiveSkill_ReturnValue' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.Shift Skill Phase
// 0x0007 (0x0007 - 0x0000)
struct BP_BtlHumanBase_C_Shift_Skill_Phase final
{
public:
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckNeedToCallFirstSummonScene_ReturnValue; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCutinOccur_ReturnValue;              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ProcPreSkill_DonePreSkillCamera;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckNotSummonPersonaSkill_ReturnValue;   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCutinOccur_ReturnValue_1;            // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_Shift_Skill_Phase) == 0x000001, "Wrong alignment on BP_BtlHumanBase_C_Shift_Skill_Phase");
static_assert(sizeof(BP_BtlHumanBase_C_Shift_Skill_Phase) == 0x000007, "Wrong size on BP_BtlHumanBase_C_Shift_Skill_Phase");
static_assert(offsetof(BP_BtlHumanBase_C_Shift_Skill_Phase, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000000, "Member 'BP_BtlHumanBase_C_Shift_Skill_Phase::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_Shift_Skill_Phase, CallFunc_CheckNeedToCallFirstSummonScene_ReturnValue) == 0x000001, "Member 'BP_BtlHumanBase_C_Shift_Skill_Phase::CallFunc_CheckNeedToCallFirstSummonScene_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_Shift_Skill_Phase, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'BP_BtlHumanBase_C_Shift_Skill_Phase::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_Shift_Skill_Phase, CallFunc_CheckCutinOccur_ReturnValue) == 0x000003, "Member 'BP_BtlHumanBase_C_Shift_Skill_Phase::CallFunc_CheckCutinOccur_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_Shift_Skill_Phase, CallFunc_ProcPreSkill_DonePreSkillCamera) == 0x000004, "Member 'BP_BtlHumanBase_C_Shift_Skill_Phase::CallFunc_ProcPreSkill_DonePreSkillCamera' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_Shift_Skill_Phase, CallFunc_CheckNotSummonPersonaSkill_ReturnValue) == 0x000005, "Member 'BP_BtlHumanBase_C_Shift_Skill_Phase::CallFunc_CheckNotSummonPersonaSkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_Shift_Skill_Phase, CallFunc_CheckCutinOccur_ReturnValue_1) == 0x000006, "Member 'BP_BtlHumanBase_C_Shift_Skill_Phase::CallFunc_CheckCutinOccur_ReturnValue_1' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.Standby Persona
// 0x0010 (0x0010 - 0x0000)
struct BP_BtlHumanBase_C_Standby_Persona final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_Standby_Persona) == 0x000004, "Wrong alignment on BP_BtlHumanBase_C_Standby_Persona");
static_assert(sizeof(BP_BtlHumanBase_C_Standby_Persona) == 0x000010, "Wrong size on BP_BtlHumanBase_C_Standby_Persona");
static_assert(offsetof(BP_BtlHumanBase_C_Standby_Persona, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_BtlHumanBase_C_Standby_Persona::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.StartPersonaSkillAnim
// 0x0050 (0x0050 - 0x0000)
struct BP_BtlHumanBase_C_StartPersonaSkillAnim final
{
public:
	bool                                          IsAfterCutin;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlPersonaBase_C*                   PersonaBP;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckSkillCameraAnimation_ReturnValue;    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPlayPhysicalSkillPerformance_UsePhisicalProc; // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_GetPersona_ReturnValue;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlPersonaBase_C*                   K2Node_DynamicCast_AsBP_Btl_Persona_Base;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_StartPersonaSkillAnim) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_StartPersonaSkillAnim");
static_assert(sizeof(BP_BtlHumanBase_C_StartPersonaSkillAnim) == 0x000050, "Wrong size on BP_BtlHumanBase_C_StartPersonaSkillAnim");
static_assert(offsetof(BP_BtlHumanBase_C_StartPersonaSkillAnim, IsAfterCutin) == 0x000000, "Member 'BP_BtlHumanBase_C_StartPersonaSkillAnim::IsAfterCutin' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_StartPersonaSkillAnim, PersonaBP) == 0x000008, "Member 'BP_BtlHumanBase_C_StartPersonaSkillAnim::PersonaBP' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_StartPersonaSkillAnim, CallFunc_CheckSkillCameraAnimation_ReturnValue) == 0x000010, "Member 'BP_BtlHumanBase_C_StartPersonaSkillAnim::CallFunc_CheckSkillCameraAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_StartPersonaSkillAnim, CallFunc_CheckPlayPhysicalSkillPerformance_UsePhisicalProc) == 0x000011, "Member 'BP_BtlHumanBase_C_StartPersonaSkillAnim::CallFunc_CheckPlayPhysicalSkillPerformance_UsePhisicalProc' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_StartPersonaSkillAnim, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'BP_BtlHumanBase_C_StartPersonaSkillAnim::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_StartPersonaSkillAnim, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'BP_BtlHumanBase_C_StartPersonaSkillAnim::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_StartPersonaSkillAnim, CallFunc_GetPersona_ReturnValue) == 0x000038, "Member 'BP_BtlHumanBase_C_StartPersonaSkillAnim::CallFunc_GetPersona_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_StartPersonaSkillAnim, K2Node_DynamicCast_AsBP_Btl_Persona_Base) == 0x000040, "Member 'BP_BtlHumanBase_C_StartPersonaSkillAnim::K2Node_DynamicCast_AsBP_Btl_Persona_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_StartPersonaSkillAnim, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_BtlHumanBase_C_StartPersonaSkillAnim::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.Finalize Skill Phase
// 0x0014 (0x0014 - 0x0000)
struct BP_BtlHumanBase_C_Finalize_Skill_Phase final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_CheckPersonaValid_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_Finalize_Skill_Phase) == 0x000004, "Wrong alignment on BP_BtlHumanBase_C_Finalize_Skill_Phase");
static_assert(sizeof(BP_BtlHumanBase_C_Finalize_Skill_Phase) == 0x000014, "Wrong size on BP_BtlHumanBase_C_Finalize_Skill_Phase");
static_assert(offsetof(BP_BtlHumanBase_C_Finalize_Skill_Phase, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_BtlHumanBase_C_Finalize_Skill_Phase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_Finalize_Skill_Phase, CallFunc_CheckPersonaValid_ReturnValue) == 0x000010, "Member 'BP_BtlHumanBase_C_Finalize_Skill_Phase::CallFunc_CheckPersonaValid_ReturnValue' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.ShowSummonActEffect
// 0x0080 (0x0080 - 0x0000)
struct BP_BtlHumanBase_C_ShowSummonActEffect final
{
public:
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         CallFunc_GetEffect_ReturnValue;                    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_1;      // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_ShowSummonActEffect) == 0x000010, "Wrong alignment on BP_BtlHumanBase_C_ShowSummonActEffect");
static_assert(sizeof(BP_BtlHumanBase_C_ShowSummonActEffect) == 0x000080, "Wrong size on BP_BtlHumanBase_C_ShowSummonActEffect");
static_assert(offsetof(BP_BtlHumanBase_C_ShowSummonActEffect, CallFunc_GetSocketTransform_ReturnValue) == 0x000000, "Member 'BP_BtlHumanBase_C_ShowSummonActEffect::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ShowSummonActEffect, CallFunc_BreakTransform_Location) == 0x000030, "Member 'BP_BtlHumanBase_C_ShowSummonActEffect::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ShowSummonActEffect, CallFunc_BreakTransform_Rotation) == 0x00003C, "Member 'BP_BtlHumanBase_C_ShowSummonActEffect::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ShowSummonActEffect, CallFunc_BreakTransform_Scale) == 0x000048, "Member 'BP_BtlHumanBase_C_ShowSummonActEffect::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ShowSummonActEffect, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000058, "Member 'BP_BtlHumanBase_C_ShowSummonActEffect::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ShowSummonActEffect, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_BtlHumanBase_C_ShowSummonActEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ShowSummonActEffect, CallFunc_GetEffect_ReturnValue) == 0x000068, "Member 'BP_BtlHumanBase_C_ShowSummonActEffect::CallFunc_GetEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ShowSummonActEffect, CallFunc_SpawnSystemAtLocation_ReturnValue_1) == 0x000070, "Member 'BP_BtlHumanBase_C_ShowSummonActEffect::CallFunc_SpawnSystemAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ShowSummonActEffect, CallFunc_IsValid_ReturnValue_1) == 0x000078, "Member 'BP_BtlHumanBase_C_ShowSummonActEffect::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.PlayPersonaSkillCamera
// 0x0078 (0x0078 - 0x0000)
struct BP_BtlHumanBase_C_PlayPersonaSkillCamera final
{
public:
	class ABP_BtlPersonaBase_C*                   PersonaWork;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckPlayPhysicalSkillPerformance_UsePhisicalProc; // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         CallFunc_GetPersonaSkillCamera_LS;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALevelSequenceActor*                    CallFunc_CreateLevelSequencePlayer_OutActor;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_CreateLevelSequencePlayer_ReturnValue;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FQualifiedFrameTime                    CallFunc_GetEndTime_ReturnValue;                   // 0x0030(0x0010)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ABtlActor*                              CallFunc_GetPersona_ReturnValue;                   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlPersonaBase_C*                   K2Node_DynamicCast_AsBP_Btl_Persona_Base;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_PlayPersonaSkillCamera) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_PlayPersonaSkillCamera");
static_assert(sizeof(BP_BtlHumanBase_C_PlayPersonaSkillCamera) == 0x000078, "Wrong size on BP_BtlHumanBase_C_PlayPersonaSkillCamera");
static_assert(offsetof(BP_BtlHumanBase_C_PlayPersonaSkillCamera, PersonaWork) == 0x000000, "Member 'BP_BtlHumanBase_C_PlayPersonaSkillCamera::PersonaWork' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayPersonaSkillCamera, CallFunc_CheckPlayPhysicalSkillPerformance_UsePhisicalProc) == 0x000008, "Member 'BP_BtlHumanBase_C_PlayPersonaSkillCamera::CallFunc_CheckPlayPhysicalSkillPerformance_UsePhisicalProc' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayPersonaSkillCamera, CallFunc_GetPersonaSkillCamera_LS) == 0x000010, "Member 'BP_BtlHumanBase_C_PlayPersonaSkillCamera::CallFunc_GetPersonaSkillCamera_LS' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayPersonaSkillCamera, CallFunc_CreateLevelSequencePlayer_OutActor) == 0x000018, "Member 'BP_BtlHumanBase_C_PlayPersonaSkillCamera::CallFunc_CreateLevelSequencePlayer_OutActor' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayPersonaSkillCamera, CallFunc_CreateLevelSequencePlayer_ReturnValue) == 0x000020, "Member 'BP_BtlHumanBase_C_PlayPersonaSkillCamera::CallFunc_CreateLevelSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayPersonaSkillCamera, CallFunc_GetSequencePlayer_ReturnValue) == 0x000028, "Member 'BP_BtlHumanBase_C_PlayPersonaSkillCamera::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayPersonaSkillCamera, CallFunc_GetEndTime_ReturnValue) == 0x000030, "Member 'BP_BtlHumanBase_C_PlayPersonaSkillCamera::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayPersonaSkillCamera, K2Node_CreateDelegate_OutputDelegate) == 0x000040, "Member 'BP_BtlHumanBase_C_PlayPersonaSkillCamera::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayPersonaSkillCamera, CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue) == 0x000050, "Member 'BP_BtlHumanBase_C_PlayPersonaSkillCamera::CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayPersonaSkillCamera, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000058, "Member 'BP_BtlHumanBase_C_PlayPersonaSkillCamera::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayPersonaSkillCamera, CallFunc_GetPersona_ReturnValue) == 0x000060, "Member 'BP_BtlHumanBase_C_PlayPersonaSkillCamera::CallFunc_GetPersona_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayPersonaSkillCamera, K2Node_DynamicCast_AsBP_Btl_Persona_Base) == 0x000068, "Member 'BP_BtlHumanBase_C_PlayPersonaSkillCamera::K2Node_DynamicCast_AsBP_Btl_Persona_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayPersonaSkillCamera, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_BtlHumanBase_C_PlayPersonaSkillCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.DestroyPersonaSkillCamera
// 0x0001 (0x0001 - 0x0000)
struct BP_BtlHumanBase_C_DestroyPersonaSkillCamera final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_DestroyPersonaSkillCamera) == 0x000001, "Wrong alignment on BP_BtlHumanBase_C_DestroyPersonaSkillCamera");
static_assert(sizeof(BP_BtlHumanBase_C_DestroyPersonaSkillCamera) == 0x000001, "Wrong size on BP_BtlHumanBase_C_DestroyPersonaSkillCamera");
static_assert(offsetof(BP_BtlHumanBase_C_DestroyPersonaSkillCamera, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_BtlHumanBase_C_DestroyPersonaSkillCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.DestroyPersonaSummonCamera
// 0x0001 (0x0001 - 0x0000)
struct BP_BtlHumanBase_C_DestroyPersonaSummonCamera final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_DestroyPersonaSummonCamera) == 0x000001, "Wrong alignment on BP_BtlHumanBase_C_DestroyPersonaSummonCamera");
static_assert(sizeof(BP_BtlHumanBase_C_DestroyPersonaSummonCamera) == 0x000001, "Wrong size on BP_BtlHumanBase_C_DestroyPersonaSummonCamera");
static_assert(offsetof(BP_BtlHumanBase_C_DestroyPersonaSummonCamera, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_BtlHumanBase_C_DestroyPersonaSummonCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.AttachEquipment
// 0x0028 (0x0028 - 0x0000)
struct BP_BtlHumanBase_C_AttachEquipment final
{
public:
	bool                                          CallFunc_CheckNeedToAttachGun_Need;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CharacterBase_C*                    CallFunc_GetAppCharacterActor_Character;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_SearchSkeletalMesh_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetWeaponAttachSocketName_NewParam;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlSummonGun_C*                     CallFunc_GetSummonGunBP_Gun;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_AttachEquipment) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_AttachEquipment");
static_assert(sizeof(BP_BtlHumanBase_C_AttachEquipment) == 0x000028, "Wrong size on BP_BtlHumanBase_C_AttachEquipment");
static_assert(offsetof(BP_BtlHumanBase_C_AttachEquipment, CallFunc_CheckNeedToAttachGun_Need) == 0x000000, "Member 'BP_BtlHumanBase_C_AttachEquipment::CallFunc_CheckNeedToAttachGun_Need' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_AttachEquipment, CallFunc_GetAppCharacterActor_Character) == 0x000008, "Member 'BP_BtlHumanBase_C_AttachEquipment::CallFunc_GetAppCharacterActor_Character' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_AttachEquipment, CallFunc_SearchSkeletalMesh_ReturnValue) == 0x000010, "Member 'BP_BtlHumanBase_C_AttachEquipment::CallFunc_SearchSkeletalMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_AttachEquipment, CallFunc_GetWeaponAttachSocketName_NewParam) == 0x000018, "Member 'BP_BtlHumanBase_C_AttachEquipment::CallFunc_GetWeaponAttachSocketName_NewParam' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_AttachEquipment, CallFunc_GetSummonGunBP_Gun) == 0x000020, "Member 'BP_BtlHumanBase_C_AttachEquipment::CallFunc_GetSummonGunBP_Gun' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.AdjustLocation
// 0x00A8 (0x00A8 - 0x0000)
struct BP_BtlHumanBase_C_AdjustLocation final
{
public:
	class ABP_CharacterBase_C*                    CallFunc_GetAppCharacterActor_Character;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CharacterBase_C*                    CallFunc_GetAppCharacterActor_Character_1;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorRelativeLocation_SweepHitResult; // 0x001C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BtlHumanBase_C_AdjustLocation) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_AdjustLocation");
static_assert(sizeof(BP_BtlHumanBase_C_AdjustLocation) == 0x0000A8, "Wrong size on BP_BtlHumanBase_C_AdjustLocation");
static_assert(offsetof(BP_BtlHumanBase_C_AdjustLocation, CallFunc_GetAppCharacterActor_Character) == 0x000000, "Member 'BP_BtlHumanBase_C_AdjustLocation::CallFunc_GetAppCharacterActor_Character' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_AdjustLocation, CallFunc_GetAppCharacterActor_Character_1) == 0x000008, "Member 'BP_BtlHumanBase_C_AdjustLocation::CallFunc_GetAppCharacterActor_Character_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_AdjustLocation, CallFunc_MakeVector_ReturnValue) == 0x000010, "Member 'BP_BtlHumanBase_C_AdjustLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_AdjustLocation, CallFunc_K2_SetActorRelativeLocation_SweepHitResult) == 0x00001C, "Member 'BP_BtlHumanBase_C_AdjustLocation::CallFunc_K2_SetActorRelativeLocation_SweepHitResult' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.GetWeaponAttachSocketName
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlHumanBase_C_GetWeaponAttachSocketName final
{
public:
	class FName                                   NewParam;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_GetWeaponAttachSocketName) == 0x000004, "Wrong alignment on BP_BtlHumanBase_C_GetWeaponAttachSocketName");
static_assert(sizeof(BP_BtlHumanBase_C_GetWeaponAttachSocketName) == 0x000008, "Wrong size on BP_BtlHumanBase_C_GetWeaponAttachSocketName");
static_assert(offsetof(BP_BtlHumanBase_C_GetWeaponAttachSocketName, NewParam) == 0x000000, "Member 'BP_BtlHumanBase_C_GetWeaponAttachSocketName::NewParam' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.SetWeaponVisible
// 0x0038 (0x0038 - 0x0000)
struct BP_BtlHumanBase_C_SetWeaponVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckVisible_Visible;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AAppCharWeaponBase*>             CallFunc_GetWeaponList_Weapon;                     // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAppCharWeaponBase*                     CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_SetWeaponVisible) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_SetWeaponVisible");
static_assert(sizeof(BP_BtlHumanBase_C_SetWeaponVisible) == 0x000038, "Wrong size on BP_BtlHumanBase_C_SetWeaponVisible");
static_assert(offsetof(BP_BtlHumanBase_C_SetWeaponVisible, Visible) == 0x000000, "Member 'BP_BtlHumanBase_C_SetWeaponVisible::Visible' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetWeaponVisible, CallFunc_CheckVisible_Visible) == 0x000001, "Member 'BP_BtlHumanBase_C_SetWeaponVisible::CallFunc_CheckVisible_Visible' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetWeaponVisible, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_BtlHumanBase_C_SetWeaponVisible::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetWeaponVisible, CallFunc_GetWeaponList_Weapon) == 0x000008, "Member 'BP_BtlHumanBase_C_SetWeaponVisible::CallFunc_GetWeaponList_Weapon' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetWeaponVisible, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_BtlHumanBase_C_SetWeaponVisible::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetWeaponVisible, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_BtlHumanBase_C_SetWeaponVisible::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetWeaponVisible, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_BtlHumanBase_C_SetWeaponVisible::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetWeaponVisible, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_BtlHumanBase_C_SetWeaponVisible::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetWeaponVisible, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_BtlHumanBase_C_SetWeaponVisible::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetWeaponVisible, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_BtlHumanBase_C_SetWeaponVisible::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.SetGunVisible
// 0x0028 (0x0028 - 0x0000)
struct BP_BtlHumanBase_C_SetGunVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingAstrea_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlSummonGun_C*                     CallFunc_GetSummonGunBP_Gun;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlSummonGun_C*                     CallFunc_GetSummonGunBP_Gun_1;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckNeedToAttachGun_Need;                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckNotSummonPersonaSkill_ReturnValue;   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlSummonGun_C*                     CallFunc_GetSummonGunBP_Gun_2;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_SetGunVisible) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_SetGunVisible");
static_assert(sizeof(BP_BtlHumanBase_C_SetGunVisible) == 0x000028, "Wrong size on BP_BtlHumanBase_C_SetGunVisible");
static_assert(offsetof(BP_BtlHumanBase_C_SetGunVisible, Visible) == 0x000000, "Member 'BP_BtlHumanBase_C_SetGunVisible::Visible' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetGunVisible, CallFunc_IsPlayingAstrea_ReturnValue) == 0x000001, "Member 'BP_BtlHumanBase_C_SetGunVisible::CallFunc_IsPlayingAstrea_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetGunVisible, CallFunc_GetSummonGunBP_Gun) == 0x000008, "Member 'BP_BtlHumanBase_C_SetGunVisible::CallFunc_GetSummonGunBP_Gun' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetGunVisible, CallFunc_GetSummonGunBP_Gun_1) == 0x000010, "Member 'BP_BtlHumanBase_C_SetGunVisible::CallFunc_GetSummonGunBP_Gun_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetGunVisible, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_BtlHumanBase_C_SetGunVisible::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetGunVisible, CallFunc_CheckNeedToAttachGun_Need) == 0x000019, "Member 'BP_BtlHumanBase_C_SetGunVisible::CallFunc_CheckNeedToAttachGun_Need' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetGunVisible, CallFunc_CheckNotSummonPersonaSkill_ReturnValue) == 0x00001A, "Member 'BP_BtlHumanBase_C_SetGunVisible::CallFunc_CheckNotSummonPersonaSkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetGunVisible, CallFunc_GetSummonGunBP_Gun_2) == 0x000020, "Member 'BP_BtlHumanBase_C_SetGunVisible::CallFunc_GetSummonGunBP_Gun_2' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.CreateSummonEffect
// 0x0001 (0x0001 - 0x0000)
struct BP_BtlHumanBase_C_CreateSummonEffect final
{
public:
	bool                                          Hide;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_CreateSummonEffect) == 0x000001, "Wrong alignment on BP_BtlHumanBase_C_CreateSummonEffect");
static_assert(sizeof(BP_BtlHumanBase_C_CreateSummonEffect) == 0x000001, "Wrong size on BP_BtlHumanBase_C_CreateSummonEffect");
static_assert(offsetof(BP_BtlHumanBase_C_CreateSummonEffect, Hide) == 0x000000, "Member 'BP_BtlHumanBase_C_CreateSummonEffect::Hide' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.GetSummonEffect
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlHumanBase_C_GetSummonEffect final
{
public:
	class UNiagaraComponent*                      SummonEffect_0;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_GetSummonEffect) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_GetSummonEffect");
static_assert(sizeof(BP_BtlHumanBase_C_GetSummonEffect) == 0x000008, "Wrong size on BP_BtlHumanBase_C_GetSummonEffect");
static_assert(offsetof(BP_BtlHumanBase_C_GetSummonEffect, SummonEffect_0) == 0x000000, "Member 'BP_BtlHumanBase_C_GetSummonEffect::SummonEffect_0' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.ShowExistingSummonEffect
// 0x0120 (0x0120 - 0x0000)
struct BP_BtlHumanBase_C_ShowExistingSummonEffect final
{
public:
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0090(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BtlHumanBase_C_ShowExistingSummonEffect) == 0x000010, "Wrong alignment on BP_BtlHumanBase_C_ShowExistingSummonEffect");
static_assert(sizeof(BP_BtlHumanBase_C_ShowExistingSummonEffect) == 0x000120, "Wrong size on BP_BtlHumanBase_C_ShowExistingSummonEffect");
static_assert(offsetof(BP_BtlHumanBase_C_ShowExistingSummonEffect, CallFunc_GetSocketTransform_ReturnValue) == 0x000000, "Member 'BP_BtlHumanBase_C_ShowExistingSummonEffect::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ShowExistingSummonEffect, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_BtlHumanBase_C_ShowExistingSummonEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ShowExistingSummonEffect, CallFunc_BreakTransform_Location) == 0x000034, "Member 'BP_BtlHumanBase_C_ShowExistingSummonEffect::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ShowExistingSummonEffect, CallFunc_BreakTransform_Rotation) == 0x000040, "Member 'BP_BtlHumanBase_C_ShowExistingSummonEffect::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ShowExistingSummonEffect, CallFunc_BreakTransform_Scale) == 0x00004C, "Member 'BP_BtlHumanBase_C_ShowExistingSummonEffect::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ShowExistingSummonEffect, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'BP_BtlHumanBase_C_ShowExistingSummonEffect::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ShowExistingSummonEffect, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000090, "Member 'BP_BtlHumanBase_C_ShowExistingSummonEffect::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.GetPersonaSkillCamera
// 0x0058 (0x0058 - 0x0000)
struct BP_BtlHumanBase_C_GetPersonaSkillCamera final
{
public:
	class ABP_BtlPersonaBase_C*                   Persona;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         LS;                                                // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Num;                                               // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ULevelSequence*                         CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_GetPersonaSkillCamera) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_GetPersonaSkillCamera");
static_assert(sizeof(BP_BtlHumanBase_C_GetPersonaSkillCamera) == 0x000058, "Wrong size on BP_BtlHumanBase_C_GetPersonaSkillCamera");
static_assert(offsetof(BP_BtlHumanBase_C_GetPersonaSkillCamera, Persona) == 0x000000, "Member 'BP_BtlHumanBase_C_GetPersonaSkillCamera::Persona' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetPersonaSkillCamera, LS) == 0x000008, "Member 'BP_BtlHumanBase_C_GetPersonaSkillCamera::LS' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetPersonaSkillCamera, Num) == 0x000010, "Member 'BP_BtlHumanBase_C_GetPersonaSkillCamera::Num' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetPersonaSkillCamera, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'BP_BtlHumanBase_C_GetPersonaSkillCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetPersonaSkillCamera, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'BP_BtlHumanBase_C_GetPersonaSkillCamera::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetPersonaSkillCamera, CallFunc_RandomIntegerInRange_ReturnValue) == 0x00001C, "Member 'BP_BtlHumanBase_C_GetPersonaSkillCamera::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetPersonaSkillCamera, CallFunc_GetDisplayName_ReturnValue) == 0x000020, "Member 'BP_BtlHumanBase_C_GetPersonaSkillCamera::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetPersonaSkillCamera, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BP_BtlHumanBase_C_GetPersonaSkillCamera::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetPersonaSkillCamera, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_BtlHumanBase_C_GetPersonaSkillCamera::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetPersonaSkillCamera, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'BP_BtlHumanBase_C_GetPersonaSkillCamera::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetPersonaSkillCamera, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BP_BtlHumanBase_C_GetPersonaSkillCamera::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetPersonaSkillCamera, CallFunc_Greater_IntInt_ReturnValue) == 0x000050, "Member 'BP_BtlHumanBase_C_GetPersonaSkillCamera::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.GetMaterials
// 0x0010 (0x0010 - 0x0000)
struct BP_BtlHumanBase_C_GetMaterials final
{
public:
	TArray<class UMaterialInstanceDynamic*>       MaterialInstance;                                  // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_BtlHumanBase_C_GetMaterials) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_GetMaterials");
static_assert(sizeof(BP_BtlHumanBase_C_GetMaterials) == 0x000010, "Wrong size on BP_BtlHumanBase_C_GetMaterials");
static_assert(offsetof(BP_BtlHumanBase_C_GetMaterials, MaterialInstance) == 0x000000, "Member 'BP_BtlHumanBase_C_GetMaterials::MaterialInstance' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.CreateMID
// 0x0010 (0x0010 - 0x0000)
struct BP_BtlHumanBase_C_CreateMID final
{
public:
	class ABP_CharacterBase_C*                    CallFunc_GetAppCharacterActor_Character;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_CreateMID) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_CreateMID");
static_assert(sizeof(BP_BtlHumanBase_C_CreateMID) == 0x000010, "Wrong size on BP_BtlHumanBase_C_CreateMID");
static_assert(offsetof(BP_BtlHumanBase_C_CreateMID, CallFunc_GetAppCharacterActor_Character) == 0x000000, "Member 'BP_BtlHumanBase_C_CreateMID::CallFunc_GetAppCharacterActor_Character' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CreateMID, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_BtlHumanBase_C_CreateMID::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.SetupTheurgia
// 0x0060 (0x0060 - 0x0000)
struct BP_BtlHumanBase_C_SetupTheurgia final
{
public:
	class ABP_BtlCharacterBase_C*                 MainCharacter;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetSubLevelActor_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetInitialTransform_trans;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetSkillID_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlTheurgiaController_C*            CallFunc_FinishSpawningActor_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_SetupTheurgia) == 0x000010, "Wrong alignment on BP_BtlHumanBase_C_SetupTheurgia");
static_assert(sizeof(BP_BtlHumanBase_C_SetupTheurgia) == 0x000060, "Wrong size on BP_BtlHumanBase_C_SetupTheurgia");
static_assert(offsetof(BP_BtlHumanBase_C_SetupTheurgia, MainCharacter) == 0x000000, "Member 'BP_BtlHumanBase_C_SetupTheurgia::MainCharacter' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetupTheurgia, CallFunc_GetSubLevelActor_ReturnValue) == 0x000008, "Member 'BP_BtlHumanBase_C_SetupTheurgia::CallFunc_GetSubLevelActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetupTheurgia, CallFunc_GetInitialTransform_trans) == 0x000010, "Member 'BP_BtlHumanBase_C_SetupTheurgia::CallFunc_GetInitialTransform_trans' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetupTheurgia, CallFunc_GetSkillID_ReturnValue) == 0x000040, "Member 'BP_BtlHumanBase_C_SetupTheurgia::CallFunc_GetSkillID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetupTheurgia, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000048, "Member 'BP_BtlHumanBase_C_SetupTheurgia::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetupTheurgia, CallFunc_FinishSpawningActor_ReturnValue) == 0x000050, "Member 'BP_BtlHumanBase_C_SetupTheurgia::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.FinalizeTheurgiaSequence
// 0x0018 (0x0018 - 0x0000)
struct BP_BtlHumanBase_C_FinalizeTheurgiaSequence final
{
public:
	bool                                          CallFunc_CheckTheurgiaPersonaKeepShowing_Show;     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlSummonGun_C*                     CallFunc_GetSummonGunBP_Gun;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_FinalizeTheurgiaSequence) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_FinalizeTheurgiaSequence");
static_assert(sizeof(BP_BtlHumanBase_C_FinalizeTheurgiaSequence) == 0x000018, "Wrong size on BP_BtlHumanBase_C_FinalizeTheurgiaSequence");
static_assert(offsetof(BP_BtlHumanBase_C_FinalizeTheurgiaSequence, CallFunc_CheckTheurgiaPersonaKeepShowing_Show) == 0x000000, "Member 'BP_BtlHumanBase_C_FinalizeTheurgiaSequence::CallFunc_CheckTheurgiaPersonaKeepShowing_Show' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_FinalizeTheurgiaSequence, CallFunc_GetSummonGunBP_Gun) == 0x000008, "Member 'BP_BtlHumanBase_C_FinalizeTheurgiaSequence::CallFunc_GetSummonGunBP_Gun' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_FinalizeTheurgiaSequence, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_BtlHumanBase_C_FinalizeTheurgiaSequence::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.DebugCheckTheurgiaValid
// 0x0028 (0x0028 - 0x0000)
struct BP_BtlHumanBase_C_DebugCheckTheurgiaValid final
{
public:
	bool                                          Valid;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSkillID_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesDataTableRowExist_ReturnValue;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_DebugCheckTheurgiaValid) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_DebugCheckTheurgiaValid");
static_assert(sizeof(BP_BtlHumanBase_C_DebugCheckTheurgiaValid) == 0x000028, "Wrong size on BP_BtlHumanBase_C_DebugCheckTheurgiaValid");
static_assert(offsetof(BP_BtlHumanBase_C_DebugCheckTheurgiaValid, Valid) == 0x000000, "Member 'BP_BtlHumanBase_C_DebugCheckTheurgiaValid::Valid' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_DebugCheckTheurgiaValid, CallFunc_GetSkillID_ReturnValue) == 0x000004, "Member 'BP_BtlHumanBase_C_DebugCheckTheurgiaValid::CallFunc_GetSkillID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_DebugCheckTheurgiaValid, CallFunc_Conv_IntToString_ReturnValue) == 0x000008, "Member 'BP_BtlHumanBase_C_DebugCheckTheurgiaValid::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_DebugCheckTheurgiaValid, CallFunc_Conv_StringToName_ReturnValue) == 0x000018, "Member 'BP_BtlHumanBase_C_DebugCheckTheurgiaValid::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_DebugCheckTheurgiaValid, CallFunc_DoesDataTableRowExist_ReturnValue) == 0x000020, "Member 'BP_BtlHumanBase_C_DebugCheckTheurgiaValid::CallFunc_DoesDataTableRowExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_DebugCheckTheurgiaValid, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_BtlHumanBase_C_DebugCheckTheurgiaValid::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.GetMeshList
// 0x0001 (0x0001 - 0x0000)
struct BP_BtlHumanBase_C_GetMeshList final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_GetMeshList) == 0x000001, "Wrong alignment on BP_BtlHumanBase_C_GetMeshList");
static_assert(sizeof(BP_BtlHumanBase_C_GetMeshList) == 0x000001, "Wrong size on BP_BtlHumanBase_C_GetMeshList");
static_assert(offsetof(BP_BtlHumanBase_C_GetMeshList, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_BtlHumanBase_C_GetMeshList::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.SetupEventAnimation
// 0x0028 (0x0028 - 0x0000)
struct BP_BtlHumanBase_C_SetupEventAnimation final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAppCharacterComp*                      CallFunc_GetAppCharacterComp_App_Character_Comp;   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetMesh_ReturnValue;                      // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAppCharacterComp*                      CallFunc_GetAppCharacterComp_App_Character_Comp_1; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetMesh_ReturnValue_1;                    // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_SetupEventAnimation) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_SetupEventAnimation");
static_assert(sizeof(BP_BtlHumanBase_C_SetupEventAnimation) == 0x000028, "Wrong size on BP_BtlHumanBase_C_SetupEventAnimation");
static_assert(offsetof(BP_BtlHumanBase_C_SetupEventAnimation, Enable) == 0x000000, "Member 'BP_BtlHumanBase_C_SetupEventAnimation::Enable' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetupEventAnimation, CallFunc_GetAppCharacterComp_App_Character_Comp) == 0x000008, "Member 'BP_BtlHumanBase_C_SetupEventAnimation::CallFunc_GetAppCharacterComp_App_Character_Comp' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetupEventAnimation, CallFunc_GetMesh_ReturnValue) == 0x000010, "Member 'BP_BtlHumanBase_C_SetupEventAnimation::CallFunc_GetMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetupEventAnimation, CallFunc_GetAppCharacterComp_App_Character_Comp_1) == 0x000018, "Member 'BP_BtlHumanBase_C_SetupEventAnimation::CallFunc_GetAppCharacterComp_App_Character_Comp_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetupEventAnimation, CallFunc_GetMesh_ReturnValue_1) == 0x000020, "Member 'BP_BtlHumanBase_C_SetupEventAnimation::CallFunc_GetMesh_ReturnValue_1' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.InitAfterCreateAppCharacter
// 0x0038 (0x0038 - 0x0000)
struct BP_BtlHumanBase_C_InitAfterCreateAppCharacter final
{
public:
	class UAppCharacterComp*                      CallFunc_GetAppCharacterComp_App_Character_Comp;   // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAppCharacterComp*                      CallFunc_GetAppCharacterComp_App_Character_Comp_1; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAppCharFootstepsAtom*                  CallFunc_GetFootstepsAtom_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAppCharacterComp*                      CallFunc_GetAppCharacterComp_App_Character_Comp_2; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetMesh_ReturnValue;                      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAppCharacterComp*                      CallFunc_GetAppCharacterComp_App_Character_Comp_3; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetMesh_ReturnValue_1;                    // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_InitAfterCreateAppCharacter) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_InitAfterCreateAppCharacter");
static_assert(sizeof(BP_BtlHumanBase_C_InitAfterCreateAppCharacter) == 0x000038, "Wrong size on BP_BtlHumanBase_C_InitAfterCreateAppCharacter");
static_assert(offsetof(BP_BtlHumanBase_C_InitAfterCreateAppCharacter, CallFunc_GetAppCharacterComp_App_Character_Comp) == 0x000000, "Member 'BP_BtlHumanBase_C_InitAfterCreateAppCharacter::CallFunc_GetAppCharacterComp_App_Character_Comp' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_InitAfterCreateAppCharacter, CallFunc_GetAppCharacterComp_App_Character_Comp_1) == 0x000008, "Member 'BP_BtlHumanBase_C_InitAfterCreateAppCharacter::CallFunc_GetAppCharacterComp_App_Character_Comp_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_InitAfterCreateAppCharacter, CallFunc_GetFootstepsAtom_ReturnValue) == 0x000010, "Member 'BP_BtlHumanBase_C_InitAfterCreateAppCharacter::CallFunc_GetFootstepsAtom_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_InitAfterCreateAppCharacter, CallFunc_GetAppCharacterComp_App_Character_Comp_2) == 0x000018, "Member 'BP_BtlHumanBase_C_InitAfterCreateAppCharacter::CallFunc_GetAppCharacterComp_App_Character_Comp_2' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_InitAfterCreateAppCharacter, CallFunc_GetMesh_ReturnValue) == 0x000020, "Member 'BP_BtlHumanBase_C_InitAfterCreateAppCharacter::CallFunc_GetMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_InitAfterCreateAppCharacter, CallFunc_GetAppCharacterComp_App_Character_Comp_3) == 0x000028, "Member 'BP_BtlHumanBase_C_InitAfterCreateAppCharacter::CallFunc_GetAppCharacterComp_App_Character_Comp_3' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_InitAfterCreateAppCharacter, CallFunc_GetMesh_ReturnValue_1) == 0x000030, "Member 'BP_BtlHumanBase_C_InitAfterCreateAppCharacter::CallFunc_GetMesh_ReturnValue_1' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.CheckNeedToAttachGun
// 0x0001 (0x0001 - 0x0000)
struct BP_BtlHumanBase_C_CheckNeedToAttachGun final
{
public:
	bool                                          Need;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_CheckNeedToAttachGun) == 0x000001, "Wrong alignment on BP_BtlHumanBase_C_CheckNeedToAttachGun");
static_assert(sizeof(BP_BtlHumanBase_C_CheckNeedToAttachGun) == 0x000001, "Wrong size on BP_BtlHumanBase_C_CheckNeedToAttachGun");
static_assert(offsetof(BP_BtlHumanBase_C_CheckNeedToAttachGun, Need) == 0x000000, "Member 'BP_BtlHumanBase_C_CheckNeedToAttachGun::Need' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.Check Theurgia Need Common Skill Scene
// 0x00E8 (0x00E8 - 0x0000)
struct BP_BtlHumanBase_C_Check_Theurgia_Need_Common_Skill_Scene final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             TheurgiaSeqList;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSkillID_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingAstrea_ReturnValue;              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSkillID_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingOffensiveSkill_ReturnValue;        // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSkillMixraid_ReturnValue;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFBtlTheurgiaSeq                       CallFunc_GetDataTableRowFromName_OutRow;           // 0x0040(0x00A0)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_Check_Theurgia_Need_Common_Skill_Scene) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_Check_Theurgia_Need_Common_Skill_Scene");
static_assert(sizeof(BP_BtlHumanBase_C_Check_Theurgia_Need_Common_Skill_Scene) == 0x0000E8, "Wrong size on BP_BtlHumanBase_C_Check_Theurgia_Need_Common_Skill_Scene");
static_assert(offsetof(BP_BtlHumanBase_C_Check_Theurgia_Need_Common_Skill_Scene, ReturnValue) == 0x000000, "Member 'BP_BtlHumanBase_C_Check_Theurgia_Need_Common_Skill_Scene::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_Check_Theurgia_Need_Common_Skill_Scene, TheurgiaSeqList) == 0x000008, "Member 'BP_BtlHumanBase_C_Check_Theurgia_Need_Common_Skill_Scene::TheurgiaSeqList' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_Check_Theurgia_Need_Common_Skill_Scene, CallFunc_GetSkillID_ReturnValue) == 0x000010, "Member 'BP_BtlHumanBase_C_Check_Theurgia_Need_Common_Skill_Scene::CallFunc_GetSkillID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_Check_Theurgia_Need_Common_Skill_Scene, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000014, "Member 'BP_BtlHumanBase_C_Check_Theurgia_Need_Common_Skill_Scene::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_Check_Theurgia_Need_Common_Skill_Scene, CallFunc_IsPlayingAstrea_ReturnValue) == 0x000015, "Member 'BP_BtlHumanBase_C_Check_Theurgia_Need_Common_Skill_Scene::CallFunc_IsPlayingAstrea_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_Check_Theurgia_Need_Common_Skill_Scene, CallFunc_GetSkillID_ReturnValue_1) == 0x000018, "Member 'BP_BtlHumanBase_C_Check_Theurgia_Need_Common_Skill_Scene::CallFunc_GetSkillID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_Check_Theurgia_Need_Common_Skill_Scene, CallFunc_IsUsingOffensiveSkill_ReturnValue) == 0x00001C, "Member 'BP_BtlHumanBase_C_Check_Theurgia_Need_Common_Skill_Scene::CallFunc_IsUsingOffensiveSkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_Check_Theurgia_Need_Common_Skill_Scene, CallFunc_Conv_IntToString_ReturnValue) == 0x000020, "Member 'BP_BtlHumanBase_C_Check_Theurgia_Need_Common_Skill_Scene::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_Check_Theurgia_Need_Common_Skill_Scene, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'BP_BtlHumanBase_C_Check_Theurgia_Need_Common_Skill_Scene::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_Check_Theurgia_Need_Common_Skill_Scene, CallFunc_Conv_StringToName_ReturnValue) == 0x000034, "Member 'BP_BtlHumanBase_C_Check_Theurgia_Need_Common_Skill_Scene::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_Check_Theurgia_Need_Common_Skill_Scene, CallFunc_IsSkillMixraid_ReturnValue) == 0x00003C, "Member 'BP_BtlHumanBase_C_Check_Theurgia_Need_Common_Skill_Scene::CallFunc_IsSkillMixraid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_Check_Theurgia_Need_Common_Skill_Scene, CallFunc_GetDataTableRowFromName_OutRow) == 0x000040, "Member 'BP_BtlHumanBase_C_Check_Theurgia_Need_Common_Skill_Scene::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_Check_Theurgia_Need_Common_Skill_Scene, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000E0, "Member 'BP_BtlHumanBase_C_Check_Theurgia_Need_Common_Skill_Scene::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_Check_Theurgia_Need_Common_Skill_Scene, CallFunc_BooleanOR_ReturnValue) == 0x0000E1, "Member 'BP_BtlHumanBase_C_Check_Theurgia_Need_Common_Skill_Scene::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.SetVisibleSummonEffect
// 0x0002 (0x0002 - 0x0000)
struct BP_BtlHumanBase_C_SetVisibleSummonEffect final
{
public:
	bool                                          bNewVisibility;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_SetVisibleSummonEffect) == 0x000001, "Wrong alignment on BP_BtlHumanBase_C_SetVisibleSummonEffect");
static_assert(sizeof(BP_BtlHumanBase_C_SetVisibleSummonEffect) == 0x000002, "Wrong size on BP_BtlHumanBase_C_SetVisibleSummonEffect");
static_assert(offsetof(BP_BtlHumanBase_C_SetVisibleSummonEffect, bNewVisibility) == 0x000000, "Member 'BP_BtlHumanBase_C_SetVisibleSummonEffect::bNewVisibility' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetVisibleSummonEffect, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_BtlHumanBase_C_SetVisibleSummonEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.PlayCriticalAttackCamera
// 0x00E0 (0x00E0 - 0x0000)
struct BP_BtlHumanBase_C_PlayCriticalAttackCamera final
{
public:
	class ULevelSequence*                         CallFunc_GetCriticalAttackCamera_LS;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALevelSequenceActor*                    CallFunc_CreateLevelSequencePlayer_OutActor;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_CreateLevelSequencePlayer_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_CalcLevelSequencePlayTime_animTime;       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ACineCameraActor*                       CallFunc_GetCriticalAttackUpshotCamera_BCD_Camera; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_PlayCriticalAttackCamera) == 0x000010, "Wrong alignment on BP_BtlHumanBase_C_PlayCriticalAttackCamera");
static_assert(sizeof(BP_BtlHumanBase_C_PlayCriticalAttackCamera) == 0x0000E0, "Wrong size on BP_BtlHumanBase_C_PlayCriticalAttackCamera");
static_assert(offsetof(BP_BtlHumanBase_C_PlayCriticalAttackCamera, CallFunc_GetCriticalAttackCamera_LS) == 0x000000, "Member 'BP_BtlHumanBase_C_PlayCriticalAttackCamera::CallFunc_GetCriticalAttackCamera_LS' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayCriticalAttackCamera, CallFunc_CreateLevelSequencePlayer_OutActor) == 0x000008, "Member 'BP_BtlHumanBase_C_PlayCriticalAttackCamera::CallFunc_CreateLevelSequencePlayer_OutActor' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayCriticalAttackCamera, CallFunc_CreateLevelSequencePlayer_ReturnValue) == 0x000010, "Member 'BP_BtlHumanBase_C_PlayCriticalAttackCamera::CallFunc_CreateLevelSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayCriticalAttackCamera, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_BtlHumanBase_C_PlayCriticalAttackCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayCriticalAttackCamera, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'BP_BtlHumanBase_C_PlayCriticalAttackCamera::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayCriticalAttackCamera, CallFunc_CalcLevelSequencePlayTime_animTime) == 0x00002C, "Member 'BP_BtlHumanBase_C_PlayCriticalAttackCamera::CallFunc_CalcLevelSequencePlayTime_animTime' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayCriticalAttackCamera, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000030, "Member 'BP_BtlHumanBase_C_PlayCriticalAttackCamera::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayCriticalAttackCamera, CallFunc_GetCriticalAttackUpshotCamera_BCD_Camera) == 0x000038, "Member 'BP_BtlHumanBase_C_PlayCriticalAttackCamera::CallFunc_GetCriticalAttackUpshotCamera_BCD_Camera' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayCriticalAttackCamera, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000040, "Member 'BP_BtlHumanBase_C_PlayCriticalAttackCamera::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayCriticalAttackCamera, CallFunc_BreakTransform_Location) == 0x000070, "Member 'BP_BtlHumanBase_C_PlayCriticalAttackCamera::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayCriticalAttackCamera, CallFunc_BreakTransform_Rotation) == 0x00007C, "Member 'BP_BtlHumanBase_C_PlayCriticalAttackCamera::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayCriticalAttackCamera, CallFunc_BreakTransform_Scale) == 0x000088, "Member 'BP_BtlHumanBase_C_PlayCriticalAttackCamera::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayCriticalAttackCamera, CallFunc_BreakRotator_Roll) == 0x000094, "Member 'BP_BtlHumanBase_C_PlayCriticalAttackCamera::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayCriticalAttackCamera, CallFunc_BreakRotator_Pitch) == 0x000098, "Member 'BP_BtlHumanBase_C_PlayCriticalAttackCamera::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayCriticalAttackCamera, CallFunc_BreakRotator_Yaw) == 0x00009C, "Member 'BP_BtlHumanBase_C_PlayCriticalAttackCamera::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayCriticalAttackCamera, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000A0, "Member 'BP_BtlHumanBase_C_PlayCriticalAttackCamera::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayCriticalAttackCamera, CallFunc_MakeRotator_ReturnValue) == 0x0000A4, "Member 'BP_BtlHumanBase_C_PlayCriticalAttackCamera::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayCriticalAttackCamera, CallFunc_MakeTransform_ReturnValue) == 0x0000B0, "Member 'BP_BtlHumanBase_C_PlayCriticalAttackCamera::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.CreateAppCharacter
// 0x0020 (0x0020 - 0x0000)
struct BP_BtlHumanBase_C_CreateAppCharacter final
{
public:
	class UAppCharBaseComp*                       AppCharaCompBase;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	EAppCharCategoryType                          CharacterCategory;                                 // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CharacterId;                                       // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CostumeID_0;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAppCharWeaponType                            WeaponType;                                        // 0x0014(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ConvPlayerID_ConvPlayerID;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_CreateAppCharacter) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_CreateAppCharacter");
static_assert(sizeof(BP_BtlHumanBase_C_CreateAppCharacter) == 0x000020, "Wrong size on BP_BtlHumanBase_C_CreateAppCharacter");
static_assert(offsetof(BP_BtlHumanBase_C_CreateAppCharacter, AppCharaCompBase) == 0x000000, "Member 'BP_BtlHumanBase_C_CreateAppCharacter::AppCharaCompBase' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CreateAppCharacter, CharacterCategory) == 0x000008, "Member 'BP_BtlHumanBase_C_CreateAppCharacter::CharacterCategory' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CreateAppCharacter, CharacterId) == 0x00000C, "Member 'BP_BtlHumanBase_C_CreateAppCharacter::CharacterId' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CreateAppCharacter, CostumeID_0) == 0x000010, "Member 'BP_BtlHumanBase_C_CreateAppCharacter::CostumeID_0' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CreateAppCharacter, WeaponType) == 0x000014, "Member 'BP_BtlHumanBase_C_CreateAppCharacter::WeaponType' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CreateAppCharacter, CallFunc_ConvPlayerID_ConvPlayerID) == 0x000018, "Member 'BP_BtlHumanBase_C_CreateAppCharacter::CallFunc_ConvPlayerID_ConvPlayerID' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.ConvPlayerID
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlHumanBase_C_ConvPlayerID final
{
public:
	int32                                         PlayerId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ConvPlayerID_0;                                    // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_ConvPlayerID) == 0x000004, "Wrong alignment on BP_BtlHumanBase_C_ConvPlayerID");
static_assert(sizeof(BP_BtlHumanBase_C_ConvPlayerID) == 0x000008, "Wrong size on BP_BtlHumanBase_C_ConvPlayerID");
static_assert(offsetof(BP_BtlHumanBase_C_ConvPlayerID, PlayerId) == 0x000000, "Member 'BP_BtlHumanBase_C_ConvPlayerID::PlayerId' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ConvPlayerID, ConvPlayerID_0) == 0x000004, "Member 'BP_BtlHumanBase_C_ConvPlayerID::ConvPlayerID_0' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.SetHeadLookatForTopUI
// 0x0060 (0x0060 - 0x0000)
struct BP_BtlHumanBase_C_SetHeadLookatForTopUI final
{
public:
	class ABtlActor*                              LookAtTarget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 TargetSocket;                                      // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UABP_CH_MeshBase_C*                     CharaABP;                                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetShowActor_Showing_Actor;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckLookatEnable_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMesh_SkeletalMesh;             // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UABP_CH_MeshBase_C*                     K2Node_DynamicCast_AsABP_CH_Mesh_Base;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_SetHeadLookatForTopUI) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_SetHeadLookatForTopUI");
static_assert(sizeof(BP_BtlHumanBase_C_SetHeadLookatForTopUI) == 0x000060, "Wrong size on BP_BtlHumanBase_C_SetHeadLookatForTopUI");
static_assert(offsetof(BP_BtlHumanBase_C_SetHeadLookatForTopUI, LookAtTarget) == 0x000000, "Member 'BP_BtlHumanBase_C_SetHeadLookatForTopUI::LookAtTarget' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetHeadLookatForTopUI, TargetSocket) == 0x000008, "Member 'BP_BtlHumanBase_C_SetHeadLookatForTopUI::TargetSocket' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetHeadLookatForTopUI, CharaABP) == 0x000018, "Member 'BP_BtlHumanBase_C_SetHeadLookatForTopUI::CharaABP' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetHeadLookatForTopUI, K2Node_DynamicCast_AsBP_Btl_Character_Base) == 0x000020, "Member 'BP_BtlHumanBase_C_SetHeadLookatForTopUI::K2Node_DynamicCast_AsBP_Btl_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetHeadLookatForTopUI, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_BtlHumanBase_C_SetHeadLookatForTopUI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetHeadLookatForTopUI, CallFunc_GetShowActor_Showing_Actor) == 0x000030, "Member 'BP_BtlHumanBase_C_SetHeadLookatForTopUI::CallFunc_GetShowActor_Showing_Actor' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetHeadLookatForTopUI, CallFunc_CheckLookatEnable_ReturnValue) == 0x000038, "Member 'BP_BtlHumanBase_C_SetHeadLookatForTopUI::CallFunc_CheckLookatEnable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetHeadLookatForTopUI, CallFunc_GetSkeletalMesh_SkeletalMesh) == 0x000040, "Member 'BP_BtlHumanBase_C_SetHeadLookatForTopUI::CallFunc_GetSkeletalMesh_SkeletalMesh' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetHeadLookatForTopUI, CallFunc_GetAnimInstance_ReturnValue) == 0x000048, "Member 'BP_BtlHumanBase_C_SetHeadLookatForTopUI::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetHeadLookatForTopUI, K2Node_DynamicCast_AsABP_CH_Mesh_Base) == 0x000050, "Member 'BP_BtlHumanBase_C_SetHeadLookatForTopUI::K2Node_DynamicCast_AsABP_CH_Mesh_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetHeadLookatForTopUI, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_BtlHumanBase_C_SetHeadLookatForTopUI::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.DisableHeadLookat
// 0x0038 (0x0038 - 0x0000)
struct BP_BtlHumanBase_C_DisableHeadLookat final
{
public:
	bool                                          ForceHeadReset;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UABP_CH_MeshBase_C*                     CharaABP;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMesh_SkeletalMesh;             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UABP_CH_MeshBase_C*                     K2Node_DynamicCast_AsABP_CH_Mesh_Base;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_DisableHeadLookat) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_DisableHeadLookat");
static_assert(sizeof(BP_BtlHumanBase_C_DisableHeadLookat) == 0x000038, "Wrong size on BP_BtlHumanBase_C_DisableHeadLookat");
static_assert(offsetof(BP_BtlHumanBase_C_DisableHeadLookat, ForceHeadReset) == 0x000000, "Member 'BP_BtlHumanBase_C_DisableHeadLookat::ForceHeadReset' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_DisableHeadLookat, CharaABP) == 0x000008, "Member 'BP_BtlHumanBase_C_DisableHeadLookat::CharaABP' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_DisableHeadLookat, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'BP_BtlHumanBase_C_DisableHeadLookat::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_DisableHeadLookat, CallFunc_GetSkeletalMesh_SkeletalMesh) == 0x000018, "Member 'BP_BtlHumanBase_C_DisableHeadLookat::CallFunc_GetSkeletalMesh_SkeletalMesh' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_DisableHeadLookat, CallFunc_GetAnimInstance_ReturnValue) == 0x000020, "Member 'BP_BtlHumanBase_C_DisableHeadLookat::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_DisableHeadLookat, K2Node_DynamicCast_AsABP_CH_Mesh_Base) == 0x000028, "Member 'BP_BtlHumanBase_C_DisableHeadLookat::K2Node_DynamicCast_AsABP_CH_Mesh_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_DisableHeadLookat, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_BtlHumanBase_C_DisableHeadLookat::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.CheckTheurgiaPersonaKeepShowing
// 0x0014 (0x0014 - 0x0000)
struct BP_BtlHumanBase_C_CheckTheurgiaPersonaKeepShowing final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Check_Theurgia_Need_Common_Skill_Scene_ReturnValue; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSkillID_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSkillFukaTheurgia_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingOffensiveSkill_ReturnValue;        // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSkillTheurgia_ReturnValue;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSkillMixraid_ReturnValue;               // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_CheckTheurgiaPersonaKeepShowing) == 0x000004, "Wrong alignment on BP_BtlHumanBase_C_CheckTheurgiaPersonaKeepShowing");
static_assert(sizeof(BP_BtlHumanBase_C_CheckTheurgiaPersonaKeepShowing) == 0x000014, "Wrong size on BP_BtlHumanBase_C_CheckTheurgiaPersonaKeepShowing");
static_assert(offsetof(BP_BtlHumanBase_C_CheckTheurgiaPersonaKeepShowing, Show) == 0x000000, "Member 'BP_BtlHumanBase_C_CheckTheurgiaPersonaKeepShowing::Show' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CheckTheurgiaPersonaKeepShowing, CallFunc_Check_Theurgia_Need_Common_Skill_Scene_ReturnValue) == 0x000001, "Member 'BP_BtlHumanBase_C_CheckTheurgiaPersonaKeepShowing::CallFunc_Check_Theurgia_Need_Common_Skill_Scene_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CheckTheurgiaPersonaKeepShowing, CallFunc_GetSkillID_ReturnValue) == 0x000004, "Member 'BP_BtlHumanBase_C_CheckTheurgiaPersonaKeepShowing::CallFunc_GetSkillID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CheckTheurgiaPersonaKeepShowing, CallFunc_IsSkillFukaTheurgia_ReturnValue) == 0x000008, "Member 'BP_BtlHumanBase_C_CheckTheurgiaPersonaKeepShowing::CallFunc_IsSkillFukaTheurgia_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CheckTheurgiaPersonaKeepShowing, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000009, "Member 'BP_BtlHumanBase_C_CheckTheurgiaPersonaKeepShowing::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CheckTheurgiaPersonaKeepShowing, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'BP_BtlHumanBase_C_CheckTheurgiaPersonaKeepShowing::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CheckTheurgiaPersonaKeepShowing, CallFunc_IsUsingOffensiveSkill_ReturnValue) == 0x00000B, "Member 'BP_BtlHumanBase_C_CheckTheurgiaPersonaKeepShowing::CallFunc_IsUsingOffensiveSkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CheckTheurgiaPersonaKeepShowing, CallFunc_IsSkillTheurgia_ReturnValue) == 0x00000C, "Member 'BP_BtlHumanBase_C_CheckTheurgiaPersonaKeepShowing::CallFunc_IsSkillTheurgia_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CheckTheurgiaPersonaKeepShowing, CallFunc_Not_PreBool_ReturnValue_1) == 0x00000D, "Member 'BP_BtlHumanBase_C_CheckTheurgiaPersonaKeepShowing::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CheckTheurgiaPersonaKeepShowing, CallFunc_IsSkillMixraid_ReturnValue) == 0x00000E, "Member 'BP_BtlHumanBase_C_CheckTheurgiaPersonaKeepShowing::CallFunc_IsSkillMixraid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CheckTheurgiaPersonaKeepShowing, CallFunc_BooleanAND_ReturnValue) == 0x00000F, "Member 'BP_BtlHumanBase_C_CheckTheurgiaPersonaKeepShowing::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CheckTheurgiaPersonaKeepShowing, CallFunc_BooleanOR_ReturnValue) == 0x000010, "Member 'BP_BtlHumanBase_C_CheckTheurgiaPersonaKeepShowing::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CheckTheurgiaPersonaKeepShowing, CallFunc_BooleanOR_ReturnValue_1) == 0x000011, "Member 'BP_BtlHumanBase_C_CheckTheurgiaPersonaKeepShowing::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CheckTheurgiaPersonaKeepShowing, CallFunc_BooleanAND_ReturnValue_1) == 0x000012, "Member 'BP_BtlHumanBase_C_CheckTheurgiaPersonaKeepShowing::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CheckTheurgiaPersonaKeepShowing, CallFunc_BooleanAND_ReturnValue_2) == 0x000013, "Member 'BP_BtlHumanBase_C_CheckTheurgiaPersonaKeepShowing::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.PlayFaceAnimationFromBodyAnim
// 0x00E0 (0x00E0 - 0x0000)
struct BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim final
{
public:
	class FName                                   Section;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CheckStr;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          NotPlay;                                           // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EBtlAnimationType                             Motion;                                            // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlCharacterFaceAnim                  FaceWork;                                          // 0x0020(0x0018)(Edit, BlueprintVisible)
	EAppCharFaceAnimID                            FaceType;                                          // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckDisableUpdateFaceAnimFromBody_ReturnValue; // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77[0x1];                                       // 0x0077(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue_1;                    // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x00A0(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlCharacterFaceAnim                  CallFunc_GetDataTableRowFromName_OutRow;           // 0x00C0(0x0018)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim");
static_assert(sizeof(BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim) == 0x0000E0, "Wrong size on BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim, Section) == 0x000000, "Member 'BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim::Section' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim, CheckStr) == 0x000008, "Member 'BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim::CheckStr' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim, NotPlay) == 0x000018, "Member 'BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim::NotPlay' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim, Motion) == 0x000019, "Member 'BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim::Motion' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim, FaceWork) == 0x000020, "Member 'BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim::FaceWork' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim, FaceType) == 0x000038, "Member 'BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim::FaceType' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim, CallFunc_Conv_NameToString_ReturnValue) == 0x000040, "Member 'BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim, CallFunc_Replace_ReturnValue) == 0x000058, "Member 'BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim, Temp_bool_True_if_break_was_hit_Variable) == 0x00006C, "Member 'BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim, Temp_int_Array_Index_Variable) == 0x000070, "Member 'BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim, CallFunc_Not_PreBool_ReturnValue) == 0x000074, "Member 'BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim, CallFunc_CheckDisableUpdateFaceAnimFromBody_ReturnValue) == 0x000075, "Member 'BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim::CallFunc_CheckDisableUpdateFaceAnimFromBody_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim, CallFunc_IsValid_ReturnValue) == 0x000076, "Member 'BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000078, "Member 'BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim, CallFunc_Replace_ReturnValue_1) == 0x000088, "Member 'BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim::CallFunc_Replace_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000098, "Member 'BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim, CallFunc_GetDataTableRowNames_OutRowNames) == 0x0000A0, "Member 'BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim, CallFunc_Array_Length_ReturnValue) == 0x0000B8, "Member 'BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000C0, "Member 'BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000D8, "Member 'BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim, CallFunc_Less_IntInt_ReturnValue) == 0x0000D9, "Member 'BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim, CallFunc_BooleanAND_ReturnValue) == 0x0000DA, "Member 'BP_BtlHumanBase_C_PlayFaceAnimationFromBodyAnim::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.GetAppCharacterActor
// 0x0010 (0x0010 - 0x0000)
struct BP_BtlHumanBase_C_GetAppCharacterActor final
{
public:
	class ABP_CharacterBase_C*                    Character;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_GetAppCharacterActor) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_GetAppCharacterActor");
static_assert(sizeof(BP_BtlHumanBase_C_GetAppCharacterActor) == 0x000010, "Wrong size on BP_BtlHumanBase_C_GetAppCharacterActor");
static_assert(offsetof(BP_BtlHumanBase_C_GetAppCharacterActor, Character) == 0x000000, "Member 'BP_BtlHumanBase_C_GetAppCharacterActor::Character' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetAppCharacterActor, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_BtlHumanBase_C_GetAppCharacterActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.LoadTheurgia
// 0x0040 (0x0040 - 0x0000)
struct BP_BtlHumanBase_C_LoadTheurgia final
{
public:
	class ABP_BtlCharacterBase_C*                 MainChara;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSkillOrgia_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlHumanBase_C*                     K2Node_DynamicCast_AsBP_Btl_Human_Base;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DebugCheckTheurgiaValid_Valid;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Check_Theurgia_Need_Common_Skill_Scene_ReturnValue; // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_LoadTheurgia) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_LoadTheurgia");
static_assert(sizeof(BP_BtlHumanBase_C_LoadTheurgia) == 0x000040, "Wrong size on BP_BtlHumanBase_C_LoadTheurgia");
static_assert(offsetof(BP_BtlHumanBase_C_LoadTheurgia, MainChara) == 0x000000, "Member 'BP_BtlHumanBase_C_LoadTheurgia::MainChara' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_LoadTheurgia, CallFunc_IsSkillOrgia_ReturnValue) == 0x000008, "Member 'BP_BtlHumanBase_C_LoadTheurgia::CallFunc_IsSkillOrgia_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_LoadTheurgia, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_BtlHumanBase_C_LoadTheurgia::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_LoadTheurgia, K2Node_DynamicCast_AsBP_Btl_Human_Base) == 0x000010, "Member 'BP_BtlHumanBase_C_LoadTheurgia::K2Node_DynamicCast_AsBP_Btl_Human_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_LoadTheurgia, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_BtlHumanBase_C_LoadTheurgia::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_LoadTheurgia, CallFunc_DebugCheckTheurgiaValid_Valid) == 0x000019, "Member 'BP_BtlHumanBase_C_LoadTheurgia::CallFunc_DebugCheckTheurgiaValid_Valid' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_LoadTheurgia, CallFunc_Check_Theurgia_Need_Common_Skill_Scene_ReturnValue) == 0x00001A, "Member 'BP_BtlHumanBase_C_LoadTheurgia::CallFunc_Check_Theurgia_Need_Common_Skill_Scene_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_LoadTheurgia, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'BP_BtlHumanBase_C_LoadTheurgia::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_LoadTheurgia, K2Node_CreateDelegate_OutputDelegate_1) == 0x00002C, "Member 'BP_BtlHumanBase_C_LoadTheurgia::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.RegisterPersonaOwnerForFukaTheurgia
// 0x0020 (0x0020 - 0x0000)
struct BP_BtlHumanBase_C_RegisterPersonaOwnerForFukaTheurgia final
{
public:
	bool                                          CallFunc_CheckPersonaValid_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_GetPersona_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlPersonaBase_C*                   K2Node_DynamicCast_AsBP_Btl_Persona_Base;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_RegisterPersonaOwnerForFukaTheurgia) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_RegisterPersonaOwnerForFukaTheurgia");
static_assert(sizeof(BP_BtlHumanBase_C_RegisterPersonaOwnerForFukaTheurgia) == 0x000020, "Wrong size on BP_BtlHumanBase_C_RegisterPersonaOwnerForFukaTheurgia");
static_assert(offsetof(BP_BtlHumanBase_C_RegisterPersonaOwnerForFukaTheurgia, CallFunc_CheckPersonaValid_ReturnValue) == 0x000000, "Member 'BP_BtlHumanBase_C_RegisterPersonaOwnerForFukaTheurgia::CallFunc_CheckPersonaValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_RegisterPersonaOwnerForFukaTheurgia, CallFunc_GetPersona_ReturnValue) == 0x000008, "Member 'BP_BtlHumanBase_C_RegisterPersonaOwnerForFukaTheurgia::CallFunc_GetPersona_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_RegisterPersonaOwnerForFukaTheurgia, K2Node_DynamicCast_AsBP_Btl_Persona_Base) == 0x000010, "Member 'BP_BtlHumanBase_C_RegisterPersonaOwnerForFukaTheurgia::K2Node_DynamicCast_AsBP_Btl_Persona_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_RegisterPersonaOwnerForFukaTheurgia, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_BtlHumanBase_C_RegisterPersonaOwnerForFukaTheurgia::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.GetCriticalAttackCamera
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlHumanBase_C_GetCriticalAttackCamera final
{
public:
	class ULevelSequence*                         LS;                                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_GetCriticalAttackCamera) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_GetCriticalAttackCamera");
static_assert(sizeof(BP_BtlHumanBase_C_GetCriticalAttackCamera) == 0x000008, "Wrong size on BP_BtlHumanBase_C_GetCriticalAttackCamera");
static_assert(offsetof(BP_BtlHumanBase_C_GetCriticalAttackCamera, LS) == 0x000000, "Member 'BP_BtlHumanBase_C_GetCriticalAttackCamera::LS' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.UpdateStatus
// 0x0130 (0x0130 - 0x0000)
struct BP_BtlHumanBase_C_UpdateStatus final
{
public:
	class UNiagaraComponent*                      CallFunc_GetSummonEffect_SummonEffect;             // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	class UNiagaraComponent*                      CallFunc_GetSummonEffect_SummonEffect_1;           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x00A0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BtlHumanBase_C_UpdateStatus) == 0x000010, "Wrong alignment on BP_BtlHumanBase_C_UpdateStatus");
static_assert(sizeof(BP_BtlHumanBase_C_UpdateStatus) == 0x000130, "Wrong size on BP_BtlHumanBase_C_UpdateStatus");
static_assert(offsetof(BP_BtlHumanBase_C_UpdateStatus, CallFunc_GetSummonEffect_SummonEffect) == 0x000000, "Member 'BP_BtlHumanBase_C_UpdateStatus::CallFunc_GetSummonEffect_SummonEffect' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_UpdateStatus, CallFunc_GetSocketTransform_ReturnValue) == 0x000010, "Member 'BP_BtlHumanBase_C_UpdateStatus::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_UpdateStatus, CallFunc_GetSummonEffect_SummonEffect_1) == 0x000040, "Member 'BP_BtlHumanBase_C_UpdateStatus::CallFunc_GetSummonEffect_SummonEffect_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_UpdateStatus, CallFunc_BreakTransform_Location) == 0x000048, "Member 'BP_BtlHumanBase_C_UpdateStatus::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_UpdateStatus, CallFunc_BreakTransform_Rotation) == 0x000054, "Member 'BP_BtlHumanBase_C_UpdateStatus::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_UpdateStatus, CallFunc_BreakTransform_Scale) == 0x000060, "Member 'BP_BtlHumanBase_C_UpdateStatus::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_UpdateStatus, CallFunc_IsValid_ReturnValue) == 0x00006C, "Member 'BP_BtlHumanBase_C_UpdateStatus::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_UpdateStatus, CallFunc_MakeTransform_ReturnValue) == 0x000070, "Member 'BP_BtlHumanBase_C_UpdateStatus::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_UpdateStatus, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x0000A0, "Member 'BP_BtlHumanBase_C_UpdateStatus::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.CheckNeedToDestroyPersonaForEvent
// 0x0001 (0x0001 - 0x0000)
struct BP_BtlHumanBase_C_CheckNeedToDestroyPersonaForEvent final
{
public:
	bool                                          ToDestroy;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_CheckNeedToDestroyPersonaForEvent) == 0x000001, "Wrong alignment on BP_BtlHumanBase_C_CheckNeedToDestroyPersonaForEvent");
static_assert(sizeof(BP_BtlHumanBase_C_CheckNeedToDestroyPersonaForEvent) == 0x000001, "Wrong size on BP_BtlHumanBase_C_CheckNeedToDestroyPersonaForEvent");
static_assert(offsetof(BP_BtlHumanBase_C_CheckNeedToDestroyPersonaForEvent, ToDestroy) == 0x000000, "Member 'BP_BtlHumanBase_C_CheckNeedToDestroyPersonaForEvent::ToDestroy' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.GetHitSENo
// 0x00F0 (0x00F0 - 0x0000)
struct BP_BtlHumanBase_C_GetHitSENo final
{
public:
	EBtlAnimNotifyHitEffect                       Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SENo;                                              // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FoundSE;                                           // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBtlAttackSEExParam                   Work;                                              // 0x000C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Str;                                               // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBtlAttackSEParam                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0048(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBtlAttackSEExParam                   CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EBtlAttackWeaponAnimType                      CallFunc_GetAttackWeaponAnimType_ReturnValue;      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetID_ReturnValue;                        // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EBtlAttackPerformanceType                     CallFunc_GetAttackPerformanceType_ReturnValue;     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_GetHitSENo) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_GetHitSENo");
static_assert(sizeof(BP_BtlHumanBase_C_GetHitSENo) == 0x0000F0, "Wrong size on BP_BtlHumanBase_C_GetHitSENo");
static_assert(offsetof(BP_BtlHumanBase_C_GetHitSENo, Type) == 0x000000, "Member 'BP_BtlHumanBase_C_GetHitSENo::Type' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetHitSENo, SENo) == 0x000004, "Member 'BP_BtlHumanBase_C_GetHitSENo::SENo' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetHitSENo, FoundSE) == 0x000008, "Member 'BP_BtlHumanBase_C_GetHitSENo::FoundSE' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetHitSENo, Work) == 0x00000C, "Member 'BP_BtlHumanBase_C_GetHitSENo::Work' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetHitSENo, Str) == 0x000018, "Member 'BP_BtlHumanBase_C_GetHitSENo::Str' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetHitSENo, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000028, "Member 'BP_BtlHumanBase_C_GetHitSENo::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetHitSENo, CallFunc_Conv_StringToName_ReturnValue) == 0x00002C, "Member 'BP_BtlHumanBase_C_GetHitSENo::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetHitSENo, CallFunc_GetDataTableRowFromName_OutRow) == 0x000034, "Member 'BP_BtlHumanBase_C_GetHitSENo::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetHitSENo, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000040, "Member 'BP_BtlHumanBase_C_GetHitSENo::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetHitSENo, Temp_int_Array_Index_Variable) == 0x000044, "Member 'BP_BtlHumanBase_C_GetHitSENo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetHitSENo, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000048, "Member 'BP_BtlHumanBase_C_GetHitSENo::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetHitSENo, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_BtlHumanBase_C_GetHitSENo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetHitSENo, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000060, "Member 'BP_BtlHumanBase_C_GetHitSENo::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetHitSENo, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000068, "Member 'BP_BtlHumanBase_C_GetHitSENo::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetHitSENo, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000069, "Member 'BP_BtlHumanBase_C_GetHitSENo::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetHitSENo, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'BP_BtlHumanBase_C_GetHitSENo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetHitSENo, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'BP_BtlHumanBase_C_GetHitSENo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetHitSENo, CallFunc_Concat_StrStr_ReturnValue) == 0x000078, "Member 'BP_BtlHumanBase_C_GetHitSENo::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetHitSENo, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'BP_BtlHumanBase_C_GetHitSENo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetHitSENo, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'BP_BtlHumanBase_C_GetHitSENo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetHitSENo, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000090, "Member 'BP_BtlHumanBase_C_GetHitSENo::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetHitSENo, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000A0, "Member 'BP_BtlHumanBase_C_GetHitSENo::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetHitSENo, CallFunc_GetAttackWeaponAnimType_ReturnValue) == 0x0000B0, "Member 'BP_BtlHumanBase_C_GetHitSENo::CallFunc_GetAttackWeaponAnimType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetHitSENo, CallFunc_GetID_ReturnValue) == 0x0000B4, "Member 'BP_BtlHumanBase_C_GetHitSENo::CallFunc_GetID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetHitSENo, K2Node_SwitchEnum_CmpSuccess) == 0x0000B8, "Member 'BP_BtlHumanBase_C_GetHitSENo::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetHitSENo, CallFunc_Conv_IntToString_ReturnValue) == 0x0000C0, "Member 'BP_BtlHumanBase_C_GetHitSENo::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetHitSENo, CallFunc_GetAttackPerformanceType_ReturnValue) == 0x0000D0, "Member 'BP_BtlHumanBase_C_GetHitSENo::CallFunc_GetAttackPerformanceType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetHitSENo, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000D8, "Member 'BP_BtlHumanBase_C_GetHitSENo::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetHitSENo, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000E8, "Member 'BP_BtlHumanBase_C_GetHitSENo::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.SetHeadLookatWorldForTopUI
// 0x0100 (0x0100 - 0x0000)
struct BP_BtlHumanBase_C_SetHeadLookatWorldForTopUI final
{
public:
	struct FVector                                RelativeLocation;                                  // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UABP_CH_MeshBase_C*                     CharaABP;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_CheckLookatEnable_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue;       // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0050(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMesh_SkeletalMesh;             // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UABP_CH_MeshBase_C*                     K2Node_DynamicCast_AsABP_CH_Mesh_Base;             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_SetHeadLookatWorldForTopUI) == 0x000010, "Wrong alignment on BP_BtlHumanBase_C_SetHeadLookatWorldForTopUI");
static_assert(sizeof(BP_BtlHumanBase_C_SetHeadLookatWorldForTopUI) == 0x000100, "Wrong size on BP_BtlHumanBase_C_SetHeadLookatWorldForTopUI");
static_assert(offsetof(BP_BtlHumanBase_C_SetHeadLookatWorldForTopUI, RelativeLocation) == 0x000000, "Member 'BP_BtlHumanBase_C_SetHeadLookatWorldForTopUI::RelativeLocation' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetHeadLookatWorldForTopUI, CharaABP) == 0x000010, "Member 'BP_BtlHumanBase_C_SetHeadLookatWorldForTopUI::CharaABP' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetHeadLookatWorldForTopUI, CallFunc_CheckLookatEnable_ReturnValue) == 0x000018, "Member 'BP_BtlHumanBase_C_SetHeadLookatWorldForTopUI::CallFunc_CheckLookatEnable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetHeadLookatWorldForTopUI, CallFunc_Conv_VectorToTransform_ReturnValue) == 0x000020, "Member 'BP_BtlHumanBase_C_SetHeadLookatWorldForTopUI::CallFunc_Conv_VectorToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetHeadLookatWorldForTopUI, CallFunc_GetTransform_ReturnValue) == 0x000050, "Member 'BP_BtlHumanBase_C_SetHeadLookatWorldForTopUI::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetHeadLookatWorldForTopUI, CallFunc_ComposeTransforms_ReturnValue) == 0x000080, "Member 'BP_BtlHumanBase_C_SetHeadLookatWorldForTopUI::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetHeadLookatWorldForTopUI, CallFunc_BreakTransform_Location) == 0x0000B0, "Member 'BP_BtlHumanBase_C_SetHeadLookatWorldForTopUI::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetHeadLookatWorldForTopUI, CallFunc_BreakTransform_Rotation) == 0x0000BC, "Member 'BP_BtlHumanBase_C_SetHeadLookatWorldForTopUI::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetHeadLookatWorldForTopUI, CallFunc_BreakTransform_Scale) == 0x0000C8, "Member 'BP_BtlHumanBase_C_SetHeadLookatWorldForTopUI::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetHeadLookatWorldForTopUI, CallFunc_GetSkeletalMesh_SkeletalMesh) == 0x0000D8, "Member 'BP_BtlHumanBase_C_SetHeadLookatWorldForTopUI::CallFunc_GetSkeletalMesh_SkeletalMesh' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetHeadLookatWorldForTopUI, CallFunc_GetAnimInstance_ReturnValue) == 0x0000E0, "Member 'BP_BtlHumanBase_C_SetHeadLookatWorldForTopUI::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetHeadLookatWorldForTopUI, K2Node_DynamicCast_AsABP_CH_Mesh_Base) == 0x0000E8, "Member 'BP_BtlHumanBase_C_SetHeadLookatWorldForTopUI::K2Node_DynamicCast_AsABP_CH_Mesh_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetHeadLookatWorldForTopUI, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'BP_BtlHumanBase_C_SetHeadLookatWorldForTopUI::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.ShowTheurgiaGun
// 0x0020 (0x0020 - 0x0000)
struct BP_BtlHumanBase_C_ShowTheurgiaGun final
{
public:
	bool                                          TheurgiaToTurnEnd;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckNeedToAttachGun_Need;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlSummonGun_C*                     CallFunc_GetSummonGunBP_Gun;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlSummonGun_C*                     CallFunc_GetSummonGunBP_Gun_1;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_ShowTheurgiaGun) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_ShowTheurgiaGun");
static_assert(sizeof(BP_BtlHumanBase_C_ShowTheurgiaGun) == 0x000020, "Wrong size on BP_BtlHumanBase_C_ShowTheurgiaGun");
static_assert(offsetof(BP_BtlHumanBase_C_ShowTheurgiaGun, TheurgiaToTurnEnd) == 0x000000, "Member 'BP_BtlHumanBase_C_ShowTheurgiaGun::TheurgiaToTurnEnd' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ShowTheurgiaGun, CallFunc_CheckNeedToAttachGun_Need) == 0x000001, "Member 'BP_BtlHumanBase_C_ShowTheurgiaGun::CallFunc_CheckNeedToAttachGun_Need' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ShowTheurgiaGun, CallFunc_GetSummonGunBP_Gun) == 0x000008, "Member 'BP_BtlHumanBase_C_ShowTheurgiaGun::CallFunc_GetSummonGunBP_Gun' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ShowTheurgiaGun, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_BtlHumanBase_C_ShowTheurgiaGun::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ShowTheurgiaGun, CallFunc_GetSummonGunBP_Gun_1) == 0x000018, "Member 'BP_BtlHumanBase_C_ShowTheurgiaGun::CallFunc_GetSummonGunBP_Gun_1' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.StopFaceAnimation
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlHumanBase_C_StopFaceAnimation final
{
public:
	class UAppCharacterComp*                      CallFunc_GetAppCharacterComp_App_Character_Comp;   // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_StopFaceAnimation) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_StopFaceAnimation");
static_assert(sizeof(BP_BtlHumanBase_C_StopFaceAnimation) == 0x000008, "Wrong size on BP_BtlHumanBase_C_StopFaceAnimation");
static_assert(offsetof(BP_BtlHumanBase_C_StopFaceAnimation, CallFunc_GetAppCharacterComp_App_Character_Comp) == 0x000000, "Member 'BP_BtlHumanBase_C_StopFaceAnimation::CallFunc_GetAppCharacterComp_App_Character_Comp' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.ProcPreSkill
// 0x0007 (0x0007 - 0x0000)
struct BP_BtlHumanBase_C_ProcPreSkill final
{
public:
	bool                                          DonePreSkillCamera;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemy_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPlayedStandbyCamera_ReturnValue;     // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSkillTheurgia_ReturnValue;              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemy_ReturnValue_1;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckNeedToPlayPreSkillPorc_ReturnValue;  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsManualOperation_ReturnValue;            // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_ProcPreSkill) == 0x000001, "Wrong alignment on BP_BtlHumanBase_C_ProcPreSkill");
static_assert(sizeof(BP_BtlHumanBase_C_ProcPreSkill) == 0x000007, "Wrong size on BP_BtlHumanBase_C_ProcPreSkill");
static_assert(offsetof(BP_BtlHumanBase_C_ProcPreSkill, DonePreSkillCamera) == 0x000000, "Member 'BP_BtlHumanBase_C_ProcPreSkill::DonePreSkillCamera' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ProcPreSkill, CallFunc_IsEnemy_ReturnValue) == 0x000001, "Member 'BP_BtlHumanBase_C_ProcPreSkill::CallFunc_IsEnemy_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ProcPreSkill, CallFunc_CheckPlayedStandbyCamera_ReturnValue) == 0x000002, "Member 'BP_BtlHumanBase_C_ProcPreSkill::CallFunc_CheckPlayedStandbyCamera_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ProcPreSkill, CallFunc_IsSkillTheurgia_ReturnValue) == 0x000003, "Member 'BP_BtlHumanBase_C_ProcPreSkill::CallFunc_IsSkillTheurgia_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ProcPreSkill, CallFunc_IsEnemy_ReturnValue_1) == 0x000004, "Member 'BP_BtlHumanBase_C_ProcPreSkill::CallFunc_IsEnemy_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ProcPreSkill, CallFunc_CheckNeedToPlayPreSkillPorc_ReturnValue) == 0x000005, "Member 'BP_BtlHumanBase_C_ProcPreSkill::CallFunc_CheckNeedToPlayPreSkillPorc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_ProcPreSkill, CallFunc_IsManualOperation_ReturnValue) == 0x000006, "Member 'BP_BtlHumanBase_C_ProcPreSkill::CallFunc_IsManualOperation_ReturnValue' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.GetSceneMontage
// 0x0010 (0x0010 - 0x0000)
struct BP_BtlHumanBase_C_GetSceneMontage final
{
public:
	EBtlSceneAnimationType                        AnimType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           SceneAnimMontage_0;                                // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_GetSceneMontage) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_GetSceneMontage");
static_assert(sizeof(BP_BtlHumanBase_C_GetSceneMontage) == 0x000010, "Wrong size on BP_BtlHumanBase_C_GetSceneMontage");
static_assert(offsetof(BP_BtlHumanBase_C_GetSceneMontage, AnimType) == 0x000000, "Member 'BP_BtlHumanBase_C_GetSceneMontage::AnimType' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_GetSceneMontage, SceneAnimMontage_0) == 0x000008, "Member 'BP_BtlHumanBase_C_GetSceneMontage::SceneAnimMontage_0' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.SetBlink
// 0x0018 (0x0018 - 0x0000)
struct BP_BtlHumanBase_C_SetBlink final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CharacterBase_C*                    CallFunc_GetAppCharacterActor_Character;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_SetBlink) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_SetBlink");
static_assert(sizeof(BP_BtlHumanBase_C_SetBlink) == 0x000018, "Wrong size on BP_BtlHumanBase_C_SetBlink");
static_assert(offsetof(BP_BtlHumanBase_C_SetBlink, Enable) == 0x000000, "Member 'BP_BtlHumanBase_C_SetBlink::Enable' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetBlink, CallFunc_GetAppCharacterActor_Character) == 0x000008, "Member 'BP_BtlHumanBase_C_SetBlink::CallFunc_GetAppCharacterActor_Character' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetBlink, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'BP_BtlHumanBase_C_SetBlink::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetBlink, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_BtlHumanBase_C_SetBlink::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.PlayFaceAnimation
// 0x0030 (0x0030 - 0x0000)
struct BP_BtlHumanBase_C_PlayFaceAnimation final
{
public:
	EAppCharFaceAnimID                            Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BlendIn;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendOut;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceNoBlink;                                      // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAppCharacterComp*                      CallFunc_GetAppCharacterComp_App_Character_Comp;   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_PlayFaceAnimation_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_PlayFaceAnimation) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_PlayFaceAnimation");
static_assert(sizeof(BP_BtlHumanBase_C_PlayFaceAnimation) == 0x000030, "Wrong size on BP_BtlHumanBase_C_PlayFaceAnimation");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimation, Type) == 0x000000, "Member 'BP_BtlHumanBase_C_PlayFaceAnimation::Type' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimation, BlendIn) == 0x000004, "Member 'BP_BtlHumanBase_C_PlayFaceAnimation::BlendIn' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimation, BlendOut) == 0x000008, "Member 'BP_BtlHumanBase_C_PlayFaceAnimation::BlendOut' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimation, ForceNoBlink) == 0x00000C, "Member 'BP_BtlHumanBase_C_PlayFaceAnimation::ForceNoBlink' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000D, "Member 'BP_BtlHumanBase_C_PlayFaceAnimation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimation, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00000E, "Member 'BP_BtlHumanBase_C_PlayFaceAnimation::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimation, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00000F, "Member 'BP_BtlHumanBase_C_PlayFaceAnimation::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimation, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000010, "Member 'BP_BtlHumanBase_C_PlayFaceAnimation::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimation, CallFunc_BooleanOR_ReturnValue) == 0x000011, "Member 'BP_BtlHumanBase_C_PlayFaceAnimation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimation, CallFunc_BooleanOR_ReturnValue_1) == 0x000012, "Member 'BP_BtlHumanBase_C_PlayFaceAnimation::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimation, CallFunc_GetAppCharacterComp_App_Character_Comp) == 0x000018, "Member 'BP_BtlHumanBase_C_PlayFaceAnimation::CallFunc_GetAppCharacterComp_App_Character_Comp' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimation, CallFunc_BooleanOR_ReturnValue_2) == 0x000020, "Member 'BP_BtlHumanBase_C_PlayFaceAnimation::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_PlayFaceAnimation, CallFunc_PlayFaceAnimation_ReturnValue) == 0x000028, "Member 'BP_BtlHumanBase_C_PlayFaceAnimation::CallFunc_PlayFaceAnimation_ReturnValue' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.SetEquipVisibilityAuto
// 0x0060 (0x0060 - 0x0000)
struct BP_BtlHumanBase_C_SetEquipVisibilityAuto final
{
public:
	class FName                                   SectionName;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlCharacterWeaponVisibility          Table;                                             // 0x0008(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_CheckGuest_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlCharacterWeaponVisibility          CallFunc_GetDataTableRowFromName_OutRow;           // 0x0020(0x0010)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_SetEquipVisibilityAuto) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_SetEquipVisibilityAuto");
static_assert(sizeof(BP_BtlHumanBase_C_SetEquipVisibilityAuto) == 0x000060, "Wrong size on BP_BtlHumanBase_C_SetEquipVisibilityAuto");
static_assert(offsetof(BP_BtlHumanBase_C_SetEquipVisibilityAuto, SectionName) == 0x000000, "Member 'BP_BtlHumanBase_C_SetEquipVisibilityAuto::SectionName' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetEquipVisibilityAuto, Table) == 0x000008, "Member 'BP_BtlHumanBase_C_SetEquipVisibilityAuto::Table' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetEquipVisibilityAuto, CallFunc_CheckGuest_ReturnValue) == 0x000018, "Member 'BP_BtlHumanBase_C_SetEquipVisibilityAuto::CallFunc_CheckGuest_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetEquipVisibilityAuto, CallFunc_GetDataTableRowFromName_OutRow) == 0x000020, "Member 'BP_BtlHumanBase_C_SetEquipVisibilityAuto::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetEquipVisibilityAuto, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000030, "Member 'BP_BtlHumanBase_C_SetEquipVisibilityAuto::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetEquipVisibilityAuto, CallFunc_Conv_NameToString_ReturnValue) == 0x000038, "Member 'BP_BtlHumanBase_C_SetEquipVisibilityAuto::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetEquipVisibilityAuto, CallFunc_Replace_ReturnValue) == 0x000048, "Member 'BP_BtlHumanBase_C_SetEquipVisibilityAuto::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetEquipVisibilityAuto, CallFunc_Conv_StringToName_ReturnValue) == 0x000058, "Member 'BP_BtlHumanBase_C_SetEquipVisibilityAuto::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.GetTheurgiaSummonEffect
// 0x0028 (0x0028 - 0x0000)
struct BP_BtlHumanBase_C_GetTheurgiaSummonEffect final
{
public:
	TSoftObjectPtr<class UNiagaraSystem>          Effect;                                            // 0x0000(0x0028)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_GetTheurgiaSummonEffect) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_GetTheurgiaSummonEffect");
static_assert(sizeof(BP_BtlHumanBase_C_GetTheurgiaSummonEffect) == 0x000028, "Wrong size on BP_BtlHumanBase_C_GetTheurgiaSummonEffect");
static_assert(offsetof(BP_BtlHumanBase_C_GetTheurgiaSummonEffect, Effect) == 0x000000, "Member 'BP_BtlHumanBase_C_GetTheurgiaSummonEffect::Effect' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.Check First Summon Scene Finished
// 0x0002 (0x0002 - 0x0000)
struct BP_BtlHumanBase_C_Check_First_Summon_Scene_Finished final
{
public:
	bool                                          Finished;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_Check_First_Summon_Scene_Finished) == 0x000001, "Wrong alignment on BP_BtlHumanBase_C_Check_First_Summon_Scene_Finished");
static_assert(sizeof(BP_BtlHumanBase_C_Check_First_Summon_Scene_Finished) == 0x000002, "Wrong size on BP_BtlHumanBase_C_Check_First_Summon_Scene_Finished");
static_assert(offsetof(BP_BtlHumanBase_C_Check_First_Summon_Scene_Finished, Finished) == 0x000000, "Member 'BP_BtlHumanBase_C_Check_First_Summon_Scene_Finished::Finished' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_Check_First_Summon_Scene_Finished, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_BtlHumanBase_C_Check_First_Summon_Scene_Finished::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.CheckPlayPhysicalSkillPerformance
// 0x0003 (0x0003 - 0x0000)
struct BP_BtlHumanBase_C_CheckPlayPhysicalSkillPerformance final
{
public:
	bool                                          UsePhisicalProc;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckNeedToShowPersonaAtSummonShot_Show;  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_CheckPlayPhysicalSkillPerformance) == 0x000001, "Wrong alignment on BP_BtlHumanBase_C_CheckPlayPhysicalSkillPerformance");
static_assert(sizeof(BP_BtlHumanBase_C_CheckPlayPhysicalSkillPerformance) == 0x000003, "Wrong size on BP_BtlHumanBase_C_CheckPlayPhysicalSkillPerformance");
static_assert(offsetof(BP_BtlHumanBase_C_CheckPlayPhysicalSkillPerformance, UsePhisicalProc) == 0x000000, "Member 'BP_BtlHumanBase_C_CheckPlayPhysicalSkillPerformance::UsePhisicalProc' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CheckPlayPhysicalSkillPerformance, CallFunc_CheckNeedToShowPersonaAtSummonShot_Show) == 0x000001, "Member 'BP_BtlHumanBase_C_CheckPlayPhysicalSkillPerformance::CallFunc_CheckNeedToShowPersonaAtSummonShot_Show' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CheckPlayPhysicalSkillPerformance, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_BtlHumanBase_C_CheckPlayPhysicalSkillPerformance::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.SetSaccade
// 0x0018 (0x0018 - 0x0000)
struct BP_BtlHumanBase_C_SetSaccade final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CharacterBase_C*                    CallFunc_GetAppCharacterActor_Character;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_SetSaccade) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_SetSaccade");
static_assert(sizeof(BP_BtlHumanBase_C_SetSaccade) == 0x000018, "Wrong size on BP_BtlHumanBase_C_SetSaccade");
static_assert(offsetof(BP_BtlHumanBase_C_SetSaccade, Enable) == 0x000000, "Member 'BP_BtlHumanBase_C_SetSaccade::Enable' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetSaccade, CallFunc_GetAppCharacterActor_Character) == 0x000008, "Member 'BP_BtlHumanBase_C_SetSaccade::CallFunc_GetAppCharacterActor_Character' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetSaccade, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_BtlHumanBase_C_SetSaccade::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.CollectCharaPointLights
// 0x0010 (0x0010 - 0x0000)
struct BP_BtlHumanBase_C_CollectCharaPointLights final
{
public:
	class ABP_CharacterBase_C*                    CallFunc_GetAppCharacterActor_Character;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_CollectCharaPointLights) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_CollectCharaPointLights");
static_assert(sizeof(BP_BtlHumanBase_C_CollectCharaPointLights) == 0x000010, "Wrong size on BP_BtlHumanBase_C_CollectCharaPointLights");
static_assert(offsetof(BP_BtlHumanBase_C_CollectCharaPointLights, CallFunc_GetAppCharacterActor_Character) == 0x000000, "Member 'BP_BtlHumanBase_C_CollectCharaPointLights::CallFunc_GetAppCharacterActor_Character' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_CollectCharaPointLights, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_BtlHumanBase_C_CollectCharaPointLights::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.RestoreCharaPointLights
// 0x0010 (0x0010 - 0x0000)
struct BP_BtlHumanBase_C_RestoreCharaPointLights final
{
public:
	class ABP_CharacterBase_C*                    CallFunc_GetAppCharacterActor_Character;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_RestoreCharaPointLights) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_RestoreCharaPointLights");
static_assert(sizeof(BP_BtlHumanBase_C_RestoreCharaPointLights) == 0x000010, "Wrong size on BP_BtlHumanBase_C_RestoreCharaPointLights");
static_assert(offsetof(BP_BtlHumanBase_C_RestoreCharaPointLights, CallFunc_GetAppCharacterActor_Character) == 0x000000, "Member 'BP_BtlHumanBase_C_RestoreCharaPointLights::CallFunc_GetAppCharacterActor_Character' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_RestoreCharaPointLights, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_BtlHumanBase_C_RestoreCharaPointLights::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.SetOpacity
// 0x0018 (0x0018 - 0x0000)
struct BP_BtlHumanBase_C_SetOpacity final
{
public:
	float                                         Opacity;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ControlWithVisible;                                // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CharacterBase_C*                    CallFunc_GetAppCharacterActor_Character;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_SetOpacity) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_SetOpacity");
static_assert(sizeof(BP_BtlHumanBase_C_SetOpacity) == 0x000018, "Wrong size on BP_BtlHumanBase_C_SetOpacity");
static_assert(offsetof(BP_BtlHumanBase_C_SetOpacity, Opacity) == 0x000000, "Member 'BP_BtlHumanBase_C_SetOpacity::Opacity' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetOpacity, ControlWithVisible) == 0x000004, "Member 'BP_BtlHumanBase_C_SetOpacity::ControlWithVisible' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetOpacity, CallFunc_FClamp_ReturnValue) == 0x000008, "Member 'BP_BtlHumanBase_C_SetOpacity::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetOpacity, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_BtlHumanBase_C_SetOpacity::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetOpacity, CallFunc_GetAppCharacterActor_Character) == 0x000010, "Member 'BP_BtlHumanBase_C_SetOpacity::CallFunc_GetAppCharacterActor_Character' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.SetDefaultPose
// 0x0038 (0x0038 - 0x0000)
struct BP_BtlHumanBase_C_SetDefaultPose final
{
public:
	class FName                                   CallFunc_ConvAnimTypeToName_Value;                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ConvAnimTypeToName_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMesh_SkeletalMesh;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CallFunc_GetAnimationSequence_AnimSequence;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAnimationSequence_ReturnValue;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          K2Node_DynamicCast_AsAnim_Sequence;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlHumanBase_C_SetDefaultPose) == 0x000008, "Wrong alignment on BP_BtlHumanBase_C_SetDefaultPose");
static_assert(sizeof(BP_BtlHumanBase_C_SetDefaultPose) == 0x000038, "Wrong size on BP_BtlHumanBase_C_SetDefaultPose");
static_assert(offsetof(BP_BtlHumanBase_C_SetDefaultPose, CallFunc_ConvAnimTypeToName_Value) == 0x000000, "Member 'BP_BtlHumanBase_C_SetDefaultPose::CallFunc_ConvAnimTypeToName_Value' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetDefaultPose, CallFunc_ConvAnimTypeToName_ReturnValue) == 0x000008, "Member 'BP_BtlHumanBase_C_SetDefaultPose::CallFunc_ConvAnimTypeToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetDefaultPose, CallFunc_GetSkeletalMesh_SkeletalMesh) == 0x000010, "Member 'BP_BtlHumanBase_C_SetDefaultPose::CallFunc_GetSkeletalMesh_SkeletalMesh' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetDefaultPose, CallFunc_GetAnimationSequence_AnimSequence) == 0x000018, "Member 'BP_BtlHumanBase_C_SetDefaultPose::CallFunc_GetAnimationSequence_AnimSequence' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetDefaultPose, CallFunc_GetAnimationSequence_ReturnValue) == 0x000020, "Member 'BP_BtlHumanBase_C_SetDefaultPose::CallFunc_GetAnimationSequence_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetDefaultPose, K2Node_DynamicCast_AsAnim_Sequence) == 0x000028, "Member 'BP_BtlHumanBase_C_SetDefaultPose::K2Node_DynamicCast_AsAnim_Sequence' has a wrong offset!");
static_assert(offsetof(BP_BtlHumanBase_C_SetDefaultPose, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_BtlHumanBase_C_SetDefaultPose::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.Get Pre Skill Cam Time
// 0x0004 (0x0004 - 0x0000)
struct BP_BtlHumanBase_C_Get_Pre_Skill_Cam_Time final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_Get_Pre_Skill_Cam_Time) == 0x000004, "Wrong alignment on BP_BtlHumanBase_C_Get_Pre_Skill_Cam_Time");
static_assert(sizeof(BP_BtlHumanBase_C_Get_Pre_Skill_Cam_Time) == 0x000004, "Wrong size on BP_BtlHumanBase_C_Get_Pre_Skill_Cam_Time");
static_assert(offsetof(BP_BtlHumanBase_C_Get_Pre_Skill_Cam_Time, Duration) == 0x000000, "Member 'BP_BtlHumanBase_C_Get_Pre_Skill_Cam_Time::Duration' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.Play Pre Skill Cutin Astrea
// 0x0004 (0x0004 - 0x0000)
struct BP_BtlHumanBase_C_Play_Pre_Skill_Cutin_Astrea final
{
public:
	float                                         DelayTime;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_Play_Pre_Skill_Cutin_Astrea) == 0x000004, "Wrong alignment on BP_BtlHumanBase_C_Play_Pre_Skill_Cutin_Astrea");
static_assert(sizeof(BP_BtlHumanBase_C_Play_Pre_Skill_Cutin_Astrea) == 0x000004, "Wrong size on BP_BtlHumanBase_C_Play_Pre_Skill_Cutin_Astrea");
static_assert(offsetof(BP_BtlHumanBase_C_Play_Pre_Skill_Cutin_Astrea, DelayTime) == 0x000000, "Member 'BP_BtlHumanBase_C_Play_Pre_Skill_Cutin_Astrea::DelayTime' has a wrong offset!");

// Function BP_BtlHumanBase.BP_BtlHumanBase_C.GetSizeCategory
// 0x0001 (0x0001 - 0x0000)
struct BP_BtlHumanBase_C_GetSizeCategory final
{
public:
	EBtlSizeCategoryType                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlHumanBase_C_GetSizeCategory) == 0x000001, "Wrong alignment on BP_BtlHumanBase_C_GetSizeCategory");
static_assert(sizeof(BP_BtlHumanBase_C_GetSizeCategory) == 0x000001, "Wrong size on BP_BtlHumanBase_C_GetSizeCategory");
static_assert(offsetof(BP_BtlHumanBase_C_GetSizeCategory, ReturnValue) == 0x000000, "Member 'BP_BtlHumanBase_C_GetSizeCategory::ReturnValue' has a wrong offset!");

}

