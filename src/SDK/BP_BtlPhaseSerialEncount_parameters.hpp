#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtlPhaseSerialEncount

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Xrd777_structs.hpp"
#include "MovieScene_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_BtlPhaseSerialEncount.BP_BtlPhaseSerialEncount_C.ExecuteUbergraph_BP_BtlPhaseSerialEncount
// 0x00F0 (0x00F0 - 0x0000)
struct BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CallFunc_GetEnemyList_ReturnValue;                 // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlShadowBase_C*                    K2Node_DynamicCast_AsBP_Btl_Shadow_Base;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BtlCoreComponent_C*                 CallFunc_GetBtlCore_BtlCore;                       // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_1;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FQualifiedFrameTime                    CallFunc_GetEndTime_ReturnValue;                   // 0x0078(0x0010)(NoDestructor, HasGetValueTypeHash)
	struct FMovieSceneSequencePlaybackSettings    K2Node_MakeStruct_MovieSceneSequencePlaybackSettings; // 0x0088(0x0014)(NoDestructor)
	float                                         CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue; // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALevelSequenceActor*                    CallFunc_CreateLevelSequencePlayer_OutActor;       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_CreateLevelSequencePlayer_ReturnValue;    // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00B0(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x00CC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlMainConductor_C*                 CallFunc_GetActorOfClass_ReturnValue;              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount) == 0x000008, "Wrong alignment on BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount");
static_assert(sizeof(BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount) == 0x0000F0, "Wrong size on BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount, EntryPoint) == 0x000000, "Member 'BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount, CallFunc_GetEnemyList_ReturnValue) == 0x000008, "Member 'BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount, K2Node_DynamicCast_AsBP_Btl_Shadow_Base) == 0x000030, "Member 'BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount::K2Node_DynamicCast_AsBP_Btl_Shadow_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount, CallFunc_Less_IntInt_ReturnValue) == 0x000039, "Member 'BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount, K2Node_Event_DeltaSeconds) == 0x000040, "Member 'BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount, CallFunc_GetBtlCore_BtlCore) == 0x000048, "Member 'BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount::CallFunc_GetBtlCore_BtlCore' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount, CallFunc_GetSequencePlayer_ReturnValue) == 0x000050, "Member 'BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount, K2Node_CreateDelegate_OutputDelegate) == 0x000058, "Member 'BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount, CallFunc_GetSequencePlayer_ReturnValue_1) == 0x000070, "Member 'BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount::CallFunc_GetSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount, CallFunc_GetEndTime_ReturnValue) == 0x000078, "Member 'BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount, K2Node_MakeStruct_MovieSceneSequencePlaybackSettings) == 0x000088, "Member 'BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount::K2Node_MakeStruct_MovieSceneSequencePlaybackSettings' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount, CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue) == 0x00009C, "Member 'BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount::CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount, CallFunc_CreateLevelSequencePlayer_OutActor) == 0x0000A0, "Member 'BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount::CallFunc_CreateLevelSequencePlayer_OutActor' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount, CallFunc_CreateLevelSequencePlayer_ReturnValue) == 0x0000A8, "Member 'BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount::CallFunc_CreateLevelSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000B0, "Member 'BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000C0, "Member 'BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount, CallFunc_IsValid_ReturnValue_1) == 0x0000C8, "Member 'BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000CC, "Member 'BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount, CallFunc_BooleanAND_ReturnValue) == 0x0000DC, "Member 'BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount, CallFunc_GetActorOfClass_ReturnValue) == 0x0000E0, "Member 'BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000E8, "Member 'BP_BtlPhaseSerialEncount_C_ExecuteUbergraph_BP_BtlPhaseSerialEncount::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_BtlPhaseSerialEncount.BP_BtlPhaseSerialEncount_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_BtlPhaseSerialEncount_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlPhaseSerialEncount_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_BtlPhaseSerialEncount_C_ReceiveTick");
static_assert(sizeof(BP_BtlPhaseSerialEncount_C_ReceiveTick) == 0x000004, "Wrong size on BP_BtlPhaseSerialEncount_C_ReceiveTick");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_BtlPhaseSerialEncount_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_BtlPhaseSerialEncount.BP_BtlPhaseSerialEncount_C.CreateNextPhase
// 0x0018 (0x0018 - 0x0000)
struct BP_BtlPhaseSerialEncount_C_CreateNextPhase final
{
public:
	EBtlPhaseType                                 Phase;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlPhase*                              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABtlPhase*                              CallFunc_CreateNextPhase_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlPhaseSerialEncount_C_CreateNextPhase) == 0x000008, "Wrong alignment on BP_BtlPhaseSerialEncount_C_CreateNextPhase");
static_assert(sizeof(BP_BtlPhaseSerialEncount_C_CreateNextPhase) == 0x000018, "Wrong size on BP_BtlPhaseSerialEncount_C_CreateNextPhase");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_CreateNextPhase, Phase) == 0x000000, "Member 'BP_BtlPhaseSerialEncount_C_CreateNextPhase::Phase' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_CreateNextPhase, ReturnValue) == 0x000008, "Member 'BP_BtlPhaseSerialEncount_C_CreateNextPhase::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_CreateNextPhase, CallFunc_CreateNextPhase_ReturnValue) == 0x000010, "Member 'BP_BtlPhaseSerialEncount_C_CreateNextPhase::CallFunc_CreateNextPhase_ReturnValue' has a wrong offset!");

// Function BP_BtlPhaseSerialEncount.BP_BtlPhaseSerialEncount_C.SetSerialEncountParameter
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlPhaseSerialEncount_C_SetSerialEncountParameter final
{
public:
	class UBtlCoreComponent*                      BtlCore_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlPhaseSerialEncount_C_SetSerialEncountParameter) == 0x000008, "Wrong alignment on BP_BtlPhaseSerialEncount_C_SetSerialEncountParameter");
static_assert(sizeof(BP_BtlPhaseSerialEncount_C_SetSerialEncountParameter) == 0x000008, "Wrong size on BP_BtlPhaseSerialEncount_C_SetSerialEncountParameter");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_SetSerialEncountParameter, BtlCore_0) == 0x000000, "Member 'BP_BtlPhaseSerialEncount_C_SetSerialEncountParameter::BtlCore_0' has a wrong offset!");

// Function BP_BtlPhaseSerialEncount.BP_BtlPhaseSerialEncount_C.CoordinateVisibility
// 0x0040 (0x0040 - 0x0000)
struct BP_BtlPhaseSerialEncount_C_CoordinateVisibility final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABtlActor*>                      CallFunc_GetPlayerList_ReturnValue;                // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlPhaseSerialEncount_C_CoordinateVisibility) == 0x000008, "Wrong alignment on BP_BtlPhaseSerialEncount_C_CoordinateVisibility");
static_assert(sizeof(BP_BtlPhaseSerialEncount_C_CoordinateVisibility) == 0x000040, "Wrong size on BP_BtlPhaseSerialEncount_C_CoordinateVisibility");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_CoordinateVisibility, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_BtlPhaseSerialEncount_C_CoordinateVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_CoordinateVisibility, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_BtlPhaseSerialEncount_C_CoordinateVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_CoordinateVisibility, CallFunc_GetPlayerList_ReturnValue) == 0x000008, "Member 'BP_BtlPhaseSerialEncount_C_CoordinateVisibility::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_CoordinateVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_BtlPhaseSerialEncount_C_CoordinateVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_CoordinateVisibility, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_BtlPhaseSerialEncount_C_CoordinateVisibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_CoordinateVisibility, K2Node_DynamicCast_AsBP_Btl_Character_Base) == 0x000028, "Member 'BP_BtlPhaseSerialEncount_C_CoordinateVisibility::K2Node_DynamicCast_AsBP_Btl_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_CoordinateVisibility, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_BtlPhaseSerialEncount_C_CoordinateVisibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_CoordinateVisibility, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_BtlPhaseSerialEncount_C_CoordinateVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_CoordinateVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_BtlPhaseSerialEncount_C_CoordinateVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BtlPhaseSerialEncount.BP_BtlPhaseSerialEncount_C.SyncEventCamera
// 0x0001 (0x0001 - 0x0000)
struct BP_BtlPhaseSerialEncount_C_SyncEventCamera final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlPhaseSerialEncount_C_SyncEventCamera) == 0x000001, "Wrong alignment on BP_BtlPhaseSerialEncount_C_SyncEventCamera");
static_assert(sizeof(BP_BtlPhaseSerialEncount_C_SyncEventCamera) == 0x000001, "Wrong size on BP_BtlPhaseSerialEncount_C_SyncEventCamera");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_SyncEventCamera, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_BtlPhaseSerialEncount_C_SyncEventCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlPhaseSerialEncount.BP_BtlPhaseSerialEncount_C.CheckProgressNextPhaseInBP
// 0x0001 (0x0001 - 0x0000)
struct BP_BtlPhaseSerialEncount_C_CheckProgressNextPhaseInBP final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlPhaseSerialEncount_C_CheckProgressNextPhaseInBP) == 0x000001, "Wrong alignment on BP_BtlPhaseSerialEncount_C_CheckProgressNextPhaseInBP");
static_assert(sizeof(BP_BtlPhaseSerialEncount_C_CheckProgressNextPhaseInBP) == 0x000001, "Wrong size on BP_BtlPhaseSerialEncount_C_CheckProgressNextPhaseInBP");
static_assert(offsetof(BP_BtlPhaseSerialEncount_C_CheckProgressNextPhaseInBP, ReturnValue) == 0x000000, "Member 'BP_BtlPhaseSerialEncount_C_CheckProgressNextPhaseInBP::ReturnValue' has a wrong offset!");

}

