#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: McaAssetPlugin

#include "Basic.hpp"


namespace SDK
{

// ScriptStruct McaAssetPlugin.McaCamData
// 0x0020 (0x0020 - 0x0000)
struct FMcaCamData final
{
public:
	float                                         Tx;                                                // 0x0000(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Ty;                                                // 0x0004(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Tz;                                                // 0x0008(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Rx;                                                // 0x000C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Ry;                                                // 0x0010(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Rz;                                                // 0x0014(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FovX;                                              // 0x0018(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FovY;                                              // 0x001C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMcaCamData) == 0x000004, "Wrong alignment on FMcaCamData");
static_assert(sizeof(FMcaCamData) == 0x000020, "Wrong size on FMcaCamData");
static_assert(offsetof(FMcaCamData, Tx) == 0x000000, "Member 'FMcaCamData::Tx' has a wrong offset!");
static_assert(offsetof(FMcaCamData, Ty) == 0x000004, "Member 'FMcaCamData::Ty' has a wrong offset!");
static_assert(offsetof(FMcaCamData, Tz) == 0x000008, "Member 'FMcaCamData::Tz' has a wrong offset!");
static_assert(offsetof(FMcaCamData, Rx) == 0x00000C, "Member 'FMcaCamData::Rx' has a wrong offset!");
static_assert(offsetof(FMcaCamData, Ry) == 0x000010, "Member 'FMcaCamData::Ry' has a wrong offset!");
static_assert(offsetof(FMcaCamData, Rz) == 0x000014, "Member 'FMcaCamData::Rz' has a wrong offset!");
static_assert(offsetof(FMcaCamData, FovX) == 0x000018, "Member 'FMcaCamData::FovX' has a wrong offset!");
static_assert(offsetof(FMcaCamData, FovY) == 0x00001C, "Member 'FMcaCamData::FovY' has a wrong offset!");

// ScriptStruct McaAssetPlugin.McaData
// 0x0020 (0x0020 - 0x0000)
struct FMcaData final
{
public:
	uint32                                        FrameSkip;                                         // 0x0000(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FrameNum;                                          // 0x0004(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DataFormat;                                        // 0x0008(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMcaCamData>                    PCamData;                                          // 0x0010(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMcaData) == 0x000008, "Wrong alignment on FMcaData");
static_assert(sizeof(FMcaData) == 0x000020, "Wrong size on FMcaData");
static_assert(offsetof(FMcaData, FrameSkip) == 0x000000, "Member 'FMcaData::FrameSkip' has a wrong offset!");
static_assert(offsetof(FMcaData, FrameNum) == 0x000004, "Member 'FMcaData::FrameNum' has a wrong offset!");
static_assert(offsetof(FMcaData, DataFormat) == 0x000008, "Member 'FMcaData::DataFormat' has a wrong offset!");
static_assert(offsetof(FMcaData, PCamData) == 0x000010, "Member 'FMcaData::PCamData' has a wrong offset!");

}

