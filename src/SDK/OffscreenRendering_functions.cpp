#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OffscreenRendering

#include "Basic.hpp"

#include "OffscreenRendering_classes.hpp"
#include "OffscreenRendering_parameters.hpp"


namespace SDK
{

// Function OffscreenRendering.PreviewWorldUpdater.Cleanup
// (Final, Native, Public, BlueprintCallable)

void APreviewWorldUpdater::Cleanup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PreviewWorldUpdater", "Cleanup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction OffscreenRendering.PreviewWorldUpdater.OnSetTargetActor__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APreviewWorldUpdater::OnSetTargetActor__DelegateSignature(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PreviewWorldUpdater", "OnSetTargetActor__DelegateSignature");

	Params::PreviewWorldUpdater_OnSetTargetActor__DelegateSignature Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OffscreenRendering.PreviewWorldUpdater.SetCameraAngle
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                         NewCameraAngle                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void APreviewWorldUpdater::SetCameraAngle(const struct FRotator& NewCameraAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PreviewWorldUpdater", "SetCameraAngle");

	Params::PreviewWorldUpdater_SetCameraAngle Parms{};

	Parms.NewCameraAngle = std::move(NewCameraAngle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OffscreenRendering.PreviewWorldUpdater.SetCameraPosBoneName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           NewCameraPosBoneName                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APreviewWorldUpdater::SetCameraPosBoneName(const class FString& NewCameraPosBoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PreviewWorldUpdater", "SetCameraPosBoneName");

	Params::PreviewWorldUpdater_SetCameraPosBoneName Parms{};

	Parms.NewCameraPosBoneName = std::move(NewCameraPosBoneName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OffscreenRendering.PreviewWorldUpdater.SetCameraPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          NewCameraPosition                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APreviewWorldUpdater::SetCameraPosition(const struct FVector& NewCameraPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PreviewWorldUpdater", "SetCameraPosition");

	Params::PreviewWorldUpdater_SetCameraPosition Parms{};

	Parms.NewCameraPosition = std::move(NewCameraPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OffscreenRendering.PreviewWorldUpdater.SetCameraTransform
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform                       NewCameraTransform                                     (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void APreviewWorldUpdater::SetCameraTransform(const struct FTransform& NewCameraTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PreviewWorldUpdater", "SetCameraTransform");

	Params::PreviewWorldUpdater_SetCameraTransform Parms{};

	Parms.NewCameraTransform = std::move(NewCameraTransform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OffscreenRendering.PreviewWorldUpdater.SetFoV
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewFOV                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APreviewWorldUpdater::SetFoV(float NewFOV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PreviewWorldUpdater", "SetFoV");

	Params::PreviewWorldUpdater_SetFoV Parms{};

	Parms.NewFOV = NewFOV;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OffscreenRendering.PreviewWorldUpdater.SetGazeMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    NewGazeMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APreviewWorldUpdater::SetGazeMode(bool NewGazeMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PreviewWorldUpdater", "SetGazeMode");

	Params::PreviewWorldUpdater_SetGazeMode Parms{};

	Parms.NewGazeMode = NewGazeMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OffscreenRendering.PreviewWorldUpdater.SetGazeOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          NewGazeOffset                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APreviewWorldUpdater::SetGazeOffset(const struct FVector& NewGazeOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PreviewWorldUpdater", "SetGazeOffset");

	Params::PreviewWorldUpdater_SetGazeOffset Parms{};

	Parms.NewGazeOffset = std::move(NewGazeOffset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OffscreenRendering.PreviewWorldUpdater.SetGazeOffsetBoneName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           NewGazeOffsetBoneName                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APreviewWorldUpdater::SetGazeOffsetBoneName(const class FString& NewGazeOffsetBoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PreviewWorldUpdater", "SetGazeOffsetBoneName");

	Params::PreviewWorldUpdater_SetGazeOffsetBoneName Parms{};

	Parms.NewGazeOffsetBoneName = std::move(NewGazeOffsetBoneName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OffscreenRendering.PreviewWorldUpdater.SetTargetActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class AActor>               ActorClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsResetCamera                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* APreviewWorldUpdater::SetTargetActor(TSubclassOf<class AActor> ActorClass, bool IsResetCamera)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PreviewWorldUpdater", "SetTargetActor");

	Params::PreviewWorldUpdater_SetTargetActor Parms{};

	Parms.ActorClass = ActorClass;
	Parms.IsResetCamera = IsResetCamera;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OffscreenRendering.PreviewWorldUpdater.SpawnAttachedActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class AActor>               ActorClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* APreviewWorldUpdater::SpawnAttachedActor(TSubclassOf<class AActor> ActorClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PreviewWorldUpdater", "SpawnAttachedActor");

	Params::PreviewWorldUpdater_SpawnAttachedActor Parms{};

	Parms.ActorClass = ActorClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OffscreenRendering.PreviewWorldUpdater.GetPreviewWorld
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWorld*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWorld* APreviewWorldUpdater::GetPreviewWorld() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PreviewWorldUpdater", "GetPreviewWorld");

	Params::PreviewWorldUpdater_GetPreviewWorld Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OffscreenRendering.PreviewWorldUpdater.GetSceneCaptureActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASceneCapture2D*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASceneCapture2D* APreviewWorldUpdater::GetSceneCaptureActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PreviewWorldUpdater", "GetSceneCaptureActor");

	Params::PreviewWorldUpdater_GetSceneCaptureActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OffscreenRendering.PreviewWorldUpdater.GetTargetActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* APreviewWorldUpdater::GetTargetActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PreviewWorldUpdater", "GetTargetActor");

	Params::PreviewWorldUpdater_GetTargetActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

