#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtlResources

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Xrd777_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BtlResources.BP_BtlResources_C
// 0x0150 (0x04A0 - 0x0350)
class ABP_BtlResources_C final : public ABtlGuiResourcesActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UDataTable>              BataTable;                                         // 0x0360(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UObject*                                LoadDataTableObject;                               // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, class UObject*>             ResourcesList;                                     // 0x0390(0x0050)(Edit, BlueprintVisible)
	bool                                          IsCompleted;                                       // 0x03E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E1[0x3];                                      // 0x03E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LoadIndex;                                         // 0x03E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TableLength;                                       // 0x03E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<TSoftObjectPtr<class UObject>, class FName> NameList;                                          // 0x03F0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ABP_BtlGuiCore_C*                       GuiCore;                                           // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseTick;                                           // 0x0448(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_449[0x7];                                      // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, TSoftObjectPtr<class UDataTable>> LayoutData;                                        // 0x0450(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_BtlResources(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void LoadCompleted();
	void StartAsyncLoad(class FName Name_0, TSoftObjectPtr<class UObject> Object);
	void ReceiveBeginPlay();
	void OnLoaded_6DFADC06409FB0418EC1A895E4E1917B(class UObject* Loaded);
	void OnLoaded_273DF4C1444957F20AC0F98FF3B04DC0(class UObject* Loaded);
	class UObject* GetResources(class FName Name_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BtlResources_C">();
	}
	static class ABP_BtlResources_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BtlResources_C>();
	}
};
static_assert(alignof(ABP_BtlResources_C) == 0x000008, "Wrong alignment on ABP_BtlResources_C");
static_assert(sizeof(ABP_BtlResources_C) == 0x0004A0, "Wrong size on ABP_BtlResources_C");
static_assert(offsetof(ABP_BtlResources_C, UberGraphFrame) == 0x000350, "Member 'ABP_BtlResources_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_BtlResources_C, DefaultSceneRoot) == 0x000358, "Member 'ABP_BtlResources_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_BtlResources_C, BataTable) == 0x000360, "Member 'ABP_BtlResources_C::BataTable' has a wrong offset!");
static_assert(offsetof(ABP_BtlResources_C, LoadDataTableObject) == 0x000388, "Member 'ABP_BtlResources_C::LoadDataTableObject' has a wrong offset!");
static_assert(offsetof(ABP_BtlResources_C, ResourcesList) == 0x000390, "Member 'ABP_BtlResources_C::ResourcesList' has a wrong offset!");
static_assert(offsetof(ABP_BtlResources_C, IsCompleted) == 0x0003E0, "Member 'ABP_BtlResources_C::IsCompleted' has a wrong offset!");
static_assert(offsetof(ABP_BtlResources_C, LoadIndex) == 0x0003E4, "Member 'ABP_BtlResources_C::LoadIndex' has a wrong offset!");
static_assert(offsetof(ABP_BtlResources_C, TableLength) == 0x0003E8, "Member 'ABP_BtlResources_C::TableLength' has a wrong offset!");
static_assert(offsetof(ABP_BtlResources_C, NameList) == 0x0003F0, "Member 'ABP_BtlResources_C::NameList' has a wrong offset!");
static_assert(offsetof(ABP_BtlResources_C, GuiCore) == 0x000440, "Member 'ABP_BtlResources_C::GuiCore' has a wrong offset!");
static_assert(offsetof(ABP_BtlResources_C, UseTick) == 0x000448, "Member 'ABP_BtlResources_C::UseTick' has a wrong offset!");
static_assert(offsetof(ABP_BtlResources_C, LayoutData) == 0x000450, "Member 'ABP_BtlResources_C::LayoutData' has a wrong offset!");

}

