#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtlGuiIcon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Xrd777_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_BtlGuiBaseActor_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BtlGuiIcon.BP_BtlGuiIcon_C
// 0x0208 (0x0558 - 0x0350)
class ABP_BtlGuiIcon_C final : public ABP_BtlGuiBaseActor_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_BtlGuiIcon_C;                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBtlDataBaseComponent*                  BtlDataBase;                                       // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawComponent*                   BtlGuiDraw;                                        // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_BtlGuiIconComponent_C*              BP_BtlGuiIconComponent;                            // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         SpeedLinesTimeline_Blur_16B3B37D4F23B54D5526769A6E0C5333; // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpeedLinesTimeline_Alpha_16B3B37D4F23B54D5526769A6E0C5333; // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            SpeedLinesTimeline__Direction_16B3B37D4F23B54D5526769A6E0C5333; // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     SpeedLinesTimeline;                                // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_BtlGuiJyokyoHelp_C*>         JyokyoHelpList;                                    // 0x0388(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ABP_BtlTargetPanel_C*>           TargetPanelList;                                   // 0x0398(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          IsCallDelegate;                                    // 0x03A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A9[0x3];                                      // 0x03A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OutScale;                                          // 0x03AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InScale;                                           // 0x03B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle;                                             // 0x03B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class ABP_BtlCharacterBase_C*, class ABP_BtlGuiLifeBar_C*> DamageLifeBarList;                                 // 0x03B8(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          IsShiftMode;                                       // 0x0408(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsShiftEnable;                                     // 0x0409(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsWeakSkill;                                       // 0x040A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40B[0x5];                                      // 0x040B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class ABP_BtlCharacterBase_C*, class ABP_BtlGuiDamage2_C*> DamagePanelList;                                   // 0x0410(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          Flipflop;                                          // 0x0460(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_461[0x7];                                      // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlTargetInfo_C*                    TargetInfo;                                        // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class ABP_BtlCharacterBase_C*, struct FVector2D> DamageDefaultPos;                                  // 0x0470(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TMap<class ABP_BtlCharacterBase_C*, int32>    PotionPatamMap;                                    // 0x04C0(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class ABP_BtlGuiRush_C*                       Rush;                                              // 0x0510(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlGuiBaseActor_C*                  Capture;                                           // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               SillhoetteMaterial;                                // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReserStensil;                                      // 0x0528(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_529[0x7];                                      // 0x0529(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACineCameraActor*>               CameraActoList;                                    // 0x0530(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class ABP_BtlGuiDamage2_C*                    LocalizeDebug_BP_Btl_Gui_Damage_2;                 // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlSkillNamePanel_C*                LocalizeDebug_BP_Btl_Skill_Name_Panel;             // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlGuiJyokyoHelp_C*                 LocalizeDebug_BP_Btl_Gui_JyokyoHelp;               // 0x0550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_BtlGuiIcon(int32 EntryPoint);
	void GuiActorEncountEnd();
	void GuiActorEncountStart();
	void OnHiddenEvent();
	void OnVisibleEvent();
	void GuiActorUpdate(float DeltaTime);
	void GuiActorBeginPlay();
	void StartSpeedLines();
	void CreateSillhouette();
	void SpeedLinesTimeline__UpdateFunc();
	void SpeedLinesTimeline__FinishedFunc();
	void CreateDamage(class ABP_BtlCharacterBase_C* Target, int32 Damage, int32 DamageSP, EBtlGuiIconHit Hit, EBtlGuiIconDamageType DamageType, bool PortionDamage, bool IsBadStatus, bool IsBadStatusRecovery, bool IsEndure, float EndureRadio, int32 DelayParamHP, int32 DelayParamSP);
	void UIPanelVisible(bool Visible);
	void PartyPanelVisible(bool Bisible);
	void CreateJyokyoHelp(int32 Genus, int32 ID, int32 MsgNo, int32 Var1, int32 Var2, float RenderTime, float DelayTime, int32 Flags_0);
	void ClearJyokyoHelp();
	void CreateTargetList(TArray<class ABtlActor*>& ActionList, bool IsHPBar, bool IsSillhouetteOnly, bool IsStencilEnemyOnly);
	void ClearTargetList();
	void UpdateTargetList(TArray<class ABtlActor*>& ActionList);
	void CreateOneMorePanel(bool IsEnemy, float LifeTime);
	void CreateEncountPanel(bool PlayerAdvantage, float LifeTime);
	void UpdateTargetSillhouette();
	void CreateTargetSilhouette();
	void UpdateTargetListAnim(TArray<class ABtlActor*>& ActionList, bool SkipMovingAnimation);
	void DeleteLifeBar(class ABP_BtlCharacterBase_C* Target);
	void CheckMiss(EBtlGuiIconHit Hit, int32 Damage, int32 DamageSP, bool* IsDamage);
	void SetTargetInfo(class ABtlActor* Actor, bool NoAnimation);
	void ReleaseTargetInfo(bool NoAnimation);
	void KeyhelpVisible(bool Visible, class UBtlCoreComponent* BtlCore);
	void SupportOffTargetInfo(class ABtlActor* Actor);
	void ClearDamagePanel();
	void CreateAllAddDamage(int32 Damage);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BtlGuiIcon_C">();
	}
	static class ABP_BtlGuiIcon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BtlGuiIcon_C>();
	}
};
static_assert(alignof(ABP_BtlGuiIcon_C) == 0x000008, "Wrong alignment on ABP_BtlGuiIcon_C");
static_assert(sizeof(ABP_BtlGuiIcon_C) == 0x000558, "Wrong size on ABP_BtlGuiIcon_C");
static_assert(offsetof(ABP_BtlGuiIcon_C, UberGraphFrame_BP_BtlGuiIcon_C) == 0x000350, "Member 'ABP_BtlGuiIcon_C::UberGraphFrame_BP_BtlGuiIcon_C' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiIcon_C, BtlDataBase) == 0x000358, "Member 'ABP_BtlGuiIcon_C::BtlDataBase' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiIcon_C, BtlGuiDraw) == 0x000360, "Member 'ABP_BtlGuiIcon_C::BtlGuiDraw' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiIcon_C, BP_BtlGuiIconComponent) == 0x000368, "Member 'ABP_BtlGuiIcon_C::BP_BtlGuiIconComponent' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiIcon_C, SpeedLinesTimeline_Blur_16B3B37D4F23B54D5526769A6E0C5333) == 0x000370, "Member 'ABP_BtlGuiIcon_C::SpeedLinesTimeline_Blur_16B3B37D4F23B54D5526769A6E0C5333' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiIcon_C, SpeedLinesTimeline_Alpha_16B3B37D4F23B54D5526769A6E0C5333) == 0x000374, "Member 'ABP_BtlGuiIcon_C::SpeedLinesTimeline_Alpha_16B3B37D4F23B54D5526769A6E0C5333' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiIcon_C, SpeedLinesTimeline__Direction_16B3B37D4F23B54D5526769A6E0C5333) == 0x000378, "Member 'ABP_BtlGuiIcon_C::SpeedLinesTimeline__Direction_16B3B37D4F23B54D5526769A6E0C5333' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiIcon_C, SpeedLinesTimeline) == 0x000380, "Member 'ABP_BtlGuiIcon_C::SpeedLinesTimeline' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiIcon_C, JyokyoHelpList) == 0x000388, "Member 'ABP_BtlGuiIcon_C::JyokyoHelpList' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiIcon_C, TargetPanelList) == 0x000398, "Member 'ABP_BtlGuiIcon_C::TargetPanelList' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiIcon_C, IsCallDelegate) == 0x0003A8, "Member 'ABP_BtlGuiIcon_C::IsCallDelegate' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiIcon_C, OutScale) == 0x0003AC, "Member 'ABP_BtlGuiIcon_C::OutScale' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiIcon_C, InScale) == 0x0003B0, "Member 'ABP_BtlGuiIcon_C::InScale' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiIcon_C, Angle) == 0x0003B4, "Member 'ABP_BtlGuiIcon_C::Angle' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiIcon_C, DamageLifeBarList) == 0x0003B8, "Member 'ABP_BtlGuiIcon_C::DamageLifeBarList' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiIcon_C, IsShiftMode) == 0x000408, "Member 'ABP_BtlGuiIcon_C::IsShiftMode' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiIcon_C, IsShiftEnable) == 0x000409, "Member 'ABP_BtlGuiIcon_C::IsShiftEnable' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiIcon_C, IsWeakSkill) == 0x00040A, "Member 'ABP_BtlGuiIcon_C::IsWeakSkill' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiIcon_C, DamagePanelList) == 0x000410, "Member 'ABP_BtlGuiIcon_C::DamagePanelList' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiIcon_C, Flipflop) == 0x000460, "Member 'ABP_BtlGuiIcon_C::Flipflop' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiIcon_C, TargetInfo) == 0x000468, "Member 'ABP_BtlGuiIcon_C::TargetInfo' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiIcon_C, DamageDefaultPos) == 0x000470, "Member 'ABP_BtlGuiIcon_C::DamageDefaultPos' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiIcon_C, PotionPatamMap) == 0x0004C0, "Member 'ABP_BtlGuiIcon_C::PotionPatamMap' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiIcon_C, Rush) == 0x000510, "Member 'ABP_BtlGuiIcon_C::Rush' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiIcon_C, Capture) == 0x000518, "Member 'ABP_BtlGuiIcon_C::Capture' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiIcon_C, SillhoetteMaterial) == 0x000520, "Member 'ABP_BtlGuiIcon_C::SillhoetteMaterial' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiIcon_C, ReserStensil) == 0x000528, "Member 'ABP_BtlGuiIcon_C::ReserStensil' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiIcon_C, CameraActoList) == 0x000530, "Member 'ABP_BtlGuiIcon_C::CameraActoList' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiIcon_C, LocalizeDebug_BP_Btl_Gui_Damage_2) == 0x000540, "Member 'ABP_BtlGuiIcon_C::LocalizeDebug_BP_Btl_Gui_Damage_2' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiIcon_C, LocalizeDebug_BP_Btl_Skill_Name_Panel) == 0x000548, "Member 'ABP_BtlGuiIcon_C::LocalizeDebug_BP_Btl_Skill_Name_Panel' has a wrong offset!");
static_assert(offsetof(ABP_BtlGuiIcon_C, LocalizeDebug_BP_Btl_Gui_JyokyoHelp) == 0x000550, "Member 'ABP_BtlGuiIcon_C::LocalizeDebug_BP_Btl_Gui_JyokyoHelp' has a wrong offset!");

}

