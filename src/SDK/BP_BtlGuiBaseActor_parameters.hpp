#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtlGuiBaseActor

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Xrd777_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_BtlGuiBaseActor.BP_BtlGuiBaseActor_C.OnChangeStateParam__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlGuiBaseActor_C_OnChangeStateParam__DelegateSignature final
{
public:
	bool                                          Flag;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Number;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlGuiBaseActor_C_OnChangeStateParam__DelegateSignature) == 0x000004, "Wrong alignment on BP_BtlGuiBaseActor_C_OnChangeStateParam__DelegateSignature");
static_assert(sizeof(BP_BtlGuiBaseActor_C_OnChangeStateParam__DelegateSignature) == 0x000008, "Wrong size on BP_BtlGuiBaseActor_C_OnChangeStateParam__DelegateSignature");
static_assert(offsetof(BP_BtlGuiBaseActor_C_OnChangeStateParam__DelegateSignature, Flag) == 0x000000, "Member 'BP_BtlGuiBaseActor_C_OnChangeStateParam__DelegateSignature::Flag' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_OnChangeStateParam__DelegateSignature, Number) == 0x000004, "Member 'BP_BtlGuiBaseActor_C_OnChangeStateParam__DelegateSignature::Number' has a wrong offset!");

// Function BP_BtlGuiBaseActor.BP_BtlGuiBaseActor_C.ExecuteUbergraph_BP_BtlGuiBaseActor
// 0x0030 (0x0030 - 0x0000)
struct BP_BtlGuiBaseActor_C_ExecuteUbergraph_BP_BtlGuiBaseActor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DeltaTime;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_flag;                           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_param;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlGuiBaseActor_C_ExecuteUbergraph_BP_BtlGuiBaseActor) == 0x000008, "Wrong alignment on BP_BtlGuiBaseActor_C_ExecuteUbergraph_BP_BtlGuiBaseActor");
static_assert(sizeof(BP_BtlGuiBaseActor_C_ExecuteUbergraph_BP_BtlGuiBaseActor) == 0x000030, "Wrong size on BP_BtlGuiBaseActor_C_ExecuteUbergraph_BP_BtlGuiBaseActor");
static_assert(offsetof(BP_BtlGuiBaseActor_C_ExecuteUbergraph_BP_BtlGuiBaseActor, EntryPoint) == 0x000000, "Member 'BP_BtlGuiBaseActor_C_ExecuteUbergraph_BP_BtlGuiBaseActor::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_ExecuteUbergraph_BP_BtlGuiBaseActor, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_BtlGuiBaseActor_C_ExecuteUbergraph_BP_BtlGuiBaseActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_ExecuteUbergraph_BP_BtlGuiBaseActor, K2Node_CustomEvent_DeltaTime) == 0x000008, "Member 'BP_BtlGuiBaseActor_C_ExecuteUbergraph_BP_BtlGuiBaseActor::K2Node_CustomEvent_DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_ExecuteUbergraph_BP_BtlGuiBaseActor, K2Node_CustomEvent_flag) == 0x00000C, "Member 'BP_BtlGuiBaseActor_C_ExecuteUbergraph_BP_BtlGuiBaseActor::K2Node_CustomEvent_flag' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_ExecuteUbergraph_BP_BtlGuiBaseActor, K2Node_CustomEvent_param) == 0x000010, "Member 'BP_BtlGuiBaseActor_C_ExecuteUbergraph_BP_BtlGuiBaseActor::K2Node_CustomEvent_param' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_ExecuteUbergraph_BP_BtlGuiBaseActor, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_BtlGuiBaseActor_C_ExecuteUbergraph_BP_BtlGuiBaseActor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_ExecuteUbergraph_BP_BtlGuiBaseActor, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_BtlGuiBaseActor_C_ExecuteUbergraph_BP_BtlGuiBaseActor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_ExecuteUbergraph_BP_BtlGuiBaseActor, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_BtlGuiBaseActor_C_ExecuteUbergraph_BP_BtlGuiBaseActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_ExecuteUbergraph_BP_BtlGuiBaseActor, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_BtlGuiBaseActor_C_ExecuteUbergraph_BP_BtlGuiBaseActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_ExecuteUbergraph_BP_BtlGuiBaseActor, CallFunc_Less_IntInt_ReturnValue) == 0x000029, "Member 'BP_BtlGuiBaseActor_C_ExecuteUbergraph_BP_BtlGuiBaseActor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_ExecuteUbergraph_BP_BtlGuiBaseActor, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_BtlGuiBaseActor_C_ExecuteUbergraph_BP_BtlGuiBaseActor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BtlGuiBaseActor.BP_BtlGuiBaseActor_C.GuiActorStateInit
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlGuiBaseActor_C_GuiActorStateInit final
{
public:
	bool                                          Flag;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlGuiBaseActor_C_GuiActorStateInit) == 0x000004, "Wrong alignment on BP_BtlGuiBaseActor_C_GuiActorStateInit");
static_assert(sizeof(BP_BtlGuiBaseActor_C_GuiActorStateInit) == 0x000008, "Wrong size on BP_BtlGuiBaseActor_C_GuiActorStateInit");
static_assert(offsetof(BP_BtlGuiBaseActor_C_GuiActorStateInit, Flag) == 0x000000, "Member 'BP_BtlGuiBaseActor_C_GuiActorStateInit::Flag' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_GuiActorStateInit, Param) == 0x000004, "Member 'BP_BtlGuiBaseActor_C_GuiActorStateInit::Param' has a wrong offset!");

// Function BP_BtlGuiBaseActor.BP_BtlGuiBaseActor_C.GuiActorUpdate
// 0x0004 (0x0004 - 0x0000)
struct BP_BtlGuiBaseActor_C_GuiActorUpdate final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlGuiBaseActor_C_GuiActorUpdate) == 0x000004, "Wrong alignment on BP_BtlGuiBaseActor_C_GuiActorUpdate");
static_assert(sizeof(BP_BtlGuiBaseActor_C_GuiActorUpdate) == 0x000004, "Wrong size on BP_BtlGuiBaseActor_C_GuiActorUpdate");
static_assert(offsetof(BP_BtlGuiBaseActor_C_GuiActorUpdate, DeltaTime) == 0x000000, "Member 'BP_BtlGuiBaseActor_C_GuiActorUpdate::DeltaTime' has a wrong offset!");

// Function BP_BtlGuiBaseActor.BP_BtlGuiBaseActor_C.AttachChild
// 0x0110 (0x0110 - 0x0000)
struct BP_BtlGuiBaseActor_C_AttachChild final
{
public:
	class UClass*                                 Child;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Name_0;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlGuiBaseActor_C*                  Object;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sucsess;                                           // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_1;          // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0xF];                                       // 0x0061(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetInitialTransform_trans;                // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlGuiBaseActor_C*                  K2Node_DynamicCast_AsBP_Btl_Gui_Base_Actor;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlGuiBaseActor_C_AttachChild) == 0x000010, "Wrong alignment on BP_BtlGuiBaseActor_C_AttachChild");
static_assert(sizeof(BP_BtlGuiBaseActor_C_AttachChild) == 0x000110, "Wrong size on BP_BtlGuiBaseActor_C_AttachChild");
static_assert(offsetof(BP_BtlGuiBaseActor_C_AttachChild, Child) == 0x000000, "Member 'BP_BtlGuiBaseActor_C_AttachChild::Child' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_AttachChild, Name_0) == 0x000008, "Member 'BP_BtlGuiBaseActor_C_AttachChild::Name_0' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_AttachChild, Object) == 0x000010, "Member 'BP_BtlGuiBaseActor_C_AttachChild::Object' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_AttachChild, Sucsess) == 0x000018, "Member 'BP_BtlGuiBaseActor_C_AttachChild::Sucsess' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_AttachChild, CallFunc_NotEqual_NameName_ReturnValue) == 0x000019, "Member 'BP_BtlGuiBaseActor_C_AttachChild::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_AttachChild, CallFunc_GetClassDisplayName_ReturnValue) == 0x000020, "Member 'BP_BtlGuiBaseActor_C_AttachChild::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_AttachChild, CallFunc_MakeLiteralString_ReturnValue) == 0x000030, "Member 'BP_BtlGuiBaseActor_C_AttachChild::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_AttachChild, CallFunc_MakeLiteralString_ReturnValue_1) == 0x000040, "Member 'BP_BtlGuiBaseActor_C_AttachChild::CallFunc_MakeLiteralString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_AttachChild, CallFunc_Concat_StrStr_ReturnValue) == 0x000050, "Member 'BP_BtlGuiBaseActor_C_AttachChild::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_AttachChild, Temp_bool_Variable) == 0x000060, "Member 'BP_BtlGuiBaseActor_C_AttachChild::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_AttachChild, CallFunc_GetInitialTransform_trans) == 0x000070, "Member 'BP_BtlGuiBaseActor_C_AttachChild::CallFunc_GetInitialTransform_trans' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_AttachChild, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000A0, "Member 'BP_BtlGuiBaseActor_C_AttachChild::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_AttachChild, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000A8, "Member 'BP_BtlGuiBaseActor_C_AttachChild::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_AttachChild, K2Node_DynamicCast_AsBP_Btl_Gui_Base_Actor) == 0x0000B0, "Member 'BP_BtlGuiBaseActor_C_AttachChild::K2Node_DynamicCast_AsBP_Btl_Gui_Base_Actor' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_AttachChild, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'BP_BtlGuiBaseActor_C_AttachChild::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_AttachChild, CallFunc_Array_Add_ReturnValue) == 0x0000BC, "Member 'BP_BtlGuiBaseActor_C_AttachChild::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_AttachChild, CallFunc_Array_Add_ReturnValue_1) == 0x0000C0, "Member 'BP_BtlGuiBaseActor_C_AttachChild::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_AttachChild, CallFunc_GetObjectName_ReturnValue) == 0x0000C8, "Member 'BP_BtlGuiBaseActor_C_AttachChild::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_AttachChild, CallFunc_Conv_StringToName_ReturnValue) == 0x0000D8, "Member 'BP_BtlGuiBaseActor_C_AttachChild::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_AttachChild, K2Node_Select_Default) == 0x0000E0, "Member 'BP_BtlGuiBaseActor_C_AttachChild::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_AttachChild, CallFunc_Conv_NameToString_ReturnValue) == 0x0000E8, "Member 'BP_BtlGuiBaseActor_C_AttachChild::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_AttachChild, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000F8, "Member 'BP_BtlGuiBaseActor_C_AttachChild::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function BP_BtlGuiBaseActor.BP_BtlGuiBaseActor_C.SetVisible
// 0x0050 (0x0050 - 0x0000)
struct BP_BtlGuiBaseActor_C_SetVisible final
{
public:
	bool                                          IsVisible;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBtlGuiDrawComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBtlGuiDrawComponent*                   CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlGuiBaseActor_C*                  CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiBaseActor_C_SetVisible) == 0x000008, "Wrong alignment on BP_BtlGuiBaseActor_C_SetVisible");
static_assert(sizeof(BP_BtlGuiBaseActor_C_SetVisible) == 0x000050, "Wrong size on BP_BtlGuiBaseActor_C_SetVisible");
static_assert(offsetof(BP_BtlGuiBaseActor_C_SetVisible, IsVisible) == 0x000000, "Member 'BP_BtlGuiBaseActor_C_SetVisible::IsVisible' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_SetVisible, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_BtlGuiBaseActor_C_SetVisible::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_SetVisible, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_BtlGuiBaseActor_C_SetVisible::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_SetVisible, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_BtlGuiBaseActor_C_SetVisible::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_SetVisible, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000010, "Member 'BP_BtlGuiBaseActor_C_SetVisible::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_SetVisible, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_BtlGuiBaseActor_C_SetVisible::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_SetVisible, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'BP_BtlGuiBaseActor_C_SetVisible::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_SetVisible, Temp_int_Loop_Counter_Variable_1) == 0x000028, "Member 'BP_BtlGuiBaseActor_C_SetVisible::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_SetVisible, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_BtlGuiBaseActor_C_SetVisible::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_SetVisible, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_BtlGuiBaseActor_C_SetVisible::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_SetVisible, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'BP_BtlGuiBaseActor_C_SetVisible::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_SetVisible, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'BP_BtlGuiBaseActor_C_SetVisible::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_SetVisible, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'BP_BtlGuiBaseActor_C_SetVisible::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_SetVisible, CallFunc_IsValid_ReturnValue) == 0x00004C, "Member 'BP_BtlGuiBaseActor_C_SetVisible::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_SetVisible, CallFunc_Less_IntInt_ReturnValue_1) == 0x00004D, "Member 'BP_BtlGuiBaseActor_C_SetVisible::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_SetVisible, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x00004E, "Member 'BP_BtlGuiBaseActor_C_SetVisible::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_BtlGuiBaseActor.BP_BtlGuiBaseActor_C.FindGuiActorByName
// 0x0070 (0x0070 - 0x0000)
struct BP_BtlGuiBaseActor_C_FindGuiActorByName final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlGuiBaseActor_C*                  GuiActor;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sucsess;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  CallFunc_FindGuiActorByName_GuiActor;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindGuiActorByName_sucsess;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  Temp_object_Variable;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlGuiBaseActor_C*                  CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B[0x5];                                       // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  K2Node_Select_Default;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlGuiBaseActor_C_FindGuiActorByName) == 0x000008, "Wrong alignment on BP_BtlGuiBaseActor_C_FindGuiActorByName");
static_assert(sizeof(BP_BtlGuiBaseActor_C_FindGuiActorByName) == 0x000070, "Wrong size on BP_BtlGuiBaseActor_C_FindGuiActorByName");
static_assert(offsetof(BP_BtlGuiBaseActor_C_FindGuiActorByName, Name_0) == 0x000000, "Member 'BP_BtlGuiBaseActor_C_FindGuiActorByName::Name_0' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_FindGuiActorByName, GuiActor) == 0x000008, "Member 'BP_BtlGuiBaseActor_C_FindGuiActorByName::GuiActor' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_FindGuiActorByName, Sucsess) == 0x000010, "Member 'BP_BtlGuiBaseActor_C_FindGuiActorByName::Sucsess' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_FindGuiActorByName, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_BtlGuiBaseActor_C_FindGuiActorByName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_FindGuiActorByName, CallFunc_Array_Find_ReturnValue) == 0x000018, "Member 'BP_BtlGuiBaseActor_C_FindGuiActorByName::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_FindGuiActorByName, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BP_BtlGuiBaseActor_C_FindGuiActorByName::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_FindGuiActorByName, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_BtlGuiBaseActor_C_FindGuiActorByName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_FindGuiActorByName, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_BtlGuiBaseActor_C_FindGuiActorByName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_FindGuiActorByName, CallFunc_FindGuiActorByName_GuiActor) == 0x000030, "Member 'BP_BtlGuiBaseActor_C_FindGuiActorByName::CallFunc_FindGuiActorByName_GuiActor' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_FindGuiActorByName, CallFunc_FindGuiActorByName_sucsess) == 0x000038, "Member 'BP_BtlGuiBaseActor_C_FindGuiActorByName::CallFunc_FindGuiActorByName_sucsess' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_FindGuiActorByName, Temp_object_Variable) == 0x000040, "Member 'BP_BtlGuiBaseActor_C_FindGuiActorByName::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_FindGuiActorByName, Temp_bool_Variable) == 0x000048, "Member 'BP_BtlGuiBaseActor_C_FindGuiActorByName::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_FindGuiActorByName, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'BP_BtlGuiBaseActor_C_FindGuiActorByName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_FindGuiActorByName, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'BP_BtlGuiBaseActor_C_FindGuiActorByName::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_FindGuiActorByName, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000058, "Member 'BP_BtlGuiBaseActor_C_FindGuiActorByName::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_FindGuiActorByName, CallFunc_Less_IntInt_ReturnValue) == 0x000059, "Member 'BP_BtlGuiBaseActor_C_FindGuiActorByName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_FindGuiActorByName, CallFunc_BooleanAND_ReturnValue) == 0x00005A, "Member 'BP_BtlGuiBaseActor_C_FindGuiActorByName::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_FindGuiActorByName, K2Node_Select_Default) == 0x000060, "Member 'BP_BtlGuiBaseActor_C_FindGuiActorByName::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_FindGuiActorByName, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BP_BtlGuiBaseActor_C_FindGuiActorByName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BtlGuiBaseActor.BP_BtlGuiBaseActor_C.UpdateAll
// 0x0028 (0x0028 - 0x0000)
struct BP_BtlGuiBaseActor_C_UpdateAll final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlGuiBaseActor_C*                  CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlGuiBaseActor_C_UpdateAll) == 0x000008, "Wrong alignment on BP_BtlGuiBaseActor_C_UpdateAll");
static_assert(sizeof(BP_BtlGuiBaseActor_C_UpdateAll) == 0x000028, "Wrong size on BP_BtlGuiBaseActor_C_UpdateAll");
static_assert(offsetof(BP_BtlGuiBaseActor_C_UpdateAll, DeltaTime) == 0x000000, "Member 'BP_BtlGuiBaseActor_C_UpdateAll::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_UpdateAll, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_BtlGuiBaseActor_C_UpdateAll::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_UpdateAll, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000008, "Member 'BP_BtlGuiBaseActor_C_UpdateAll::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_UpdateAll, CallFunc_BooleanOR_ReturnValue) == 0x000009, "Member 'BP_BtlGuiBaseActor_C_UpdateAll::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_UpdateAll, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00000A, "Member 'BP_BtlGuiBaseActor_C_UpdateAll::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_UpdateAll, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_BtlGuiBaseActor_C_UpdateAll::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_UpdateAll, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_BtlGuiBaseActor_C_UpdateAll::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_UpdateAll, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_BtlGuiBaseActor_C_UpdateAll::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_UpdateAll, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_BtlGuiBaseActor_C_UpdateAll::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_UpdateAll, CallFunc_IsValid_ReturnValue) == 0x00001D, "Member 'BP_BtlGuiBaseActor_C_UpdateAll::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_UpdateAll, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_BtlGuiBaseActor_C_UpdateAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BtlGuiBaseActor.BP_BtlGuiBaseActor_C.DrawAllItem
// 0x0050 (0x0050 - 0x0000)
struct BP_BtlGuiBaseActor_C_DrawAllItem final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBtlGuiDrawComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	class ABP_BtlGuiBaseActor_C*                  CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiBaseActor_C_DrawAllItem) == 0x000008, "Wrong alignment on BP_BtlGuiBaseActor_C_DrawAllItem");
static_assert(sizeof(BP_BtlGuiBaseActor_C_DrawAllItem) == 0x000050, "Wrong size on BP_BtlGuiBaseActor_C_DrawAllItem");
static_assert(offsetof(BP_BtlGuiBaseActor_C_DrawAllItem, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_BtlGuiBaseActor_C_DrawAllItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_DrawAllItem, Temp_int_Loop_Counter_Variable_1) == 0x000004, "Member 'BP_BtlGuiBaseActor_C_DrawAllItem::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_DrawAllItem, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_BtlGuiBaseActor_C_DrawAllItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_DrawAllItem, CallFunc_Add_IntInt_ReturnValue_1) == 0x00000C, "Member 'BP_BtlGuiBaseActor_C_DrawAllItem::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_DrawAllItem, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_BtlGuiBaseActor_C_DrawAllItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_DrawAllItem, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'BP_BtlGuiBaseActor_C_DrawAllItem::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_DrawAllItem, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000018, "Member 'BP_BtlGuiBaseActor_C_DrawAllItem::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_DrawAllItem, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_BtlGuiBaseActor_C_DrawAllItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_DrawAllItem, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'BP_BtlGuiBaseActor_C_DrawAllItem::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_DrawAllItem, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_BtlGuiBaseActor_C_DrawAllItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_DrawAllItem, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_BtlGuiBaseActor_C_DrawAllItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_DrawAllItem, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_BtlGuiBaseActor_C_DrawAllItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_DrawAllItem, CallFunc_Array_Length_ReturnValue_1) == 0x000044, "Member 'BP_BtlGuiBaseActor_C_DrawAllItem::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_DrawAllItem, CallFunc_Less_IntInt_ReturnValue_1) == 0x000048, "Member 'BP_BtlGuiBaseActor_C_DrawAllItem::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_BtlGuiBaseActor.BP_BtlGuiBaseActor_C.RemoveActor
// 0x0030 (0x0030 - 0x0000)
struct BP_BtlGuiBaseActor_C_RemoveActor final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiBaseActor_C_RemoveActor) == 0x000008, "Wrong alignment on BP_BtlGuiBaseActor_C_RemoveActor");
static_assert(sizeof(BP_BtlGuiBaseActor_C_RemoveActor) == 0x000030, "Wrong size on BP_BtlGuiBaseActor_C_RemoveActor");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveActor, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_BtlGuiBaseActor_C_RemoveActor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveActor, Temp_bool_True_if_break_was_hit_Variable) == 0x000004, "Member 'BP_BtlGuiBaseActor_C_RemoveActor::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveActor, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'BP_BtlGuiBaseActor_C_RemoveActor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveActor, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_BtlGuiBaseActor_C_RemoveActor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveActor, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_BtlGuiBaseActor_C_RemoveActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveActor, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'BP_BtlGuiBaseActor_C_RemoveActor::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveActor, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_BtlGuiBaseActor_C_RemoveActor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveActor, CallFunc_Array_Get_Item_1) == 0x000020, "Member 'BP_BtlGuiBaseActor_C_RemoveActor::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveActor, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_BtlGuiBaseActor_C_RemoveActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveActor, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_BtlGuiBaseActor_C_RemoveActor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveActor, CallFunc_BooleanAND_ReturnValue) == 0x00002D, "Member 'BP_BtlGuiBaseActor_C_RemoveActor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveActor, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00002E, "Member 'BP_BtlGuiBaseActor_C_RemoveActor::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveActor, CallFunc_IsValid_ReturnValue) == 0x00002F, "Member 'BP_BtlGuiBaseActor_C_RemoveActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlGuiBaseActor.BP_BtlGuiBaseActor_C.Set Personal State
// 0x0001 (0x0001 - 0x0000)
struct BP_BtlGuiBaseActor_C_Set_Personal_State final
{
public:
	EBtlGuiState                                  State_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlGuiBaseActor_C_Set_Personal_State) == 0x000001, "Wrong alignment on BP_BtlGuiBaseActor_C_Set_Personal_State");
static_assert(sizeof(BP_BtlGuiBaseActor_C_Set_Personal_State) == 0x000001, "Wrong size on BP_BtlGuiBaseActor_C_Set_Personal_State");
static_assert(offsetof(BP_BtlGuiBaseActor_C_Set_Personal_State, State_0) == 0x000000, "Member 'BP_BtlGuiBaseActor_C_Set_Personal_State::State_0' has a wrong offset!");

// Function BP_BtlGuiBaseActor.BP_BtlGuiBaseActor_C.BeginPlayAll
// 0x0020 (0x0020 - 0x0000)
struct BP_BtlGuiBaseActor_C_BeginPlayAll final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiBaseActor_C_BeginPlayAll) == 0x000008, "Wrong alignment on BP_BtlGuiBaseActor_C_BeginPlayAll");
static_assert(sizeof(BP_BtlGuiBaseActor_C_BeginPlayAll) == 0x000020, "Wrong size on BP_BtlGuiBaseActor_C_BeginPlayAll");
static_assert(offsetof(BP_BtlGuiBaseActor_C_BeginPlayAll, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_BtlGuiBaseActor_C_BeginPlayAll::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_BeginPlayAll, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_BtlGuiBaseActor_C_BeginPlayAll::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_BeginPlayAll, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_BtlGuiBaseActor_C_BeginPlayAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_BeginPlayAll, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_BtlGuiBaseActor_C_BeginPlayAll::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_BeginPlayAll, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_BtlGuiBaseActor_C_BeginPlayAll::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_BeginPlayAll, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_BtlGuiBaseActor_C_BeginPlayAll::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_BeginPlayAll, CallFunc_IsValid_ReturnValue) == 0x00001D, "Member 'BP_BtlGuiBaseActor_C_BeginPlayAll::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlGuiBaseActor.BP_BtlGuiBaseActor_C.isReadyAll
// 0x0020 (0x0020 - 0x0000)
struct BP_BtlGuiBaseActor_C_IsReadyAll final
{
public:
	bool                                          Conpleted;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlGuiBaseActor_C*                  CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isReadyAll_Conpleted;                     // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiBaseActor_C_IsReadyAll) == 0x000008, "Wrong alignment on BP_BtlGuiBaseActor_C_IsReadyAll");
static_assert(sizeof(BP_BtlGuiBaseActor_C_IsReadyAll) == 0x000020, "Wrong size on BP_BtlGuiBaseActor_C_IsReadyAll");
static_assert(offsetof(BP_BtlGuiBaseActor_C_IsReadyAll, Conpleted) == 0x000000, "Member 'BP_BtlGuiBaseActor_C_IsReadyAll::Conpleted' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_IsReadyAll, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_BtlGuiBaseActor_C_IsReadyAll::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_IsReadyAll, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_BtlGuiBaseActor_C_IsReadyAll::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_IsReadyAll, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_BtlGuiBaseActor_C_IsReadyAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_IsReadyAll, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_BtlGuiBaseActor_C_IsReadyAll::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_IsReadyAll, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_BtlGuiBaseActor_C_IsReadyAll::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_IsReadyAll, CallFunc_isReadyAll_Conpleted) == 0x00001C, "Member 'BP_BtlGuiBaseActor_C_IsReadyAll::CallFunc_isReadyAll_Conpleted' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_IsReadyAll, CallFunc_Less_IntInt_ReturnValue) == 0x00001D, "Member 'BP_BtlGuiBaseActor_C_IsReadyAll::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_IsReadyAll, CallFunc_IsValid_ReturnValue) == 0x00001E, "Member 'BP_BtlGuiBaseActor_C_IsReadyAll::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlGuiBaseActor.BP_BtlGuiBaseActor_C.SetAlwaysUpdate
// 0x0001 (0x0001 - 0x0000)
struct BP_BtlGuiBaseActor_C_SetAlwaysUpdate final
{
public:
	bool                                          AlwaysUpdate_0;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiBaseActor_C_SetAlwaysUpdate) == 0x000001, "Wrong alignment on BP_BtlGuiBaseActor_C_SetAlwaysUpdate");
static_assert(sizeof(BP_BtlGuiBaseActor_C_SetAlwaysUpdate) == 0x000001, "Wrong size on BP_BtlGuiBaseActor_C_SetAlwaysUpdate");
static_assert(offsetof(BP_BtlGuiBaseActor_C_SetAlwaysUpdate, AlwaysUpdate_0) == 0x000000, "Member 'BP_BtlGuiBaseActor_C_SetAlwaysUpdate::AlwaysUpdate_0' has a wrong offset!");

// Function BP_BtlGuiBaseActor.BP_BtlGuiBaseActor_C.ChangeState
// 0x0050 (0x0050 - 0x0000)
struct BP_BtlGuiBaseActor_C_ChangeState final
{
public:
	EBtlGuiState                                  State_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Flag;                                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Number;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiBaseActor_C_ChangeState) == 0x000008, "Wrong alignment on BP_BtlGuiBaseActor_C_ChangeState");
static_assert(sizeof(BP_BtlGuiBaseActor_C_ChangeState) == 0x000050, "Wrong size on BP_BtlGuiBaseActor_C_ChangeState");
static_assert(offsetof(BP_BtlGuiBaseActor_C_ChangeState, State_0) == 0x000000, "Member 'BP_BtlGuiBaseActor_C_ChangeState::State_0' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_ChangeState, Flag) == 0x000001, "Member 'BP_BtlGuiBaseActor_C_ChangeState::Flag' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_ChangeState, Number) == 0x000004, "Member 'BP_BtlGuiBaseActor_C_ChangeState::Number' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_ChangeState, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_BtlGuiBaseActor_C_ChangeState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_ChangeState, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_BtlGuiBaseActor_C_ChangeState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_ChangeState, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_BtlGuiBaseActor_C_ChangeState::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_ChangeState, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'BP_BtlGuiBaseActor_C_ChangeState::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_ChangeState, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_BtlGuiBaseActor_C_ChangeState::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_ChangeState, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_BtlGuiBaseActor_C_ChangeState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_ChangeState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000030, "Member 'BP_BtlGuiBaseActor_C_ChangeState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_ChangeState, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000031, "Member 'BP_BtlGuiBaseActor_C_ChangeState::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_ChangeState, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000032, "Member 'BP_BtlGuiBaseActor_C_ChangeState::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_ChangeState, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_BtlGuiBaseActor_C_ChangeState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_ChangeState, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_BtlGuiBaseActor_C_ChangeState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_ChangeState, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_BtlGuiBaseActor_C_ChangeState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_ChangeState, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_BtlGuiBaseActor_C_ChangeState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BtlGuiBaseActor.BP_BtlGuiBaseActor_C.SetBindTimer
// 0x0004 (0x0004 - 0x0000)
struct BP_BtlGuiBaseActor_C_SetBindTimer final
{
public:
	float                                         BindTimer_0;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlGuiBaseActor_C_SetBindTimer) == 0x000004, "Wrong alignment on BP_BtlGuiBaseActor_C_SetBindTimer");
static_assert(sizeof(BP_BtlGuiBaseActor_C_SetBindTimer) == 0x000004, "Wrong size on BP_BtlGuiBaseActor_C_SetBindTimer");
static_assert(offsetof(BP_BtlGuiBaseActor_C_SetBindTimer, BindTimer_0) == 0x000000, "Member 'BP_BtlGuiBaseActor_C_SetBindTimer::BindTimer_0' has a wrong offset!");

// Function BP_BtlGuiBaseActor.BP_BtlGuiBaseActor_C.CoreSetRetry
// 0x0028 (0x0028 - 0x0000)
struct BP_BtlGuiBaseActor_C_CoreSetRetry final
{
public:
	class UBP_BtlGuiComponent_C*                  BtlGui_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlGuiBaseActor_C_CoreSetRetry) == 0x000008, "Wrong alignment on BP_BtlGuiBaseActor_C_CoreSetRetry");
static_assert(sizeof(BP_BtlGuiBaseActor_C_CoreSetRetry) == 0x000028, "Wrong size on BP_BtlGuiBaseActor_C_CoreSetRetry");
static_assert(offsetof(BP_BtlGuiBaseActor_C_CoreSetRetry, BtlGui_0) == 0x000000, "Member 'BP_BtlGuiBaseActor_C_CoreSetRetry::BtlGui_0' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_CoreSetRetry, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_BtlGuiBaseActor_C_CoreSetRetry::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_CoreSetRetry, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_BtlGuiBaseActor_C_CoreSetRetry::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_CoreSetRetry, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_BtlGuiBaseActor_C_CoreSetRetry::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_CoreSetRetry, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_BtlGuiBaseActor_C_CoreSetRetry::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_CoreSetRetry, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_BtlGuiBaseActor_C_CoreSetRetry::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_CoreSetRetry, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_BtlGuiBaseActor_C_CoreSetRetry::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BtlGuiBaseActor.BP_BtlGuiBaseActor_C.BeginPlayOnlyAll
// 0x0020 (0x0020 - 0x0000)
struct BP_BtlGuiBaseActor_C_BeginPlayOnlyAll final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiBaseActor_C_BeginPlayOnlyAll) == 0x000008, "Wrong alignment on BP_BtlGuiBaseActor_C_BeginPlayOnlyAll");
static_assert(sizeof(BP_BtlGuiBaseActor_C_BeginPlayOnlyAll) == 0x000020, "Wrong size on BP_BtlGuiBaseActor_C_BeginPlayOnlyAll");
static_assert(offsetof(BP_BtlGuiBaseActor_C_BeginPlayOnlyAll, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_BtlGuiBaseActor_C_BeginPlayOnlyAll::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_BeginPlayOnlyAll, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_BtlGuiBaseActor_C_BeginPlayOnlyAll::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_BeginPlayOnlyAll, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_BtlGuiBaseActor_C_BeginPlayOnlyAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_BeginPlayOnlyAll, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_BtlGuiBaseActor_C_BeginPlayOnlyAll::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_BeginPlayOnlyAll, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_BtlGuiBaseActor_C_BeginPlayOnlyAll::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_BeginPlayOnlyAll, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_BtlGuiBaseActor_C_BeginPlayOnlyAll::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_BeginPlayOnlyAll, CallFunc_IsValid_ReturnValue) == 0x00001D, "Member 'BP_BtlGuiBaseActor_C_BeginPlayOnlyAll::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlGuiBaseActor.BP_BtlGuiBaseActor_C.RemoveDrawAllItem
// 0x0050 (0x0050 - 0x0000)
struct BP_BtlGuiBaseActor_C_RemoveDrawAllItem final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBtlGuiDrawComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	class ABP_BtlGuiBaseActor_C*                  CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlGuiBaseActor_C_RemoveDrawAllItem) == 0x000008, "Wrong alignment on BP_BtlGuiBaseActor_C_RemoveDrawAllItem");
static_assert(sizeof(BP_BtlGuiBaseActor_C_RemoveDrawAllItem) == 0x000050, "Wrong size on BP_BtlGuiBaseActor_C_RemoveDrawAllItem");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveDrawAllItem, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_BtlGuiBaseActor_C_RemoveDrawAllItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveDrawAllItem, Temp_int_Loop_Counter_Variable_1) == 0x000004, "Member 'BP_BtlGuiBaseActor_C_RemoveDrawAllItem::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveDrawAllItem, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_BtlGuiBaseActor_C_RemoveDrawAllItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveDrawAllItem, CallFunc_Add_IntInt_ReturnValue_1) == 0x00000C, "Member 'BP_BtlGuiBaseActor_C_RemoveDrawAllItem::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveDrawAllItem, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_BtlGuiBaseActor_C_RemoveDrawAllItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveDrawAllItem, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'BP_BtlGuiBaseActor_C_RemoveDrawAllItem::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveDrawAllItem, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000018, "Member 'BP_BtlGuiBaseActor_C_RemoveDrawAllItem::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveDrawAllItem, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_BtlGuiBaseActor_C_RemoveDrawAllItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveDrawAllItem, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'BP_BtlGuiBaseActor_C_RemoveDrawAllItem::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveDrawAllItem, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_BtlGuiBaseActor_C_RemoveDrawAllItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveDrawAllItem, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_BtlGuiBaseActor_C_RemoveDrawAllItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveDrawAllItem, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_BtlGuiBaseActor_C_RemoveDrawAllItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveDrawAllItem, CallFunc_Array_Length_ReturnValue_1) == 0x000044, "Member 'BP_BtlGuiBaseActor_C_RemoveDrawAllItem::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveDrawAllItem, CallFunc_Less_IntInt_ReturnValue_1) == 0x000048, "Member 'BP_BtlGuiBaseActor_C_RemoveDrawAllItem::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_BtlGuiBaseActor.BP_BtlGuiBaseActor_C.RemoveActorsByKey
// 0x0040 (0x0040 - 0x0000)
struct BP_BtlGuiBaseActor_C_RemoveActorsByKey final
{
public:
	class FName                                   Key;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlGuiBaseActor_C*                  CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlGuiBaseActor_C_RemoveActorsByKey) == 0x000008, "Wrong alignment on BP_BtlGuiBaseActor_C_RemoveActorsByKey");
static_assert(sizeof(BP_BtlGuiBaseActor_C_RemoveActorsByKey) == 0x000040, "Wrong size on BP_BtlGuiBaseActor_C_RemoveActorsByKey");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveActorsByKey, Key) == 0x000000, "Member 'BP_BtlGuiBaseActor_C_RemoveActorsByKey::Key' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveActorsByKey, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_BtlGuiBaseActor_C_RemoveActorsByKey::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveActorsByKey, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_BtlGuiBaseActor_C_RemoveActorsByKey::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveActorsByKey, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'BP_BtlGuiBaseActor_C_RemoveActorsByKey::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveActorsByKey, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_BtlGuiBaseActor_C_RemoveActorsByKey::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveActorsByKey, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_BtlGuiBaseActor_C_RemoveActorsByKey::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveActorsByKey, CallFunc_Array_Get_Item_1) == 0x000024, "Member 'BP_BtlGuiBaseActor_C_RemoveActorsByKey::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveActorsByKey, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_BtlGuiBaseActor_C_RemoveActorsByKey::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveActorsByKey, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000030, "Member 'BP_BtlGuiBaseActor_C_RemoveActorsByKey::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveActorsByKey, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_BtlGuiBaseActor_C_RemoveActorsByKey::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlGuiBaseActor_C_RemoveActorsByKey, CallFunc_Max_ReturnValue) == 0x000038, "Member 'BP_BtlGuiBaseActor_C_RemoveActorsByKey::CallFunc_Max_ReturnValue' has a wrong offset!");

}

