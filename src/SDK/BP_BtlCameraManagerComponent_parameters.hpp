#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtlCameraManagerComponent

#include "Basic.hpp"

#include "Xrd777_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "FBtlCamCalcAddparam_structs.hpp"


namespace SDK::Params
{

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.ExecuteUbergraph_BP_BtlCameraManagerComponent
// 0x0130 (0x0130 - 0x0000)
struct BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0020(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_1;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBtlTargetsManagerComponent*            K2Node_CustomEvent_BtlTargets;                     // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlSkillBase_C*                     K2Node_CustomEvent_SkillData;                      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBtlSkillCameraType                           K2Node_CustomEvent_CameraType;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_GetMainCharacter_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckSkillCameraCharacterHideDisable_ReturnValue; // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSkillItemDumping_ReturnValue;           // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayCalculateSkillCamera_NeedHidingOthersProc; // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8B[0x5];                                       // 0x008B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_GetMainCharacter_ReturnValue_1;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0098(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent) == 0x000010, "Wrong alignment on BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent) == 0x000130, "Wrong size on BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent, EntryPoint) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent, CallFunc_GetViewTarget_ReturnValue) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent, CallFunc_GetSequencePlayer_ReturnValue) == 0x000018, "Member 'BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent, CallFunc_GetTransform_ReturnValue) == 0x000020, "Member 'BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent, K2Node_Event_DeltaSeconds) == 0x000050, "Member 'BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent, CallFunc_GetSequencePlayer_ReturnValue_1) == 0x000058, "Member 'BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent::CallFunc_GetSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent, K2Node_CustomEvent_BtlTargets) == 0x000068, "Member 'BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent::K2Node_CustomEvent_BtlTargets' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent, K2Node_CustomEvent_SkillData) == 0x000070, "Member 'BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent::K2Node_CustomEvent_SkillData' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent, K2Node_CustomEvent_CameraType) == 0x000078, "Member 'BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent::K2Node_CustomEvent_CameraType' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent, CallFunc_GetMainCharacter_ReturnValue) == 0x000080, "Member 'BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent::CallFunc_GetMainCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent, CallFunc_CheckSkillCameraCharacterHideDisable_ReturnValue) == 0x000088, "Member 'BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent::CallFunc_CheckSkillCameraCharacterHideDisable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent, CallFunc_IsSkillItemDumping_ReturnValue) == 0x000089, "Member 'BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent::CallFunc_IsSkillItemDumping_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent, CallFunc_PlayCalculateSkillCamera_NeedHidingOthersProc) == 0x00008A, "Member 'BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent::CallFunc_PlayCalculateSkillCamera_NeedHidingOthersProc' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent, CallFunc_GetMainCharacter_ReturnValue_1) == 0x000090, "Member 'BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent::CallFunc_GetMainCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000098, "Member 'BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000120, "Member 'BP_BtlCameraManagerComponent_C_ExecuteUbergraph_BP_BtlCameraManagerComponent::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_BtlCameraManagerComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_BtlCameraManagerComponent_C_ReceiveTick");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_BtlCameraManagerComponent_C_ReceiveTick");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.On Play Skill Camera
// 0x0018 (0x0018 - 0x0000)
struct BP_BtlCameraManagerComponent_C_On_Play_Skill_Camera final
{
public:
	class UBtlTargetsManagerComponent*            BtlTargets;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlSkillBase_C*                     SkillData;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBtlSkillCameraType                           CameraType;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_On_Play_Skill_Camera) == 0x000008, "Wrong alignment on BP_BtlCameraManagerComponent_C_On_Play_Skill_Camera");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_On_Play_Skill_Camera) == 0x000018, "Wrong size on BP_BtlCameraManagerComponent_C_On_Play_Skill_Camera");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_On_Play_Skill_Camera, BtlTargets) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_On_Play_Skill_Camera::BtlTargets' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_On_Play_Skill_Camera, SkillData) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_On_Play_Skill_Camera::SkillData' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_On_Play_Skill_Camera, CameraType) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_On_Play_Skill_Camera::CameraType' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.GetMainCameraRoot
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlCameraManagerComponent_C_GetMainCameraRoot final
{
public:
	class USceneComponent*                        Scene_Component;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_GetMainCameraRoot) == 0x000008, "Wrong alignment on BP_BtlCameraManagerComponent_C_GetMainCameraRoot");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_GetMainCameraRoot) == 0x000008, "Wrong size on BP_BtlCameraManagerComponent_C_GetMainCameraRoot");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_GetMainCameraRoot, Scene_Component) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_GetMainCameraRoot::Scene_Component' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.SetActCharacter
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlCameraManagerComponent_C_SetActCharacter final
{
public:
	class ABP_BtlCharacterBase_C*                 Enchanter;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_SetActCharacter) == 0x000008, "Wrong alignment on BP_BtlCameraManagerComponent_C_SetActCharacter");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_SetActCharacter) == 0x000008, "Wrong size on BP_BtlCameraManagerComponent_C_SetActCharacter");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_SetActCharacter, Enchanter) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_SetActCharacter::Enchanter' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.PlaySequenceCamera
// 0x00C0 (0x00C0 - 0x0000)
struct BP_BtlCameraManagerComponent_C_PlaySequenceCamera final
{
public:
	class ALevelSequenceActor*                    Sequence_Actor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABtlActor*                              TransformBaseActor;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Loop;                                              // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACineCameraActor*                       UsingOtherMainCamera;                              // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             SequenceTransform;                                 // 0x0020(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class ACineCameraActor*                       UsingCamera;                                       // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Loop_Num;                                          // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0060(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_PlaySequenceCamera) == 0x000010, "Wrong alignment on BP_BtlCameraManagerComponent_C_PlaySequenceCamera");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_PlaySequenceCamera) == 0x0000C0, "Wrong size on BP_BtlCameraManagerComponent_C_PlaySequenceCamera");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlaySequenceCamera, Sequence_Actor) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_PlaySequenceCamera::Sequence_Actor' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlaySequenceCamera, TransformBaseActor) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_PlaySequenceCamera::TransformBaseActor' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlaySequenceCamera, Loop) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_PlaySequenceCamera::Loop' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlaySequenceCamera, UsingOtherMainCamera) == 0x000018, "Member 'BP_BtlCameraManagerComponent_C_PlaySequenceCamera::UsingOtherMainCamera' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlaySequenceCamera, SequenceTransform) == 0x000020, "Member 'BP_BtlCameraManagerComponent_C_PlaySequenceCamera::SequenceTransform' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlaySequenceCamera, UsingCamera) == 0x000050, "Member 'BP_BtlCameraManagerComponent_C_PlaySequenceCamera::UsingCamera' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlaySequenceCamera, Loop_Num) == 0x000058, "Member 'BP_BtlCameraManagerComponent_C_PlaySequenceCamera::Loop_Num' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlaySequenceCamera, CallFunc_IsValid_ReturnValue) == 0x00005C, "Member 'BP_BtlCameraManagerComponent_C_PlaySequenceCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlaySequenceCamera, CallFunc_GetTransform_ReturnValue) == 0x000060, "Member 'BP_BtlCameraManagerComponent_C_PlaySequenceCamera::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlaySequenceCamera, CallFunc_MakeTransform_ReturnValue) == 0x000090, "Member 'BP_BtlCameraManagerComponent_C_PlaySequenceCamera::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.Play Calc Camera
// 0x0100 (0x0100 - 0x0000)
struct BP_BtlCameraManagerComponent_C_Play_Calc_Camera final
{
public:
	class UBtlTargetsManagerComponent*            Btl_Targets;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TypeName;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NotInitialShowHidingCharacter;                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0xF];                                       // 0x0011(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0020(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FFBtlCamCalcAddParam                   CamAddParam;                                       // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                EnchanterToTarget;                                 // 0x0054(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CameraLocation;                                    // 0x0060(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_BtlCharacterBase_C*>         TargetList;                                        // 0x0070(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class UBtlTargetsManagerComponent*            TargetsManager;                                    // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFBtlCamCalcAddParam                   K2Node_MakeStruct_FBtlCamCalcAddParam;             // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBtlCamCalcAddParam                   K2Node_MakeStruct_FBtlCamCalcAddParam_1;           // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B[0x1];                                       // 0x009B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalcCamData_AnimTime;                     // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetCalculatedTrans_CameraStart;           // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetCalculatedTrans_CameraGoal;            // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_Play_Calc_Camera) == 0x000010, "Wrong alignment on BP_BtlCameraManagerComponent_C_Play_Calc_Camera");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_Play_Calc_Camera) == 0x000100, "Wrong size on BP_BtlCameraManagerComponent_C_Play_Calc_Camera");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Play_Calc_Camera, Btl_Targets) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_Play_Calc_Camera::Btl_Targets' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Play_Calc_Camera, TypeName) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_Play_Calc_Camera::TypeName' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Play_Calc_Camera, NotInitialShowHidingCharacter) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_Play_Calc_Camera::NotInitialShowHidingCharacter' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Play_Calc_Camera, Transform) == 0x000020, "Member 'BP_BtlCameraManagerComponent_C_Play_Calc_Camera::Transform' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Play_Calc_Camera, CamAddParam) == 0x000050, "Member 'BP_BtlCameraManagerComponent_C_Play_Calc_Camera::CamAddParam' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Play_Calc_Camera, EnchanterToTarget) == 0x000054, "Member 'BP_BtlCameraManagerComponent_C_Play_Calc_Camera::EnchanterToTarget' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Play_Calc_Camera, CameraLocation) == 0x000060, "Member 'BP_BtlCameraManagerComponent_C_Play_Calc_Camera::CameraLocation' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Play_Calc_Camera, TargetList) == 0x000070, "Member 'BP_BtlCameraManagerComponent_C_Play_Calc_Camera::TargetList' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Play_Calc_Camera, TargetsManager) == 0x000080, "Member 'BP_BtlCameraManagerComponent_C_Play_Calc_Camera::TargetsManager' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Play_Calc_Camera, CallFunc_Conv_NameToString_ReturnValue) == 0x000088, "Member 'BP_BtlCameraManagerComponent_C_Play_Calc_Camera::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Play_Calc_Camera, CallFunc_Contains_ReturnValue) == 0x000098, "Member 'BP_BtlCameraManagerComponent_C_Play_Calc_Camera::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Play_Calc_Camera, K2Node_MakeStruct_FBtlCamCalcAddParam) == 0x000099, "Member 'BP_BtlCameraManagerComponent_C_Play_Calc_Camera::K2Node_MakeStruct_FBtlCamCalcAddParam' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Play_Calc_Camera, K2Node_MakeStruct_FBtlCamCalcAddParam_1) == 0x00009A, "Member 'BP_BtlCameraManagerComponent_C_Play_Calc_Camera::K2Node_MakeStruct_FBtlCamCalcAddParam_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Play_Calc_Camera, CallFunc_CalcCamData_AnimTime) == 0x00009C, "Member 'BP_BtlCameraManagerComponent_C_Play_Calc_Camera::CallFunc_CalcCamData_AnimTime' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Play_Calc_Camera, CallFunc_GetCalculatedTrans_CameraStart) == 0x0000A0, "Member 'BP_BtlCameraManagerComponent_C_Play_Calc_Camera::CallFunc_GetCalculatedTrans_CameraStart' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Play_Calc_Camera, CallFunc_GetCalculatedTrans_CameraGoal) == 0x0000D0, "Member 'BP_BtlCameraManagerComponent_C_Play_Calc_Camera::CallFunc_GetCalculatedTrans_CameraGoal' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.PlayCalculateSkillCamera
// 0x0360 (0x0360 - 0x0000)
struct BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera final
{
public:
	class UBtlTargetsManagerComponent*            Btl_Targets;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NeedHidingOthersProc;                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NeedHideProc;                                      // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBtlTargetsManagerComponent*            TargetManager;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABtlActor*                              Enchanter;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform;               // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SearchBossCamera_Found;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckUseAllTargetsCam_useAllTargetsSkill; // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0xE];                                       // 0x0062(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform_1;             // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform_2;             // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform_3;             // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform_4;             // 0x0100(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform_5;             // 0x0130(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform_6;             // 0x0160(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform_7;             // 0x0190(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform_8;             // 0x01C0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform_9;             // 0x01F0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform_10;            // 0x0220(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform_11;            // 0x0250(0x0030)(IsPlainOldData, NoDestructor)
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base;        // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Check_Target_Is_Enemy_Enemy;              // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Check_Target_Is_Enemy_Enemy_1;            // 0x028A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckSkillCameraCharacterHideDisable_ReturnValue; // 0x028B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSkillItemDumping_ReturnValue;           // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Check_Target_Is_Enemy_Enemy_2;            // 0x028D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Check_Target_Is_Enemy_Enemy_3;            // 0x028E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOccurringSkillReflection_ReturnValue;   // 0x028F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOccurringSkillReflection_ReturnValue_1; // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBoss_ReturnValue;                       // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingOffensiveSkill_ReturnValue;        // 0x0292(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingOffensiveSkill_ReturnValue_1;      // 0x0293(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_294[0xC];                                      // 0x0294(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform_12;            // 0x02A0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingOffensiveSkill_ReturnValue_2;      // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckUseGroupCam_result;                  // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckUseGroupCam_useWholeSkill;           // 0x02D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D3[0xD];                                      // 0x02D3(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform_13;            // 0x02E0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemy_ReturnValue;                      // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingOffensiveSkill_ReturnValue_3;      // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyInParty_ReturnValue;               // 0x0312(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0313(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UseBackShotWholeCamera_Backshot;          // 0x0314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0315(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UseBackShotCamera_Backshot;               // 0x0316(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_317[0x9];                                      // 0x0317(0x0009)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform_14;            // 0x0320(0x0030)(IsPlainOldData, NoDestructor)
	class ABtlActor*                              CallFunc_GetMainCharacter_ReturnValue;             // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnemy_ReturnValue_1;                    // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyInParty_ReturnValue_1;             // 0x0359(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x035A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x035B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera) == 0x000010, "Wrong alignment on BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera) == 0x000360, "Wrong size on BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, Btl_Targets) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::Btl_Targets' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, NeedHidingOthersProc) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::NeedHidingOthersProc' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, NeedHideProc) == 0x000009, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::NeedHideProc' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, TargetManager) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::TargetManager' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, Enchanter) == 0x000018, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::Enchanter' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_MakeLiteralName_ReturnValue) == 0x000020, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_Play_Calc_Camera_Transform) == 0x000030, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_Play_Calc_Camera_Transform' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_SearchBossCamera_Found) == 0x000060, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_SearchBossCamera_Found' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_CheckUseAllTargetsCam_useAllTargetsSkill) == 0x000061, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_CheckUseAllTargetsCam_useAllTargetsSkill' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_Play_Calc_Camera_Transform_1) == 0x000070, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_Play_Calc_Camera_Transform_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_Play_Calc_Camera_Transform_2) == 0x0000A0, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_Play_Calc_Camera_Transform_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_Play_Calc_Camera_Transform_3) == 0x0000D0, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_Play_Calc_Camera_Transform_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_Play_Calc_Camera_Transform_4) == 0x000100, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_Play_Calc_Camera_Transform_4' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_Play_Calc_Camera_Transform_5) == 0x000130, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_Play_Calc_Camera_Transform_5' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_Play_Calc_Camera_Transform_6) == 0x000160, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_Play_Calc_Camera_Transform_6' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_Play_Calc_Camera_Transform_7) == 0x000190, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_Play_Calc_Camera_Transform_7' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_Play_Calc_Camera_Transform_8) == 0x0001C0, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_Play_Calc_Camera_Transform_8' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_Play_Calc_Camera_Transform_9) == 0x0001F0, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_Play_Calc_Camera_Transform_9' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_Play_Calc_Camera_Transform_10) == 0x000220, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_Play_Calc_Camera_Transform_10' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_Play_Calc_Camera_Transform_11) == 0x000250, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_Play_Calc_Camera_Transform_11' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, K2Node_DynamicCast_AsBP_Btl_Character_Base) == 0x000280, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::K2Node_DynamicCast_AsBP_Btl_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, K2Node_DynamicCast_bSuccess) == 0x000288, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_Check_Target_Is_Enemy_Enemy) == 0x000289, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_Check_Target_Is_Enemy_Enemy' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_Check_Target_Is_Enemy_Enemy_1) == 0x00028A, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_Check_Target_Is_Enemy_Enemy_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_CheckSkillCameraCharacterHideDisable_ReturnValue) == 0x00028B, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_CheckSkillCameraCharacterHideDisable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_IsSkillItemDumping_ReturnValue) == 0x00028C, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_IsSkillItemDumping_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_Check_Target_Is_Enemy_Enemy_2) == 0x00028D, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_Check_Target_Is_Enemy_Enemy_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_Check_Target_Is_Enemy_Enemy_3) == 0x00028E, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_Check_Target_Is_Enemy_Enemy_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_IsOccurringSkillReflection_ReturnValue) == 0x00028F, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_IsOccurringSkillReflection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_IsOccurringSkillReflection_ReturnValue_1) == 0x000290, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_IsOccurringSkillReflection_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_IsBoss_ReturnValue) == 0x000291, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_IsBoss_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_IsUsingOffensiveSkill_ReturnValue) == 0x000292, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_IsUsingOffensiveSkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_IsUsingOffensiveSkill_ReturnValue_1) == 0x000293, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_IsUsingOffensiveSkill_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_Play_Calc_Camera_Transform_12) == 0x0002A0, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_Play_Calc_Camera_Transform_12' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_IsUsingOffensiveSkill_ReturnValue_2) == 0x0002D0, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_IsUsingOffensiveSkill_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_CheckUseGroupCam_result) == 0x0002D1, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_CheckUseGroupCam_result' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_CheckUseGroupCam_useWholeSkill) == 0x0002D2, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_CheckUseGroupCam_useWholeSkill' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_Play_Calc_Camera_Transform_13) == 0x0002E0, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_Play_Calc_Camera_Transform_13' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_IsEnemy_ReturnValue) == 0x000310, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_IsEnemy_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_IsUsingOffensiveSkill_ReturnValue_3) == 0x000311, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_IsUsingOffensiveSkill_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_IsEnemyInParty_ReturnValue) == 0x000312, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_IsEnemyInParty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_Not_PreBool_ReturnValue) == 0x000313, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_UseBackShotWholeCamera_Backshot) == 0x000314, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_UseBackShotWholeCamera_Backshot' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_BooleanAND_ReturnValue) == 0x000315, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_UseBackShotCamera_Backshot) == 0x000316, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_UseBackShotCamera_Backshot' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_Play_Calc_Camera_Transform_14) == 0x000320, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_Play_Calc_Camera_Transform_14' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_GetMainCharacter_ReturnValue) == 0x000350, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_GetMainCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_IsEnemy_ReturnValue_1) == 0x000358, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_IsEnemy_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_IsEnemyInParty_ReturnValue_1) == 0x000359, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_IsEnemyInParty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_Not_PreBool_ReturnValue_1) == 0x00035A, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera, CallFunc_BooleanAND_ReturnValue_1) == 0x00035B, "Member 'BP_BtlCameraManagerComponent_C_PlayCalculateSkillCamera::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.PlayEffectSkillCamera
// 0x02A0 (0x02A0 - 0x0000)
struct BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera final
{
public:
	class ABP_BtlSkillBase_C*                     SkillData;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABtlActor*                              Enchanter;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0xF];                                       // 0x0011(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0020(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetInitialTransform_trans;                // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingAstrea_ReturnValue;              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0094(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0120(0x0010)(ZeroConstructor, NoDestructor)
	TScriptInterface<class IBtlBossUraBossInterface> K2Node_DynamicCast_AsBtl_Boss_Ura_Boss_Interface;  // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult_1;    // 0x0144(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue_1;       // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CD[0x3];                                      // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult_2;    // 0x0200(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue_2;       // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera) == 0x000010, "Wrong alignment on BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera) == 0x0002A0, "Wrong size on BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera, SkillData) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera::SkillData' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera, Enchanter) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera::Enchanter' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera, CallFunc_GetTransform_ReturnValue) == 0x000020, "Member 'BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera, CallFunc_GetSequencePlayer_ReturnValue) == 0x000050, "Member 'BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera, CallFunc_GetInitialTransform_trans) == 0x000060, "Member 'BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera::CallFunc_GetInitialTransform_trans' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera, CallFunc_IsPlayingAstrea_ReturnValue) == 0x000090, "Member 'BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera::CallFunc_IsPlayingAstrea_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000094, "Member 'BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera, CallFunc_K2_SetActorTransform_ReturnValue) == 0x00011C, "Member 'BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera, K2Node_CreateDelegate_OutputDelegate) == 0x000120, "Member 'BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera, K2Node_DynamicCast_AsBtl_Boss_Ura_Boss_Interface) == 0x000130, "Member 'BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera::K2Node_DynamicCast_AsBtl_Boss_Ura_Boss_Interface' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera, K2Node_DynamicCast_bSuccess) == 0x000140, "Member 'BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera, CallFunc_K2_SetActorTransform_SweepHitResult_1) == 0x000144, "Member 'BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera::CallFunc_K2_SetActorTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera, CallFunc_K2_SetActorTransform_ReturnValue_1) == 0x0001CC, "Member 'BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera::CallFunc_K2_SetActorTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera, CallFunc_MakeTransform_ReturnValue) == 0x0001D0, "Member 'BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera, CallFunc_K2_SetActorTransform_SweepHitResult_2) == 0x000200, "Member 'BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera::CallFunc_K2_SetActorTransform_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera, CallFunc_K2_SetActorTransform_ReturnValue_2) == 0x000288, "Member 'BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera::CallFunc_K2_SetActorTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera, CallFunc_GetPlayerController_ReturnValue) == 0x000290, "Member 'BP_BtlCameraManagerComponent_C_PlayEffectSkillCamera::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.PlayCommandCamera
// 0x00D0 (0x00D0 - 0x0000)
struct BP_BtlCameraManagerComponent_C_PlayCommandCamera final
{
public:
	struct FTransform                             CharacterTransform;                                // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0030(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_PlayCommandCamera) == 0x000010, "Wrong alignment on BP_BtlCameraManagerComponent_C_PlayCommandCamera");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_PlayCommandCamera) == 0x0000D0, "Wrong size on BP_BtlCameraManagerComponent_C_PlayCommandCamera");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCommandCamera, CharacterTransform) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_PlayCommandCamera::CharacterTransform' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCommandCamera, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000030, "Member 'BP_BtlCameraManagerComponent_C_PlayCommandCamera::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCommandCamera, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0000B8, "Member 'BP_BtlCameraManagerComponent_C_PlayCommandCamera::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayCommandCamera, CallFunc_GetPlayerController_ReturnValue) == 0x0000C0, "Member 'BP_BtlCameraManagerComponent_C_PlayCommandCamera::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.InitializeRootTransform
// 0x0180 (0x0180 - 0x0000)
struct BP_BtlCameraManagerComponent_C_InitializeRootTransform final
{
public:
	struct FTransform                             CallFunc_GetInitialTransform_trans;                // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetInitialTransform_trans_1;              // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0060(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult_1;    // 0x00EC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue_1;       // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_InitializeRootTransform) == 0x000010, "Wrong alignment on BP_BtlCameraManagerComponent_C_InitializeRootTransform");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_InitializeRootTransform) == 0x000180, "Wrong size on BP_BtlCameraManagerComponent_C_InitializeRootTransform");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_InitializeRootTransform, CallFunc_GetInitialTransform_trans) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_InitializeRootTransform::CallFunc_GetInitialTransform_trans' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_InitializeRootTransform, CallFunc_GetInitialTransform_trans_1) == 0x000030, "Member 'BP_BtlCameraManagerComponent_C_InitializeRootTransform::CallFunc_GetInitialTransform_trans_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_InitializeRootTransform, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000060, "Member 'BP_BtlCameraManagerComponent_C_InitializeRootTransform::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_InitializeRootTransform, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0000E8, "Member 'BP_BtlCameraManagerComponent_C_InitializeRootTransform::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_InitializeRootTransform, CallFunc_K2_SetActorTransform_SweepHitResult_1) == 0x0000EC, "Member 'BP_BtlCameraManagerComponent_C_InitializeRootTransform::CallFunc_K2_SetActorTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_InitializeRootTransform, CallFunc_K2_SetActorTransform_ReturnValue_1) == 0x000174, "Member 'BP_BtlCameraManagerComponent_C_InitializeRootTransform::CallFunc_K2_SetActorTransform_ReturnValue_1' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.InitializeCharaCameraRootTransform
// 0x00E0 (0x00E0 - 0x0000)
struct BP_BtlCameraManagerComponent_C_InitializeCharaCameraRootTransform final
{
public:
	class AActor*                                 CurrentParent;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetInitialTransform_trans;                // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0050(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_InitializeCharaCameraRootTransform) == 0x000010, "Wrong alignment on BP_BtlCameraManagerComponent_C_InitializeCharaCameraRootTransform");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_InitializeCharaCameraRootTransform) == 0x0000E0, "Wrong size on BP_BtlCameraManagerComponent_C_InitializeCharaCameraRootTransform");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_InitializeCharaCameraRootTransform, CurrentParent) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_InitializeCharaCameraRootTransform::CurrentParent' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_InitializeCharaCameraRootTransform, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_InitializeCharaCameraRootTransform::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_InitializeCharaCameraRootTransform, CallFunc_GetAttachParentActor_ReturnValue) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_InitializeCharaCameraRootTransform::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_InitializeCharaCameraRootTransform, CallFunc_GetInitialTransform_trans) == 0x000020, "Member 'BP_BtlCameraManagerComponent_C_InitializeCharaCameraRootTransform::CallFunc_GetInitialTransform_trans' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_InitializeCharaCameraRootTransform, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000050, "Member 'BP_BtlCameraManagerComponent_C_InitializeCharaCameraRootTransform::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_InitializeCharaCameraRootTransform, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0000D8, "Member 'BP_BtlCameraManagerComponent_C_InitializeCharaCameraRootTransform::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.SetViewTargetToMainCamera
// 0x0010 (0x0010 - 0x0000)
struct BP_BtlCameraManagerComponent_C_SetViewTargetToMainCamera final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_SetViewTargetToMainCamera) == 0x000008, "Wrong alignment on BP_BtlCameraManagerComponent_C_SetViewTargetToMainCamera");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_SetViewTargetToMainCamera) == 0x000010, "Wrong size on BP_BtlCameraManagerComponent_C_SetViewTargetToMainCamera");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_SetViewTargetToMainCamera, Time) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_SetViewTargetToMainCamera::Time' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_SetViewTargetToMainCamera, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_SetViewTargetToMainCamera::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.LookAtTarget
// 0x0138 (0x0138 - 0x0000)
struct BP_BtlCameraManagerComponent_C_LookAtTarget final
{
public:
	float                                         InterpTime;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      Targets_List;                                      // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_Array_Get_Item_1;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDeltaTime_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CallFunc_GetTargets_ReturnValue;                   // 0x0048(0x0010)(ReferenceParm)
	class USceneComponent*                        CallFunc_GetMainCameraRoot_Scene_Component;        // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_GetMainCameraRoot_Scene_Component_1;      // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_GetMainCameraRoot_Scene_Component_2;      // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x00AC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_LookAtTarget) == 0x000008, "Wrong alignment on BP_BtlCameraManagerComponent_C_LookAtTarget");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_LookAtTarget) == 0x000138, "Wrong size on BP_BtlCameraManagerComponent_C_LookAtTarget");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_LookAtTarget, InterpTime) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_LookAtTarget::InterpTime' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_LookAtTarget, Targets_List) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_LookAtTarget::Targets_List' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_LookAtTarget, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_BtlCameraManagerComponent_C_LookAtTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_LookAtTarget, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_BtlCameraManagerComponent_C_LookAtTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_LookAtTarget, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'BP_BtlCameraManagerComponent_C_LookAtTarget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_LookAtTarget, CallFunc_Array_Get_Item_1) == 0x000028, "Member 'BP_BtlCameraManagerComponent_C_LookAtTarget::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_LookAtTarget, CallFunc_GetDeltaTime_ReturnValue) == 0x000030, "Member 'BP_BtlCameraManagerComponent_C_LookAtTarget::CallFunc_GetDeltaTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_LookAtTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000034, "Member 'BP_BtlCameraManagerComponent_C_LookAtTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_LookAtTarget, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000040, "Member 'BP_BtlCameraManagerComponent_C_LookAtTarget::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_LookAtTarget, CallFunc_GetTargets_ReturnValue) == 0x000048, "Member 'BP_BtlCameraManagerComponent_C_LookAtTarget::CallFunc_GetTargets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_LookAtTarget, CallFunc_GetMainCameraRoot_Scene_Component) == 0x000058, "Member 'BP_BtlCameraManagerComponent_C_LookAtTarget::CallFunc_GetMainCameraRoot_Scene_Component' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_LookAtTarget, CallFunc_IsValid_ReturnValue_2) == 0x000060, "Member 'BP_BtlCameraManagerComponent_C_LookAtTarget::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_LookAtTarget, CallFunc_GetMainCameraRoot_Scene_Component_1) == 0x000068, "Member 'BP_BtlCameraManagerComponent_C_LookAtTarget::CallFunc_GetMainCameraRoot_Scene_Component_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_LookAtTarget, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000070, "Member 'BP_BtlCameraManagerComponent_C_LookAtTarget::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_LookAtTarget, CallFunc_GetMainCameraRoot_Scene_Component_2) == 0x000080, "Member 'BP_BtlCameraManagerComponent_C_LookAtTarget::CallFunc_GetMainCameraRoot_Scene_Component_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_LookAtTarget, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000088, "Member 'BP_BtlCameraManagerComponent_C_LookAtTarget::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_LookAtTarget, CallFunc_FindLookAtRotation_ReturnValue) == 0x000094, "Member 'BP_BtlCameraManagerComponent_C_LookAtTarget::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_LookAtTarget, CallFunc_RInterpTo_ReturnValue) == 0x0000A0, "Member 'BP_BtlCameraManagerComponent_C_LookAtTarget::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_LookAtTarget, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x0000AC, "Member 'BP_BtlCameraManagerComponent_C_LookAtTarget::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.Set Camera Transform
// 0x00C0 (0x00C0 - 0x0000)
struct BP_BtlCameraManagerComponent_C_Set_Camera_Transform final
{
public:
	struct FTransform                             Trans;                                             // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0030(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_Set_Camera_Transform) == 0x000010, "Wrong alignment on BP_BtlCameraManagerComponent_C_Set_Camera_Transform");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_Set_Camera_Transform) == 0x0000C0, "Wrong size on BP_BtlCameraManagerComponent_C_Set_Camera_Transform");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Set_Camera_Transform, Trans) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_Set_Camera_Transform::Trans' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Set_Camera_Transform, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000030, "Member 'BP_BtlCameraManagerComponent_C_Set_Camera_Transform::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Set_Camera_Transform, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0000B8, "Member 'BP_BtlCameraManagerComponent_C_Set_Camera_Transform::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Set_Camera_Transform, CallFunc_IsValid_ReturnValue) == 0x0000B9, "Member 'BP_BtlCameraManagerComponent_C_Set_Camera_Transform::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.PlayAttackCamera
// 0x0200 (0x0200 - 0x0000)
struct BP_BtlCameraManagerComponent_C_PlayAttackCamera final
{
public:
	class UBP_BtlTargetManager_C*                 Targets;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnemyCamera;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BtlTargetManager_C*                 TargetManager;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform;               // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform_1;             // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckAllowEnemyAttackBackshotCamera_ReturnValue; // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Check_Target_Is_Enemy_Enemy;              // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Check_Target_Is_Enemy_Boss_Enemy;         // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Check_Target_Is_Enemy_Boss_Enemy_1;       // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84[0xC];                                       // 0x0084(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform_2;             // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform_3;             // 0x00C0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckAllowEnemyAttackBackshotCamera_ReturnValue_1; // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckTargetIsLatestActionCharacter_ReturnValue; // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckTargetIsNextActionCharacter_ReturnValue; // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F4[0xC];                                       // 0x00F4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform_4;             // 0x0100(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckAttackShortRange_ShortRange;         // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0xF];                                      // 0x0131(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform_5;             // 0x0140(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckTargetIsNextActionCharacter_ReturnValue_1; // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0xF];                                      // 0x0171(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform_6;             // 0x0180(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform_7;             // 0x01B0(0x0030)(IsPlainOldData, NoDestructor)
	class ABtlActor*                              CallFunc_GetMainCharacter_ReturnValue;             // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base;        // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckTargetIsLatestActionCharacter_ReturnValue_1; // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckAttackWithMove_AttackWithMove;       // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x01F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOccurringSkillReflection_ReturnValue;   // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_PlayAttackCamera) == 0x000010, "Wrong alignment on BP_BtlCameraManagerComponent_C_PlayAttackCamera");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_PlayAttackCamera) == 0x000200, "Wrong size on BP_BtlCameraManagerComponent_C_PlayAttackCamera");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCamera, Targets) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCamera::Targets' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCamera, EnemyCamera) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCamera::EnemyCamera' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCamera, TargetManager) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCamera::TargetManager' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCamera, CallFunc_Play_Calc_Camera_Transform) == 0x000020, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCamera::CallFunc_Play_Calc_Camera_Transform' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCamera, CallFunc_Play_Calc_Camera_Transform_1) == 0x000050, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCamera::CallFunc_Play_Calc_Camera_Transform_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCamera, CallFunc_CheckAllowEnemyAttackBackshotCamera_ReturnValue) == 0x000080, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCamera::CallFunc_CheckAllowEnemyAttackBackshotCamera_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCamera, CallFunc_Check_Target_Is_Enemy_Enemy) == 0x000081, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCamera::CallFunc_Check_Target_Is_Enemy_Enemy' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCamera, CallFunc_Check_Target_Is_Enemy_Boss_Enemy) == 0x000082, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCamera::CallFunc_Check_Target_Is_Enemy_Boss_Enemy' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCamera, CallFunc_Check_Target_Is_Enemy_Boss_Enemy_1) == 0x000083, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCamera::CallFunc_Check_Target_Is_Enemy_Boss_Enemy_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCamera, CallFunc_Play_Calc_Camera_Transform_2) == 0x000090, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCamera::CallFunc_Play_Calc_Camera_Transform_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCamera, CallFunc_Play_Calc_Camera_Transform_3) == 0x0000C0, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCamera::CallFunc_Play_Calc_Camera_Transform_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCamera, CallFunc_CheckAllowEnemyAttackBackshotCamera_ReturnValue_1) == 0x0000F0, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCamera::CallFunc_CheckAllowEnemyAttackBackshotCamera_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCamera, CallFunc_CheckTargetIsLatestActionCharacter_ReturnValue) == 0x0000F1, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCamera::CallFunc_CheckTargetIsLatestActionCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCamera, CallFunc_CheckTargetIsNextActionCharacter_ReturnValue) == 0x0000F2, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCamera::CallFunc_CheckTargetIsNextActionCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCamera, CallFunc_BooleanOR_ReturnValue) == 0x0000F3, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCamera::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCamera, CallFunc_Play_Calc_Camera_Transform_4) == 0x000100, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCamera::CallFunc_Play_Calc_Camera_Transform_4' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCamera, CallFunc_CheckAttackShortRange_ShortRange) == 0x000130, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCamera::CallFunc_CheckAttackShortRange_ShortRange' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCamera, CallFunc_Play_Calc_Camera_Transform_5) == 0x000140, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCamera::CallFunc_Play_Calc_Camera_Transform_5' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCamera, CallFunc_CheckTargetIsNextActionCharacter_ReturnValue_1) == 0x000170, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCamera::CallFunc_CheckTargetIsNextActionCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCamera, CallFunc_Play_Calc_Camera_Transform_6) == 0x000180, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCamera::CallFunc_Play_Calc_Camera_Transform_6' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCamera, CallFunc_Play_Calc_Camera_Transform_7) == 0x0001B0, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCamera::CallFunc_Play_Calc_Camera_Transform_7' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCamera, CallFunc_GetMainCharacter_ReturnValue) == 0x0001E0, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCamera::CallFunc_GetMainCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCamera, K2Node_DynamicCast_AsBP_Btl_Character_Base) == 0x0001E8, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCamera::K2Node_DynamicCast_AsBP_Btl_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCamera, K2Node_DynamicCast_bSuccess) == 0x0001F0, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCamera, CallFunc_CheckTargetIsLatestActionCharacter_ReturnValue_1) == 0x0001F1, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCamera::CallFunc_CheckTargetIsLatestActionCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCamera, CallFunc_CheckAttackWithMove_AttackWithMove) == 0x0001F2, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCamera::CallFunc_CheckAttackWithMove_AttackWithMove' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCamera, CallFunc_BooleanOR_ReturnValue_1) == 0x0001F3, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCamera::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCamera, CallFunc_IsOccurringSkillReflection_ReturnValue) == 0x0001F4, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCamera::CallFunc_IsOccurringSkillReflection_ReturnValue' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.CalcAttackCamera
// 0x01C0 (0x01C0 - 0x0000)
struct BP_BtlCameraManagerComponent_C_CalcAttackCamera final
{
public:
	class UBP_BtlTargetManager_C*                 Targets_Manager_0;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FVector                                Location;                                          // 0x0040(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocTargets;                                        // 0x004C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocAttacker;                                       // 0x0058(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VecAttackerToTargets;                              // 0x0064(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_BtlCharacterBase_C*>         Targets;                                           // 0x0070(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class ABP_BtlCharacterBase_C*                 Attacker;                                          // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeCylinder_Bottom_Center;               // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeCylinder_Radius;                      // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeCylinder_Height;                      // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_BtlCharacterBase_C*>         CallFunc_GetTargetsCharacters_Characters;          // 0x00F0(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_GetCylinderCommon_CenterBottom;           // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCylinderCommon_Radius;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCylinderCommon_Height;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCylinderCommon_CenterCylinder;         // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCylinderCommon_LocalCylinderLocation;  // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0170(0x0030)(IsPlainOldData, NoDestructor)
	class ABtlActor*                              CallFunc_GetMainCharacter_ReturnValue;             // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base;        // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_CalcAttackCamera) == 0x000010, "Wrong alignment on BP_BtlCameraManagerComponent_C_CalcAttackCamera");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_CalcAttackCamera) == 0x0001C0, "Wrong size on BP_BtlCameraManagerComponent_C_CalcAttackCamera");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CalcAttackCamera, Targets_Manager_0) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_CalcAttackCamera::Targets_Manager_0' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CalcAttackCamera, Transform) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_CalcAttackCamera::Transform' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CalcAttackCamera, Location) == 0x000040, "Member 'BP_BtlCameraManagerComponent_C_CalcAttackCamera::Location' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CalcAttackCamera, LocTargets) == 0x00004C, "Member 'BP_BtlCameraManagerComponent_C_CalcAttackCamera::LocTargets' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CalcAttackCamera, LocAttacker) == 0x000058, "Member 'BP_BtlCameraManagerComponent_C_CalcAttackCamera::LocAttacker' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CalcAttackCamera, VecAttackerToTargets) == 0x000064, "Member 'BP_BtlCameraManagerComponent_C_CalcAttackCamera::VecAttackerToTargets' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CalcAttackCamera, Targets) == 0x000070, "Member 'BP_BtlCameraManagerComponent_C_CalcAttackCamera::Targets' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CalcAttackCamera, Attacker) == 0x000080, "Member 'BP_BtlCameraManagerComponent_C_CalcAttackCamera::Attacker' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CalcAttackCamera, CallFunc_BreakVector_X) == 0x000088, "Member 'BP_BtlCameraManagerComponent_C_CalcAttackCamera::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CalcAttackCamera, CallFunc_BreakVector_Y) == 0x00008C, "Member 'BP_BtlCameraManagerComponent_C_CalcAttackCamera::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CalcAttackCamera, CallFunc_BreakVector_Z) == 0x000090, "Member 'BP_BtlCameraManagerComponent_C_CalcAttackCamera::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CalcAttackCamera, CallFunc_MakeVector_ReturnValue) == 0x000094, "Member 'BP_BtlCameraManagerComponent_C_CalcAttackCamera::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CalcAttackCamera, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000A0, "Member 'BP_BtlCameraManagerComponent_C_CalcAttackCamera::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CalcAttackCamera, CallFunc_Normal_ReturnValue) == 0x0000AC, "Member 'BP_BtlCameraManagerComponent_C_CalcAttackCamera::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CalcAttackCamera, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0000B8, "Member 'BP_BtlCameraManagerComponent_C_CalcAttackCamera::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CalcAttackCamera, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000C4, "Member 'BP_BtlCameraManagerComponent_C_CalcAttackCamera::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CalcAttackCamera, CallFunc_MakeCylinder_Bottom_Center) == 0x0000D0, "Member 'BP_BtlCameraManagerComponent_C_CalcAttackCamera::CallFunc_MakeCylinder_Bottom_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CalcAttackCamera, CallFunc_MakeCylinder_Radius) == 0x0000DC, "Member 'BP_BtlCameraManagerComponent_C_CalcAttackCamera::CallFunc_MakeCylinder_Radius' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CalcAttackCamera, CallFunc_MakeCylinder_Height) == 0x0000E0, "Member 'BP_BtlCameraManagerComponent_C_CalcAttackCamera::CallFunc_MakeCylinder_Height' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CalcAttackCamera, CallFunc_Add_VectorVector_ReturnValue) == 0x0000E4, "Member 'BP_BtlCameraManagerComponent_C_CalcAttackCamera::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CalcAttackCamera, CallFunc_GetTargetsCharacters_Characters) == 0x0000F0, "Member 'BP_BtlCameraManagerComponent_C_CalcAttackCamera::CallFunc_GetTargetsCharacters_Characters' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CalcAttackCamera, CallFunc_GetCylinderCommon_CenterBottom) == 0x000100, "Member 'BP_BtlCameraManagerComponent_C_CalcAttackCamera::CallFunc_GetCylinderCommon_CenterBottom' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CalcAttackCamera, CallFunc_GetCylinderCommon_Radius) == 0x00010C, "Member 'BP_BtlCameraManagerComponent_C_CalcAttackCamera::CallFunc_GetCylinderCommon_Radius' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CalcAttackCamera, CallFunc_GetCylinderCommon_Height) == 0x000110, "Member 'BP_BtlCameraManagerComponent_C_CalcAttackCamera::CallFunc_GetCylinderCommon_Height' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CalcAttackCamera, CallFunc_GetCylinderCommon_CenterCylinder) == 0x000114, "Member 'BP_BtlCameraManagerComponent_C_CalcAttackCamera::CallFunc_GetCylinderCommon_CenterCylinder' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CalcAttackCamera, CallFunc_GetCylinderCommon_LocalCylinderLocation) == 0x000120, "Member 'BP_BtlCameraManagerComponent_C_CalcAttackCamera::CallFunc_GetCylinderCommon_LocalCylinderLocation' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CalcAttackCamera, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00012C, "Member 'BP_BtlCameraManagerComponent_C_CalcAttackCamera::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CalcAttackCamera, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000130, "Member 'BP_BtlCameraManagerComponent_C_CalcAttackCamera::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CalcAttackCamera, CallFunc_MakeVector_ReturnValue_1) == 0x000134, "Member 'BP_BtlCameraManagerComponent_C_CalcAttackCamera::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CalcAttackCamera, CallFunc_MakeVector_ReturnValue_2) == 0x000140, "Member 'BP_BtlCameraManagerComponent_C_CalcAttackCamera::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CalcAttackCamera, CallFunc_Add_VectorVector_ReturnValue_1) == 0x00014C, "Member 'BP_BtlCameraManagerComponent_C_CalcAttackCamera::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CalcAttackCamera, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000158, "Member 'BP_BtlCameraManagerComponent_C_CalcAttackCamera::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CalcAttackCamera, CallFunc_FindLookAtRotation_ReturnValue) == 0x000164, "Member 'BP_BtlCameraManagerComponent_C_CalcAttackCamera::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CalcAttackCamera, CallFunc_MakeTransform_ReturnValue) == 0x000170, "Member 'BP_BtlCameraManagerComponent_C_CalcAttackCamera::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CalcAttackCamera, CallFunc_GetMainCharacter_ReturnValue) == 0x0001A0, "Member 'BP_BtlCameraManagerComponent_C_CalcAttackCamera::CallFunc_GetMainCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CalcAttackCamera, K2Node_DynamicCast_AsBP_Btl_Character_Base) == 0x0001A8, "Member 'BP_BtlCameraManagerComponent_C_CalcAttackCamera::K2Node_DynamicCast_AsBP_Btl_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CalcAttackCamera, K2Node_DynamicCast_bSuccess) == 0x0001B0, "Member 'BP_BtlCameraManagerComponent_C_CalcAttackCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.Hide Obstacle Character
// 0x0120 (0x0120 - 0x0000)
struct BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character final
{
public:
	bool                                          HideWeak;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideStrong;                                        // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CamLocation;                                       // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Get_Hide_Other_Cylinder_Ratio_Ratio;      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Get_Hide_Other_Cylinder_Ratio_Ratio_1;    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_BtlCharacterBase_C*>         CallFunc_GetTargetsCharacters_Characters;          // 0x0028(0x0010)(ReferenceParm)
	class ABP_BtlCharacterBase_C*                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCylinderCommon_CenterBottom;           // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCylinderCommon_Radius;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCylinderCommon_Height;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCylinderCommon_CenterCylinder;         // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCylinderCommon_LocalCylinderLocation;  // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMainCharacterCylinder_Bottom_Center;   // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMainCharacterCylinder_Radius;          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMainCharacterCylinder_Height;          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMainCharacterCylinder_Cylinder_Center; // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B8[0x8];                                       // 0x00B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00C0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character) == 0x000010, "Wrong alignment on BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character) == 0x000120, "Wrong size on BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character, HideWeak) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character::HideWeak' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character, HideStrong) == 0x000001, "Member 'BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character::HideStrong' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character, CamLocation) == 0x000004, "Member 'BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character::CamLocation' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000014, "Member 'BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character, CallFunc_Get_Hide_Other_Cylinder_Ratio_Ratio) == 0x00001C, "Member 'BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character::CallFunc_Get_Hide_Other_Cylinder_Ratio_Ratio' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character, CallFunc_Get_Hide_Other_Cylinder_Ratio_Ratio_1) == 0x000020, "Member 'BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character::CallFunc_Get_Hide_Other_Cylinder_Ratio_Ratio_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character, CallFunc_GetTargetsCharacters_Characters) == 0x000028, "Member 'BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character::CallFunc_GetTargetsCharacters_Characters' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character, CallFunc_GetCylinderCommon_CenterBottom) == 0x000044, "Member 'BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character::CallFunc_GetCylinderCommon_CenterBottom' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character, CallFunc_GetCylinderCommon_Radius) == 0x000050, "Member 'BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character::CallFunc_GetCylinderCommon_Radius' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character, CallFunc_GetCylinderCommon_Height) == 0x000054, "Member 'BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character::CallFunc_GetCylinderCommon_Height' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character, CallFunc_GetCylinderCommon_CenterCylinder) == 0x000058, "Member 'BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character::CallFunc_GetCylinderCommon_CenterCylinder' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character, CallFunc_GetCylinderCommon_LocalCylinderLocation) == 0x000064, "Member 'BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character::CallFunc_GetCylinderCommon_LocalCylinderLocation' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000074, "Member 'BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000080, "Member 'BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character, CallFunc_GetPlayerController_ReturnValue) == 0x000088, "Member 'BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character, CallFunc_GetViewTarget_ReturnValue) == 0x000090, "Member 'BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character, CallFunc_GetMainCharacterCylinder_Bottom_Center) == 0x000098, "Member 'BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character::CallFunc_GetMainCharacterCylinder_Bottom_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character, CallFunc_GetMainCharacterCylinder_Radius) == 0x0000A4, "Member 'BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character::CallFunc_GetMainCharacterCylinder_Radius' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character, CallFunc_GetMainCharacterCylinder_Height) == 0x0000A8, "Member 'BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character::CallFunc_GetMainCharacterCylinder_Height' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character, CallFunc_GetMainCharacterCylinder_Cylinder_Center) == 0x0000AC, "Member 'BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character::CallFunc_GetMainCharacterCylinder_Cylinder_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character, CallFunc_GetTransform_ReturnValue) == 0x0000C0, "Member 'BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0000F0, "Member 'BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character, CallFunc_BreakTransform_Location) == 0x0000F4, "Member 'BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character, CallFunc_BreakTransform_Rotation) == 0x000100, "Member 'BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character, CallFunc_BreakTransform_Scale) == 0x00010C, "Member 'BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000118, "Member 'BP_BtlCameraManagerComponent_C_Hide_Obstacle_Character::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.HideInBoxTrace
// 0x01B0 (0x01B0 - 0x0000)
struct BP_BtlCameraManagerComponent_C_HideInBoxTrace final
{
public:
	struct FVector                                Start;                                             // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Size;                                              // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HideStrong;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideRapid;                                         // 0x001D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      IgnoreList;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	EDrawDebugTrace                               TraceType;                                         // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0058(0x0010)(ConstParm, ReferenceParm)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FHitResult>                     CallFunc_BoxTraceMultiForObjects_OutHits;          // 0x0078(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_BoxTraceMultiForObjects_ReturnValue;      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0090(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11B[0x1];                                      // 0x011B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base;        // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPersona_ReturnValue;                    // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOtherCharacter_OtherCharacter;          // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_HideInBoxTrace) == 0x000008, "Wrong alignment on BP_BtlCameraManagerComponent_C_HideInBoxTrace");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_HideInBoxTrace) == 0x0001B0, "Wrong size on BP_BtlCameraManagerComponent_C_HideInBoxTrace");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, Start) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::Start' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, End) == 0x00000C, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::End' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, Size) == 0x000018, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::Size' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, HideStrong) == 0x00001C, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::HideStrong' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, HideRapid) == 0x00001D, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::HideRapid' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, IgnoreList) == 0x000020, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::IgnoreList' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, TraceType) == 0x000030, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::TraceType' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, CallFunc_MakeVector_ReturnValue) == 0x000038, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, CallFunc_FindLookAtRotation_ReturnValue) == 0x000044, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, Temp_object_Variable) == 0x000058, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, K2Node_MakeArray_Array) == 0x000068, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, CallFunc_BoxTraceMultiForObjects_OutHits) == 0x000078, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::CallFunc_BoxTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, CallFunc_BoxTraceMultiForObjects_ReturnValue) == 0x000088, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::CallFunc_BoxTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, CallFunc_Array_Length_ReturnValue) == 0x00008C, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, CallFunc_Less_IntInt_ReturnValue) == 0x000118, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, CallFunc_BreakHitResult_bBlockingHit) == 0x000119, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, CallFunc_BreakHitResult_bInitialOverlap) == 0x00011A, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, CallFunc_BreakHitResult_Time) == 0x00011C, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, CallFunc_BreakHitResult_Distance) == 0x000120, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, CallFunc_BreakHitResult_Location) == 0x000124, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, CallFunc_BreakHitResult_ImpactPoint) == 0x000130, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, CallFunc_BreakHitResult_Normal) == 0x00013C, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, CallFunc_BreakHitResult_ImpactNormal) == 0x000148, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, CallFunc_BreakHitResult_PhysMat) == 0x000158, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, CallFunc_BreakHitResult_HitActor) == 0x000160, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, CallFunc_BreakHitResult_HitComponent) == 0x000168, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, CallFunc_BreakHitResult_HitBoneName) == 0x000170, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, CallFunc_BreakHitResult_HitItem) == 0x000178, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, CallFunc_BreakHitResult_ElementIndex) == 0x00017C, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, CallFunc_BreakHitResult_FaceIndex) == 0x000180, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, CallFunc_BreakHitResult_TraceStart) == 0x000184, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, CallFunc_BreakHitResult_TraceEnd) == 0x000190, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, K2Node_DynamicCast_AsBP_Btl_Character_Base) == 0x0001A0, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::K2Node_DynamicCast_AsBP_Btl_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, K2Node_DynamicCast_bSuccess) == 0x0001A8, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, CallFunc_IsPersona_ReturnValue) == 0x0001A9, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::CallFunc_IsPersona_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInBoxTrace, CallFunc_IsOtherCharacter_OtherCharacter) == 0x0001AA, "Member 'BP_BtlCameraManagerComponent_C_HideInBoxTrace::CallFunc_IsOtherCharacter_OtherCharacter' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.SetHideOthersMode
// 0x0004 (0x0004 - 0x0000)
struct BP_BtlCameraManagerComponent_C_SetHideOthersMode final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CheckEnchanterOnly;                                // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideWeakly;                                        // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideRapidly;                                       // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_SetHideOthersMode) == 0x000001, "Wrong alignment on BP_BtlCameraManagerComponent_C_SetHideOthersMode");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_SetHideOthersMode) == 0x000004, "Wrong size on BP_BtlCameraManagerComponent_C_SetHideOthersMode");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_SetHideOthersMode, Enable) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_SetHideOthersMode::Enable' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_SetHideOthersMode, CheckEnchanterOnly) == 0x000001, "Member 'BP_BtlCameraManagerComponent_C_SetHideOthersMode::CheckEnchanterOnly' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_SetHideOthersMode, HideWeakly) == 0x000002, "Member 'BP_BtlCameraManagerComponent_C_SetHideOthersMode::HideWeakly' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_SetHideOthersMode, HideRapidly) == 0x000003, "Member 'BP_BtlCameraManagerComponent_C_SetHideOthersMode::HideRapidly' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.Get Hide Other Cylinder Ratio
// 0x0050 (0x0050 - 0x0000)
struct BP_BtlCameraManagerComponent_C_Get_Hide_Other_Cylinder_Ratio final
{
public:
	float                                         Ratio;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlCameraParam                        Param;                                             // 0x0008(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_IsPlayingAstrea_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlCameraParam                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0020(0x0010)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlCameraParam                        CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0038(0x0010)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_Get_Hide_Other_Cylinder_Ratio) == 0x000008, "Wrong alignment on BP_BtlCameraManagerComponent_C_Get_Hide_Other_Cylinder_Ratio");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_Get_Hide_Other_Cylinder_Ratio) == 0x000050, "Wrong size on BP_BtlCameraManagerComponent_C_Get_Hide_Other_Cylinder_Ratio");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Get_Hide_Other_Cylinder_Ratio, Ratio) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_Get_Hide_Other_Cylinder_Ratio::Ratio' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Get_Hide_Other_Cylinder_Ratio, Param) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_Get_Hide_Other_Cylinder_Ratio::Param' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Get_Hide_Other_Cylinder_Ratio, CallFunc_IsPlayingAstrea_ReturnValue) == 0x000018, "Member 'BP_BtlCameraManagerComponent_C_Get_Hide_Other_Cylinder_Ratio::CallFunc_IsPlayingAstrea_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Get_Hide_Other_Cylinder_Ratio, CallFunc_GetDataTableRowFromName_OutRow) == 0x000020, "Member 'BP_BtlCameraManagerComponent_C_Get_Hide_Other_Cylinder_Ratio::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Get_Hide_Other_Cylinder_Ratio, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000030, "Member 'BP_BtlCameraManagerComponent_C_Get_Hide_Other_Cylinder_Ratio::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Get_Hide_Other_Cylinder_Ratio, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000038, "Member 'BP_BtlCameraManagerComponent_C_Get_Hide_Other_Cylinder_Ratio::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Get_Hide_Other_Cylinder_Ratio, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000048, "Member 'BP_BtlCameraManagerComponent_C_Get_Hide_Other_Cylinder_Ratio::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.AnimCamera
// 0x0050 (0x0050 - 0x0000)
struct BP_BtlCameraManagerComponent_C_AnimCamera final
{
public:
	float                                         Alpha;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimRatio;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            CallFunc_GetCamAnimCurve_Curve;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_TEase_ReturnValue;                        // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_AnimCamera) == 0x000010, "Wrong alignment on BP_BtlCameraManagerComponent_C_AnimCamera");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_AnimCamera) == 0x000050, "Wrong size on BP_BtlCameraManagerComponent_C_AnimCamera");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_AnimCamera, Alpha) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_AnimCamera::Alpha' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_AnimCamera, AnimRatio) == 0x000004, "Member 'BP_BtlCameraManagerComponent_C_AnimCamera::AnimRatio' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_AnimCamera, CallFunc_Less_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_AnimCamera::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_AnimCamera, CallFunc_GetCamAnimCurve_Curve) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_AnimCamera::CallFunc_GetCamAnimCurve_Curve' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_AnimCamera, CallFunc_GetFloatValue_ReturnValue) == 0x000018, "Member 'BP_BtlCameraManagerComponent_C_AnimCamera::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_AnimCamera, CallFunc_TEase_ReturnValue) == 0x000020, "Member 'BP_BtlCameraManagerComponent_C_AnimCamera::CallFunc_TEase_ReturnValue' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.AnimProcess
// 0x0014 (0x0014 - 0x0000)
struct BP_BtlCameraManagerComponent_C_AnimProcess final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Ratio;                                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_AnimProcess) == 0x000004, "Wrong alignment on BP_BtlCameraManagerComponent_C_AnimProcess");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_AnimProcess) == 0x000014, "Wrong size on BP_BtlCameraManagerComponent_C_AnimProcess");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_AnimProcess, DeltaTime) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_AnimProcess::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_AnimProcess, Ratio) == 0x000004, "Member 'BP_BtlCameraManagerComponent_C_AnimProcess::Ratio' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_AnimProcess, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_AnimProcess::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_AnimProcess, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_BtlCameraManagerComponent_C_AnimProcess::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_AnimProcess, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_AnimProcess::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.Setup Camera Anim
// 0x0004 (0x0004 - 0x0000)
struct BP_BtlCameraManagerComponent_C_Setup_Camera_Anim final
{
public:
	float                                         AnimTime_0;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_Setup_Camera_Anim) == 0x000004, "Wrong alignment on BP_BtlCameraManagerComponent_C_Setup_Camera_Anim");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_Setup_Camera_Anim) == 0x000004, "Wrong size on BP_BtlCameraManagerComponent_C_Setup_Camera_Anim");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Setup_Camera_Anim, AnimTime_0) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_Setup_Camera_Anim::AnimTime_0' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.PlayEnemyStandbyCam
// 0x0070 (0x0070 - 0x0000)
struct BP_BtlCameraManagerComponent_C_PlayEnemyStandbyCam final
{
public:
	bool                                          DownContinuedCamera;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0xF];                                        // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform;               // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform_1;             // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_PlayEnemyStandbyCam) == 0x000010, "Wrong alignment on BP_BtlCameraManagerComponent_C_PlayEnemyStandbyCam");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_PlayEnemyStandbyCam) == 0x000070, "Wrong size on BP_BtlCameraManagerComponent_C_PlayEnemyStandbyCam");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayEnemyStandbyCam, DownContinuedCamera) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_PlayEnemyStandbyCam::DownContinuedCamera' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayEnemyStandbyCam, CallFunc_Play_Calc_Camera_Transform) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_PlayEnemyStandbyCam::CallFunc_Play_Calc_Camera_Transform' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayEnemyStandbyCam, CallFunc_Play_Calc_Camera_Transform_1) == 0x000040, "Member 'BP_BtlCameraManagerComponent_C_PlayEnemyStandbyCam::CallFunc_Play_Calc_Camera_Transform_1' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.Set View Camera 
// 0x00D0 (0x00D0 - 0x0000)
struct BP_BtlCameraManagerComponent_C_Set_View_Camera_ final
{
public:
	struct FTransform                             Trans;                                             // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0038(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_Set_View_Camera_) == 0x000010, "Wrong alignment on BP_BtlCameraManagerComponent_C_Set_View_Camera_");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_Set_View_Camera_) == 0x0000D0, "Wrong size on BP_BtlCameraManagerComponent_C_Set_View_Camera_");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Set_View_Camera_, Trans) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_Set_View_Camera_::Trans' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Set_View_Camera_, CallFunc_GetPlayerController_ReturnValue) == 0x000030, "Member 'BP_BtlCameraManagerComponent_C_Set_View_Camera_::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Set_View_Camera_, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000038, "Member 'BP_BtlCameraManagerComponent_C_Set_View_Camera_::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Set_View_Camera_, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0000C0, "Member 'BP_BtlCameraManagerComponent_C_Set_View_Camera_::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.Play Enemy Pre Act Cam
// 0x0080 (0x0080 - 0x0000)
struct BP_BtlCameraManagerComponent_C_Play_Enemy_Pre_Act_Cam final
{
public:
	class UBtlTargetsManagerComponent*            Btl_Targets;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform;               // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	class ABtlActor*                              CallFunc_GetMainCharacter_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBoss_ReturnValue;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform_1;             // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_Play_Enemy_Pre_Act_Cam) == 0x000010, "Wrong alignment on BP_BtlCameraManagerComponent_C_Play_Enemy_Pre_Act_Cam");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_Play_Enemy_Pre_Act_Cam) == 0x000080, "Wrong size on BP_BtlCameraManagerComponent_C_Play_Enemy_Pre_Act_Cam");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Play_Enemy_Pre_Act_Cam, Btl_Targets) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_Play_Enemy_Pre_Act_Cam::Btl_Targets' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Play_Enemy_Pre_Act_Cam, CallFunc_Play_Calc_Camera_Transform) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_Play_Enemy_Pre_Act_Cam::CallFunc_Play_Calc_Camera_Transform' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Play_Enemy_Pre_Act_Cam, CallFunc_GetMainCharacter_ReturnValue) == 0x000040, "Member 'BP_BtlCameraManagerComponent_C_Play_Enemy_Pre_Act_Cam::CallFunc_GetMainCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Play_Enemy_Pre_Act_Cam, CallFunc_IsBoss_ReturnValue) == 0x000048, "Member 'BP_BtlCameraManagerComponent_C_Play_Enemy_Pre_Act_Cam::CallFunc_IsBoss_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Play_Enemy_Pre_Act_Cam, CallFunc_Play_Calc_Camera_Transform_1) == 0x000050, "Member 'BP_BtlCameraManagerComponent_C_Play_Enemy_Pre_Act_Cam::CallFunc_Play_Calc_Camera_Transform_1' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.RefleshAnim
// 0x0080 (0x0080 - 0x0000)
struct BP_BtlCameraManagerComponent_C_RefleshAnim final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0xF];                                        // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetCalculatedTrans_CameraStart;           // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetCalculatedTrans_CameraGoal;            // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_CalcCamData_AnimTime;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckNeedToReflesh_need;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_RefleshAnim) == 0x000010, "Wrong alignment on BP_BtlCameraManagerComponent_C_RefleshAnim");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_RefleshAnim) == 0x000080, "Wrong size on BP_BtlCameraManagerComponent_C_RefleshAnim");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_RefleshAnim, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_RefleshAnim::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_RefleshAnim, CallFunc_GetCalculatedTrans_CameraStart) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_RefleshAnim::CallFunc_GetCalculatedTrans_CameraStart' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_RefleshAnim, CallFunc_GetCalculatedTrans_CameraGoal) == 0x000040, "Member 'BP_BtlCameraManagerComponent_C_RefleshAnim::CallFunc_GetCalculatedTrans_CameraGoal' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_RefleshAnim, CallFunc_CalcCamData_AnimTime) == 0x000070, "Member 'BP_BtlCameraManagerComponent_C_RefleshAnim::CallFunc_CalcCamData_AnimTime' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_RefleshAnim, CallFunc_CheckNeedToReflesh_need) == 0x000074, "Member 'BP_BtlCameraManagerComponent_C_RefleshAnim::CallFunc_CheckNeedToReflesh_need' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.UseBackShotCamera
// 0x0018 (0x0018 - 0x0000)
struct BP_BtlCameraManagerComponent_C_UseBackShotCamera final
{
public:
	bool                                          Backshot;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Enable;                                            // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBackshotDisableTargets_Disable;      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 CallFunc_GetMain_Character;                        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEnableBackShotCamera_Enable;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_UseBackShotCamera) == 0x000008, "Wrong alignment on BP_BtlCameraManagerComponent_C_UseBackShotCamera");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_UseBackShotCamera) == 0x000018, "Wrong size on BP_BtlCameraManagerComponent_C_UseBackShotCamera");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_UseBackShotCamera, Backshot) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_UseBackShotCamera::Backshot' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_UseBackShotCamera, Enable) == 0x000001, "Member 'BP_BtlCameraManagerComponent_C_UseBackShotCamera::Enable' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_UseBackShotCamera, CallFunc_CheckBackshotDisableTargets_Disable) == 0x000002, "Member 'BP_BtlCameraManagerComponent_C_UseBackShotCamera::CallFunc_CheckBackshotDisableTargets_Disable' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_UseBackShotCamera, CallFunc_RandomBool_ReturnValue) == 0x000003, "Member 'BP_BtlCameraManagerComponent_C_UseBackShotCamera::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_UseBackShotCamera, CallFunc_GetMain_Character) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_UseBackShotCamera::CallFunc_GetMain_Character' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_UseBackShotCamera, CallFunc_CheckEnableBackShotCamera_Enable) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_UseBackShotCamera::CallFunc_CheckEnableBackShotCamera_Enable' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.UseBackShotWholeCamera
// 0x0018 (0x0018 - 0x0000)
struct BP_BtlCameraManagerComponent_C_UseBackShotWholeCamera final
{
public:
	bool                                          Backshot;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Enable;                                            // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBackshotDisableTargets_Disable;      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEventBattle_ReturnValue;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 CallFunc_GetMain_Character;                        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnemy_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEnableBackShotCamera_Enable;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_UseBackShotWholeCamera) == 0x000008, "Wrong alignment on BP_BtlCameraManagerComponent_C_UseBackShotWholeCamera");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_UseBackShotWholeCamera) == 0x000018, "Wrong size on BP_BtlCameraManagerComponent_C_UseBackShotWholeCamera");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_UseBackShotWholeCamera, Backshot) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_UseBackShotWholeCamera::Backshot' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_UseBackShotWholeCamera, Enable) == 0x000001, "Member 'BP_BtlCameraManagerComponent_C_UseBackShotWholeCamera::Enable' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_UseBackShotWholeCamera, CallFunc_CheckBackshotDisableTargets_Disable) == 0x000002, "Member 'BP_BtlCameraManagerComponent_C_UseBackShotWholeCamera::CallFunc_CheckBackshotDisableTargets_Disable' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_UseBackShotWholeCamera, CallFunc_IsEventBattle_ReturnValue) == 0x000003, "Member 'BP_BtlCameraManagerComponent_C_UseBackShotWholeCamera::CallFunc_IsEventBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_UseBackShotWholeCamera, CallFunc_GetMain_Character) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_UseBackShotWholeCamera::CallFunc_GetMain_Character' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_UseBackShotWholeCamera, CallFunc_IsEnemy_ReturnValue) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_UseBackShotWholeCamera::CallFunc_IsEnemy_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_UseBackShotWholeCamera, CallFunc_CheckEnableBackShotCamera_Enable) == 0x000011, "Member 'BP_BtlCameraManagerComponent_C_UseBackShotWholeCamera::CallFunc_CheckEnableBackShotCamera_Enable' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.CheckUseGroupCam
// 0x0030 (0x0030 - 0x0000)
struct BP_BtlCameraManagerComponent_C_CheckUseGroupCam final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UseWholeSkill;                                     // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Work;                                              // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              Enchanter;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABtlActor*>                      CallFunc_GetTargets_ReturnValue;                   // 0x0010(0x0010)(ReferenceParm)
	class ABtlActor*                              CallFunc_GetMainCharacter_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingAllTargetSkill_ReturnValue;        // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingGroupTargetSkill_ReturnValue;      // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_CheckUseGroupCam) == 0x000008, "Wrong alignment on BP_BtlCameraManagerComponent_C_CheckUseGroupCam");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_CheckUseGroupCam) == 0x000030, "Wrong size on BP_BtlCameraManagerComponent_C_CheckUseGroupCam");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CheckUseGroupCam, Result) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_CheckUseGroupCam::Result' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CheckUseGroupCam, UseWholeSkill) == 0x000001, "Member 'BP_BtlCameraManagerComponent_C_CheckUseGroupCam::UseWholeSkill' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CheckUseGroupCam, Work) == 0x000002, "Member 'BP_BtlCameraManagerComponent_C_CheckUseGroupCam::Work' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CheckUseGroupCam, Enchanter) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_CheckUseGroupCam::Enchanter' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CheckUseGroupCam, CallFunc_GetTargets_ReturnValue) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_CheckUseGroupCam::CallFunc_GetTargets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CheckUseGroupCam, CallFunc_GetMainCharacter_ReturnValue) == 0x000020, "Member 'BP_BtlCameraManagerComponent_C_CheckUseGroupCam::CallFunc_GetMainCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CheckUseGroupCam, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_BtlCameraManagerComponent_C_CheckUseGroupCam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CheckUseGroupCam, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BP_BtlCameraManagerComponent_C_CheckUseGroupCam::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CheckUseGroupCam, CallFunc_IsUsingAllTargetSkill_ReturnValue) == 0x00002D, "Member 'BP_BtlCameraManagerComponent_C_CheckUseGroupCam::CallFunc_IsUsingAllTargetSkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CheckUseGroupCam, CallFunc_IsUsingGroupTargetSkill_ReturnValue) == 0x00002E, "Member 'BP_BtlCameraManagerComponent_C_CheckUseGroupCam::CallFunc_IsUsingGroupTargetSkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CheckUseGroupCam, CallFunc_BooleanOR_ReturnValue) == 0x00002F, "Member 'BP_BtlCameraManagerComponent_C_CheckUseGroupCam::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.Hide Characters for Action
// 0x0088 (0x0088 - 0x0000)
struct BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action final
{
public:
	TArray<class ABtlActor*>                      Characters;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class ABtlActor*                              Enchanter;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABtlActor*>                      Targets;                                           // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          CompletlyHide;                                     // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Rapid;                                             // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          WeaklyHide;                                        // 0x002A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ExceptBoss;                                        // 0x002B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      List;                                              // 0x0030(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBoss_ReturnValue;                       // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action) == 0x000008, "Wrong alignment on BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action) == 0x000088, "Wrong size on BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action, Characters) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action::Characters' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action, Enchanter) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action::Enchanter' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action, Targets) == 0x000018, "Member 'BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action::Targets' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action, CompletlyHide) == 0x000028, "Member 'BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action::CompletlyHide' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action, Rapid) == 0x000029, "Member 'BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action::Rapid' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action, WeaklyHide) == 0x00002A, "Member 'BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action::WeaklyHide' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action, ExceptBoss) == 0x00002B, "Member 'BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action::ExceptBoss' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action, List) == 0x000030, "Member 'BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action::List' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action, Temp_int_Array_Index_Variable_1) == 0x00005C, "Member 'BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action, Temp_int_Loop_Counter_Variable_1) == 0x000060, "Member 'BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action, CallFunc_Add_IntInt_ReturnValue_1) == 0x000068, "Member 'BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action, CallFunc_Array_RemoveItem_ReturnValue) == 0x000078, "Member 'BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action, CallFunc_IsBoss_ReturnValue) == 0x000079, "Member 'BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action::CallFunc_IsBoss_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action, CallFunc_Array_Length_ReturnValue_1) == 0x00007C, "Member 'BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action, CallFunc_Less_IntInt_ReturnValue_1) == 0x000080, "Member 'BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x000081, "Member 'BP_BtlCameraManagerComponent_C_Hide_Characters_for_Action::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.HideOtherEnemies
// 0x0030 (0x0030 - 0x0000)
struct BP_BtlCameraManagerComponent_C_HideOtherEnemies final
{
public:
	bool                                          CompletlyHide;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Rapid;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          WeaklyHide;                                        // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CallFunc_GetTargets_ReturnValue;                   // 0x0008(0x0010)(ReferenceParm)
	class ABtlActor*                              CallFunc_GetMainCharacter_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABtlActor*>                      CallFunc_GetEnemyList_ReturnValue;                 // 0x0020(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_HideOtherEnemies) == 0x000008, "Wrong alignment on BP_BtlCameraManagerComponent_C_HideOtherEnemies");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_HideOtherEnemies) == 0x000030, "Wrong size on BP_BtlCameraManagerComponent_C_HideOtherEnemies");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOtherEnemies, CompletlyHide) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_HideOtherEnemies::CompletlyHide' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOtherEnemies, Rapid) == 0x000001, "Member 'BP_BtlCameraManagerComponent_C_HideOtherEnemies::Rapid' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOtherEnemies, WeaklyHide) == 0x000002, "Member 'BP_BtlCameraManagerComponent_C_HideOtherEnemies::WeaklyHide' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOtherEnemies, CallFunc_GetTargets_ReturnValue) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_HideOtherEnemies::CallFunc_GetTargets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOtherEnemies, CallFunc_GetMainCharacter_ReturnValue) == 0x000018, "Member 'BP_BtlCameraManagerComponent_C_HideOtherEnemies::CallFunc_GetMainCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOtherEnemies, CallFunc_GetEnemyList_ReturnValue) == 0x000020, "Member 'BP_BtlCameraManagerComponent_C_HideOtherEnemies::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.HideOtherEnemiesWithoutBoss
// 0x0030 (0x0030 - 0x0000)
struct BP_BtlCameraManagerComponent_C_HideOtherEnemiesWithoutBoss final
{
public:
	bool                                          CompletlyHide;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Rapid;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          WeaklyHide;                                        // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CallFunc_GetTargets_ReturnValue;                   // 0x0008(0x0010)(ReferenceParm)
	class ABtlActor*                              CallFunc_GetMainCharacter_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABtlActor*>                      CallFunc_GetEnemyList_ReturnValue;                 // 0x0020(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_HideOtherEnemiesWithoutBoss) == 0x000008, "Wrong alignment on BP_BtlCameraManagerComponent_C_HideOtherEnemiesWithoutBoss");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_HideOtherEnemiesWithoutBoss) == 0x000030, "Wrong size on BP_BtlCameraManagerComponent_C_HideOtherEnemiesWithoutBoss");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOtherEnemiesWithoutBoss, CompletlyHide) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_HideOtherEnemiesWithoutBoss::CompletlyHide' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOtherEnemiesWithoutBoss, Rapid) == 0x000001, "Member 'BP_BtlCameraManagerComponent_C_HideOtherEnemiesWithoutBoss::Rapid' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOtherEnemiesWithoutBoss, WeaklyHide) == 0x000002, "Member 'BP_BtlCameraManagerComponent_C_HideOtherEnemiesWithoutBoss::WeaklyHide' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOtherEnemiesWithoutBoss, CallFunc_GetTargets_ReturnValue) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_HideOtherEnemiesWithoutBoss::CallFunc_GetTargets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOtherEnemiesWithoutBoss, CallFunc_GetMainCharacter_ReturnValue) == 0x000018, "Member 'BP_BtlCameraManagerComponent_C_HideOtherEnemiesWithoutBoss::CallFunc_GetMainCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOtherEnemiesWithoutBoss, CallFunc_GetEnemyList_ReturnValue) == 0x000020, "Member 'BP_BtlCameraManagerComponent_C_HideOtherEnemiesWithoutBoss::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.HideOtherPlayers
// 0x0078 (0x0078 - 0x0000)
struct BP_BtlCameraManagerComponent_C_HideOtherPlayers final
{
public:
	bool                                          CompletlyHide;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideExcludesTargets;                               // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      TargetsList;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ABtlActor*>                      CharaList;                                         // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CallFunc_GetAllCharacterList_ReturnValue;          // 0x0038(0x0010)(ReferenceParm)
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABtlActor*>                      CallFunc_GetTargets_ReturnValue;                   // 0x0050(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnemy_ReturnValue;                      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_GetMainCharacter_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_HideOtherPlayers) == 0x000008, "Wrong alignment on BP_BtlCameraManagerComponent_C_HideOtherPlayers");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_HideOtherPlayers) == 0x000078, "Wrong size on BP_BtlCameraManagerComponent_C_HideOtherPlayers");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOtherPlayers, CompletlyHide) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_HideOtherPlayers::CompletlyHide' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOtherPlayers, HideExcludesTargets) == 0x000001, "Member 'BP_BtlCameraManagerComponent_C_HideOtherPlayers::HideExcludesTargets' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOtherPlayers, TargetsList) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_HideOtherPlayers::TargetsList' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOtherPlayers, CharaList) == 0x000018, "Member 'BP_BtlCameraManagerComponent_C_HideOtherPlayers::CharaList' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOtherPlayers, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_BtlCameraManagerComponent_C_HideOtherPlayers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOtherPlayers, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_BtlCameraManagerComponent_C_HideOtherPlayers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOtherPlayers, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_BtlCameraManagerComponent_C_HideOtherPlayers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOtherPlayers, CallFunc_GetAllCharacterList_ReturnValue) == 0x000038, "Member 'BP_BtlCameraManagerComponent_C_HideOtherPlayers::CallFunc_GetAllCharacterList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOtherPlayers, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_BtlCameraManagerComponent_C_HideOtherPlayers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOtherPlayers, CallFunc_GetTargets_ReturnValue) == 0x000050, "Member 'BP_BtlCameraManagerComponent_C_HideOtherPlayers::CallFunc_GetTargets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOtherPlayers, CallFunc_Array_AddUnique_ReturnValue) == 0x000060, "Member 'BP_BtlCameraManagerComponent_C_HideOtherPlayers::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOtherPlayers, CallFunc_IsEnemy_ReturnValue) == 0x000064, "Member 'BP_BtlCameraManagerComponent_C_HideOtherPlayers::CallFunc_IsEnemy_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOtherPlayers, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_BtlCameraManagerComponent_C_HideOtherPlayers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOtherPlayers, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'BP_BtlCameraManagerComponent_C_HideOtherPlayers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOtherPlayers, CallFunc_GetMainCharacter_ReturnValue) == 0x000070, "Member 'BP_BtlCameraManagerComponent_C_HideOtherPlayers::CallFunc_GetMainCharacter_ReturnValue' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.HideInSphereTrace
// 0x0178 (0x0178 - 0x0000)
struct BP_BtlCameraManagerComponent_C_HideInSphereTrace final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Size;                                              // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HideStrong;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideIncludesTargets;                               // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EDrawDebugTrace                               TraceType;                                         // 0x0012(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0020(0x0010)(ConstParm, ReferenceParm)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FHitResult>                     CallFunc_SphereTraceMultiForObjects_OutHits;       // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMultiForObjects_ReturnValue;   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0058(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E3[0x1];                                       // 0x00E3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base;        // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPersona_ReturnValue;                    // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnchantCharacter_OtherCharacter;        // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOtherCharacter_OtherCharacter;          // 0x0173(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_HideInSphereTrace) == 0x000008, "Wrong alignment on BP_BtlCameraManagerComponent_C_HideInSphereTrace");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_HideInSphereTrace) == 0x000178, "Wrong size on BP_BtlCameraManagerComponent_C_HideInSphereTrace");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInSphereTrace, Location) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_HideInSphereTrace::Location' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInSphereTrace, Size) == 0x00000C, "Member 'BP_BtlCameraManagerComponent_C_HideInSphereTrace::Size' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInSphereTrace, HideStrong) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_HideInSphereTrace::HideStrong' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInSphereTrace, HideIncludesTargets) == 0x000011, "Member 'BP_BtlCameraManagerComponent_C_HideInSphereTrace::HideIncludesTargets' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInSphereTrace, TraceType) == 0x000012, "Member 'BP_BtlCameraManagerComponent_C_HideInSphereTrace::TraceType' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInSphereTrace, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_BtlCameraManagerComponent_C_HideInSphereTrace::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInSphereTrace, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_BtlCameraManagerComponent_C_HideInSphereTrace::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInSphereTrace, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_BtlCameraManagerComponent_C_HideInSphereTrace::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInSphereTrace, Temp_object_Variable) == 0x000020, "Member 'BP_BtlCameraManagerComponent_C_HideInSphereTrace::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInSphereTrace, K2Node_MakeArray_Array) == 0x000030, "Member 'BP_BtlCameraManagerComponent_C_HideInSphereTrace::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInSphereTrace, CallFunc_SphereTraceMultiForObjects_OutHits) == 0x000040, "Member 'BP_BtlCameraManagerComponent_C_HideInSphereTrace::CallFunc_SphereTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInSphereTrace, CallFunc_SphereTraceMultiForObjects_ReturnValue) == 0x000050, "Member 'BP_BtlCameraManagerComponent_C_HideInSphereTrace::CallFunc_SphereTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInSphereTrace, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_BtlCameraManagerComponent_C_HideInSphereTrace::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInSphereTrace, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_BtlCameraManagerComponent_C_HideInSphereTrace::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInSphereTrace, CallFunc_Less_IntInt_ReturnValue) == 0x0000E0, "Member 'BP_BtlCameraManagerComponent_C_HideInSphereTrace::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInSphereTrace, CallFunc_BreakHitResult_bBlockingHit) == 0x0000E1, "Member 'BP_BtlCameraManagerComponent_C_HideInSphereTrace::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInSphereTrace, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000E2, "Member 'BP_BtlCameraManagerComponent_C_HideInSphereTrace::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInSphereTrace, CallFunc_BreakHitResult_Time) == 0x0000E4, "Member 'BP_BtlCameraManagerComponent_C_HideInSphereTrace::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInSphereTrace, CallFunc_BreakHitResult_Distance) == 0x0000E8, "Member 'BP_BtlCameraManagerComponent_C_HideInSphereTrace::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInSphereTrace, CallFunc_BreakHitResult_Location) == 0x0000EC, "Member 'BP_BtlCameraManagerComponent_C_HideInSphereTrace::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInSphereTrace, CallFunc_BreakHitResult_ImpactPoint) == 0x0000F8, "Member 'BP_BtlCameraManagerComponent_C_HideInSphereTrace::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInSphereTrace, CallFunc_BreakHitResult_Normal) == 0x000104, "Member 'BP_BtlCameraManagerComponent_C_HideInSphereTrace::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInSphereTrace, CallFunc_BreakHitResult_ImpactNormal) == 0x000110, "Member 'BP_BtlCameraManagerComponent_C_HideInSphereTrace::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInSphereTrace, CallFunc_BreakHitResult_PhysMat) == 0x000120, "Member 'BP_BtlCameraManagerComponent_C_HideInSphereTrace::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInSphereTrace, CallFunc_BreakHitResult_HitActor) == 0x000128, "Member 'BP_BtlCameraManagerComponent_C_HideInSphereTrace::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInSphereTrace, CallFunc_BreakHitResult_HitComponent) == 0x000130, "Member 'BP_BtlCameraManagerComponent_C_HideInSphereTrace::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInSphereTrace, CallFunc_BreakHitResult_HitBoneName) == 0x000138, "Member 'BP_BtlCameraManagerComponent_C_HideInSphereTrace::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInSphereTrace, CallFunc_BreakHitResult_HitItem) == 0x000140, "Member 'BP_BtlCameraManagerComponent_C_HideInSphereTrace::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInSphereTrace, CallFunc_BreakHitResult_ElementIndex) == 0x000144, "Member 'BP_BtlCameraManagerComponent_C_HideInSphereTrace::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInSphereTrace, CallFunc_BreakHitResult_FaceIndex) == 0x000148, "Member 'BP_BtlCameraManagerComponent_C_HideInSphereTrace::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInSphereTrace, CallFunc_BreakHitResult_TraceStart) == 0x00014C, "Member 'BP_BtlCameraManagerComponent_C_HideInSphereTrace::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInSphereTrace, CallFunc_BreakHitResult_TraceEnd) == 0x000158, "Member 'BP_BtlCameraManagerComponent_C_HideInSphereTrace::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInSphereTrace, K2Node_DynamicCast_AsBP_Btl_Character_Base) == 0x000168, "Member 'BP_BtlCameraManagerComponent_C_HideInSphereTrace::K2Node_DynamicCast_AsBP_Btl_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInSphereTrace, K2Node_DynamicCast_bSuccess) == 0x000170, "Member 'BP_BtlCameraManagerComponent_C_HideInSphereTrace::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInSphereTrace, CallFunc_IsPersona_ReturnValue) == 0x000171, "Member 'BP_BtlCameraManagerComponent_C_HideInSphereTrace::CallFunc_IsPersona_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInSphereTrace, CallFunc_IsEnchantCharacter_OtherCharacter) == 0x000172, "Member 'BP_BtlCameraManagerComponent_C_HideInSphereTrace::CallFunc_IsEnchantCharacter_OtherCharacter' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideInSphereTrace, CallFunc_IsOtherCharacter_OtherCharacter) == 0x000173, "Member 'BP_BtlCameraManagerComponent_C_HideInSphereTrace::CallFunc_IsOtherCharacter_OtherCharacter' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.PlaySummonCamera
// 0x0040 (0x0040 - 0x0000)
struct BP_BtlCameraManagerComponent_C_PlaySummonCamera final
{
public:
	class UBP_BtlTargetManager_C*                 TargetMG;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlTargetsManagerComponent*            TargetManager;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform;               // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_PlaySummonCamera) == 0x000010, "Wrong alignment on BP_BtlCameraManagerComponent_C_PlaySummonCamera");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_PlaySummonCamera) == 0x000040, "Wrong size on BP_BtlCameraManagerComponent_C_PlaySummonCamera");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlaySummonCamera, TargetMG) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_PlaySummonCamera::TargetMG' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlaySummonCamera, TargetManager) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_PlaySummonCamera::TargetManager' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlaySummonCamera, CallFunc_Play_Calc_Camera_Transform) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_PlaySummonCamera::CallFunc_Play_Calc_Camera_Transform' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.PlayStandbyCamera
// 0x0040 (0x0040 - 0x0000)
struct BP_BtlCameraManagerComponent_C_PlayStandbyCamera final
{
public:
	class ABP_BtlCharacterBase_C*                 CallFunc_GetMain_Character;                        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnemy_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform;               // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_PlayStandbyCamera) == 0x000010, "Wrong alignment on BP_BtlCameraManagerComponent_C_PlayStandbyCamera");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_PlayStandbyCamera) == 0x000040, "Wrong size on BP_BtlCameraManagerComponent_C_PlayStandbyCamera");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayStandbyCamera, CallFunc_GetMain_Character) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_PlayStandbyCamera::CallFunc_GetMain_Character' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayStandbyCamera, CallFunc_IsEnemy_ReturnValue) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_PlayStandbyCamera::CallFunc_IsEnemy_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayStandbyCamera, CallFunc_Play_Calc_Camera_Transform) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_PlayStandbyCamera::CallFunc_Play_Calc_Camera_Transform' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.PlayAlloutDamageCamera
// 0x0040 (0x0040 - 0x0000)
struct BP_BtlCameraManagerComponent_C_PlayAlloutDamageCamera final
{
public:
	class UBP_BtlTargetManager_C*                 Targets;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform;               // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_PlayAlloutDamageCamera) == 0x000010, "Wrong alignment on BP_BtlCameraManagerComponent_C_PlayAlloutDamageCamera");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_PlayAlloutDamageCamera) == 0x000040, "Wrong size on BP_BtlCameraManagerComponent_C_PlayAlloutDamageCamera");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAlloutDamageCamera, Targets) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_PlayAlloutDamageCamera::Targets' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAlloutDamageCamera, CallFunc_Play_Calc_Camera_Transform) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_PlayAlloutDamageCamera::CallFunc_Play_Calc_Camera_Transform' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.PlayHoldupCamera
// 0x0040 (0x0040 - 0x0000)
struct BP_BtlCameraManagerComponent_C_PlayHoldupCamera final
{
public:
	class UBP_BtlTargetManager_C*                 Targets;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform;               // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_PlayHoldupCamera) == 0x000010, "Wrong alignment on BP_BtlCameraManagerComponent_C_PlayHoldupCamera");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_PlayHoldupCamera) == 0x000040, "Wrong size on BP_BtlCameraManagerComponent_C_PlayHoldupCamera");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayHoldupCamera, Targets) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_PlayHoldupCamera::Targets' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayHoldupCamera, CallFunc_Play_Calc_Camera_Transform) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_PlayHoldupCamera::CallFunc_Play_Calc_Camera_Transform' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.CheckUseAllTargetsCam
// 0x0020 (0x0020 - 0x0000)
struct BP_BtlCameraManagerComponent_C_CheckUseAllTargetsCam final
{
public:
	bool                                          UseAllTargetsSkill;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Work;                                              // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              Enchanter;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingAllTargetSkill_ReturnValue;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_GetMainCharacter_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_CheckUseAllTargetsCam) == 0x000008, "Wrong alignment on BP_BtlCameraManagerComponent_C_CheckUseAllTargetsCam");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_CheckUseAllTargetsCam) == 0x000020, "Wrong size on BP_BtlCameraManagerComponent_C_CheckUseAllTargetsCam");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CheckUseAllTargetsCam, UseAllTargetsSkill) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_CheckUseAllTargetsCam::UseAllTargetsSkill' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CheckUseAllTargetsCam, Work) == 0x000001, "Member 'BP_BtlCameraManagerComponent_C_CheckUseAllTargetsCam::Work' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CheckUseAllTargetsCam, Enchanter) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_CheckUseAllTargetsCam::Enchanter' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CheckUseAllTargetsCam, CallFunc_IsUsingAllTargetSkill_ReturnValue) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_CheckUseAllTargetsCam::CallFunc_IsUsingAllTargetSkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CheckUseAllTargetsCam, CallFunc_GetMainCharacter_ReturnValue) == 0x000018, "Member 'BP_BtlCameraManagerComponent_C_CheckUseAllTargetsCam::CallFunc_GetMainCharacter_ReturnValue' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.PlayItemUsingCamera
// 0x0040 (0x0040 - 0x0000)
struct BP_BtlCameraManagerComponent_C_PlayItemUsingCamera final
{
public:
	class UBtlTargetsManagerComponent*            Btl_Targets;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform;               // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_PlayItemUsingCamera) == 0x000010, "Wrong alignment on BP_BtlCameraManagerComponent_C_PlayItemUsingCamera");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_PlayItemUsingCamera) == 0x000040, "Wrong size on BP_BtlCameraManagerComponent_C_PlayItemUsingCamera");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayItemUsingCamera, Btl_Targets) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_PlayItemUsingCamera::Btl_Targets' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayItemUsingCamera, CallFunc_Play_Calc_Camera_Transform) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_PlayItemUsingCamera::CallFunc_Play_Calc_Camera_Transform' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.PlayEnemyEscapeCam
// 0x0030 (0x0030 - 0x0000)
struct BP_BtlCameraManagerComponent_C_PlayEnemyEscapeCam final
{
public:
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform;               // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_PlayEnemyEscapeCam) == 0x000010, "Wrong alignment on BP_BtlCameraManagerComponent_C_PlayEnemyEscapeCam");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_PlayEnemyEscapeCam) == 0x000030, "Wrong size on BP_BtlCameraManagerComponent_C_PlayEnemyEscapeCam");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayEnemyEscapeCam, CallFunc_Play_Calc_Camera_Transform) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_PlayEnemyEscapeCam::CallFunc_Play_Calc_Camera_Transform' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.PlayPlayerSelectCamera
// 0x0030 (0x0030 - 0x0000)
struct BP_BtlCameraManagerComponent_C_PlayPlayerSelectCamera final
{
public:
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform;               // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_PlayPlayerSelectCamera) == 0x000010, "Wrong alignment on BP_BtlCameraManagerComponent_C_PlayPlayerSelectCamera");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_PlayPlayerSelectCamera) == 0x000030, "Wrong size on BP_BtlCameraManagerComponent_C_PlayPlayerSelectCamera");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayPlayerSelectCamera, CallFunc_Play_Calc_Camera_Transform) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_PlayPlayerSelectCamera::CallFunc_Play_Calc_Camera_Transform' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.PlayPlayerAllSelectCamera
// 0x0090 (0x0090 - 0x0000)
struct BP_BtlCameraManagerComponent_C_PlayPlayerAllSelectCamera final
{
public:
	bool                                          EnemyHide;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0xF];                                        // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform;               // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform_1;             // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SearchBossCamera_Found;                   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckTargetsIncludePlayerAndEnemy_Result; // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckLineFormation_ReturnValue;           // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_PlayPlayerAllSelectCamera) == 0x000010, "Wrong alignment on BP_BtlCameraManagerComponent_C_PlayPlayerAllSelectCamera");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_PlayPlayerAllSelectCamera) == 0x000090, "Wrong size on BP_BtlCameraManagerComponent_C_PlayPlayerAllSelectCamera");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayPlayerAllSelectCamera, EnemyHide) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_PlayPlayerAllSelectCamera::EnemyHide' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayPlayerAllSelectCamera, CallFunc_Play_Calc_Camera_Transform) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_PlayPlayerAllSelectCamera::CallFunc_Play_Calc_Camera_Transform' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayPlayerAllSelectCamera, CallFunc_MakeLiteralName_ReturnValue) == 0x000040, "Member 'BP_BtlCameraManagerComponent_C_PlayPlayerAllSelectCamera::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayPlayerAllSelectCamera, CallFunc_Play_Calc_Camera_Transform_1) == 0x000050, "Member 'BP_BtlCameraManagerComponent_C_PlayPlayerAllSelectCamera::CallFunc_Play_Calc_Camera_Transform_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayPlayerAllSelectCamera, CallFunc_SearchBossCamera_Found) == 0x000080, "Member 'BP_BtlCameraManagerComponent_C_PlayPlayerAllSelectCamera::CallFunc_SearchBossCamera_Found' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayPlayerAllSelectCamera, CallFunc_CheckTargetsIncludePlayerAndEnemy_Result) == 0x000081, "Member 'BP_BtlCameraManagerComponent_C_PlayPlayerAllSelectCamera::CallFunc_CheckTargetsIncludePlayerAndEnemy_Result' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayPlayerAllSelectCamera, CallFunc_CheckLineFormation_ReturnValue) == 0x000082, "Member 'BP_BtlCameraManagerComponent_C_PlayPlayerAllSelectCamera::CallFunc_CheckLineFormation_ReturnValue' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.Show Hidden Character
// 0x0038 (0x0038 - 0x0000)
struct BP_BtlCameraManagerComponent_C_Show_Hidden_Character final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CallFunc_GetAllCharacterList_ReturnValue;          // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_Show_Hidden_Character) == 0x000008, "Wrong alignment on BP_BtlCameraManagerComponent_C_Show_Hidden_Character");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_Show_Hidden_Character) == 0x000038, "Wrong size on BP_BtlCameraManagerComponent_C_Show_Hidden_Character");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Show_Hidden_Character, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_Show_Hidden_Character::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Show_Hidden_Character, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_BtlCameraManagerComponent_C_Show_Hidden_Character::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Show_Hidden_Character, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_Show_Hidden_Character::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Show_Hidden_Character, CallFunc_GetAllCharacterList_ReturnValue) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_Show_Hidden_Character::CallFunc_GetAllCharacterList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Show_Hidden_Character, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_BtlCameraManagerComponent_C_Show_Hidden_Character::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Show_Hidden_Character, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_BtlCameraManagerComponent_C_Show_Hidden_Character::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Show_Hidden_Character, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_BtlCameraManagerComponent_C_Show_Hidden_Character::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Show_Hidden_Character, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_BtlCameraManagerComponent_C_Show_Hidden_Character::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.GetCharaCameraRoot
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlCameraManagerComponent_C_GetCharaCameraRoot final
{
public:
	class AActor*                                 CharaCameraRoot_0;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_GetCharaCameraRoot) == 0x000008, "Wrong alignment on BP_BtlCameraManagerComponent_C_GetCharaCameraRoot");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_GetCharaCameraRoot) == 0x000008, "Wrong size on BP_BtlCameraManagerComponent_C_GetCharaCameraRoot");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_GetCharaCameraRoot, CharaCameraRoot_0) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_GetCharaCameraRoot::CharaCameraRoot_0' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.CheckBackshotDisableTargets
// 0x0038 (0x0038 - 0x0000)
struct BP_BtlCameraManagerComponent_C_CheckBackshotDisableTargets final
{
public:
	bool                                          Disable;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          DisableBackshot;                                   // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABtlActor*>                      CallFunc_GetTargets_ReturnValue;                   // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBackshotDisable_ReturnValue;         // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_CheckBackshotDisableTargets) == 0x000008, "Wrong alignment on BP_BtlCameraManagerComponent_C_CheckBackshotDisableTargets");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_CheckBackshotDisableTargets) == 0x000038, "Wrong size on BP_BtlCameraManagerComponent_C_CheckBackshotDisableTargets");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CheckBackshotDisableTargets, Disable) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_CheckBackshotDisableTargets::Disable' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CheckBackshotDisableTargets, DisableBackshot) == 0x000001, "Member 'BP_BtlCameraManagerComponent_C_CheckBackshotDisableTargets::DisableBackshot' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CheckBackshotDisableTargets, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_BtlCameraManagerComponent_C_CheckBackshotDisableTargets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CheckBackshotDisableTargets, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_CheckBackshotDisableTargets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CheckBackshotDisableTargets, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_BtlCameraManagerComponent_C_CheckBackshotDisableTargets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CheckBackshotDisableTargets, CallFunc_GetTargets_ReturnValue) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_CheckBackshotDisableTargets::CallFunc_GetTargets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CheckBackshotDisableTargets, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_BtlCameraManagerComponent_C_CheckBackshotDisableTargets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CheckBackshotDisableTargets, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_BtlCameraManagerComponent_C_CheckBackshotDisableTargets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CheckBackshotDisableTargets, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_BtlCameraManagerComponent_C_CheckBackshotDisableTargets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CheckBackshotDisableTargets, CallFunc_CheckBackshotDisable_ReturnValue) == 0x000031, "Member 'BP_BtlCameraManagerComponent_C_CheckBackshotDisableTargets::CallFunc_CheckBackshotDisable_ReturnValue' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.HideOthersInPerformanceLine
// 0x0078 (0x0078 - 0x0000)
struct BP_BtlCameraManagerComponent_C_HideOthersInPerformanceLine final
{
public:
	class UBP_BtlTargetManager_C*                 TargetManager;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HideStrong;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideRapid;                                         // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CallFunc_GetTargets_ReturnValue;                   // 0x0010(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_GetMainCharacterCylinder_Bottom_Center;   // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMainCharacterCylinder_Radius;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMainCharacterCylinder_Height;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMainCharacterCylinder_Cylinder_Center; // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeCylinder_Bottom_Center;               // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeCylinder_Radius;                      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeCylinder_Height;                      // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_HideOthersInPerformanceLine) == 0x000008, "Wrong alignment on BP_BtlCameraManagerComponent_C_HideOthersInPerformanceLine");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_HideOthersInPerformanceLine) == 0x000078, "Wrong size on BP_BtlCameraManagerComponent_C_HideOthersInPerformanceLine");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOthersInPerformanceLine, TargetManager) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_HideOthersInPerformanceLine::TargetManager' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOthersInPerformanceLine, HideStrong) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_HideOthersInPerformanceLine::HideStrong' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOthersInPerformanceLine, HideRapid) == 0x000009, "Member 'BP_BtlCameraManagerComponent_C_HideOthersInPerformanceLine::HideRapid' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOthersInPerformanceLine, CallFunc_GetTargets_ReturnValue) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_HideOthersInPerformanceLine::CallFunc_GetTargets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOthersInPerformanceLine, CallFunc_GetMainCharacterCylinder_Bottom_Center) == 0x000020, "Member 'BP_BtlCameraManagerComponent_C_HideOthersInPerformanceLine::CallFunc_GetMainCharacterCylinder_Bottom_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOthersInPerformanceLine, CallFunc_GetMainCharacterCylinder_Radius) == 0x00002C, "Member 'BP_BtlCameraManagerComponent_C_HideOthersInPerformanceLine::CallFunc_GetMainCharacterCylinder_Radius' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOthersInPerformanceLine, CallFunc_GetMainCharacterCylinder_Height) == 0x000030, "Member 'BP_BtlCameraManagerComponent_C_HideOthersInPerformanceLine::CallFunc_GetMainCharacterCylinder_Height' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOthersInPerformanceLine, CallFunc_GetMainCharacterCylinder_Cylinder_Center) == 0x000034, "Member 'BP_BtlCameraManagerComponent_C_HideOthersInPerformanceLine::CallFunc_GetMainCharacterCylinder_Cylinder_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOthersInPerformanceLine, CallFunc_MakeCylinder_Bottom_Center) == 0x000040, "Member 'BP_BtlCameraManagerComponent_C_HideOthersInPerformanceLine::CallFunc_MakeCylinder_Bottom_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOthersInPerformanceLine, CallFunc_MakeCylinder_Radius) == 0x00004C, "Member 'BP_BtlCameraManagerComponent_C_HideOthersInPerformanceLine::CallFunc_MakeCylinder_Radius' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOthersInPerformanceLine, CallFunc_MakeCylinder_Height) == 0x000050, "Member 'BP_BtlCameraManagerComponent_C_HideOthersInPerformanceLine::CallFunc_MakeCylinder_Height' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOthersInPerformanceLine, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_BtlCameraManagerComponent_C_HideOthersInPerformanceLine::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOthersInPerformanceLine, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000058, "Member 'BP_BtlCameraManagerComponent_C_HideOthersInPerformanceLine::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOthersInPerformanceLine, CallFunc_MakeVector_ReturnValue) == 0x00005C, "Member 'BP_BtlCameraManagerComponent_C_HideOthersInPerformanceLine::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideOthersInPerformanceLine, CallFunc_Add_VectorVector_ReturnValue) == 0x000068, "Member 'BP_BtlCameraManagerComponent_C_HideOthersInPerformanceLine::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.CheckAttackShortRange
// 0x0028 (0x0028 - 0x0000)
struct BP_BtlCameraManagerComponent_C_CheckAttackShortRange final
{
public:
	class UBtlTargetsManagerComponent*            TargetManager;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShortRange;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NewLocalVar_0;                                     // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_GetMainCharacter_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckAttackWithMove_AttackWithMove;       // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_CheckAttackShortRange) == 0x000008, "Wrong alignment on BP_BtlCameraManagerComponent_C_CheckAttackShortRange");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_CheckAttackShortRange) == 0x000028, "Wrong size on BP_BtlCameraManagerComponent_C_CheckAttackShortRange");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CheckAttackShortRange, TargetManager) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_CheckAttackShortRange::TargetManager' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CheckAttackShortRange, ShortRange) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_CheckAttackShortRange::ShortRange' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CheckAttackShortRange, NewLocalVar_0) == 0x000009, "Member 'BP_BtlCameraManagerComponent_C_CheckAttackShortRange::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CheckAttackShortRange, CallFunc_GetMainCharacter_ReturnValue) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_CheckAttackShortRange::CallFunc_GetMainCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CheckAttackShortRange, K2Node_DynamicCast_AsBP_Btl_Character_Base) == 0x000018, "Member 'BP_BtlCameraManagerComponent_C_CheckAttackShortRange::K2Node_DynamicCast_AsBP_Btl_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CheckAttackShortRange, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_BtlCameraManagerComponent_C_CheckAttackShortRange::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CheckAttackShortRange, CallFunc_CheckAttackWithMove_AttackWithMove) == 0x000021, "Member 'BP_BtlCameraManagerComponent_C_CheckAttackShortRange::CallFunc_CheckAttackWithMove_AttackWithMove' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.Check Target Is Enemy
// 0x0040 (0x0040 - 0x0000)
struct BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy final
{
public:
	class UBtlTargetsManagerComponent*            Targets;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enemy;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CallFunc_GetTargets_ReturnValue;                   // 0x0010(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnemy_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy) == 0x000008, "Wrong alignment on BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy) == 0x000040, "Wrong size on BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy, Targets) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy::Targets' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy, Enemy) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy::Enemy' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy, Result) == 0x000009, "Member 'BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy::Result' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy, CallFunc_GetTargets_ReturnValue) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy::CallFunc_GetTargets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy, CallFunc_IsEnemy_ReturnValue) == 0x000030, "Member 'BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy::CallFunc_IsEnemy_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.Check Target Is Enemy Boss
// 0x0040 (0x0040 - 0x0000)
struct BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy_Boss final
{
public:
	class UBtlTargetsManagerComponent*            TargetsManager;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enemy;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CallFunc_GetTargets_ReturnValue;                   // 0x0010(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBoss_ReturnValue;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy_Boss) == 0x000008, "Wrong alignment on BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy_Boss");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy_Boss) == 0x000040, "Wrong size on BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy_Boss");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy_Boss, TargetsManager) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy_Boss::TargetsManager' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy_Boss, Enemy) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy_Boss::Enemy' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy_Boss, Result) == 0x000009, "Member 'BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy_Boss::Result' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy_Boss, CallFunc_GetTargets_ReturnValue) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy_Boss::CallFunc_GetTargets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy_Boss, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy_Boss::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy_Boss, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy_Boss::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy_Boss, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy_Boss::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy_Boss, CallFunc_IsBoss_ReturnValue) == 0x000030, "Member 'BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy_Boss::CallFunc_IsBoss_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy_Boss, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy_Boss::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy_Boss, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy_Boss::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy_Boss, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_BtlCameraManagerComponent_C_Check_Target_Is_Enemy_Boss::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.HideAllEnemies
// 0x0038 (0x0038 - 0x0000)
struct BP_BtlCameraManagerComponent_C_HideAllEnemies final
{
public:
	bool                                          CompletlyHide;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Rapid;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          WeaklyHide;                                        // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABtlActor*>                      CallFunc_GetEnemyList_ReturnValue;                 // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_HideAllEnemies) == 0x000008, "Wrong alignment on BP_BtlCameraManagerComponent_C_HideAllEnemies");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_HideAllEnemies) == 0x000038, "Wrong size on BP_BtlCameraManagerComponent_C_HideAllEnemies");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideAllEnemies, CompletlyHide) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_HideAllEnemies::CompletlyHide' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideAllEnemies, Rapid) == 0x000001, "Member 'BP_BtlCameraManagerComponent_C_HideAllEnemies::Rapid' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideAllEnemies, WeaklyHide) == 0x000002, "Member 'BP_BtlCameraManagerComponent_C_HideAllEnemies::WeaklyHide' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideAllEnemies, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_BtlCameraManagerComponent_C_HideAllEnemies::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideAllEnemies, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_HideAllEnemies::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideAllEnemies, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_BtlCameraManagerComponent_C_HideAllEnemies::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideAllEnemies, CallFunc_GetEnemyList_ReturnValue) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_HideAllEnemies::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideAllEnemies, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_BtlCameraManagerComponent_C_HideAllEnemies::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideAllEnemies, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_BtlCameraManagerComponent_C_HideAllEnemies::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideAllEnemies, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_BtlCameraManagerComponent_C_HideAllEnemies::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.HidePlayerInCameraEnchanterCircle
// 0x00A0 (0x00A0 - 0x0000)
struct BP_BtlCameraManagerComponent_C_HidePlayerInCameraEnchanterCircle final
{
public:
	struct FTransform                             CameraTrans;                                       // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class UBtlTargetsManagerComponent*            BtlTargets;                                        // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_GetMainCharacter_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABtlActor*>                      K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_MakeCylinder_Bottom_Center;               // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeCylinder_Radius;                      // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeCylinder_Height;                      // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_HidePlayerInCameraEnchanterCircle) == 0x000010, "Wrong alignment on BP_BtlCameraManagerComponent_C_HidePlayerInCameraEnchanterCircle");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_HidePlayerInCameraEnchanterCircle) == 0x0000A0, "Wrong size on BP_BtlCameraManagerComponent_C_HidePlayerInCameraEnchanterCircle");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HidePlayerInCameraEnchanterCircle, CameraTrans) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_HidePlayerInCameraEnchanterCircle::CameraTrans' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HidePlayerInCameraEnchanterCircle, BtlTargets) == 0x000030, "Member 'BP_BtlCameraManagerComponent_C_HidePlayerInCameraEnchanterCircle::BtlTargets' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HidePlayerInCameraEnchanterCircle, CallFunc_BreakTransform_Location) == 0x000038, "Member 'BP_BtlCameraManagerComponent_C_HidePlayerInCameraEnchanterCircle::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HidePlayerInCameraEnchanterCircle, CallFunc_BreakTransform_Rotation) == 0x000044, "Member 'BP_BtlCameraManagerComponent_C_HidePlayerInCameraEnchanterCircle::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HidePlayerInCameraEnchanterCircle, CallFunc_BreakTransform_Scale) == 0x000050, "Member 'BP_BtlCameraManagerComponent_C_HidePlayerInCameraEnchanterCircle::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HidePlayerInCameraEnchanterCircle, CallFunc_GetMainCharacter_ReturnValue) == 0x000060, "Member 'BP_BtlCameraManagerComponent_C_HidePlayerInCameraEnchanterCircle::CallFunc_GetMainCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HidePlayerInCameraEnchanterCircle, K2Node_MakeArray_Array) == 0x000068, "Member 'BP_BtlCameraManagerComponent_C_HidePlayerInCameraEnchanterCircle::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HidePlayerInCameraEnchanterCircle, CallFunc_MakeCylinder_Bottom_Center) == 0x000078, "Member 'BP_BtlCameraManagerComponent_C_HidePlayerInCameraEnchanterCircle::CallFunc_MakeCylinder_Bottom_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HidePlayerInCameraEnchanterCircle, CallFunc_MakeCylinder_Radius) == 0x000084, "Member 'BP_BtlCameraManagerComponent_C_HidePlayerInCameraEnchanterCircle::CallFunc_MakeCylinder_Radius' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HidePlayerInCameraEnchanterCircle, CallFunc_MakeCylinder_Height) == 0x000088, "Member 'BP_BtlCameraManagerComponent_C_HidePlayerInCameraEnchanterCircle::CallFunc_MakeCylinder_Height' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HidePlayerInCameraEnchanterCircle, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00008C, "Member 'BP_BtlCameraManagerComponent_C_HidePlayerInCameraEnchanterCircle::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HidePlayerInCameraEnchanterCircle, CallFunc_VSize_ReturnValue) == 0x000098, "Member 'BP_BtlCameraManagerComponent_C_HidePlayerInCameraEnchanterCircle::CallFunc_VSize_ReturnValue' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.HideAllPlayers
// 0x0048 (0x0048 - 0x0000)
struct BP_BtlCameraManagerComponent_C_HideAllPlayers final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CallFunc_GetPlayerList_ReturnValue;                // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlHumanBase_C*                     K2Node_DynamicCast_AsBP_Btl_Human_Base;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_HideAllPlayers) == 0x000008, "Wrong alignment on BP_BtlCameraManagerComponent_C_HideAllPlayers");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_HideAllPlayers) == 0x000048, "Wrong size on BP_BtlCameraManagerComponent_C_HideAllPlayers");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideAllPlayers, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_HideAllPlayers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideAllPlayers, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_BtlCameraManagerComponent_C_HideAllPlayers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideAllPlayers, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_HideAllPlayers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideAllPlayers, CallFunc_GetPlayerList_ReturnValue) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_HideAllPlayers::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideAllPlayers, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_BtlCameraManagerComponent_C_HideAllPlayers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideAllPlayers, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_BtlCameraManagerComponent_C_HideAllPlayers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideAllPlayers, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_BtlCameraManagerComponent_C_HideAllPlayers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideAllPlayers, K2Node_DynamicCast_AsBP_Btl_Human_Base) == 0x000038, "Member 'BP_BtlCameraManagerComponent_C_HideAllPlayers::K2Node_DynamicCast_AsBP_Btl_Human_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideAllPlayers, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_BtlCameraManagerComponent_C_HideAllPlayers::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.PlayPlayerWholeCamera
// 0x0050 (0x0050 - 0x0000)
struct BP_BtlCameraManagerComponent_C_PlayPlayerWholeCamera final
{
public:
	TArray<class ABtlActor*>                      ListWork;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          EnemyHide;                                         // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0xF];                                       // 0x0011(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform;               // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_PlayPlayerWholeCamera) == 0x000010, "Wrong alignment on BP_BtlCameraManagerComponent_C_PlayPlayerWholeCamera");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_PlayPlayerWholeCamera) == 0x000050, "Wrong size on BP_BtlCameraManagerComponent_C_PlayPlayerWholeCamera");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayPlayerWholeCamera, ListWork) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_PlayPlayerWholeCamera::ListWork' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayPlayerWholeCamera, EnemyHide) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_PlayPlayerWholeCamera::EnemyHide' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayPlayerWholeCamera, CallFunc_Play_Calc_Camera_Transform) == 0x000020, "Member 'BP_BtlCameraManagerComponent_C_PlayPlayerWholeCamera::CallFunc_Play_Calc_Camera_Transform' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.PlayPlayerEscapeCamera
// 0x0090 (0x0090 - 0x0000)
struct BP_BtlCameraManagerComponent_C_PlayPlayerEscapeCamera final
{
public:
	TArray<class ABtlActor*>                      ListWork;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          EnemyHide;                                         // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABtlActor*                              CallFunc_GetAction_ReturnValue;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABtlActor*>                      CallFunc_GetAllCharacterList_ReturnValue;          // 0x0028(0x0010)(ReferenceParm)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform;               // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPossibleAITarget_ReturnValue;           // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_PlayPlayerEscapeCamera) == 0x000010, "Wrong alignment on BP_BtlCameraManagerComponent_C_PlayPlayerEscapeCamera");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_PlayPlayerEscapeCamera) == 0x000090, "Wrong size on BP_BtlCameraManagerComponent_C_PlayPlayerEscapeCamera");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayPlayerEscapeCamera, ListWork) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_PlayPlayerEscapeCamera::ListWork' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayPlayerEscapeCamera, EnemyHide) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_PlayPlayerEscapeCamera::EnemyHide' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayPlayerEscapeCamera, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_BtlCameraManagerComponent_C_PlayPlayerEscapeCamera::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayPlayerEscapeCamera, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_BtlCameraManagerComponent_C_PlayPlayerEscapeCamera::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayPlayerEscapeCamera, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_BtlCameraManagerComponent_C_PlayPlayerEscapeCamera::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayPlayerEscapeCamera, CallFunc_GetAction_ReturnValue) == 0x000020, "Member 'BP_BtlCameraManagerComponent_C_PlayPlayerEscapeCamera::CallFunc_GetAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayPlayerEscapeCamera, CallFunc_GetAllCharacterList_ReturnValue) == 0x000028, "Member 'BP_BtlCameraManagerComponent_C_PlayPlayerEscapeCamera::CallFunc_GetAllCharacterList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayPlayerEscapeCamera, CallFunc_Play_Calc_Camera_Transform) == 0x000040, "Member 'BP_BtlCameraManagerComponent_C_PlayPlayerEscapeCamera::CallFunc_Play_Calc_Camera_Transform' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayPlayerEscapeCamera, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_BtlCameraManagerComponent_C_PlayPlayerEscapeCamera::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayPlayerEscapeCamera, CallFunc_Array_Add_ReturnValue) == 0x000078, "Member 'BP_BtlCameraManagerComponent_C_PlayPlayerEscapeCamera::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayPlayerEscapeCamera, CallFunc_IsPossibleAITarget_ReturnValue) == 0x00007C, "Member 'BP_BtlCameraManagerComponent_C_PlayPlayerEscapeCamera::CallFunc_IsPossibleAITarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayPlayerEscapeCamera, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BP_BtlCameraManagerComponent_C_PlayPlayerEscapeCamera::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayPlayerEscapeCamera, CallFunc_Less_IntInt_ReturnValue) == 0x000084, "Member 'BP_BtlCameraManagerComponent_C_PlayPlayerEscapeCamera::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.PlayAttackCharaCamera
// 0x00E0 (0x00E0 - 0x0000)
struct BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera final
{
public:
	class UBP_BtlTargetManager_C*                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Cut;                                               // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 MainChara;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UBP_BtlTargetManager_C*                 TargetManager;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABtlActor*                              CallFunc_GetMainCharacter_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCharacterID_ReturnValue;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckAttackWithMove_AttackWithMove;       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform;               // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera) == 0x000010, "Wrong alignment on BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera) == 0x0000E0, "Wrong size on BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera, Target) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera::Target' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera, Cut) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera::Cut' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera, MainChara) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera::MainChara' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera, TargetManager) == 0x000018, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera::TargetManager' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera, CallFunc_Conv_IntToString_ReturnValue) == 0x000020, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera, CallFunc_GetMainCharacter_ReturnValue) == 0x000030, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera::CallFunc_GetMainCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera, K2Node_DynamicCast_AsBP_Btl_Character_Base) == 0x000038, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera::K2Node_DynamicCast_AsBP_Btl_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera, CallFunc_MakeLiteralString_ReturnValue) == 0x000048, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera, CallFunc_GetCharacterID_ReturnValue) == 0x000058, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera::CallFunc_GetCharacterID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000060, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera, CallFunc_Concat_StrStr_ReturnValue) == 0x000070, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000080, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera, CallFunc_CheckAttackWithMove_AttackWithMove) == 0x000090, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera::CallFunc_CheckAttackWithMove_AttackWithMove' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000098, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera, CallFunc_Conv_StringToName_ReturnValue) == 0x0000A8, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera, CallFunc_Play_Calc_Camera_Transform) == 0x0000B0, "Member 'BP_BtlCameraManagerComponent_C_PlayAttackCharaCamera::CallFunc_Play_Calc_Camera_Transform' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.RequestRelocationWhenCamChange
// 0x0018 (0x0018 - 0x0000)
struct BP_BtlCameraManagerComponent_C_RequestRelocationWhenCamChange final
{
public:
	class UBtlCoreComponent*                      BtlCore;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABtlActor*                              MainCharacter_0;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TurntableForceReset;                               // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_RequestRelocationWhenCamChange) == 0x000008, "Wrong alignment on BP_BtlCameraManagerComponent_C_RequestRelocationWhenCamChange");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_RequestRelocationWhenCamChange) == 0x000018, "Wrong size on BP_BtlCameraManagerComponent_C_RequestRelocationWhenCamChange");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_RequestRelocationWhenCamChange, BtlCore) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_RequestRelocationWhenCamChange::BtlCore' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_RequestRelocationWhenCamChange, MainCharacter_0) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_RequestRelocationWhenCamChange::MainCharacter_0' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_RequestRelocationWhenCamChange, TurntableForceReset) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_RequestRelocationWhenCamChange::TurntableForceReset' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.SaveDefaultParam
// 0x0010 (0x0010 - 0x0000)
struct BP_BtlCameraManagerComponent_C_SaveDefaultParam final
{
public:
	class UCineCameraComponent*                   CallFunc_GetCineCameraComponent_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCineCameraComponent*                   CallFunc_GetCineCameraComponent_ReturnValue_1;     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_SaveDefaultParam) == 0x000008, "Wrong alignment on BP_BtlCameraManagerComponent_C_SaveDefaultParam");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_SaveDefaultParam) == 0x000010, "Wrong size on BP_BtlCameraManagerComponent_C_SaveDefaultParam");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_SaveDefaultParam, CallFunc_GetCineCameraComponent_ReturnValue) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_SaveDefaultParam::CallFunc_GetCineCameraComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_SaveDefaultParam, CallFunc_GetCineCameraComponent_ReturnValue_1) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_SaveDefaultParam::CallFunc_GetCineCameraComponent_ReturnValue_1' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.RestoreToDefaultParam
// 0x0010 (0x0010 - 0x0000)
struct BP_BtlCameraManagerComponent_C_RestoreToDefaultParam final
{
public:
	class UCineCameraComponent*                   CallFunc_GetCineCameraComponent_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCineCameraComponent*                   CallFunc_GetCineCameraComponent_ReturnValue_1;     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_RestoreToDefaultParam) == 0x000008, "Wrong alignment on BP_BtlCameraManagerComponent_C_RestoreToDefaultParam");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_RestoreToDefaultParam) == 0x000010, "Wrong size on BP_BtlCameraManagerComponent_C_RestoreToDefaultParam");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_RestoreToDefaultParam, CallFunc_GetCineCameraComponent_ReturnValue) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_RestoreToDefaultParam::CallFunc_GetCineCameraComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_RestoreToDefaultParam, CallFunc_GetCineCameraComponent_ReturnValue_1) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_RestoreToDefaultParam::CallFunc_GetCineCameraComponent_ReturnValue_1' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.SyncEventCamToSystemCam
// 0x0180 (0x0180 - 0x0000)
struct BP_BtlCameraManagerComponent_C_SyncEventCamToSystemCam final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class ACineCameraActor*                       K2Node_DynamicCast_AsCine________;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x004C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult_1;    // 0x00D8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue_1;       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACineCameraActor*                       K2Node_DynamicCast_AsCine_________1;               // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_SyncEventCamToSystemCam) == 0x000010, "Wrong alignment on BP_BtlCameraManagerComponent_C_SyncEventCamToSystemCam");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_SyncEventCamToSystemCam) == 0x000180, "Wrong size on BP_BtlCameraManagerComponent_C_SyncEventCamToSystemCam");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_SyncEventCamToSystemCam, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_SyncEventCamToSystemCam::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_SyncEventCamToSystemCam, CallFunc_GetViewTarget_ReturnValue) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_SyncEventCamToSystemCam::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_SyncEventCamToSystemCam, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_SyncEventCamToSystemCam::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_SyncEventCamToSystemCam, K2Node_DynamicCast_AsCine________) == 0x000040, "Member 'BP_BtlCameraManagerComponent_C_SyncEventCamToSystemCam::K2Node_DynamicCast_AsCine________' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_SyncEventCamToSystemCam, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_BtlCameraManagerComponent_C_SyncEventCamToSystemCam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_SyncEventCamToSystemCam, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x00004C, "Member 'BP_BtlCameraManagerComponent_C_SyncEventCamToSystemCam::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_SyncEventCamToSystemCam, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0000D4, "Member 'BP_BtlCameraManagerComponent_C_SyncEventCamToSystemCam::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_SyncEventCamToSystemCam, CallFunc_K2_SetActorTransform_SweepHitResult_1) == 0x0000D8, "Member 'BP_BtlCameraManagerComponent_C_SyncEventCamToSystemCam::CallFunc_K2_SetActorTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_SyncEventCamToSystemCam, CallFunc_K2_SetActorTransform_ReturnValue_1) == 0x000160, "Member 'BP_BtlCameraManagerComponent_C_SyncEventCamToSystemCam::CallFunc_K2_SetActorTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_SyncEventCamToSystemCam, K2Node_DynamicCast_AsCine_________1) == 0x000168, "Member 'BP_BtlCameraManagerComponent_C_SyncEventCamToSystemCam::K2Node_DynamicCast_AsCine_________1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_SyncEventCamToSystemCam, K2Node_DynamicCast_bSuccess_1) == 0x000170, "Member 'BP_BtlCameraManagerComponent_C_SyncEventCamToSystemCam::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.PlayAnalyzeCamera
// 0x0110 (0x0110 - 0x0000)
struct BP_BtlCameraManagerComponent_C_PlayAnalyzeCamera final
{
public:
	class UBP_BtlTargetManager_C*                 Targets;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InitialCamera;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          PlayFromLeft;                                      // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_BtlCharacterBase_C*>         CallFunc_GetTargetsCharacters_Characters;          // 0x0010(0x0010)(ReferenceParm)
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform;               // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	class ABP_BtlCharacterBase_C*                 CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBoss_ReturnValue;                       // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform_1;             // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform_2;             // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Play_Calc_Camera_Transform_3;             // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SearchBossCamera_Found;                   // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_PlayAnalyzeCamera) == 0x000010, "Wrong alignment on BP_BtlCameraManagerComponent_C_PlayAnalyzeCamera");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_PlayAnalyzeCamera) == 0x000110, "Wrong size on BP_BtlCameraManagerComponent_C_PlayAnalyzeCamera");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAnalyzeCamera, Targets) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_PlayAnalyzeCamera::Targets' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAnalyzeCamera, InitialCamera) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_PlayAnalyzeCamera::InitialCamera' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAnalyzeCamera, PlayFromLeft) == 0x000009, "Member 'BP_BtlCameraManagerComponent_C_PlayAnalyzeCamera::PlayFromLeft' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAnalyzeCamera, CallFunc_GetTargetsCharacters_Characters) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_PlayAnalyzeCamera::CallFunc_GetTargetsCharacters_Characters' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAnalyzeCamera, CallFunc_Play_Calc_Camera_Transform) == 0x000020, "Member 'BP_BtlCameraManagerComponent_C_PlayAnalyzeCamera::CallFunc_Play_Calc_Camera_Transform' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAnalyzeCamera, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_BtlCameraManagerComponent_C_PlayAnalyzeCamera::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAnalyzeCamera, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_BtlCameraManagerComponent_C_PlayAnalyzeCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAnalyzeCamera, CallFunc_IsBoss_ReturnValue) == 0x000059, "Member 'BP_BtlCameraManagerComponent_C_PlayAnalyzeCamera::CallFunc_IsBoss_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAnalyzeCamera, CallFunc_Play_Calc_Camera_Transform_1) == 0x000060, "Member 'BP_BtlCameraManagerComponent_C_PlayAnalyzeCamera::CallFunc_Play_Calc_Camera_Transform_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAnalyzeCamera, CallFunc_Play_Calc_Camera_Transform_2) == 0x000090, "Member 'BP_BtlCameraManagerComponent_C_PlayAnalyzeCamera::CallFunc_Play_Calc_Camera_Transform_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAnalyzeCamera, CallFunc_MakeLiteralName_ReturnValue) == 0x0000C0, "Member 'BP_BtlCameraManagerComponent_C_PlayAnalyzeCamera::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAnalyzeCamera, CallFunc_Play_Calc_Camera_Transform_3) == 0x0000D0, "Member 'BP_BtlCameraManagerComponent_C_PlayAnalyzeCamera::CallFunc_Play_Calc_Camera_Transform_3' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlayAnalyzeCamera, CallFunc_SearchBossCamera_Found) == 0x000100, "Member 'BP_BtlCameraManagerComponent_C_PlayAnalyzeCamera::CallFunc_SearchBossCamera_Found' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.Coordinate Backshot Persona Hiding 
// 0x0010 (0x0010 - 0x0000)
struct BP_BtlCameraManagerComponent_C_Coordinate_Backshot_Persona_Hiding_ final
{
public:
	class ABP_BtlCharacterBase_C*                 CallFunc_GetMain_Character;                        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEnableBackShotCamera_Enable;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_Coordinate_Backshot_Persona_Hiding_) == 0x000008, "Wrong alignment on BP_BtlCameraManagerComponent_C_Coordinate_Backshot_Persona_Hiding_");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_Coordinate_Backshot_Persona_Hiding_) == 0x000010, "Wrong size on BP_BtlCameraManagerComponent_C_Coordinate_Backshot_Persona_Hiding_");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Coordinate_Backshot_Persona_Hiding_, CallFunc_GetMain_Character) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_Coordinate_Backshot_Persona_Hiding_::CallFunc_GetMain_Character' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_Coordinate_Backshot_Persona_Hiding_, CallFunc_CheckEnableBackShotCamera_Enable) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_Coordinate_Backshot_Persona_Hiding_::CallFunc_CheckEnableBackShotCamera_Enable' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.PlaySequenceCameraWithBaseTrans
// 0x0150 (0x0150 - 0x0000)
struct BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans final
{
public:
	class ALevelSequenceActor*                    Sequence_Actor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Playing_Transform;                                 // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          Loop;                                              // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACineCameraActor*                       UsingOtherMainCamera;                              // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             SequenceTransform;                                 // 0x0050(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class ACineCameraActor*                       UsingCamera;                                       // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Loop_Num;                                          // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0090(0x0010)(ZeroConstructor, NoDestructor)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_1;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_2;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDisableSequenceCamera_ReturnValue;      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA[0x2];                                       // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x00BC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans) == 0x000010, "Wrong alignment on BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans) == 0x000150, "Wrong size on BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans, Sequence_Actor) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans::Sequence_Actor' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans, Playing_Transform) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans::Playing_Transform' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans, Loop) == 0x000040, "Member 'BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans::Loop' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans, UsingOtherMainCamera) == 0x000048, "Member 'BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans::UsingOtherMainCamera' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans, SequenceTransform) == 0x000050, "Member 'BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans::SequenceTransform' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans, UsingCamera) == 0x000080, "Member 'BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans::UsingCamera' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans, Loop_Num) == 0x000088, "Member 'BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans::Loop_Num' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans, CallFunc_IsValid_ReturnValue) == 0x00008C, "Member 'BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans, K2Node_CreateDelegate_OutputDelegate) == 0x000090, "Member 'BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans, CallFunc_GetSequencePlayer_ReturnValue) == 0x0000A0, "Member 'BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans, CallFunc_GetSequencePlayer_ReturnValue_1) == 0x0000A8, "Member 'BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans::CallFunc_GetSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans, CallFunc_GetSequencePlayer_ReturnValue_2) == 0x0000B0, "Member 'BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans::CallFunc_GetSequencePlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans, CallFunc_IsDisableSequenceCamera_ReturnValue) == 0x0000B8, "Member 'BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans::CallFunc_IsDisableSequenceCamera_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans, CallFunc_IsValid_ReturnValue_1) == 0x0000B9, "Member 'BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x0000BC, "Member 'BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000144, "Member 'BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans, CallFunc_GetPlayerController_ReturnValue) == 0x000148, "Member 'BP_BtlCameraManagerComponent_C_PlaySequenceCameraWithBaseTrans::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.HideEnemiesWithoutEnchanter
// 0x0030 (0x0030 - 0x0000)
struct BP_BtlCameraManagerComponent_C_HideEnemiesWithoutEnchanter final
{
public:
	bool                                          CompletlyHide;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Rapid;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          WeaklyHide;                                        // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_GetMainCharacter_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABtlActor*>                      CallFunc_GetEnemyList_ReturnValue;                 // 0x0010(0x0010)(ReferenceParm)
	TArray<class ABtlActor*>                      K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_HideEnemiesWithoutEnchanter) == 0x000008, "Wrong alignment on BP_BtlCameraManagerComponent_C_HideEnemiesWithoutEnchanter");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_HideEnemiesWithoutEnchanter) == 0x000030, "Wrong size on BP_BtlCameraManagerComponent_C_HideEnemiesWithoutEnchanter");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideEnemiesWithoutEnchanter, CompletlyHide) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_HideEnemiesWithoutEnchanter::CompletlyHide' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideEnemiesWithoutEnchanter, Rapid) == 0x000001, "Member 'BP_BtlCameraManagerComponent_C_HideEnemiesWithoutEnchanter::Rapid' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideEnemiesWithoutEnchanter, WeaklyHide) == 0x000002, "Member 'BP_BtlCameraManagerComponent_C_HideEnemiesWithoutEnchanter::WeaklyHide' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideEnemiesWithoutEnchanter, CallFunc_GetMainCharacter_ReturnValue) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_HideEnemiesWithoutEnchanter::CallFunc_GetMainCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideEnemiesWithoutEnchanter, CallFunc_GetEnemyList_ReturnValue) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_HideEnemiesWithoutEnchanter::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_HideEnemiesWithoutEnchanter, K2Node_MakeArray_Array) == 0x000020, "Member 'BP_BtlCameraManagerComponent_C_HideEnemiesWithoutEnchanter::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.CallEnemiesFinalizeSummonFadeinProc
// 0x0048 (0x0048 - 0x0000)
struct BP_BtlCameraManagerComponent_C_CallEnemiesFinalizeSummonFadeinProc final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      CallFunc_GetEnemyList_ReturnValue;                 // 0x0010(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsEventBattle_ReturnValue;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlShadowBase_C*                    K2Node_DynamicCast_AsBP_Btl_Shadow_Base;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_CallEnemiesFinalizeSummonFadeinProc) == 0x000008, "Wrong alignment on BP_BtlCameraManagerComponent_C_CallEnemiesFinalizeSummonFadeinProc");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_CallEnemiesFinalizeSummonFadeinProc) == 0x000048, "Wrong size on BP_BtlCameraManagerComponent_C_CallEnemiesFinalizeSummonFadeinProc");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CallEnemiesFinalizeSummonFadeinProc, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_CallEnemiesFinalizeSummonFadeinProc::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CallEnemiesFinalizeSummonFadeinProc, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_BtlCameraManagerComponent_C_CallEnemiesFinalizeSummonFadeinProc::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CallEnemiesFinalizeSummonFadeinProc, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_CallEnemiesFinalizeSummonFadeinProc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CallEnemiesFinalizeSummonFadeinProc, CallFunc_GetEnemyList_ReturnValue) == 0x000010, "Member 'BP_BtlCameraManagerComponent_C_CallEnemiesFinalizeSummonFadeinProc::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CallEnemiesFinalizeSummonFadeinProc, CallFunc_IsEventBattle_ReturnValue) == 0x000020, "Member 'BP_BtlCameraManagerComponent_C_CallEnemiesFinalizeSummonFadeinProc::CallFunc_IsEventBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CallEnemiesFinalizeSummonFadeinProc, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_BtlCameraManagerComponent_C_CallEnemiesFinalizeSummonFadeinProc::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CallEnemiesFinalizeSummonFadeinProc, K2Node_DynamicCast_AsBP_Btl_Shadow_Base) == 0x000030, "Member 'BP_BtlCameraManagerComponent_C_CallEnemiesFinalizeSummonFadeinProc::K2Node_DynamicCast_AsBP_Btl_Shadow_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CallEnemiesFinalizeSummonFadeinProc, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_BtlCameraManagerComponent_C_CallEnemiesFinalizeSummonFadeinProc::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CallEnemiesFinalizeSummonFadeinProc, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_BtlCameraManagerComponent_C_CallEnemiesFinalizeSummonFadeinProc::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CallEnemiesFinalizeSummonFadeinProc, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_BtlCameraManagerComponent_C_CallEnemiesFinalizeSummonFadeinProc::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_CallEnemiesFinalizeSummonFadeinProc, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'BP_BtlCameraManagerComponent_C_CallEnemiesFinalizeSummonFadeinProc::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BtlCameraManagerComponent.BP_BtlCameraManagerComponent_C.GetCriticalAttackUpshotCamera
// 0x0020 (0x0020 - 0x0000)
struct BP_BtlCameraManagerComponent_C_GetCriticalAttackUpshotCamera final
{
public:
	class ACineCameraActor*                       BCD_Camera;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ACineCameraActor*>               CallFunc_GetAllActorsOfClassWithTag_OutActors;     // 0x0008(0x0010)(ReferenceParm)
	class ACineCameraActor*                       CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlCameraManagerComponent_C_GetCriticalAttackUpshotCamera) == 0x000008, "Wrong alignment on BP_BtlCameraManagerComponent_C_GetCriticalAttackUpshotCamera");
static_assert(sizeof(BP_BtlCameraManagerComponent_C_GetCriticalAttackUpshotCamera) == 0x000020, "Wrong size on BP_BtlCameraManagerComponent_C_GetCriticalAttackUpshotCamera");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_GetCriticalAttackUpshotCamera, BCD_Camera) == 0x000000, "Member 'BP_BtlCameraManagerComponent_C_GetCriticalAttackUpshotCamera::BCD_Camera' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_GetCriticalAttackUpshotCamera, CallFunc_GetAllActorsOfClassWithTag_OutActors) == 0x000008, "Member 'BP_BtlCameraManagerComponent_C_GetCriticalAttackUpshotCamera::CallFunc_GetAllActorsOfClassWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BP_BtlCameraManagerComponent_C_GetCriticalAttackUpshotCamera, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_BtlCameraManagerComponent_C_GetCriticalAttackUpshotCamera::CallFunc_Array_Get_Item' has a wrong offset!");

}

