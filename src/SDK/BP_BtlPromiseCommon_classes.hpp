#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtlPromiseCommon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Xrd777_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_BtlGuiBaseActor_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BtlPromiseCommon.BP_BtlPromiseCommon_C
// 0x01A8 (0x04F8 - 0x0350)
class ABP_BtlPromiseCommon_C final : public ABP_BtlGuiBaseActor_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_BtlPromiseCommon_C;              // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBtlDataBaseComponent*                  BtlDataBase;                                       // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiPromiseComponent*                BtlGuiPromise;                                     // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiResources*                       BtlGuiResources;                                   // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawComponent*                   BtlGuiDraw;                                        // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         InAnime_7__Move_DecoE_D333EF394107C49F9849A7A0790C13C5; // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAnime_6__Move_DecoD_D333EF394107C49F9849A7A0790C13C5; // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAnime_5__Move_DecoC_D333EF394107C49F9849A7A0790C13C5; // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAnime_4__Move_DecoB_D333EF394107C49F9849A7A0790C13C5; // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAnime_3__Move_DecoA_D333EF394107C49F9849A7A0790C13C5; // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAnime_2__IcomsMove_D333EF394107C49F9849A7A0790C13C5; // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAnime_1__FrameMove_D333EF394107C49F9849A7A0790C13C5; // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            InAnime__Direction_D333EF394107C49F9849A7A0790C13C5; // 0x0394(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_395[0x3];                                      // 0x0395(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     InAnime;                                           // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutAnime_3__Cancel_Icon_Scale_F1AF48B645A7B2D06DFF999B026E4BC1; // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutAnime_2__Icons_Move_F1AF48B645A7B2D06DFF999B026E4BC1; // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutAnime_1_FrameMove_F1AF48B645A7B2D06DFF999B026E4BC1; // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            OutAnime__Direction_F1AF48B645A7B2D06DFF999B026E4BC1; // 0x03AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AD[0x3];                                      // 0x03AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     OutAnime;                                          // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutAnimeDecide_1_Decide_Icon_Scale_79DD18AB4766FF1CEC498BA2DD854C49; // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            OutAnimeDecide__Direction_79DD18AB4766FF1CEC498BA2DD854C49; // 0x03BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BD[0x3];                                      // 0x03BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     OutAnimeDecide;                                    // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         PromiseTpye;                                       // 0x03C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C9[0x3];                                      // 0x03C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              PosBaseA;                                          // 0x03CC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D4[0x4];                                      // 0x03D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBtlGuiVertex>                  Vertex;                                            // 0x03D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector2D                              TextPos;                                           // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectPlg*                   TextPLG;                                           // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAnimeTextRation;                                 // 0x03F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC[0x4];                                      // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBtlGuiDrawObjectPrimitive*             RectBackOld;                                       // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectPrimitive*             RectBlack;                                         // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAnimeIconMove;                                   // 0x0410(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CircleIconDif;                                     // 0x0414(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CrosslIconDif;                                     // 0x041C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CancelTextOffset;                                  // 0x0424(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              OkTextOffset;                                      // 0x042C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_434[0x4];                                      // 0x0434(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBtlGuiDrawObjectSprite*                SpriteCircleIcon;                                  // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                SpriteCrossIcon;                                   // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                SpriteOKText;                                      // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                SpriteCancelText;                                  // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CancelIconScaleValue;                              // 0x0458(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              IconGroupPosDif;                                   // 0x045C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStartAnimation;                                  // 0x0464(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsFastInput;                                       // 0x0465(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsUnableCancel;                                    // 0x0466(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_467[0x1];                                      // 0x0467(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 ColorCancelIcon;                                   // 0x0468(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 ColorCancelText;                                   // 0x046C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                SprAlloutMsg1;                                     // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectSprite*                SprAlloutMsg2;                                     // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectPrimitive*             PrimiDecoA;                                        // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectPrimitive*             PrimiDecoB;                                        // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectPrimitive*             PtimiDecoC;                                        // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectPrimitive*             PrimiDecoD;                                        // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectPrimitive*             PrimiDecoE;                                        // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectPlg*                   TextMaskPLG;                                       // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBtlGuiDrawObjectPrimitive*             RectBack2;                                         // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScaleBaseCrossButton;                              // 0x04B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScaleBaseText;                                     // 0x04BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ParamScaleRationCancel;                            // 0x04C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScaleBaseCircleButton;                             // 0x04C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              MoveVec;                                           // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DecideIconScaleValue;                              // 0x04D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AlphaPlate;                                        // 0x04D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimeMoveRationDecoA;                              // 0x04D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimeMoveRationDecoB;                              // 0x04DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimeMoveRationDecoC;                              // 0x04E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimeMoveRationDecoD;                              // 0x04E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimeMoveRationDecoE;                              // 0x04E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCanKeyInput;                                     // 0x04EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4ED[0x3];                                      // 0x04ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SprCancelHeight;                                   // 0x04F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SprOkHeight;                                       // 0x04F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_BtlPromiseCommon(int32 EntryPoint);
	void GuiActorEncountStart();
	void DebugOutAnime();
	void DebugInAnime();
	void GuiActorUpdate(float DeltaTime);
	void GuiActorUnbindAction();
	void GuiActorBindAction();
	void GuiActorStateInit(bool Flag, int32 Param);
	void CallCANCEL();
	void CallOK();
	void ChangeStatePromice();
	void GuiActorBeginPlay();
	void Start_OutAnime_Decide();
	void Start_OutAnime();
	void Start_In_Anime();
	void OutAnimeDecide__UpdateFunc();
	void OutAnimeDecide__FinishedFunc();
	void OutAnime__UpdateFunc();
	void OutAnime__FinishedFunc();
	void InAnime__8__KeyStart__EventFunc();
	void InAnime__UpdateFunc();
	void InAnime__FinishedFunc();
	void UnbindAllAction();
	void CreateRectPrimitive(const struct FVector2D& Size, const struct FColor& Color, TArray<struct FBtlGuiVertex>* NewParam);
	void UpdateAnimation();
	void ChangeColorButton();
	void InitCancelAvaialble();
	void ActionEnd();
	void Lerp_Vector_2D(const struct FVector2D& From, const struct FVector2D& To, float Value, struct FVector2D* Out);
	void EnableKeyInput();
	void ActionDecide();
	void RefrectLocalizeData();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BtlPromiseCommon_C">();
	}
	static class ABP_BtlPromiseCommon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BtlPromiseCommon_C>();
	}
};
static_assert(alignof(ABP_BtlPromiseCommon_C) == 0x000008, "Wrong alignment on ABP_BtlPromiseCommon_C");
static_assert(sizeof(ABP_BtlPromiseCommon_C) == 0x0004F8, "Wrong size on ABP_BtlPromiseCommon_C");
static_assert(offsetof(ABP_BtlPromiseCommon_C, UberGraphFrame_BP_BtlPromiseCommon_C) == 0x000350, "Member 'ABP_BtlPromiseCommon_C::UberGraphFrame_BP_BtlPromiseCommon_C' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, BtlDataBase) == 0x000358, "Member 'ABP_BtlPromiseCommon_C::BtlDataBase' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, BtlGuiPromise) == 0x000360, "Member 'ABP_BtlPromiseCommon_C::BtlGuiPromise' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, BtlGuiResources) == 0x000368, "Member 'ABP_BtlPromiseCommon_C::BtlGuiResources' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, BtlGuiDraw) == 0x000370, "Member 'ABP_BtlPromiseCommon_C::BtlGuiDraw' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, InAnime_7__Move_DecoE_D333EF394107C49F9849A7A0790C13C5) == 0x000378, "Member 'ABP_BtlPromiseCommon_C::InAnime_7__Move_DecoE_D333EF394107C49F9849A7A0790C13C5' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, InAnime_6__Move_DecoD_D333EF394107C49F9849A7A0790C13C5) == 0x00037C, "Member 'ABP_BtlPromiseCommon_C::InAnime_6__Move_DecoD_D333EF394107C49F9849A7A0790C13C5' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, InAnime_5__Move_DecoC_D333EF394107C49F9849A7A0790C13C5) == 0x000380, "Member 'ABP_BtlPromiseCommon_C::InAnime_5__Move_DecoC_D333EF394107C49F9849A7A0790C13C5' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, InAnime_4__Move_DecoB_D333EF394107C49F9849A7A0790C13C5) == 0x000384, "Member 'ABP_BtlPromiseCommon_C::InAnime_4__Move_DecoB_D333EF394107C49F9849A7A0790C13C5' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, InAnime_3__Move_DecoA_D333EF394107C49F9849A7A0790C13C5) == 0x000388, "Member 'ABP_BtlPromiseCommon_C::InAnime_3__Move_DecoA_D333EF394107C49F9849A7A0790C13C5' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, InAnime_2__IcomsMove_D333EF394107C49F9849A7A0790C13C5) == 0x00038C, "Member 'ABP_BtlPromiseCommon_C::InAnime_2__IcomsMove_D333EF394107C49F9849A7A0790C13C5' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, InAnime_1__FrameMove_D333EF394107C49F9849A7A0790C13C5) == 0x000390, "Member 'ABP_BtlPromiseCommon_C::InAnime_1__FrameMove_D333EF394107C49F9849A7A0790C13C5' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, InAnime__Direction_D333EF394107C49F9849A7A0790C13C5) == 0x000394, "Member 'ABP_BtlPromiseCommon_C::InAnime__Direction_D333EF394107C49F9849A7A0790C13C5' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, InAnime) == 0x000398, "Member 'ABP_BtlPromiseCommon_C::InAnime' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, OutAnime_3__Cancel_Icon_Scale_F1AF48B645A7B2D06DFF999B026E4BC1) == 0x0003A0, "Member 'ABP_BtlPromiseCommon_C::OutAnime_3__Cancel_Icon_Scale_F1AF48B645A7B2D06DFF999B026E4BC1' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, OutAnime_2__Icons_Move_F1AF48B645A7B2D06DFF999B026E4BC1) == 0x0003A4, "Member 'ABP_BtlPromiseCommon_C::OutAnime_2__Icons_Move_F1AF48B645A7B2D06DFF999B026E4BC1' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, OutAnime_1_FrameMove_F1AF48B645A7B2D06DFF999B026E4BC1) == 0x0003A8, "Member 'ABP_BtlPromiseCommon_C::OutAnime_1_FrameMove_F1AF48B645A7B2D06DFF999B026E4BC1' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, OutAnime__Direction_F1AF48B645A7B2D06DFF999B026E4BC1) == 0x0003AC, "Member 'ABP_BtlPromiseCommon_C::OutAnime__Direction_F1AF48B645A7B2D06DFF999B026E4BC1' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, OutAnime) == 0x0003B0, "Member 'ABP_BtlPromiseCommon_C::OutAnime' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, OutAnimeDecide_1_Decide_Icon_Scale_79DD18AB4766FF1CEC498BA2DD854C49) == 0x0003B8, "Member 'ABP_BtlPromiseCommon_C::OutAnimeDecide_1_Decide_Icon_Scale_79DD18AB4766FF1CEC498BA2DD854C49' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, OutAnimeDecide__Direction_79DD18AB4766FF1CEC498BA2DD854C49) == 0x0003BC, "Member 'ABP_BtlPromiseCommon_C::OutAnimeDecide__Direction_79DD18AB4766FF1CEC498BA2DD854C49' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, OutAnimeDecide) == 0x0003C0, "Member 'ABP_BtlPromiseCommon_C::OutAnimeDecide' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, PromiseTpye) == 0x0003C8, "Member 'ABP_BtlPromiseCommon_C::PromiseTpye' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, PosBaseA) == 0x0003CC, "Member 'ABP_BtlPromiseCommon_C::PosBaseA' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, Vertex) == 0x0003D8, "Member 'ABP_BtlPromiseCommon_C::Vertex' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, TextPos) == 0x0003E8, "Member 'ABP_BtlPromiseCommon_C::TextPos' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, TextPLG) == 0x0003F0, "Member 'ABP_BtlPromiseCommon_C::TextPLG' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, InAnimeTextRation) == 0x0003F8, "Member 'ABP_BtlPromiseCommon_C::InAnimeTextRation' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, RectBackOld) == 0x000400, "Member 'ABP_BtlPromiseCommon_C::RectBackOld' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, RectBlack) == 0x000408, "Member 'ABP_BtlPromiseCommon_C::RectBlack' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, InAnimeIconMove) == 0x000410, "Member 'ABP_BtlPromiseCommon_C::InAnimeIconMove' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, CircleIconDif) == 0x000414, "Member 'ABP_BtlPromiseCommon_C::CircleIconDif' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, CrosslIconDif) == 0x00041C, "Member 'ABP_BtlPromiseCommon_C::CrosslIconDif' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, CancelTextOffset) == 0x000424, "Member 'ABP_BtlPromiseCommon_C::CancelTextOffset' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, OkTextOffset) == 0x00042C, "Member 'ABP_BtlPromiseCommon_C::OkTextOffset' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, SpriteCircleIcon) == 0x000438, "Member 'ABP_BtlPromiseCommon_C::SpriteCircleIcon' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, SpriteCrossIcon) == 0x000440, "Member 'ABP_BtlPromiseCommon_C::SpriteCrossIcon' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, SpriteOKText) == 0x000448, "Member 'ABP_BtlPromiseCommon_C::SpriteOKText' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, SpriteCancelText) == 0x000450, "Member 'ABP_BtlPromiseCommon_C::SpriteCancelText' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, CancelIconScaleValue) == 0x000458, "Member 'ABP_BtlPromiseCommon_C::CancelIconScaleValue' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, IconGroupPosDif) == 0x00045C, "Member 'ABP_BtlPromiseCommon_C::IconGroupPosDif' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, IsStartAnimation) == 0x000464, "Member 'ABP_BtlPromiseCommon_C::IsStartAnimation' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, IsFastInput) == 0x000465, "Member 'ABP_BtlPromiseCommon_C::IsFastInput' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, IsUnableCancel) == 0x000466, "Member 'ABP_BtlPromiseCommon_C::IsUnableCancel' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, ColorCancelIcon) == 0x000468, "Member 'ABP_BtlPromiseCommon_C::ColorCancelIcon' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, ColorCancelText) == 0x00046C, "Member 'ABP_BtlPromiseCommon_C::ColorCancelText' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, SprAlloutMsg1) == 0x000470, "Member 'ABP_BtlPromiseCommon_C::SprAlloutMsg1' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, SprAlloutMsg2) == 0x000478, "Member 'ABP_BtlPromiseCommon_C::SprAlloutMsg2' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, PrimiDecoA) == 0x000480, "Member 'ABP_BtlPromiseCommon_C::PrimiDecoA' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, PrimiDecoB) == 0x000488, "Member 'ABP_BtlPromiseCommon_C::PrimiDecoB' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, PtimiDecoC) == 0x000490, "Member 'ABP_BtlPromiseCommon_C::PtimiDecoC' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, PrimiDecoD) == 0x000498, "Member 'ABP_BtlPromiseCommon_C::PrimiDecoD' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, PrimiDecoE) == 0x0004A0, "Member 'ABP_BtlPromiseCommon_C::PrimiDecoE' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, TextMaskPLG) == 0x0004A8, "Member 'ABP_BtlPromiseCommon_C::TextMaskPLG' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, RectBack2) == 0x0004B0, "Member 'ABP_BtlPromiseCommon_C::RectBack2' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, ScaleBaseCrossButton) == 0x0004B8, "Member 'ABP_BtlPromiseCommon_C::ScaleBaseCrossButton' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, ScaleBaseText) == 0x0004BC, "Member 'ABP_BtlPromiseCommon_C::ScaleBaseText' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, ParamScaleRationCancel) == 0x0004C0, "Member 'ABP_BtlPromiseCommon_C::ParamScaleRationCancel' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, ScaleBaseCircleButton) == 0x0004C4, "Member 'ABP_BtlPromiseCommon_C::ScaleBaseCircleButton' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, MoveVec) == 0x0004C8, "Member 'ABP_BtlPromiseCommon_C::MoveVec' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, DecideIconScaleValue) == 0x0004D0, "Member 'ABP_BtlPromiseCommon_C::DecideIconScaleValue' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, AlphaPlate) == 0x0004D4, "Member 'ABP_BtlPromiseCommon_C::AlphaPlate' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, AnimeMoveRationDecoA) == 0x0004D8, "Member 'ABP_BtlPromiseCommon_C::AnimeMoveRationDecoA' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, AnimeMoveRationDecoB) == 0x0004DC, "Member 'ABP_BtlPromiseCommon_C::AnimeMoveRationDecoB' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, AnimeMoveRationDecoC) == 0x0004E0, "Member 'ABP_BtlPromiseCommon_C::AnimeMoveRationDecoC' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, AnimeMoveRationDecoD) == 0x0004E4, "Member 'ABP_BtlPromiseCommon_C::AnimeMoveRationDecoD' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, AnimeMoveRationDecoE) == 0x0004E8, "Member 'ABP_BtlPromiseCommon_C::AnimeMoveRationDecoE' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, IsCanKeyInput) == 0x0004EC, "Member 'ABP_BtlPromiseCommon_C::IsCanKeyInput' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, SprCancelHeight) == 0x0004F0, "Member 'ABP_BtlPromiseCommon_C::SprCancelHeight' has a wrong offset!");
static_assert(offsetof(ABP_BtlPromiseCommon_C, SprOkHeight) == 0x0004F4, "Member 'ABP_BtlPromiseCommon_C::SprOkHeight' has a wrong offset!");

}

