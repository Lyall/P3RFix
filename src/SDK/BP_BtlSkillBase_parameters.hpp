#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtlSkillBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Xrd777_structs.hpp"
#include "Engine_structs.hpp"
#include "FBtlSkillRequest_structs.hpp"
#include "FBtlSkillControl_structs.hpp"


namespace SDK::Params
{

// Function BP_BtlSkillBase.BP_BtlSkillBase_C.ExecuteUbergraph_BP_BtlSkillBase
// 0x01C0 (0x01C0 - 0x0000)
struct BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_BtlCharacterBase_C*>         CallFunc_GetTargets_CharaList;                     // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_BtlCharacterBase_C*>         CallFunc_GetTargets_CharaList_1;                   // 0x0028(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 CallFunc_GetEnchanter_Character;                   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BtlTargetManager_C*                 K2Node_CustomEvent_Target_Manager;                 // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BtlEnvironment_C*                   K2Node_CustomEvent_BtlEnv;                         // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBtlSkillControl                      CallFunc_Array_Get_Item;                           // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BtlTargetManager_C*                 K2Node_CustomEvent_TargetManager;                  // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0090(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0xC];                                       // 0x00A4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFBtlSkillRequest                      CallFunc_Array_Get_Item_1;                         // 0x00B0(0x0070)(IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0xC];                                      // 0x0124(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFBtlSkillRequest                      K2Node_SetFieldsInStruct_StructOut;                // 0x0130(0x0070)(IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A3[0x5];                                      // 0x01A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x01A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcOnlyAbsorptionTime_ReturnValue;       // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x01B8(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase) == 0x000010, "Wrong alignment on BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase");
static_assert(sizeof(BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase) == 0x0001C0, "Wrong size on BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase");
static_assert(offsetof(BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase, EntryPoint) == 0x000000, "Member 'BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase, CallFunc_GetTargets_CharaList) == 0x000010, "Member 'BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase::CallFunc_GetTargets_CharaList' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase, CallFunc_GetTargets_CharaList_1) == 0x000028, "Member 'BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase::CallFunc_GetTargets_CharaList_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase, Temp_int_Loop_Counter_Variable_1) == 0x000038, "Member 'BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase, CallFunc_GetEnchanter_Character) == 0x000048, "Member 'BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase::CallFunc_GetEnchanter_Character' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase, K2Node_CustomEvent_Target_Manager) == 0x000050, "Member 'BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase::K2Node_CustomEvent_Target_Manager' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase, K2Node_CustomEvent_BtlEnv) == 0x000058, "Member 'BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase::K2Node_CustomEvent_BtlEnv' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase, Temp_int_Array_Index_Variable) == 0x000060, "Member 'BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase, CallFunc_GetSequencePlayer_ReturnValue) == 0x000068, "Member 'BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase, Temp_int_Array_Index_Variable_1) == 0x000070, "Member 'BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase, CallFunc_Array_Get_Item) == 0x000074, "Member 'BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000080, "Member 'BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase, K2Node_SwitchEnum_CmpSuccess) == 0x000081, "Member 'BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase, K2Node_CustomEvent_TargetManager) == 0x000088, "Member 'BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase::K2Node_CustomEvent_TargetManager' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase, K2Node_CreateDelegate_OutputDelegate) == 0x000090, "Member 'BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000A0, "Member 'BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase, CallFunc_Array_Get_Item_1) == 0x0000B0, "Member 'BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase, CallFunc_Array_Length_ReturnValue_1) == 0x000120, "Member 'BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase, K2Node_SetFieldsInStruct_StructOut) == 0x000130, "Member 'BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001A0, "Member 'BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase, CallFunc_IsValid_ReturnValue) == 0x0001A1, "Member 'BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase, CallFunc_IsValid_ReturnValue_1) == 0x0001A2, "Member 'BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0001A8, "Member 'BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase, CallFunc_CalcOnlyAbsorptionTime_ReturnValue) == 0x0001B0, "Member 'BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase::CallFunc_CalcOnlyAbsorptionTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0001B4, "Member 'BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x0001B8, "Member 'BP_BtlSkillBase_C_ExecuteUbergraph_BP_BtlSkillBase::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");

// Function BP_BtlSkillBase.BP_BtlSkillBase_C.On Skill Play For Test Mode
// 0x0008 (0x0008 - 0x0000)
struct BP_BtlSkillBase_C_On_Skill_Play_For_Test_Mode final
{
public:
	class UBP_BtlTargetManager_C*                 TargetManager;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlSkillBase_C_On_Skill_Play_For_Test_Mode) == 0x000008, "Wrong alignment on BP_BtlSkillBase_C_On_Skill_Play_For_Test_Mode");
static_assert(sizeof(BP_BtlSkillBase_C_On_Skill_Play_For_Test_Mode) == 0x000008, "Wrong size on BP_BtlSkillBase_C_On_Skill_Play_For_Test_Mode");
static_assert(offsetof(BP_BtlSkillBase_C_On_Skill_Play_For_Test_Mode, TargetManager) == 0x000000, "Member 'BP_BtlSkillBase_C_On_Skill_Play_For_Test_Mode::TargetManager' has a wrong offset!");

// Function BP_BtlSkillBase.BP_BtlSkillBase_C.On Skill Play
// 0x0010 (0x0010 - 0x0000)
struct BP_BtlSkillBase_C_On_Skill_Play final
{
public:
	class UBP_BtlTargetManager_C*                 Target_Manager_0;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BtlEnvironment_C*                   BtlEnv;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlSkillBase_C_On_Skill_Play) == 0x000008, "Wrong alignment on BP_BtlSkillBase_C_On_Skill_Play");
static_assert(sizeof(BP_BtlSkillBase_C_On_Skill_Play) == 0x000010, "Wrong size on BP_BtlSkillBase_C_On_Skill_Play");
static_assert(offsetof(BP_BtlSkillBase_C_On_Skill_Play, Target_Manager_0) == 0x000000, "Member 'BP_BtlSkillBase_C_On_Skill_Play::Target_Manager_0' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_On_Skill_Play, BtlEnv) == 0x000008, "Member 'BP_BtlSkillBase_C_On_Skill_Play::BtlEnv' has a wrong offset!");

// Function BP_BtlSkillBase.BP_BtlSkillBase_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_BtlSkillBase_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlSkillBase_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_BtlSkillBase_C_ReceiveTick");
static_assert(sizeof(BP_BtlSkillBase_C_ReceiveTick) == 0x000004, "Wrong size on BP_BtlSkillBase_C_ReceiveTick");
static_assert(offsetof(BP_BtlSkillBase_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_BtlSkillBase_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_BtlSkillBase.BP_BtlSkillBase_C.UserConstructionScript
// 0x0098 (0x0098 - 0x0000)
struct BP_BtlSkillBase_C_UserConstructionScript final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBtlSkillControl                      Temp_struct_Variable;                              // 0x000C(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBtlSkillControl                      Temp_struct_Variable_1;                            // 0x0018(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALevelSequenceActor*                    CallFunc_CreateLevelSequencePlayer_OutActor;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_CreateLevelSequencePlayer_ReturnValue;    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraCameraAttachComponent*          K2Node_DynamicCast_AsNiagara_Camera_Attach_Component; // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlSkillBase_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_BtlSkillBase_C_UserConstructionScript");
static_assert(sizeof(BP_BtlSkillBase_C_UserConstructionScript) == 0x000098, "Wrong size on BP_BtlSkillBase_C_UserConstructionScript");
static_assert(offsetof(BP_BtlSkillBase_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_BtlSkillBase_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_BtlSkillBase_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_BtlSkillBase_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_UserConstructionScript, Temp_struct_Variable) == 0x00000C, "Member 'BP_BtlSkillBase_C_UserConstructionScript::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_UserConstructionScript, Temp_struct_Variable_1) == 0x000018, "Member 'BP_BtlSkillBase_C_UserConstructionScript::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_UserConstructionScript, CallFunc_Array_Add_ReturnValue) == 0x000024, "Member 'BP_BtlSkillBase_C_UserConstructionScript::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_UserConstructionScript, CallFunc_GetChildrenComponents_Children) == 0x000028, "Member 'BP_BtlSkillBase_C_UserConstructionScript::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_BtlSkillBase_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue_1) == 0x00003C, "Member 'BP_BtlSkillBase_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_BtlSkillBase_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_UserConstructionScript, CallFunc_CreateLevelSequencePlayer_OutActor) == 0x000048, "Member 'BP_BtlSkillBase_C_UserConstructionScript::CallFunc_CreateLevelSequencePlayer_OutActor' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_UserConstructionScript, CallFunc_CreateLevelSequencePlayer_ReturnValue) == 0x000050, "Member 'BP_BtlSkillBase_C_UserConstructionScript::CallFunc_CreateLevelSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_UserConstructionScript, Temp_int_Array_Index_Variable_1) == 0x000058, "Member 'BP_BtlSkillBase_C_UserConstructionScript::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_BtlSkillBase_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_UserConstructionScript, CallFunc_Array_Add_ReturnValue_1) == 0x000068, "Member 'BP_BtlSkillBase_C_UserConstructionScript::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_UserConstructionScript, K2Node_DynamicCast_AsNiagara_Camera_Attach_Component) == 0x000070, "Member 'BP_BtlSkillBase_C_UserConstructionScript::K2Node_DynamicCast_AsNiagara_Camera_Attach_Component' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_BtlSkillBase_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_UserConstructionScript, CallFunc_GetObjectClass_ReturnValue) == 0x000080, "Member 'BP_BtlSkillBase_C_UserConstructionScript::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_UserConstructionScript, CallFunc_NotEqual_ClassClass_ReturnValue) == 0x000088, "Member 'BP_BtlSkillBase_C_UserConstructionScript::CallFunc_NotEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_UserConstructionScript, Temp_int_Loop_Counter_Variable_1) == 0x00008C, "Member 'BP_BtlSkillBase_C_UserConstructionScript::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue_1) == 0x000090, "Member 'BP_BtlSkillBase_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue_1) == 0x000094, "Member 'BP_BtlSkillBase_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_BtlSkillBase.BP_BtlSkillBase_C.Request VFX to Targets
// 0x01A0 (0x01A0 - 0x0000)
struct BP_BtlSkillBase_C_Request_VFX_to_Targets final
{
public:
	struct FBtlSkillParam                         Skill_Paramater;                                   // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	TArray<class ABtlActor*>                      Targets;                                           // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0050(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	float                                         WaitTime;                                          // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ReferenceParm)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcLocation_Location;                    // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_CalcLocation_Rotation;                    // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00F0(0x0030)(IsPlainOldData, NoDestructor)
	struct FFBtlSkillRequest                      Temp_struct_Variable;                              // 0x0120(0x0070)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlSkillBase_C_Request_VFX_to_Targets) == 0x000010, "Wrong alignment on BP_BtlSkillBase_C_Request_VFX_to_Targets");
static_assert(sizeof(BP_BtlSkillBase_C_Request_VFX_to_Targets) == 0x0001A0, "Wrong size on BP_BtlSkillBase_C_Request_VFX_to_Targets");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Targets, Skill_Paramater) == 0x000000, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Targets::Skill_Paramater' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Targets, Targets) == 0x000038, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Targets::Targets' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Targets, Transform) == 0x000050, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Targets::Transform' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Targets, WaitTime) == 0x000080, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Targets::WaitTime' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Targets, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Targets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Targets, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Targets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Targets, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Targets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Targets, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Targets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Targets, CallFunc_Array_Length_ReturnValue_1) == 0x000094, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Targets::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Targets, CallFunc_Greater_IntInt_ReturnValue) == 0x000098, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Targets::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Targets, CallFunc_MakeVector_ReturnValue) == 0x00009C, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Targets::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Targets, Temp_int_Array_Index_Variable) == 0x0000A8, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Targets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Targets, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Targets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Targets, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000B8, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Targets::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Targets, K2Node_MakeArray_Array) == 0x0000C0, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Targets::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Targets, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000D0, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Targets::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Targets, CallFunc_CalcLocation_Location) == 0x0000D4, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Targets::CallFunc_CalcLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Targets, CallFunc_CalcLocation_Rotation) == 0x0000E0, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Targets::CallFunc_CalcLocation_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Targets, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000EC, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Targets::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Targets, CallFunc_MakeTransform_ReturnValue) == 0x0000F0, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Targets::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Targets, Temp_struct_Variable) == 0x000120, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Targets::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Targets, CallFunc_Array_Add_ReturnValue) == 0x000190, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Targets::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_BtlSkillBase.BP_BtlSkillBase_C.Request VFX to Enchanter
// 0x0050 (0x0050 - 0x0000)
struct BP_BtlSkillBase_C_Request_VFX_to_Enchanter final
{
public:
	struct FBtlSkillParam                         SkillParameter;                                    // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class ABtlActor*                              Enchanter;                                         // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABtlActor*>                      K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_BtlSkillBase_C_Request_VFX_to_Enchanter) == 0x000008, "Wrong alignment on BP_BtlSkillBase_C_Request_VFX_to_Enchanter");
static_assert(sizeof(BP_BtlSkillBase_C_Request_VFX_to_Enchanter) == 0x000050, "Wrong size on BP_BtlSkillBase_C_Request_VFX_to_Enchanter");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Enchanter, SkillParameter) == 0x000000, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Enchanter::SkillParameter' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Enchanter, Enchanter) == 0x000038, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Enchanter::Enchanter' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Enchanter, K2Node_MakeArray_Array) == 0x000040, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Enchanter::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_BtlSkillBase.BP_BtlSkillBase_C.MonitorRequests
// 0x0150 (0x0150 - 0x0000)
struct BP_BtlSkillBase_C_MonitorRequests final
{
public:
	float                                         CamPower;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0020(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBtlSkillRequest                      CallFunc_Array_Get_Item;                           // 0x0080(0x0070)(IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F3[0x1];                                       // 0x00F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAtomComponent*                         CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlSkillBase_C_MonitorRequests) == 0x000010, "Wrong alignment on BP_BtlSkillBase_C_MonitorRequests");
static_assert(sizeof(BP_BtlSkillBase_C_MonitorRequests) == 0x000150, "Wrong size on BP_BtlSkillBase_C_MonitorRequests");
static_assert(offsetof(BP_BtlSkillBase_C_MonitorRequests, CamPower) == 0x000000, "Member 'BP_BtlSkillBase_C_MonitorRequests::CamPower' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_MonitorRequests, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_BtlSkillBase_C_MonitorRequests::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_MonitorRequests, CallFunc_GetViewTarget_ReturnValue) == 0x000010, "Member 'BP_BtlSkillBase_C_MonitorRequests::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_MonitorRequests, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_BtlSkillBase_C_MonitorRequests::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_MonitorRequests, CallFunc_GetTransform_ReturnValue) == 0x000020, "Member 'BP_BtlSkillBase_C_MonitorRequests::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_MonitorRequests, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_BtlSkillBase_C_MonitorRequests::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_MonitorRequests, CallFunc_BreakTransform_Location) == 0x000054, "Member 'BP_BtlSkillBase_C_MonitorRequests::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_MonitorRequests, CallFunc_BreakTransform_Rotation) == 0x000060, "Member 'BP_BtlSkillBase_C_MonitorRequests::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_MonitorRequests, CallFunc_BreakTransform_Scale) == 0x00006C, "Member 'BP_BtlSkillBase_C_MonitorRequests::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_MonitorRequests, Temp_int_Array_Index_Variable) == 0x000078, "Member 'BP_BtlSkillBase_C_MonitorRequests::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_MonitorRequests, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'BP_BtlSkillBase_C_MonitorRequests::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_MonitorRequests, CallFunc_Array_Get_Item) == 0x000080, "Member 'BP_BtlSkillBase_C_MonitorRequests::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_MonitorRequests, CallFunc_Less_IntInt_ReturnValue) == 0x0000F0, "Member 'BP_BtlSkillBase_C_MonitorRequests::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_MonitorRequests, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000F1, "Member 'BP_BtlSkillBase_C_MonitorRequests::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_MonitorRequests, CallFunc_IsValid_ReturnValue) == 0x0000F2, "Member 'BP_BtlSkillBase_C_MonitorRequests::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_MonitorRequests, CallFunc_BreakTransform_Location_1) == 0x0000F4, "Member 'BP_BtlSkillBase_C_MonitorRequests::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_MonitorRequests, CallFunc_BreakTransform_Rotation_1) == 0x000100, "Member 'BP_BtlSkillBase_C_MonitorRequests::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_MonitorRequests, CallFunc_BreakTransform_Scale_1) == 0x00010C, "Member 'BP_BtlSkillBase_C_MonitorRequests::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_MonitorRequests, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000118, "Member 'BP_BtlSkillBase_C_MonitorRequests::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_MonitorRequests, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000120, "Member 'BP_BtlSkillBase_C_MonitorRequests::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_MonitorRequests, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000128, "Member 'BP_BtlSkillBase_C_MonitorRequests::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_MonitorRequests, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000138, "Member 'BP_BtlSkillBase_C_MonitorRequests::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_MonitorRequests, CallFunc_VSize_ReturnValue) == 0x000140, "Member 'BP_BtlSkillBase_C_MonitorRequests::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_MonitorRequests, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000144, "Member 'BP_BtlSkillBase_C_MonitorRequests::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_MonitorRequests, CallFunc_FClamp_ReturnValue) == 0x000148, "Member 'BP_BtlSkillBase_C_MonitorRequests::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BP_BtlSkillBase.BP_BtlSkillBase_C.RefleshRequests
// 0x0090 (0x0090 - 0x0000)
struct BP_BtlSkillBase_C_RefleshRequests final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBtlSkillRequest                      CallFunc_Array_Get_Item;                           // 0x0010(0x0070)(IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlSkillBase_C_RefleshRequests) == 0x000010, "Wrong alignment on BP_BtlSkillBase_C_RefleshRequests");
static_assert(sizeof(BP_BtlSkillBase_C_RefleshRequests) == 0x000090, "Wrong size on BP_BtlSkillBase_C_RefleshRequests");
static_assert(offsetof(BP_BtlSkillBase_C_RefleshRequests, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_BtlSkillBase_C_RefleshRequests::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_RefleshRequests, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_BtlSkillBase_C_RefleshRequests::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_RefleshRequests, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_BtlSkillBase_C_RefleshRequests::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_RefleshRequests, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_BtlSkillBase_C_RefleshRequests::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_RefleshRequests, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_BtlSkillBase_C_RefleshRequests::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_RefleshRequests, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'BP_BtlSkillBase_C_RefleshRequests::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_RefleshRequests, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000084, "Member 'BP_BtlSkillBase_C_RefleshRequests::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_BtlSkillBase.BP_BtlSkillBase_C.Request VFX to field
// 0x0100 (0x0100 - 0x0000)
struct BP_BtlSkillBase_C_Request_VFX_to_field final
{
public:
	struct FBtlSkillParam                         SkillParameter;                                    // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UBtlTargetsManagerComponent*            TargetsPackage;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBtlSkillRequest                      Temp_struct_Variable;                              // 0x0040(0x0070)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00C0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlSkillBase_C_Request_VFX_to_field) == 0x000010, "Wrong alignment on BP_BtlSkillBase_C_Request_VFX_to_field");
static_assert(sizeof(BP_BtlSkillBase_C_Request_VFX_to_field) == 0x000100, "Wrong size on BP_BtlSkillBase_C_Request_VFX_to_field");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_field, SkillParameter) == 0x000000, "Member 'BP_BtlSkillBase_C_Request_VFX_to_field::SkillParameter' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_field, TargetsPackage) == 0x000038, "Member 'BP_BtlSkillBase_C_Request_VFX_to_field::TargetsPackage' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_field, Temp_struct_Variable) == 0x000040, "Member 'BP_BtlSkillBase_C_Request_VFX_to_field::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_field, CallFunc_MakeVector_ReturnValue) == 0x0000B0, "Member 'BP_BtlSkillBase_C_Request_VFX_to_field::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_field, CallFunc_MakeTransform_ReturnValue) == 0x0000C0, "Member 'BP_BtlSkillBase_C_Request_VFX_to_field::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_field, CallFunc_Array_Add_ReturnValue) == 0x0000F0, "Member 'BP_BtlSkillBase_C_Request_VFX_to_field::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_field, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000F4, "Member 'BP_BtlSkillBase_C_Request_VFX_to_field::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_field, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000F8, "Member 'BP_BtlSkillBase_C_Request_VFX_to_field::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_field, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000FC, "Member 'BP_BtlSkillBase_C_Request_VFX_to_field::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_BtlSkillBase.BP_BtlSkillBase_C.CalcLocation
// 0x03A0 (0x03A0 - 0x0000)
struct BP_BtlSkillBase_C_CalcLocation final
{
public:
	TArray<class ABtlActor*>                      Btl_Actor;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	EBtlSkillTargetType                           Target_Type;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBtlSkillPositionTargetType                   Position_Type;                                     // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBtlSkillPositionHeightType                   Position_Height_Type;                              // 0x0012(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBtlSkillDirectionTargetType                  Direction;                                         // 0x0013(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0014(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0020(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               WorkRotation;                                      // 0x002C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NewLocalVar_0;                                     // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                WorkLocation;                                      // 0x003C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Work;                                              // 0x0050(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransform                             Trans;                                             // 0x0080(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class ABtlActor*                              TargetActor;                                       // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorInt_ReturnValue;             // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetInitialTransform_trans;                // 0x0100(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0130(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Calc_Additional_Location_Trans;           // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Calc_Additional_Location_Rotate;          // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_178[0x8];                                      // 0x0178(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_CalcCylinderLocation_Trans;               // 0x0180(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue;       // 0x01B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue_1;          // 0x01E0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_214[0xC];                                      // 0x0214(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0220(0x0030)(IsPlainOldData, NoDestructor)
	class ABtlActor*                              CallFunc_Array_Get_Item;                           // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 K2Node_DynamicCast_AsBP_Btl_Character_Base;        // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26A[0x6];                                      // 0x026A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_GetCharacterRoot_Scene;                   // 0x0270(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_278[0x8];                                      // 0x0278(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0280(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x02B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x02C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x02CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D8[0x8];                                      // 0x02D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue_1;     // 0x02E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0310(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x0340(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x034C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0358(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364[0xC];                                      // 0x0364(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue_2;     // 0x0370(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlSkillBase_C_CalcLocation) == 0x000010, "Wrong alignment on BP_BtlSkillBase_C_CalcLocation");
static_assert(sizeof(BP_BtlSkillBase_C_CalcLocation) == 0x0003A0, "Wrong size on BP_BtlSkillBase_C_CalcLocation");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, Btl_Actor) == 0x000000, "Member 'BP_BtlSkillBase_C_CalcLocation::Btl_Actor' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, Target_Type) == 0x000010, "Member 'BP_BtlSkillBase_C_CalcLocation::Target_Type' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, Position_Type) == 0x000011, "Member 'BP_BtlSkillBase_C_CalcLocation::Position_Type' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, Position_Height_Type) == 0x000012, "Member 'BP_BtlSkillBase_C_CalcLocation::Position_Height_Type' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, Direction) == 0x000013, "Member 'BP_BtlSkillBase_C_CalcLocation::Direction' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, Location) == 0x000014, "Member 'BP_BtlSkillBase_C_CalcLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, Rotation) == 0x000020, "Member 'BP_BtlSkillBase_C_CalcLocation::Rotation' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, WorkRotation) == 0x00002C, "Member 'BP_BtlSkillBase_C_CalcLocation::WorkRotation' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, NewLocalVar_0) == 0x000038, "Member 'BP_BtlSkillBase_C_CalcLocation::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, WorkLocation) == 0x00003C, "Member 'BP_BtlSkillBase_C_CalcLocation::WorkLocation' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, Work) == 0x000050, "Member 'BP_BtlSkillBase_C_CalcLocation::Work' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, Trans) == 0x000080, "Member 'BP_BtlSkillBase_C_CalcLocation::Trans' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, TargetActor) == 0x0000B0, "Member 'BP_BtlSkillBase_C_CalcLocation::TargetActor' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, K2Node_SwitchEnum_CmpSuccess) == 0x0000B8, "Member 'BP_BtlSkillBase_C_CalcLocation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, CallFunc_Array_Length_ReturnValue) == 0x0000BC, "Member 'BP_BtlSkillBase_C_CalcLocation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, CallFunc_Array_Length_ReturnValue_1) == 0x0000C0, "Member 'BP_BtlSkillBase_C_CalcLocation::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, CallFunc_Divide_VectorInt_ReturnValue) == 0x0000C4, "Member 'BP_BtlSkillBase_C_CalcLocation::CallFunc_Divide_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, CallFunc_BreakTransform_Location) == 0x0000D0, "Member 'BP_BtlSkillBase_C_CalcLocation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, CallFunc_BreakTransform_Rotation) == 0x0000DC, "Member 'BP_BtlSkillBase_C_CalcLocation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, CallFunc_BreakTransform_Scale) == 0x0000E8, "Member 'BP_BtlSkillBase_C_CalcLocation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x0000F4, "Member 'BP_BtlSkillBase_C_CalcLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, CallFunc_GetInitialTransform_trans) == 0x000100, "Member 'BP_BtlSkillBase_C_CalcLocation::CallFunc_GetInitialTransform_trans' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, CallFunc_ComposeTransforms_ReturnValue) == 0x000130, "Member 'BP_BtlSkillBase_C_CalcLocation::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, CallFunc_Calc_Additional_Location_Trans) == 0x000160, "Member 'BP_BtlSkillBase_C_CalcLocation::CallFunc_Calc_Additional_Location_Trans' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, CallFunc_Calc_Additional_Location_Rotate) == 0x00016C, "Member 'BP_BtlSkillBase_C_CalcLocation::CallFunc_Calc_Additional_Location_Rotate' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, CallFunc_CalcCylinderLocation_Trans) == 0x000180, "Member 'BP_BtlSkillBase_C_CalcLocation::CallFunc_CalcCylinderLocation_Trans' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, CallFunc_Conv_VectorToTransform_ReturnValue) == 0x0001B0, "Member 'BP_BtlSkillBase_C_CalcLocation::CallFunc_Conv_VectorToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, CallFunc_ComposeTransforms_ReturnValue_1) == 0x0001E0, "Member 'BP_BtlSkillBase_C_CalcLocation::CallFunc_ComposeTransforms_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, Temp_int_Array_Index_Variable) == 0x000210, "Member 'BP_BtlSkillBase_C_CalcLocation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, CallFunc_MakeTransform_ReturnValue) == 0x000220, "Member 'BP_BtlSkillBase_C_CalcLocation::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, CallFunc_Array_Get_Item) == 0x000250, "Member 'BP_BtlSkillBase_C_CalcLocation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, Temp_int_Loop_Counter_Variable) == 0x000258, "Member 'BP_BtlSkillBase_C_CalcLocation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, K2Node_DynamicCast_AsBP_Btl_Character_Base) == 0x000260, "Member 'BP_BtlSkillBase_C_CalcLocation::K2Node_DynamicCast_AsBP_Btl_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, K2Node_DynamicCast_bSuccess) == 0x000268, "Member 'BP_BtlSkillBase_C_CalcLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, CallFunc_Less_IntInt_ReturnValue) == 0x000269, "Member 'BP_BtlSkillBase_C_CalcLocation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, CallFunc_GetCharacterRoot_Scene) == 0x000270, "Member 'BP_BtlSkillBase_C_CalcLocation::CallFunc_GetCharacterRoot_Scene' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, CallFunc_GetSocketTransform_ReturnValue) == 0x000280, "Member 'BP_BtlSkillBase_C_CalcLocation::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, CallFunc_Add_IntInt_ReturnValue) == 0x0002B0, "Member 'BP_BtlSkillBase_C_CalcLocation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, CallFunc_BreakTransform_Location_1) == 0x0002B4, "Member 'BP_BtlSkillBase_C_CalcLocation::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, CallFunc_BreakTransform_Rotation_1) == 0x0002C0, "Member 'BP_BtlSkillBase_C_CalcLocation::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, CallFunc_BreakTransform_Scale_1) == 0x0002CC, "Member 'BP_BtlSkillBase_C_CalcLocation::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, CallFunc_Conv_VectorToTransform_ReturnValue_1) == 0x0002E0, "Member 'BP_BtlSkillBase_C_CalcLocation::CallFunc_Conv_VectorToTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, CallFunc_GetTransform_ReturnValue) == 0x000310, "Member 'BP_BtlSkillBase_C_CalcLocation::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, CallFunc_BreakTransform_Location_2) == 0x000340, "Member 'BP_BtlSkillBase_C_CalcLocation::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, CallFunc_BreakTransform_Rotation_2) == 0x00034C, "Member 'BP_BtlSkillBase_C_CalcLocation::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, CallFunc_BreakTransform_Scale_2) == 0x000358, "Member 'BP_BtlSkillBase_C_CalcLocation::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcLocation, CallFunc_Conv_VectorToTransform_ReturnValue_2) == 0x000370, "Member 'BP_BtlSkillBase_C_CalcLocation::CallFunc_Conv_VectorToTransform_ReturnValue_2' has a wrong offset!");

// Function BP_BtlSkillBase.BP_BtlSkillBase_C.CalcCylinderLocation
// 0x0190 (0x0190 - 0x0000)
struct BP_BtlSkillBase_C_CalcCylinderLocation final
{
public:
	class ABtlActor*                              Btl_Actor;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBtlSkillPositionHeightType                   Height_Type;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Trans;                                             // 0x0010(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FTransform                             Trans_Work;                                        // 0x0040(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABtlActor*>                      K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_MakeCylinder_Bottom_Center;               // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeCylinder_Radius;                      // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeCylinder_Height;                      // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0xC];                                       // 0x00C4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue;       // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue_1;     // 0x0110(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue_2;     // 0x0160(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlSkillBase_C_CalcCylinderLocation) == 0x000010, "Wrong alignment on BP_BtlSkillBase_C_CalcCylinderLocation");
static_assert(sizeof(BP_BtlSkillBase_C_CalcCylinderLocation) == 0x000190, "Wrong size on BP_BtlSkillBase_C_CalcCylinderLocation");
static_assert(offsetof(BP_BtlSkillBase_C_CalcCylinderLocation, Btl_Actor) == 0x000000, "Member 'BP_BtlSkillBase_C_CalcCylinderLocation::Btl_Actor' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcCylinderLocation, Height_Type) == 0x000008, "Member 'BP_BtlSkillBase_C_CalcCylinderLocation::Height_Type' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcCylinderLocation, Trans) == 0x000010, "Member 'BP_BtlSkillBase_C_CalcCylinderLocation::Trans' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcCylinderLocation, Trans_Work) == 0x000040, "Member 'BP_BtlSkillBase_C_CalcCylinderLocation::Trans_Work' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcCylinderLocation, K2Node_SwitchEnum_CmpSuccess) == 0x000070, "Member 'BP_BtlSkillBase_C_CalcCylinderLocation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcCylinderLocation, K2Node_MakeArray_Array) == 0x000078, "Member 'BP_BtlSkillBase_C_CalcCylinderLocation::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcCylinderLocation, CallFunc_MakeCylinder_Bottom_Center) == 0x000088, "Member 'BP_BtlSkillBase_C_CalcCylinderLocation::CallFunc_MakeCylinder_Bottom_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcCylinderLocation, CallFunc_MakeCylinder_Radius) == 0x000094, "Member 'BP_BtlSkillBase_C_CalcCylinderLocation::CallFunc_MakeCylinder_Radius' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcCylinderLocation, CallFunc_MakeCylinder_Height) == 0x000098, "Member 'BP_BtlSkillBase_C_CalcCylinderLocation::CallFunc_MakeCylinder_Height' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcCylinderLocation, CallFunc_BreakVector_X) == 0x00009C, "Member 'BP_BtlSkillBase_C_CalcCylinderLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcCylinderLocation, CallFunc_BreakVector_Y) == 0x0000A0, "Member 'BP_BtlSkillBase_C_CalcCylinderLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcCylinderLocation, CallFunc_BreakVector_Z) == 0x0000A4, "Member 'BP_BtlSkillBase_C_CalcCylinderLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcCylinderLocation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000A8, "Member 'BP_BtlSkillBase_C_CalcCylinderLocation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcCylinderLocation, CallFunc_MakeVector_ReturnValue) == 0x0000AC, "Member 'BP_BtlSkillBase_C_CalcCylinderLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcCylinderLocation, CallFunc_MakeVector_ReturnValue_1) == 0x0000B8, "Member 'BP_BtlSkillBase_C_CalcCylinderLocation::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcCylinderLocation, CallFunc_Conv_VectorToTransform_ReturnValue) == 0x0000D0, "Member 'BP_BtlSkillBase_C_CalcCylinderLocation::CallFunc_Conv_VectorToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcCylinderLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000100, "Member 'BP_BtlSkillBase_C_CalcCylinderLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcCylinderLocation, CallFunc_Conv_VectorToTransform_ReturnValue_1) == 0x000110, "Member 'BP_BtlSkillBase_C_CalcCylinderLocation::CallFunc_Conv_VectorToTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcCylinderLocation, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000140, "Member 'BP_BtlSkillBase_C_CalcCylinderLocation::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcCylinderLocation, CallFunc_MakeVector_ReturnValue_2) == 0x000144, "Member 'BP_BtlSkillBase_C_CalcCylinderLocation::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcCylinderLocation, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000150, "Member 'BP_BtlSkillBase_C_CalcCylinderLocation::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcCylinderLocation, CallFunc_Conv_VectorToTransform_ReturnValue_2) == 0x000160, "Member 'BP_BtlSkillBase_C_CalcCylinderLocation::CallFunc_Conv_VectorToTransform_ReturnValue_2' has a wrong offset!");

// Function BP_BtlSkillBase.BP_BtlSkillBase_C.TurningEnvironment
// 0x0030 (0x0030 - 0x0000)
struct BP_BtlSkillBase_C_TurningEnvironment final
{
public:
	class UBP_BtlEnvironment_C*                   BtlEnv;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlSkillEnvParam                      K2Node_MakeStruct_BtlSkillEnvParam;                // 0x0010(0x0020)()
};
static_assert(alignof(BP_BtlSkillBase_C_TurningEnvironment) == 0x000008, "Wrong alignment on BP_BtlSkillBase_C_TurningEnvironment");
static_assert(sizeof(BP_BtlSkillBase_C_TurningEnvironment) == 0x000030, "Wrong size on BP_BtlSkillBase_C_TurningEnvironment");
static_assert(offsetof(BP_BtlSkillBase_C_TurningEnvironment, BtlEnv) == 0x000000, "Member 'BP_BtlSkillBase_C_TurningEnvironment::BtlEnv' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_TurningEnvironment, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_BtlSkillBase_C_TurningEnvironment::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_TurningEnvironment, CallFunc_Not_PreBool_ReturnValue_1) == 0x000009, "Member 'BP_BtlSkillBase_C_TurningEnvironment::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_TurningEnvironment, CallFunc_Not_PreBool_ReturnValue_2) == 0x00000A, "Member 'BP_BtlSkillBase_C_TurningEnvironment::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_TurningEnvironment, K2Node_MakeStruct_BtlSkillEnvParam) == 0x000010, "Member 'BP_BtlSkillBase_C_TurningEnvironment::K2Node_MakeStruct_BtlSkillEnvParam' has a wrong offset!");

// Function BP_BtlSkillBase.BP_BtlSkillBase_C.GetTargets
// 0x0020 (0x0020 - 0x0000)
struct BP_BtlSkillBase_C_GetTargets final
{
public:
	TArray<class ABP_BtlCharacterBase_C*>         CharaList;                                         // 0x0000(0x0010)(Parm, OutParm)
	TArray<class ABP_BtlCharacterBase_C*>         CallFunc_GetEffectTargetsCharacters_Characters;    // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_BtlSkillBase_C_GetTargets) == 0x000008, "Wrong alignment on BP_BtlSkillBase_C_GetTargets");
static_assert(sizeof(BP_BtlSkillBase_C_GetTargets) == 0x000020, "Wrong size on BP_BtlSkillBase_C_GetTargets");
static_assert(offsetof(BP_BtlSkillBase_C_GetTargets, CharaList) == 0x000000, "Member 'BP_BtlSkillBase_C_GetTargets::CharaList' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_GetTargets, CallFunc_GetEffectTargetsCharacters_Characters) == 0x000010, "Member 'BP_BtlSkillBase_C_GetTargets::CallFunc_GetEffectTargetsCharacters_Characters' has a wrong offset!");

// Function BP_BtlSkillBase.BP_BtlSkillBase_C.CalcDestroyTime
// 0x0088 (0x0088 - 0x0000)
struct BP_BtlSkillBase_C_CalcDestroyTime final
{
public:
	float                                         Work;                                              // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_BtlCharacterBase_C*>         CallFunc_GetTargets_CharaList;                     // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlSkillParam                         CallFunc_Array_Get_Item;                           // 0x0038(0x0038)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtlSkillBase_C_CalcDestroyTime) == 0x000008, "Wrong alignment on BP_BtlSkillBase_C_CalcDestroyTime");
static_assert(sizeof(BP_BtlSkillBase_C_CalcDestroyTime) == 0x000088, "Wrong size on BP_BtlSkillBase_C_CalcDestroyTime");
static_assert(offsetof(BP_BtlSkillBase_C_CalcDestroyTime, Work) == 0x000000, "Member 'BP_BtlSkillBase_C_CalcDestroyTime::Work' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcDestroyTime, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_BtlSkillBase_C_CalcDestroyTime::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcDestroyTime, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_BtlSkillBase_C_CalcDestroyTime::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcDestroyTime, CallFunc_GetTargets_CharaList) == 0x000010, "Member 'BP_BtlSkillBase_C_CalcDestroyTime::CallFunc_GetTargets_CharaList' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcDestroyTime, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_BtlSkillBase_C_CalcDestroyTime::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcDestroyTime, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_BtlSkillBase_C_CalcDestroyTime::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcDestroyTime, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'BP_BtlSkillBase_C_CalcDestroyTime::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcDestroyTime, CallFunc_Max_ReturnValue) == 0x00002C, "Member 'BP_BtlSkillBase_C_CalcDestroyTime::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcDestroyTime, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_BtlSkillBase_C_CalcDestroyTime::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcDestroyTime, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_BtlSkillBase_C_CalcDestroyTime::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcDestroyTime, CallFunc_Array_Length_ReturnValue_1) == 0x000070, "Member 'BP_BtlSkillBase_C_CalcDestroyTime::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcDestroyTime, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000074, "Member 'BP_BtlSkillBase_C_CalcDestroyTime::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcDestroyTime, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BP_BtlSkillBase_C_CalcDestroyTime::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcDestroyTime, CallFunc_Add_FloatFloat_ReturnValue) == 0x00007C, "Member 'BP_BtlSkillBase_C_CalcDestroyTime::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_CalcDestroyTime, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000080, "Member 'BP_BtlSkillBase_C_CalcDestroyTime::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_BtlSkillBase.BP_BtlSkillBase_C.Calc Additional Location
// 0x0160 (0x0160 - 0x0000)
struct BP_BtlSkillBase_C_Calc_Additional_Location final
{
public:
	class ABtlActor*                              Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBtlSkillDirectionTargetType                  Direction;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBtlSkillTargetType                           TargetType;                                        // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Trans;                                             // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotate;                                            // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                Vec1;                                              // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Vec0;                                              // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               WorkRot;                                           // 0x003C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABtlActor*                              Character;                                         // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Work;                                              // 0x0050(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BtlCharacterBase_C*                 CallFunc_GetEnchanter_Character;                   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_BtlCharacterBase_C*>         CallFunc_GetTargets_CharaList;                     // 0x00B0(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_MakeCylinder_Bottom_Center;               // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeCylinder_Radius;                      // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeCylinder_Height;                      // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_2;        // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class ABtlActor*>                      K2Node_MakeArray_Array;                            // 0x0120(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_MakeCylinder_Bottom_Center_1;             // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeCylinder_Radius_1;                    // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeCylinder_Height_1;                    // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlSkillBase_C_Calc_Additional_Location) == 0x000008, "Wrong alignment on BP_BtlSkillBase_C_Calc_Additional_Location");
static_assert(sizeof(BP_BtlSkillBase_C_Calc_Additional_Location) == 0x000160, "Wrong size on BP_BtlSkillBase_C_Calc_Additional_Location");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, Target) == 0x000000, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::Target' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, Direction) == 0x000008, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::Direction' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, TargetType) == 0x000009, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::TargetType' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, Trans) == 0x00000C, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::Trans' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, Rotate) == 0x000018, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::Rotate' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, Vec1) == 0x000024, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::Vec1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, Vec0) == 0x000030, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::Vec0' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, WorkRot) == 0x00003C, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::WorkRot' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, Character) == 0x000048, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::Character' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, Work) == 0x000050, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::Work' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00005C, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00005D, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, CallFunc_Not_PreBool_ReturnValue) == 0x00005E, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00005F, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, CallFunc_BooleanOR_ReturnValue) == 0x000060, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, K2Node_SwitchEnum_CmpSuccess) == 0x000061, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, K2Node_SwitchEnum_CmpSuccess_1) == 0x000062, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, K2Node_SwitchEnum_CmpSuccess_2) == 0x000063, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, CallFunc_GetEnchanter_Character) == 0x000068, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::CallFunc_GetEnchanter_Character' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000070, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00007C, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, CallFunc_BreakVector_X) == 0x000088, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, CallFunc_BreakVector_Y) == 0x00008C, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, CallFunc_BreakVector_Z) == 0x000090, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, CallFunc_MakeVector_ReturnValue) == 0x000094, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x0000A0, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, CallFunc_GetTargets_CharaList) == 0x0000B0, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::CallFunc_GetTargets_CharaList' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, CallFunc_MakeCylinder_Bottom_Center) == 0x0000C0, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::CallFunc_MakeCylinder_Bottom_Center' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, CallFunc_MakeCylinder_Radius) == 0x0000CC, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::CallFunc_MakeCylinder_Radius' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, CallFunc_MakeCylinder_Height) == 0x0000D0, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::CallFunc_MakeCylinder_Height' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, CallFunc_BreakRotator_Roll) == 0x0000D4, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, CallFunc_BreakRotator_Pitch) == 0x0000D8, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, CallFunc_BreakRotator_Yaw) == 0x0000DC, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, CallFunc_BreakVector_X_1) == 0x0000E0, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, CallFunc_BreakVector_Y_1) == 0x0000E4, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, CallFunc_BreakVector_Z_1) == 0x0000E8, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000EC, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, CallFunc_MakeVector_ReturnValue_1) == 0x0000F0, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, CallFunc_MakeRotator_ReturnValue) == 0x0000FC, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, CallFunc_FindLookAtRotation_ReturnValue) == 0x000108, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, CallFunc_K2_GetActorRotation_ReturnValue_2) == 0x000114, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::CallFunc_K2_GetActorRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, K2Node_MakeArray_Array) == 0x000120, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, CallFunc_MakeCylinder_Bottom_Center_1) == 0x000130, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::CallFunc_MakeCylinder_Bottom_Center_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, CallFunc_MakeCylinder_Radius_1) == 0x00013C, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::CallFunc_MakeCylinder_Radius_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, CallFunc_MakeCylinder_Height_1) == 0x000140, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::CallFunc_MakeCylinder_Height_1' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, CallFunc_MakeVector_ReturnValue_2) == 0x000144, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Calc_Additional_Location, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000150, "Member 'BP_BtlSkillBase_C_Calc_Additional_Location::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");

// Function BP_BtlSkillBase.BP_BtlSkillBase_C.Request VFX to Target Group
// 0x0170 (0x0170 - 0x0000)
struct BP_BtlSkillBase_C_Request_VFX_to_Target_Group final
{
public:
	struct FBtlSkillParam                         Skill_Paramater;                                   // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	TArray<class ABtlActor*>                      Targets;                                           // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0050(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	float                                         WaitTime;                                          // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcLocation_Location;                    // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_CalcLocation_Rotation;                    // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E8[0x8];                                       // 0x00E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFBtlSkillRequest                      Temp_struct_Variable;                              // 0x00F0(0x0070)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlSkillBase_C_Request_VFX_to_Target_Group) == 0x000010, "Wrong alignment on BP_BtlSkillBase_C_Request_VFX_to_Target_Group");
static_assert(sizeof(BP_BtlSkillBase_C_Request_VFX_to_Target_Group) == 0x000170, "Wrong size on BP_BtlSkillBase_C_Request_VFX_to_Target_Group");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Target_Group, Skill_Paramater) == 0x000000, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Target_Group::Skill_Paramater' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Target_Group, Targets) == 0x000038, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Target_Group::Targets' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Target_Group, Transform) == 0x000050, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Target_Group::Transform' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Target_Group, WaitTime) == 0x000080, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Target_Group::WaitTime' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Target_Group, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Target_Group::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Target_Group, CallFunc_Greater_IntInt_ReturnValue) == 0x000088, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Target_Group::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Target_Group, CallFunc_MakeVector_ReturnValue) == 0x00008C, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Target_Group::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Target_Group, CallFunc_CalcLocation_Location) == 0x000098, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Target_Group::CallFunc_CalcLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Target_Group, CallFunc_CalcLocation_Rotation) == 0x0000A4, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Target_Group::CallFunc_CalcLocation_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Target_Group, CallFunc_MakeTransform_ReturnValue) == 0x0000B0, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Target_Group::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Target_Group, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000E0, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Target_Group::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Target_Group, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000E4, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Target_Group::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Target_Group, Temp_struct_Variable) == 0x0000F0, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Target_Group::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Target_Group, CallFunc_Add_FloatFloat_ReturnValue) == 0x000160, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Target_Group::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_Request_VFX_to_Target_Group, CallFunc_Array_Add_ReturnValue) == 0x000164, "Member 'BP_BtlSkillBase_C_Request_VFX_to_Target_Group::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_BtlSkillBase.BP_BtlSkillBase_C.GetEnchanter
// 0x0010 (0x0010 - 0x0000)
struct BP_BtlSkillBase_C_GetEnchanter final
{
public:
	class ABP_BtlCharacterBase_C*                 Character;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BtlCharacterBase_C*                 CallFunc_GetMain_Character;                        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtlSkillBase_C_GetEnchanter) == 0x000008, "Wrong alignment on BP_BtlSkillBase_C_GetEnchanter");
static_assert(sizeof(BP_BtlSkillBase_C_GetEnchanter) == 0x000010, "Wrong size on BP_BtlSkillBase_C_GetEnchanter");
static_assert(offsetof(BP_BtlSkillBase_C_GetEnchanter, Character) == 0x000000, "Member 'BP_BtlSkillBase_C_GetEnchanter::Character' has a wrong offset!");
static_assert(offsetof(BP_BtlSkillBase_C_GetEnchanter, CallFunc_GetMain_Character) == 0x000008, "Member 'BP_BtlSkillBase_C_GetEnchanter::CallFunc_GetMain_Character' has a wrong offset!");

}

