#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_ABPCostume

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPFL_ABPCostume.BPFL_ABPCostume_C
// 0x0000 (0x0028 - 0x0028)
class UBPFL_ABPCostume_C final : public UBlueprintFunctionLibrary
{
public:
	static void GetSkirtVectors(class APawn* PawnOwner, class FName SkirtRootName, class FName SkirtRootEndName, class FName SkirtRootParentName, float SkirtRootZcoff_In, float SkirtRootYcoff_In, class UObject* __WorldContext, struct FVector2D* LeftLegSkirtBS_Out, struct FVector2D* RightLegSkirtBS_Out, struct FRotator* SkirtRootRot_Out);
	static void Get2Dvector(const struct FVector& LegInput, float BS_UnitValue, const struct FVector& SpineInput, class UObject* __WorldContext, struct FVector2D* OutPutVector, class FString* DebugParam);
	static void GetAngleBetween(const struct FVector& InBetweenVector, const struct FVector& InTargetVector, bool ConstraintXZ, bool ConstraintXY, class UObject* __WorldContext, float* OutAngle);

	void Get_Leg_Rotate_From_Skirt_Vector(bool CalcDirection_L_, class USkeletalMeshComponent* SkeletalMesh, class UAnimInstance* AnimInstance, class FName InUpLegName, class FName InPreserveUpLegName, class UObject* __WorldContext, float* RotateZ, float* RotateY);
	void Get_Matrix(class AActor* Actor, class FName SocketName, ERelativeTransformSpace TransformSpace, bool Inverse, class UObject* __WorldContext, struct FMatrix* Matrix);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPFL_ABPCostume_C">();
	}
	static class UBPFL_ABPCostume_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPFL_ABPCostume_C>();
	}
};
static_assert(alignof(UBPFL_ABPCostume_C) == 0x000008, "Wrong alignment on UBPFL_ABPCostume_C");
static_assert(sizeof(UBPFL_ABPCostume_C) == 0x000028, "Wrong size on UBPFL_ABPCostume_C");

}

