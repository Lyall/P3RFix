#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SprAssetPlugin

#include "Basic.hpp"


namespace SDK
{

// ScriptStruct SprAssetPlugin.SprData
// 0x0040 (0x0040 - 0x0000)
struct FSprData final
{
public:
	float                                         Width;                                             // 0x0000(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Height;                                            // 0x0004(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         U0;                                                // 0x0008(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         V0;                                                // 0x000C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         U1;                                                // 0x0010(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         V1;                                                // 0x0014(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture*                               Texture;                                           // 0x0018(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        RGBA[0x4];                                         // 0x0020(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int16                                         StretchLen[0x4];                                   // 0x0030(0x0002)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        ScalingSize[0x2];                                  // 0x0038(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSprData) == 0x000008, "Wrong alignment on FSprData");
static_assert(sizeof(FSprData) == 0x000040, "Wrong size on FSprData");
static_assert(offsetof(FSprData, Width) == 0x000000, "Member 'FSprData::Width' has a wrong offset!");
static_assert(offsetof(FSprData, Height) == 0x000004, "Member 'FSprData::Height' has a wrong offset!");
static_assert(offsetof(FSprData, U0) == 0x000008, "Member 'FSprData::U0' has a wrong offset!");
static_assert(offsetof(FSprData, V0) == 0x00000C, "Member 'FSprData::V0' has a wrong offset!");
static_assert(offsetof(FSprData, U1) == 0x000010, "Member 'FSprData::U1' has a wrong offset!");
static_assert(offsetof(FSprData, V1) == 0x000014, "Member 'FSprData::V1' has a wrong offset!");
static_assert(offsetof(FSprData, Texture) == 0x000018, "Member 'FSprData::Texture' has a wrong offset!");
static_assert(offsetof(FSprData, RGBA) == 0x000020, "Member 'FSprData::RGBA' has a wrong offset!");
static_assert(offsetof(FSprData, StretchLen) == 0x000030, "Member 'FSprData::StretchLen' has a wrong offset!");
static_assert(offsetof(FSprData, ScalingSize) == 0x000038, "Member 'FSprData::ScalingSize' has a wrong offset!");

// ScriptStruct SprAssetPlugin.SprDataArray
// 0x0010 (0x0010 - 0x0000)
struct FSprDataArray final
{
public:
	TArray<struct FSprData>                       SprDatas;                                          // 0x0000(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSprDataArray) == 0x000008, "Wrong alignment on FSprDataArray");
static_assert(sizeof(FSprDataArray) == 0x000010, "Wrong size on FSprDataArray");
static_assert(offsetof(FSprDataArray, SprDatas) == 0x000000, "Member 'FSprDataArray::SprDatas' has a wrong offset!");

}

