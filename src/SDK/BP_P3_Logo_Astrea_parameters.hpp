#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_P3_Logo_Astrea

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_P3_Logo_Astrea.BP_P3_Logo_Astrea_C.ExecuteUbergraph_BP_P3_Logo_Astrea
// 0x0014 (0x0014 - 0x0000)
struct BP_P3_Logo_Astrea_C_ExecuteUbergraph_BP_P3_Logo_Astrea final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameClear_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAlpha_ReturnValue;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_P3_Logo_Astrea_C_ExecuteUbergraph_BP_P3_Logo_Astrea) == 0x000004, "Wrong alignment on BP_P3_Logo_Astrea_C_ExecuteUbergraph_BP_P3_Logo_Astrea");
static_assert(sizeof(BP_P3_Logo_Astrea_C_ExecuteUbergraph_BP_P3_Logo_Astrea) == 0x000014, "Wrong size on BP_P3_Logo_Astrea_C_ExecuteUbergraph_BP_P3_Logo_Astrea");
static_assert(offsetof(BP_P3_Logo_Astrea_C_ExecuteUbergraph_BP_P3_Logo_Astrea, EntryPoint) == 0x000000, "Member 'BP_P3_Logo_Astrea_C_ExecuteUbergraph_BP_P3_Logo_Astrea::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_P3_Logo_Astrea_C_ExecuteUbergraph_BP_P3_Logo_Astrea, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_P3_Logo_Astrea_C_ExecuteUbergraph_BP_P3_Logo_Astrea::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_P3_Logo_Astrea_C_ExecuteUbergraph_BP_P3_Logo_Astrea, CallFunc_IsGameClear_ReturnValue) == 0x000005, "Member 'BP_P3_Logo_Astrea_C_ExecuteUbergraph_BP_P3_Logo_Astrea::CallFunc_IsGameClear_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_P3_Logo_Astrea_C_ExecuteUbergraph_BP_P3_Logo_Astrea, CallFunc_GetAlpha_ReturnValue) == 0x000008, "Member 'BP_P3_Logo_Astrea_C_ExecuteUbergraph_BP_P3_Logo_Astrea::CallFunc_GetAlpha_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_P3_Logo_Astrea_C_ExecuteUbergraph_BP_P3_Logo_Astrea, K2Node_Event_DeltaSeconds) == 0x00000C, "Member 'BP_P3_Logo_Astrea_C_ExecuteUbergraph_BP_P3_Logo_Astrea::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_P3_Logo_Astrea_C_ExecuteUbergraph_BP_P3_Logo_Astrea, CallFunc_IsValid_ReturnValue_1) == 0x000010, "Member 'BP_P3_Logo_Astrea_C_ExecuteUbergraph_BP_P3_Logo_Astrea::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_P3_Logo_Astrea.BP_P3_Logo_Astrea_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_P3_Logo_Astrea_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_P3_Logo_Astrea_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_P3_Logo_Astrea_C_ReceiveTick");
static_assert(sizeof(BP_P3_Logo_Astrea_C_ReceiveTick) == 0x000004, "Wrong size on BP_P3_Logo_Astrea_C_ReceiveTick");
static_assert(offsetof(BP_P3_Logo_Astrea_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_P3_Logo_Astrea_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_P3_Logo_Astrea.BP_P3_Logo_Astrea_C.Set Visiblity Logo
// 0x0002 (0x0002 - 0x0000)
struct BP_P3_Logo_Astrea_C_Set_Visiblity_Logo final
{
public:
	bool                                          IsClear;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_P3_Logo_Astrea_C_Set_Visiblity_Logo) == 0x000001, "Wrong alignment on BP_P3_Logo_Astrea_C_Set_Visiblity_Logo");
static_assert(sizeof(BP_P3_Logo_Astrea_C_Set_Visiblity_Logo) == 0x000002, "Wrong size on BP_P3_Logo_Astrea_C_Set_Visiblity_Logo");
static_assert(offsetof(BP_P3_Logo_Astrea_C_Set_Visiblity_Logo, IsClear) == 0x000000, "Member 'BP_P3_Logo_Astrea_C_Set_Visiblity_Logo::IsClear' has a wrong offset!");
static_assert(offsetof(BP_P3_Logo_Astrea_C_Set_Visiblity_Logo, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_P3_Logo_Astrea_C_Set_Visiblity_Logo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_P3_Logo_Astrea.BP_P3_Logo_Astrea_C.InitLogo
// 0x0038 (0x0038 - 0x0000)
struct BP_P3_Logo_Astrea_C_InitLogo final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GWorkIsEFIGSLanguages_ReturnValue;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GWorkIsEFIGSLanguages_ReturnValue_1;      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_1;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Select_Default_2;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   K2Node_Select_Default_3;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_P3_Logo_Astrea_C_InitLogo) == 0x000008, "Wrong alignment on BP_P3_Logo_Astrea_C_InitLogo");
static_assert(sizeof(BP_P3_Logo_Astrea_C_InitLogo) == 0x000038, "Wrong size on BP_P3_Logo_Astrea_C_InitLogo");
static_assert(offsetof(BP_P3_Logo_Astrea_C_InitLogo, Temp_bool_Variable) == 0x000000, "Member 'BP_P3_Logo_Astrea_C_InitLogo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_P3_Logo_Astrea_C_InitLogo, Temp_bool_Variable_1) == 0x000001, "Member 'BP_P3_Logo_Astrea_C_InitLogo::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_P3_Logo_Astrea_C_InitLogo, Temp_bool_Variable_2) == 0x000002, "Member 'BP_P3_Logo_Astrea_C_InitLogo::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_P3_Logo_Astrea_C_InitLogo, CallFunc_GWorkIsEFIGSLanguages_ReturnValue) == 0x000003, "Member 'BP_P3_Logo_Astrea_C_InitLogo::CallFunc_GWorkIsEFIGSLanguages_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_P3_Logo_Astrea_C_InitLogo, CallFunc_GWorkIsEFIGSLanguages_ReturnValue_1) == 0x000004, "Member 'BP_P3_Logo_Astrea_C_InitLogo::CallFunc_GWorkIsEFIGSLanguages_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_P3_Logo_Astrea_C_InitLogo, Temp_bool_Variable_3) == 0x000005, "Member 'BP_P3_Logo_Astrea_C_InitLogo::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_P3_Logo_Astrea_C_InitLogo, K2Node_Select_Default) == 0x000008, "Member 'BP_P3_Logo_Astrea_C_InitLogo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_P3_Logo_Astrea_C_InitLogo, K2Node_Select_Default_1) == 0x000010, "Member 'BP_P3_Logo_Astrea_C_InitLogo::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_P3_Logo_Astrea_C_InitLogo, K2Node_Select_Default_2) == 0x000018, "Member 'BP_P3_Logo_Astrea_C_InitLogo::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_P3_Logo_Astrea_C_InitLogo, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000020, "Member 'BP_P3_Logo_Astrea_C_InitLogo::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_P3_Logo_Astrea_C_InitLogo, K2Node_Select_Default_3) == 0x000028, "Member 'BP_P3_Logo_Astrea_C_InitLogo::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_P3_Logo_Astrea_C_InitLogo, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000030, "Member 'BP_P3_Logo_Astrea_C_InitLogo::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");

}

