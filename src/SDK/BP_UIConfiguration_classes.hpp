#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UIConfiguration

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Xrd777_structs.hpp"
#include "Xrd777_classes.hpp"
#include "FEqualizerSettings_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_UIConfiguration.BP_UIConfiguration_C
// 0x0F10 (0x15A0 - 0x0690)
class ABP_UIConfiguration_C final : public AUIConfigurationDraw
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0690(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAppCalculaterComponent*                AppCalculater;                                     // 0x0698(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x06A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      BGMaterial;                                        // 0x06A8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               BGMaterialInstDy;                                  // 0x06D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                BaseSprAssetObject;                                // 0x06D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                BaseSprAssetObjectAstrea;                          // 0x06E0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                BasePlgAssetObject;                                // 0x06E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 _;                                                 // 0x06F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 __0;                                               // 0x06F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 Pr;                                                // 0x06F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 I___P1;                                            // 0x06FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 I___P2;                                            // 0x0700(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_704[0x4];                                      // 0x0704(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFEqualizerSettings>            EqualizerSettings;                                 // 0x0708(0x0010)(Edit, BlueprintVisible)
	struct FVector2D                              ___s0w__A_;                                        // 0x0718(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ___w__B_;                                          // 0x0720(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              _001____s0______;                                  // 0x0728(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              _002_info__;                                       // 0x0730(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              _003______;                                        // 0x0738(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ____w__C_;                                         // 0x0740(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ON______;                                          // 0x0748(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              OFF______;                                         // 0x0750(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ON_______0;                                        // 0x0758(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              OFF_______0;                                       // 0x0760(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ONOFF______;                                       // 0x0768(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              _____0__;                                          // 0x0770(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ___H_Min__;                                        // 0x0778(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ___H_Max__;                                        // 0x0780(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              _____;                                             // 0x0788(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ____0__;                                           // 0x0790(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              _p___;                                             // 0x0798(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              _p____0;                                           // 0x07A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              _____________;                                     // 0x07A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              __________;                                        // 0x07B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              _________;                                         // 0x07B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ________0__;                                       // 0x07C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ______;                                            // 0x07C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              _____0___0;                                        // 0x07D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ______0;                                           // 0x07D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ____w__D_;                                         // 0x07DC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              _______0;                                          // 0x07E4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              _____0___1;                                        // 0x07EC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              _____0Z_W__;                                       // 0x07F4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              _o______w__E_;                                     // 0x07FC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              _021_____;                                         // 0x0804(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CONFIG__;                                          // 0x080C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              R_0__;                                             // 0x0814(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              _b___w__F_;                                        // 0x081C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              _________W__;                                      // 0x0824(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ___W__;                                            // 0x082C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              _______;                                           // 0x0834(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ___w__G_;                                          // 0x083C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 _____0d;                                           // 0x0844(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      BrightnessPreview;                                 // 0x0848(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               BrightnessPreviewInstDy;                           // 0x0870(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              BGM__;                                             // 0x0878(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              SET__;                                             // 0x0880(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ____;                                              // 0x0888(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              __h___;                                            // 0x0890(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              __h_Z_W__;                                         // 0x0898(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              __________0;                                       // 0x08A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              _______B;                                          // 0x08A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ____Z_W___B;                                       // 0x08B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PLAYLIST__;                                        // 0x08B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Minus__w__H_;                                      // 0x08C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ________;                                          // 0x08C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              _____B;                                            // 0x08D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              _tMinus______;                                     // 0x08D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              _tMinus____Z_W__;                                  // 0x08E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Minus_Minus______;                                 // 0x08E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ___0__;                                            // 0x08F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              R_0___B;                                           // 0x08F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      ConfEqualizer01;                                   // 0x0900(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               ConfEqualizer01InstDy;                             // 0x0928(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      ConfEqualizer02;                                   // 0x0930(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               ConfEqualizer02InstDy;                             // 0x0958(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      ConfEqualizer03;                                   // 0x0960(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               ConfEqualizer03InstDy;                             // 0x0988(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ______1__;                                         // 0x0990(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ______2__;                                         // 0x0998(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ______3__;                                         // 0x09A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      BGMonoMaterial;                                    // 0x09A8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               BGMonoMaterialDy;                                  // 0x09D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle;                                             // 0x09D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9DC[0x4];                                      // 0x09DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            LinearCurves;                                      // 0x09E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _____INhS____;                                     // 0x09E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ConfAnimFrame;                                     // 0x09EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInAnimFinished;                                  // 0x09F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9F1[0x3];                                      // 0x09F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FConfigAnimParams                      __;                                                // 0x09F4(0x0034)(Edit, BlueprintVisible, NoDestructor)
	struct FConfigAnimParams                      ________0R_;                                       // 0x0A28(0x0034)(Edit, BlueprintVisible, NoDestructor)
	struct FConfigAnimParams                      ________0;                                         // 0x0A5C(0x0034)(Edit, BlueprintVisible, NoDestructor)
	TArray<struct FConfigAnimParams>              _______________;                                   // 0x0A90(0x0010)(Edit, BlueprintVisible)
	struct FConfigAnimParams                      ______________Z_W;                                 // 0x0AA0(0x0034)(Edit, BlueprintVisible, NoDestructor)
	struct FVector2D                              ________1;                                         // 0x0AD4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ADC[0x4];                                      // 0x0ADC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            DecelerateCurves;                                  // 0x0AE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              _0R______;                                         // 0x0AE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ____________;                                      // 0x0AF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ___________;                                       // 0x0AF8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AFC[0x4];                                      // 0x0AFC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector2D>                      _________0;                                        // 0x0B00(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<float>                                 ________2;                                         // 0x0B10(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector2D                              ____Z_W_____;                                      // 0x0B20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ____Z_W____;                                       // 0x0B28(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FConfigAnimParams                      _________Z_W__;                                    // 0x0B2C(0x0034)(Edit, BlueprintVisible, NoDestructor)
	bool                                          IsInGrowFinished;                                  // 0x0B60(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B61[0x3];                                      // 0x0B61(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FConfigAnimParams                      _____Ii____;                                       // 0x0B64(0x0034)(Edit, BlueprintVisible, NoDestructor)
	struct FConfigAnimParams                      _____Ii__;                                         // 0x0B98(0x0034)(Edit, BlueprintVisible, NoDestructor)
	struct FConfigAnimParams                      _____Ii___0;                                       // 0x0BCC(0x0034)(Edit, BlueprintVisible, NoDestructor)
	struct FVector2D                              Ii____;                                            // 0x0C00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrowInAnimFrame;                                   // 0x0C08(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Ii_____0;                                          // 0x0C0C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Ii_______;                                         // 0x0C10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrowMoveAnimFrame;                                 // 0x0C18(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1C[0x4];                                      // 0x0C1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            BoundCurves;                                       // 0x0C20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrowFlickeringAnimFrame;                           // 0x0C28(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FConfigAnimParams                      ___________H;                                      // 0x0C2C(0x0034)(Edit, BlueprintVisible, NoDestructor)
	struct FConfigAnimParams                      _______p;                                          // 0x0C60(0x0034)(Edit, BlueprintVisible, NoDestructor)
	struct FConfigAnimParams                      _______p_0;                                        // 0x0C94(0x0034)(Edit, BlueprintVisible, NoDestructor)
	float                                         CursorMoveAnimFrame;                               // 0x0CC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              _____0Z_W___0;                                     // 0x0CCC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FlagChangeAnimFrame;                               // 0x0CD4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              __________1;                                       // 0x0CD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LArrowInAnimFrame;                                 // 0x0CE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RArrowInAnimFrame;                                 // 0x0CE4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              __p_____;                                          // 0x0CE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              __p______0;                                        // 0x0CF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FConfigAnimParams                      _______U_t_____;                                   // 0x0CF8(0x0034)(Edit, BlueprintVisible, NoDestructor)
	struct FConfigAnimParams                      ___0;                                              // 0x0D2C(0x0034)(Edit, BlueprintVisible, NoDestructor)
	struct FConfigAnimParams                      _______U_t______;                                  // 0x0D60(0x0034)(Edit, BlueprintVisible, NoDestructor)
	float                                         BrightnessInAnimFrame;                             // 0x0D94(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              __U_t_______;                                      // 0x0D98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         __U_t________0;                                    // 0x0DA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         __U_t____;                                         // 0x0DA4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BrightnessOutAnimFrame;                            // 0x0DA8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTime;                                         // 0x0DAC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BGMINhS____;                                       // 0x0DB0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BgmAnimFrame;                                      // 0x0DB4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBgmInAnimFinished;                               // 0x0DB8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DB9[0x3];                                      // 0x0DB9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FConfigAnimParams                      ________3;                                         // 0x0DBC(0x0034)(Edit, BlueprintVisible, NoDestructor)
	struct FConfigAnimParams                      ___1;                                              // 0x0DF0(0x0034)(Edit, BlueprintVisible, NoDestructor)
	float                                         _______1;                                          // 0x0E24(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ConfINhS____;                                      // 0x0E28(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ConfInAnimFrame;                                   // 0x0E2C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsConfInAnimFinished;                              // 0x0E30(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E31[0x3];                                      // 0x0E31(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FConfigAnimParams                      ________4;                                         // 0x0E34(0x0034)(Edit, BlueprintVisible, NoDestructor)
	struct FConfigAnimParams                      _C2B_BGM__0R_;                                     // 0x0E68(0x0034)(Edit, BlueprintVisible, NoDestructor)
	struct FConfigAnimParams                      _C2B_BGM___lq;                                     // 0x0E9C(0x0034)(Edit, BlueprintVisible, NoDestructor)
	struct FVector2D                              __lq_____;                                         // 0x0ED0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FConfigAnimParams                      _C2B_BGM_Ii;                                       // 0x0ED8(0x0034)(Edit, BlueprintVisible, NoDestructor)
	struct FConfigAnimParams                      _C2B_BGM________;                                  // 0x0F0C(0x0034)(Edit, BlueprintVisible, NoDestructor)
	TArray<struct FConfigAnimParams>              _C2B_BGM____;                                      // 0x0F40(0x0010)(Edit, BlueprintVisible)
	TArray<struct FVector2D>                      _BGM_________;                                     // 0x0F50(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<float>                                 _BGM________;                                      // 0x0F60(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector2D                              _____________0;                                    // 0x0F70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ____________0;                                     // 0x0F78(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              _039__________;                                    // 0x0F7C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FConfigAnimParams                      _C2B_BGM_Minus__;                                  // 0x0F84(0x0034)(Edit, BlueprintVisible, NoDestructor)
	struct FVector2D                              Minus_______;                                      // 0x0FB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Minus______;                                       // 0x0FC0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FConfigAnimParams                      _C2B_BGM_____Z_W;                                  // 0x0FC4(0x0034)(Edit, BlueprintVisible, NoDestructor)
	int32                                         SEThS____;                                         // 0x0FF8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FConfigAnimParams                      _______SET;                                        // 0x0FFC(0x0034)(Edit, BlueprintVisible, NoDestructor)
	struct FConfigAnimParams                      ________SET;                                       // 0x1030(0x0034)(Edit, BlueprintVisible, NoDestructor)
	bool                                          IsSetAnimFinished;                                 // 0x1064(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1065[0x3];                                     // 0x1065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SetAnimFrame;                                      // 0x1068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              SET_IN______;                                      // 0x106C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SET_IN_____;                                       // 0x1074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SET_OUT_____;                                      // 0x1078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimSetIndex;                                      // 0x107C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayingAnimFinished;                             // 0x1080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1081[0x3];                                     // 0x1081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FConfigAnimParams                      ________tMinus;                                    // 0x1084(0x0034)(Edit, BlueprintVisible, NoDestructor)
	struct FConfigAnimParams                      _________tMinus;                                   // 0x10B8(0x0034)(Edit, BlueprintVisible, NoDestructor)
	struct FConfigAnimParams                      ______t;                                           // 0x10EC(0x0034)(Edit, BlueprintVisible, NoDestructor)
	float                                         PlayingInAnimFrame;                                // 0x1120(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ___OUT_____;                                       // 0x1124(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ___IN_____;                                        // 0x1128(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ________5;                                         // 0x112C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimPlayingIndex;                                  // 0x1134(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ______1;                                           // 0x1138(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ________6;                                         // 0x113C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayingAnimFrame;                                  // 0x1140(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FConfigAnimParams                      ______________0;                                   // 0x1144(0x0034)(Edit, BlueprintVisible, NoDestructor)
	struct FConfigAnimParams                      ______________;                                    // 0x1178(0x0034)(Edit, BlueprintVisible, NoDestructor)
	struct FConfigAnimParams                      ____________1;                                     // 0x11AC(0x0034)(Edit, BlueprintVisible, NoDestructor)
	float                                         EqualizerAnimFrame;                                // 0x11E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEqualizerInAnimFinished;                         // 0x11E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsEqualizerOutAnimFinished;                        // 0x11E5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsEqualizerChangeAnimFinished;                     // 0x11E6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11E7[0x1];                                     // 0x11E7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ____________2;                                     // 0x11E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _______Speed;                                      // 0x11EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _______Color;                                      // 0x11F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FConfigAnimParams                      ___2;                                              // 0x11F4(0x0034)(Edit, BlueprintVisible, NoDestructor)
	struct FConfigAnimParams                      _B2C________0R_;                                   // 0x1228(0x0034)(Edit, BlueprintVisible, NoDestructor)
	struct FConfigAnimParams                      _B2C_________lq;                                   // 0x125C(0x0034)(Edit, BlueprintVisible, NoDestructor)
	struct FConfigAnimParams                      _B2C_______Ii;                                     // 0x1290(0x0034)(Edit, BlueprintVisible, NoDestructor)
	struct FConfigAnimParams                      _B2C___________Z_W;                                // 0x12C4(0x0034)(Edit, BlueprintVisible, NoDestructor)
	struct FConfigAnimParams                      _B2C_BGM________;                                  // 0x12F8(0x0034)(Edit, BlueprintVisible, NoDestructor)
	struct FConfigAnimParams                      _B2C_BGM____;                                      // 0x132C(0x0034)(Edit, BlueprintVisible, NoDestructor)
	struct FConfigAnimParams                      _B2C_BGM_Minus__;                                  // 0x1360(0x0034)(Edit, BlueprintVisible, NoDestructor)
	int32                                         _____OUThS____;                                    // 0x1394(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ConfOutAnimFrame;                                  // 0x1398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOutAnimFinished;                                 // 0x139C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139D[0x3];                                     // 0x139D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              _________1;                                        // 0x13A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              BGM___;                                            // 0x13A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CampCharaRT;                                       // 0x13B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13B4[0x4];                                     // 0x13B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 BgRenderTextre;                                    // 0x13B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BrightnessPow;                                     // 0x13C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ___A__;                                            // 0x13C4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ___B__;                                            // 0x13CC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13D4[0x4];                                     // 0x13D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 UimAsset;                                          // 0x13D8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         UimFrame;                                          // 0x1400(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1404[0x4];                                     // 0x1404(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      RenderMat;                                         // 0x1408(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               RenderMatDy;                                       // 0x1430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAppCalculaterComponentWork            Calculater_List;                                   // 0x1438(0x0018)(Edit, BlueprintVisible)
	uint8                                         In_Color_B;                                        // 0x1450(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         In_Color_G;                                        // 0x1451(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         In_Color_R;                                        // 0x1452(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1453[0x1];                                     // 0x1453(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              OffsetIi__;                                        // 0x1454(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Ii_____1;                                          // 0x145C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Ii__;                                              // 0x1460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OffsetIi____;                                      // 0x1468(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IiTimer;                                           // 0x146C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         In_BGMMove_Frame;                                  // 0x1470(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Ii________0;                                       // 0x1474(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         In_Move_FrameScale;                                // 0x1478(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_147C[0x4];                                     // 0x147C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAppCalculaterComponentWork            BGMAlphaWork;                                      // 0x1480(0x0018)(Edit, BlueprintVisible)
	int32                                         IiAlphaFrame;                                      // 0x1498(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Next_Wait_Alpha_Frame;                             // 0x149C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Next_Alpha_Move_Frame;                             // 0x14A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AlphaMoveFrame;                                    // 0x14A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Dst_Alpha_Value;                                   // 0x14A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              _b________;                                        // 0x14AC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 _b_______;                                         // 0x14B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FConfigAnimParams                      ________b___Z_W;                                   // 0x14B8(0x0034)(Edit, BlueprintVisible, NoDestructor)
	float                                         Animated_Value;                                    // 0x14EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InHelpWait_Frame;                                  // 0x14F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ConfAnimHelpFrame;                                 // 0x14F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 _b________0;                                       // 0x14F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHelpDraw;                                        // 0x14FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14FD[0x3];                                     // 0x14FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              PlusIi0OS;                                         // 0x1500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ConfigMovePlusPos;                                 // 0x1508(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              BGMMovePlusPos;                                    // 0x1510(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InBGMPlusOffsetFrame;                              // 0x1518(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InBGMOffsetFrame;                                  // 0x151C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InConfigOffsetFrame;                               // 0x1520(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDrawInSet;                                       // 0x1524(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1525[0x3];                                     // 0x1525(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OffsetIndex;                                       // 0x1528(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         New_Local_Var_4;                                   // 0x152C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsChangeAnimFinished;                              // 0x1530(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1531[0x3];                                     // 0x1531(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FConfigAnimParams                      ________7;                                         // 0x1534(0x0034)(Edit, BlueprintVisible, NoDestructor)
	TSoftObjectPtr<class UMaterialInterface>      BrightnessPreviewAstrea;                           // 0x1568(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               BrightnessPreviewInstDyAstrea;                     // 0x1590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                BaseSprAssetObjectEx;                              // 0x1598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_UIConfiguration(int32 EntryPoint);
	void ReceiveBeginPlay();
	void OnLoaded_1714D7E14A13D709135C79896AF74639(class UObject* Loaded);
	void OnLoaded_489A017D4C77D04BA5A71DBB57B9E315(class UObject* Loaded);
	void OnLoaded_3ECDA16B4C5006283D90FE9611CA505F(class UObject* Loaded);
	void OnLoaded_694C5D9D446006DF320831B0397F4D17(class UObject* Loaded);
	void OnLoaded_3E7A6270477F0CD7076FFF81AAEEA339(class UObject* Loaded);
	void OnLoaded_4B6D24F74DB86C733E9F23827D16783C(class UObject* Loaded);
	void OnLoaded_B2842006413FBBBAA8AF718E759679B3(class UObject* Loaded);
	void OnLoaded_6A26AE0D4DA7295D0598C8B5D7E7AE29(class UObject* Loaded);
	void OnLoaded_C6F299164BCA72934F0F218FF612AEDE(class UObject* Loaded);
	bool StateDraw_Update(float DeltaTime_0);
	bool StateDraw_BG();
	bool StateDraw_Main();
	bool StateDraw_IN();
	bool StateDraw_Close();
	bool StateDraw_BGMSelect();
	void GetAlphaRateColor(const struct FColor& InColor, float B, struct FColor* OutColor);
	void GetSprData(class USprAsset** SprData);
	void GetPlgData(class UPlgAsset** OutSprData);
	bool StateDraw_ListItem(int32 InMenueID, int32 InListIndex);
	bool Start_InAnim();
	bool Start_ToBGMAnim();
	bool Start_ToConfAnim();
	bool Start_CloseAnim();
	bool On_CursorIndexChanged(int32 InCursorIndex, int32 InListTopIndex);
	bool On_CursorIndexChanged_BGM(int32 InCursorIndex, int32 InListTopIndex);
	bool On_BgmSetIndexChanged(int32 InSetIndex);
	bool On_ValueChanged(int32 InMenueID, bool InFlag, int32 InValue);
	bool On_PlayingIndexChanged(int32 InPlayingIndex);
	void Draw_Cursor();
	void Get_List_Pos(const struct FVector2D& BasePos, int32 ListIndex, struct FVector2D* OutPos);
	void Value_Select_Draw(const struct FDrawConfigParam& DrawConfigParam, int32 ListIndex);
	void Flag_Select_Draw(const struct FDrawConfigParam& DrawConfigParam, int32 ListIndex);
	void Lang_Select_Draw(const struct FDrawConfigParam& DrawConfigParam, int32 ListIndex);
	void Diff_Select_Draw(const struct FDrawConfigParam& DrawConfigParam, int32 ListIndex);
	void BGM_Select_Draw(const struct FDrawConfigParam& DrawConfigParam, int32 ListIndex);
	void DrawScrollBar();
	void Draw_Brightness_Preview();
	void Draw_Cursor_BGM();
	void Get_Bgm_Settings(int32 BgmId, int32* IconType, float* SpeedType, float* ColorType, bool* IsTextureEx);
	void Get_Bgm_List_Pos(const struct FVector2D& B, int32 A, float* X, float* Y);
	void Draw_Hero_Cap();
	void Draw_Equalizer();
	void GetAnimatedParam(float Anim_Time, struct FConfigAnimParams& Anim_Param_Data, class UCurveFloat*& Curve, bool IsNotUseEndParam, struct FVector2D* AnimatedPos, struct FColor* AnimatedColor, float* AnimatedAngle, float* AnimatedValue);
	void GetEqualizerPosParam(const struct FVector2D& BasePos, float InW, float InH, float* X, float* Y, float* W, float* H);
	void In_Anim_Task();
	void Equalizer_Anim_Task();
	void Draw_Scroll_Bar_BGM();
	void Grow_Anim_Task();
	void Get_Cursor_Anim_Task();
	void Value_Change_Anim_Task();
	void Brightness_Anim_Task();
	void Conf_to_Bgm_Anim_Task();
	void Bgm_to_Conf_Anim_Task();
	void Set_Anim_Task();
	void Playing_Anim_Task();
	void Wipe_Anim_Task();
	void ColorPow(const struct FColor& InColor, struct FColor* OutColor);
	void Draw_Glow();
	void DrawPlayList();
	void IsDrawEaualizer();
	void IsPlayBGMNow(bool* NewParam);
	void DrawBGMLogo(const struct FColor& NewParam);
	void DrawConfigLogo(const struct FColor& NewParam);
	bool StateBGMDraw_In();
	void SetBGMScaleLocation();
	void Get_Bgm_List_Pos_SetIcon(const struct FVector2D& B, int32 A, float* X, float* Y);
	float SetOffsetBGMSetIcon(int32 NewParam, int32 NewParam1);
	void IsAbsBGMIconMove(int32 A, int32 A2, bool* OutParam);
	bool Start_MenuChangeAnim();
	void ConfigChangeAnimTask();
	void ListSelectDraw(const struct FDrawConfigParam& DrawConfigParam, int32 ListIndex);
	bool StateDraw_UpdateOnlyCursor(float DeltaTime_0);
	void GetSprDataAstrea(class USprAsset** SprData);
	void GetDifficultSprId(int32 DefaultSprId, int32* CalcSprId, bool* IsChangeSprId);
	void GetSprDataEx(class USprAsset** SprData);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_UIConfiguration_C">();
	}
	static class ABP_UIConfiguration_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_UIConfiguration_C>();
	}
};
static_assert(alignof(ABP_UIConfiguration_C) == 0x000008, "Wrong alignment on ABP_UIConfiguration_C");
static_assert(sizeof(ABP_UIConfiguration_C) == 0x0015A0, "Wrong size on ABP_UIConfiguration_C");
static_assert(offsetof(ABP_UIConfiguration_C, UberGraphFrame) == 0x000690, "Member 'ABP_UIConfiguration_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, AppCalculater) == 0x000698, "Member 'ABP_UIConfiguration_C::AppCalculater' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, DefaultSceneRoot) == 0x0006A0, "Member 'ABP_UIConfiguration_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, BGMaterial) == 0x0006A8, "Member 'ABP_UIConfiguration_C::BGMaterial' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, BGMaterialInstDy) == 0x0006D0, "Member 'ABP_UIConfiguration_C::BGMaterialInstDy' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, BaseSprAssetObject) == 0x0006D8, "Member 'ABP_UIConfiguration_C::BaseSprAssetObject' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, BaseSprAssetObjectAstrea) == 0x0006E0, "Member 'ABP_UIConfiguration_C::BaseSprAssetObjectAstrea' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, BasePlgAssetObject) == 0x0006E8, "Member 'ABP_UIConfiguration_C::BasePlgAssetObject' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _) == 0x0006F0, "Member 'ABP_UIConfiguration_C::_' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, __0) == 0x0006F4, "Member 'ABP_UIConfiguration_C::__0' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, Pr) == 0x0006F8, "Member 'ABP_UIConfiguration_C::Pr' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, I___P1) == 0x0006FC, "Member 'ABP_UIConfiguration_C::I___P1' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, I___P2) == 0x000700, "Member 'ABP_UIConfiguration_C::I___P2' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, EqualizerSettings) == 0x000708, "Member 'ABP_UIConfiguration_C::EqualizerSettings' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ___s0w__A_) == 0x000718, "Member 'ABP_UIConfiguration_C::___s0w__A_' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ___w__B_) == 0x000720, "Member 'ABP_UIConfiguration_C::___w__B_' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _001____s0______) == 0x000728, "Member 'ABP_UIConfiguration_C::_001____s0______' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _002_info__) == 0x000730, "Member 'ABP_UIConfiguration_C::_002_info__' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _003______) == 0x000738, "Member 'ABP_UIConfiguration_C::_003______' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ____w__C_) == 0x000740, "Member 'ABP_UIConfiguration_C::____w__C_' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ON______) == 0x000748, "Member 'ABP_UIConfiguration_C::ON______' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, OFF______) == 0x000750, "Member 'ABP_UIConfiguration_C::OFF______' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ON_______0) == 0x000758, "Member 'ABP_UIConfiguration_C::ON_______0' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, OFF_______0) == 0x000760, "Member 'ABP_UIConfiguration_C::OFF_______0' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ONOFF______) == 0x000768, "Member 'ABP_UIConfiguration_C::ONOFF______' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _____0__) == 0x000770, "Member 'ABP_UIConfiguration_C::_____0__' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ___H_Min__) == 0x000778, "Member 'ABP_UIConfiguration_C::___H_Min__' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ___H_Max__) == 0x000780, "Member 'ABP_UIConfiguration_C::___H_Max__' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _____) == 0x000788, "Member 'ABP_UIConfiguration_C::_____' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ____0__) == 0x000790, "Member 'ABP_UIConfiguration_C::____0__' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _p___) == 0x000798, "Member 'ABP_UIConfiguration_C::_p___' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _p____0) == 0x0007A0, "Member 'ABP_UIConfiguration_C::_p____0' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _____________) == 0x0007A8, "Member 'ABP_UIConfiguration_C::_____________' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, __________) == 0x0007B0, "Member 'ABP_UIConfiguration_C::__________' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _________) == 0x0007B8, "Member 'ABP_UIConfiguration_C::_________' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ________0__) == 0x0007C0, "Member 'ABP_UIConfiguration_C::________0__' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ______) == 0x0007C8, "Member 'ABP_UIConfiguration_C::______' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _____0___0) == 0x0007D0, "Member 'ABP_UIConfiguration_C::_____0___0' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ______0) == 0x0007D8, "Member 'ABP_UIConfiguration_C::______0' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ____w__D_) == 0x0007DC, "Member 'ABP_UIConfiguration_C::____w__D_' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _______0) == 0x0007E4, "Member 'ABP_UIConfiguration_C::_______0' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _____0___1) == 0x0007EC, "Member 'ABP_UIConfiguration_C::_____0___1' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _____0Z_W__) == 0x0007F4, "Member 'ABP_UIConfiguration_C::_____0Z_W__' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _o______w__E_) == 0x0007FC, "Member 'ABP_UIConfiguration_C::_o______w__E_' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _021_____) == 0x000804, "Member 'ABP_UIConfiguration_C::_021_____' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, CONFIG__) == 0x00080C, "Member 'ABP_UIConfiguration_C::CONFIG__' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, R_0__) == 0x000814, "Member 'ABP_UIConfiguration_C::R_0__' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _b___w__F_) == 0x00081C, "Member 'ABP_UIConfiguration_C::_b___w__F_' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _________W__) == 0x000824, "Member 'ABP_UIConfiguration_C::_________W__' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ___W__) == 0x00082C, "Member 'ABP_UIConfiguration_C::___W__' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _______) == 0x000834, "Member 'ABP_UIConfiguration_C::_______' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ___w__G_) == 0x00083C, "Member 'ABP_UIConfiguration_C::___w__G_' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _____0d) == 0x000844, "Member 'ABP_UIConfiguration_C::_____0d' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, BrightnessPreview) == 0x000848, "Member 'ABP_UIConfiguration_C::BrightnessPreview' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, BrightnessPreviewInstDy) == 0x000870, "Member 'ABP_UIConfiguration_C::BrightnessPreviewInstDy' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, BGM__) == 0x000878, "Member 'ABP_UIConfiguration_C::BGM__' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, SET__) == 0x000880, "Member 'ABP_UIConfiguration_C::SET__' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ____) == 0x000888, "Member 'ABP_UIConfiguration_C::____' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, __h___) == 0x000890, "Member 'ABP_UIConfiguration_C::__h___' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, __h_Z_W__) == 0x000898, "Member 'ABP_UIConfiguration_C::__h_Z_W__' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, __________0) == 0x0008A0, "Member 'ABP_UIConfiguration_C::__________0' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _______B) == 0x0008A8, "Member 'ABP_UIConfiguration_C::_______B' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ____Z_W___B) == 0x0008B0, "Member 'ABP_UIConfiguration_C::____Z_W___B' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, PLAYLIST__) == 0x0008B8, "Member 'ABP_UIConfiguration_C::PLAYLIST__' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, Minus__w__H_) == 0x0008C0, "Member 'ABP_UIConfiguration_C::Minus__w__H_' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ________) == 0x0008C8, "Member 'ABP_UIConfiguration_C::________' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _____B) == 0x0008D0, "Member 'ABP_UIConfiguration_C::_____B' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _tMinus______) == 0x0008D8, "Member 'ABP_UIConfiguration_C::_tMinus______' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _tMinus____Z_W__) == 0x0008E0, "Member 'ABP_UIConfiguration_C::_tMinus____Z_W__' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, Minus_Minus______) == 0x0008E8, "Member 'ABP_UIConfiguration_C::Minus_Minus______' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ___0__) == 0x0008F0, "Member 'ABP_UIConfiguration_C::___0__' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, R_0___B) == 0x0008F8, "Member 'ABP_UIConfiguration_C::R_0___B' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ConfEqualizer01) == 0x000900, "Member 'ABP_UIConfiguration_C::ConfEqualizer01' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ConfEqualizer01InstDy) == 0x000928, "Member 'ABP_UIConfiguration_C::ConfEqualizer01InstDy' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ConfEqualizer02) == 0x000930, "Member 'ABP_UIConfiguration_C::ConfEqualizer02' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ConfEqualizer02InstDy) == 0x000958, "Member 'ABP_UIConfiguration_C::ConfEqualizer02InstDy' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ConfEqualizer03) == 0x000960, "Member 'ABP_UIConfiguration_C::ConfEqualizer03' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ConfEqualizer03InstDy) == 0x000988, "Member 'ABP_UIConfiguration_C::ConfEqualizer03InstDy' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ______1__) == 0x000990, "Member 'ABP_UIConfiguration_C::______1__' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ______2__) == 0x000998, "Member 'ABP_UIConfiguration_C::______2__' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ______3__) == 0x0009A0, "Member 'ABP_UIConfiguration_C::______3__' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, BGMonoMaterial) == 0x0009A8, "Member 'ABP_UIConfiguration_C::BGMonoMaterial' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, BGMonoMaterialDy) == 0x0009D0, "Member 'ABP_UIConfiguration_C::BGMonoMaterialDy' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, Angle) == 0x0009D8, "Member 'ABP_UIConfiguration_C::Angle' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, LinearCurves) == 0x0009E0, "Member 'ABP_UIConfiguration_C::LinearCurves' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _____INhS____) == 0x0009E8, "Member 'ABP_UIConfiguration_C::_____INhS____' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ConfAnimFrame) == 0x0009EC, "Member 'ABP_UIConfiguration_C::ConfAnimFrame' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, IsInAnimFinished) == 0x0009F0, "Member 'ABP_UIConfiguration_C::IsInAnimFinished' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, __) == 0x0009F4, "Member 'ABP_UIConfiguration_C::__' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ________0R_) == 0x000A28, "Member 'ABP_UIConfiguration_C::________0R_' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ________0) == 0x000A5C, "Member 'ABP_UIConfiguration_C::________0' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _______________) == 0x000A90, "Member 'ABP_UIConfiguration_C::_______________' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ______________Z_W) == 0x000AA0, "Member 'ABP_UIConfiguration_C::______________Z_W' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ________1) == 0x000AD4, "Member 'ABP_UIConfiguration_C::________1' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, DecelerateCurves) == 0x000AE0, "Member 'ABP_UIConfiguration_C::DecelerateCurves' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _0R______) == 0x000AE8, "Member 'ABP_UIConfiguration_C::_0R______' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ____________) == 0x000AF0, "Member 'ABP_UIConfiguration_C::____________' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ___________) == 0x000AF8, "Member 'ABP_UIConfiguration_C::___________' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _________0) == 0x000B00, "Member 'ABP_UIConfiguration_C::_________0' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ________2) == 0x000B10, "Member 'ABP_UIConfiguration_C::________2' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ____Z_W_____) == 0x000B20, "Member 'ABP_UIConfiguration_C::____Z_W_____' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ____Z_W____) == 0x000B28, "Member 'ABP_UIConfiguration_C::____Z_W____' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _________Z_W__) == 0x000B2C, "Member 'ABP_UIConfiguration_C::_________Z_W__' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, IsInGrowFinished) == 0x000B60, "Member 'ABP_UIConfiguration_C::IsInGrowFinished' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _____Ii____) == 0x000B64, "Member 'ABP_UIConfiguration_C::_____Ii____' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _____Ii__) == 0x000B98, "Member 'ABP_UIConfiguration_C::_____Ii__' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _____Ii___0) == 0x000BCC, "Member 'ABP_UIConfiguration_C::_____Ii___0' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, Ii____) == 0x000C00, "Member 'ABP_UIConfiguration_C::Ii____' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, GrowInAnimFrame) == 0x000C08, "Member 'ABP_UIConfiguration_C::GrowInAnimFrame' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, Ii_____0) == 0x000C0C, "Member 'ABP_UIConfiguration_C::Ii_____0' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, Ii_______) == 0x000C10, "Member 'ABP_UIConfiguration_C::Ii_______' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, GrowMoveAnimFrame) == 0x000C18, "Member 'ABP_UIConfiguration_C::GrowMoveAnimFrame' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, BoundCurves) == 0x000C20, "Member 'ABP_UIConfiguration_C::BoundCurves' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, GrowFlickeringAnimFrame) == 0x000C28, "Member 'ABP_UIConfiguration_C::GrowFlickeringAnimFrame' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ___________H) == 0x000C2C, "Member 'ABP_UIConfiguration_C::___________H' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _______p) == 0x000C60, "Member 'ABP_UIConfiguration_C::_______p' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _______p_0) == 0x000C94, "Member 'ABP_UIConfiguration_C::_______p_0' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, CursorMoveAnimFrame) == 0x000CC8, "Member 'ABP_UIConfiguration_C::CursorMoveAnimFrame' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _____0Z_W___0) == 0x000CCC, "Member 'ABP_UIConfiguration_C::_____0Z_W___0' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, FlagChangeAnimFrame) == 0x000CD4, "Member 'ABP_UIConfiguration_C::FlagChangeAnimFrame' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, __________1) == 0x000CD8, "Member 'ABP_UIConfiguration_C::__________1' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, LArrowInAnimFrame) == 0x000CE0, "Member 'ABP_UIConfiguration_C::LArrowInAnimFrame' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, RArrowInAnimFrame) == 0x000CE4, "Member 'ABP_UIConfiguration_C::RArrowInAnimFrame' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, __p_____) == 0x000CE8, "Member 'ABP_UIConfiguration_C::__p_____' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, __p______0) == 0x000CF0, "Member 'ABP_UIConfiguration_C::__p______0' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _______U_t_____) == 0x000CF8, "Member 'ABP_UIConfiguration_C::_______U_t_____' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ___0) == 0x000D2C, "Member 'ABP_UIConfiguration_C::___0' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _______U_t______) == 0x000D60, "Member 'ABP_UIConfiguration_C::_______U_t______' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, BrightnessInAnimFrame) == 0x000D94, "Member 'ABP_UIConfiguration_C::BrightnessInAnimFrame' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, __U_t_______) == 0x000D98, "Member 'ABP_UIConfiguration_C::__U_t_______' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, __U_t________0) == 0x000DA0, "Member 'ABP_UIConfiguration_C::__U_t________0' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, __U_t____) == 0x000DA4, "Member 'ABP_UIConfiguration_C::__U_t____' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, BrightnessOutAnimFrame) == 0x000DA8, "Member 'ABP_UIConfiguration_C::BrightnessOutAnimFrame' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, DeltaTime) == 0x000DAC, "Member 'ABP_UIConfiguration_C::DeltaTime' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, BGMINhS____) == 0x000DB0, "Member 'ABP_UIConfiguration_C::BGMINhS____' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, BgmAnimFrame) == 0x000DB4, "Member 'ABP_UIConfiguration_C::BgmAnimFrame' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, IsBgmInAnimFinished) == 0x000DB8, "Member 'ABP_UIConfiguration_C::IsBgmInAnimFinished' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ________3) == 0x000DBC, "Member 'ABP_UIConfiguration_C::________3' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ___1) == 0x000DF0, "Member 'ABP_UIConfiguration_C::___1' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _______1) == 0x000E24, "Member 'ABP_UIConfiguration_C::_______1' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ConfINhS____) == 0x000E28, "Member 'ABP_UIConfiguration_C::ConfINhS____' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ConfInAnimFrame) == 0x000E2C, "Member 'ABP_UIConfiguration_C::ConfInAnimFrame' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, IsConfInAnimFinished) == 0x000E30, "Member 'ABP_UIConfiguration_C::IsConfInAnimFinished' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ________4) == 0x000E34, "Member 'ABP_UIConfiguration_C::________4' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _C2B_BGM__0R_) == 0x000E68, "Member 'ABP_UIConfiguration_C::_C2B_BGM__0R_' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _C2B_BGM___lq) == 0x000E9C, "Member 'ABP_UIConfiguration_C::_C2B_BGM___lq' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, __lq_____) == 0x000ED0, "Member 'ABP_UIConfiguration_C::__lq_____' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _C2B_BGM_Ii) == 0x000ED8, "Member 'ABP_UIConfiguration_C::_C2B_BGM_Ii' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _C2B_BGM________) == 0x000F0C, "Member 'ABP_UIConfiguration_C::_C2B_BGM________' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _C2B_BGM____) == 0x000F40, "Member 'ABP_UIConfiguration_C::_C2B_BGM____' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _BGM_________) == 0x000F50, "Member 'ABP_UIConfiguration_C::_BGM_________' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _BGM________) == 0x000F60, "Member 'ABP_UIConfiguration_C::_BGM________' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _____________0) == 0x000F70, "Member 'ABP_UIConfiguration_C::_____________0' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ____________0) == 0x000F78, "Member 'ABP_UIConfiguration_C::____________0' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _039__________) == 0x000F7C, "Member 'ABP_UIConfiguration_C::_039__________' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _C2B_BGM_Minus__) == 0x000F84, "Member 'ABP_UIConfiguration_C::_C2B_BGM_Minus__' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, Minus_______) == 0x000FB8, "Member 'ABP_UIConfiguration_C::Minus_______' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, Minus______) == 0x000FC0, "Member 'ABP_UIConfiguration_C::Minus______' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _C2B_BGM_____Z_W) == 0x000FC4, "Member 'ABP_UIConfiguration_C::_C2B_BGM_____Z_W' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, SEThS____) == 0x000FF8, "Member 'ABP_UIConfiguration_C::SEThS____' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _______SET) == 0x000FFC, "Member 'ABP_UIConfiguration_C::_______SET' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ________SET) == 0x001030, "Member 'ABP_UIConfiguration_C::________SET' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, IsSetAnimFinished) == 0x001064, "Member 'ABP_UIConfiguration_C::IsSetAnimFinished' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, SetAnimFrame) == 0x001068, "Member 'ABP_UIConfiguration_C::SetAnimFrame' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, SET_IN______) == 0x00106C, "Member 'ABP_UIConfiguration_C::SET_IN______' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, SET_IN_____) == 0x001074, "Member 'ABP_UIConfiguration_C::SET_IN_____' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, SET_OUT_____) == 0x001078, "Member 'ABP_UIConfiguration_C::SET_OUT_____' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, AnimSetIndex) == 0x00107C, "Member 'ABP_UIConfiguration_C::AnimSetIndex' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, IsPlayingAnimFinished) == 0x001080, "Member 'ABP_UIConfiguration_C::IsPlayingAnimFinished' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ________tMinus) == 0x001084, "Member 'ABP_UIConfiguration_C::________tMinus' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _________tMinus) == 0x0010B8, "Member 'ABP_UIConfiguration_C::_________tMinus' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ______t) == 0x0010EC, "Member 'ABP_UIConfiguration_C::______t' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, PlayingInAnimFrame) == 0x001120, "Member 'ABP_UIConfiguration_C::PlayingInAnimFrame' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ___OUT_____) == 0x001124, "Member 'ABP_UIConfiguration_C::___OUT_____' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ___IN_____) == 0x001128, "Member 'ABP_UIConfiguration_C::___IN_____' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ________5) == 0x00112C, "Member 'ABP_UIConfiguration_C::________5' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, AnimPlayingIndex) == 0x001134, "Member 'ABP_UIConfiguration_C::AnimPlayingIndex' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ______1) == 0x001138, "Member 'ABP_UIConfiguration_C::______1' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ________6) == 0x00113C, "Member 'ABP_UIConfiguration_C::________6' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, PlayingAnimFrame) == 0x001140, "Member 'ABP_UIConfiguration_C::PlayingAnimFrame' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ______________0) == 0x001144, "Member 'ABP_UIConfiguration_C::______________0' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ______________) == 0x001178, "Member 'ABP_UIConfiguration_C::______________' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ____________1) == 0x0011AC, "Member 'ABP_UIConfiguration_C::____________1' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, EqualizerAnimFrame) == 0x0011E0, "Member 'ABP_UIConfiguration_C::EqualizerAnimFrame' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, IsEqualizerInAnimFinished) == 0x0011E4, "Member 'ABP_UIConfiguration_C::IsEqualizerInAnimFinished' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, IsEqualizerOutAnimFinished) == 0x0011E5, "Member 'ABP_UIConfiguration_C::IsEqualizerOutAnimFinished' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, IsEqualizerChangeAnimFinished) == 0x0011E6, "Member 'ABP_UIConfiguration_C::IsEqualizerChangeAnimFinished' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ____________2) == 0x0011E8, "Member 'ABP_UIConfiguration_C::____________2' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _______Speed) == 0x0011EC, "Member 'ABP_UIConfiguration_C::_______Speed' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _______Color) == 0x0011F0, "Member 'ABP_UIConfiguration_C::_______Color' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ___2) == 0x0011F4, "Member 'ABP_UIConfiguration_C::___2' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _B2C________0R_) == 0x001228, "Member 'ABP_UIConfiguration_C::_B2C________0R_' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _B2C_________lq) == 0x00125C, "Member 'ABP_UIConfiguration_C::_B2C_________lq' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _B2C_______Ii) == 0x001290, "Member 'ABP_UIConfiguration_C::_B2C_______Ii' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _B2C___________Z_W) == 0x0012C4, "Member 'ABP_UIConfiguration_C::_B2C___________Z_W' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _B2C_BGM________) == 0x0012F8, "Member 'ABP_UIConfiguration_C::_B2C_BGM________' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _B2C_BGM____) == 0x00132C, "Member 'ABP_UIConfiguration_C::_B2C_BGM____' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _B2C_BGM_Minus__) == 0x001360, "Member 'ABP_UIConfiguration_C::_B2C_BGM_Minus__' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _____OUThS____) == 0x001394, "Member 'ABP_UIConfiguration_C::_____OUThS____' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ConfOutAnimFrame) == 0x001398, "Member 'ABP_UIConfiguration_C::ConfOutAnimFrame' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, IsOutAnimFinished) == 0x00139C, "Member 'ABP_UIConfiguration_C::IsOutAnimFinished' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _________1) == 0x0013A0, "Member 'ABP_UIConfiguration_C::_________1' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, BGM___) == 0x0013A8, "Member 'ABP_UIConfiguration_C::BGM___' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, CampCharaRT) == 0x0013B0, "Member 'ABP_UIConfiguration_C::CampCharaRT' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, BgRenderTextre) == 0x0013B8, "Member 'ABP_UIConfiguration_C::BgRenderTextre' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, BrightnessPow) == 0x0013C0, "Member 'ABP_UIConfiguration_C::BrightnessPow' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ___A__) == 0x0013C4, "Member 'ABP_UIConfiguration_C::___A__' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ___B__) == 0x0013CC, "Member 'ABP_UIConfiguration_C::___B__' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, UimAsset) == 0x0013D8, "Member 'ABP_UIConfiguration_C::UimAsset' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, UimFrame) == 0x001400, "Member 'ABP_UIConfiguration_C::UimFrame' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, RenderMat) == 0x001408, "Member 'ABP_UIConfiguration_C::RenderMat' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, RenderMatDy) == 0x001430, "Member 'ABP_UIConfiguration_C::RenderMatDy' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, Calculater_List) == 0x001438, "Member 'ABP_UIConfiguration_C::Calculater_List' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, In_Color_B) == 0x001450, "Member 'ABP_UIConfiguration_C::In_Color_B' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, In_Color_G) == 0x001451, "Member 'ABP_UIConfiguration_C::In_Color_G' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, In_Color_R) == 0x001452, "Member 'ABP_UIConfiguration_C::In_Color_R' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, OffsetIi__) == 0x001454, "Member 'ABP_UIConfiguration_C::OffsetIi__' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, Ii_____1) == 0x00145C, "Member 'ABP_UIConfiguration_C::Ii_____1' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, Ii__) == 0x001460, "Member 'ABP_UIConfiguration_C::Ii__' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, OffsetIi____) == 0x001468, "Member 'ABP_UIConfiguration_C::OffsetIi____' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, IiTimer) == 0x00146C, "Member 'ABP_UIConfiguration_C::IiTimer' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, In_BGMMove_Frame) == 0x001470, "Member 'ABP_UIConfiguration_C::In_BGMMove_Frame' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, Ii________0) == 0x001474, "Member 'ABP_UIConfiguration_C::Ii________0' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, In_Move_FrameScale) == 0x001478, "Member 'ABP_UIConfiguration_C::In_Move_FrameScale' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, BGMAlphaWork) == 0x001480, "Member 'ABP_UIConfiguration_C::BGMAlphaWork' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, IiAlphaFrame) == 0x001498, "Member 'ABP_UIConfiguration_C::IiAlphaFrame' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, Next_Wait_Alpha_Frame) == 0x00149C, "Member 'ABP_UIConfiguration_C::Next_Wait_Alpha_Frame' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, Next_Alpha_Move_Frame) == 0x0014A0, "Member 'ABP_UIConfiguration_C::Next_Alpha_Move_Frame' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, AlphaMoveFrame) == 0x0014A4, "Member 'ABP_UIConfiguration_C::AlphaMoveFrame' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, Dst_Alpha_Value) == 0x0014A8, "Member 'ABP_UIConfiguration_C::Dst_Alpha_Value' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _b________) == 0x0014AC, "Member 'ABP_UIConfiguration_C::_b________' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _b_______) == 0x0014B4, "Member 'ABP_UIConfiguration_C::_b_______' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ________b___Z_W) == 0x0014B8, "Member 'ABP_UIConfiguration_C::________b___Z_W' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, Animated_Value) == 0x0014EC, "Member 'ABP_UIConfiguration_C::Animated_Value' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, InHelpWait_Frame) == 0x0014F0, "Member 'ABP_UIConfiguration_C::InHelpWait_Frame' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ConfAnimHelpFrame) == 0x0014F4, "Member 'ABP_UIConfiguration_C::ConfAnimHelpFrame' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, _b________0) == 0x0014F8, "Member 'ABP_UIConfiguration_C::_b________0' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, IsHelpDraw) == 0x0014FC, "Member 'ABP_UIConfiguration_C::IsHelpDraw' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, PlusIi0OS) == 0x001500, "Member 'ABP_UIConfiguration_C::PlusIi0OS' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ConfigMovePlusPos) == 0x001508, "Member 'ABP_UIConfiguration_C::ConfigMovePlusPos' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, BGMMovePlusPos) == 0x001510, "Member 'ABP_UIConfiguration_C::BGMMovePlusPos' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, InBGMPlusOffsetFrame) == 0x001518, "Member 'ABP_UIConfiguration_C::InBGMPlusOffsetFrame' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, InBGMOffsetFrame) == 0x00151C, "Member 'ABP_UIConfiguration_C::InBGMOffsetFrame' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, InConfigOffsetFrame) == 0x001520, "Member 'ABP_UIConfiguration_C::InConfigOffsetFrame' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, IsDrawInSet) == 0x001524, "Member 'ABP_UIConfiguration_C::IsDrawInSet' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, OffsetIndex) == 0x001528, "Member 'ABP_UIConfiguration_C::OffsetIndex' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, New_Local_Var_4) == 0x00152C, "Member 'ABP_UIConfiguration_C::New_Local_Var_4' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, IsChangeAnimFinished) == 0x001530, "Member 'ABP_UIConfiguration_C::IsChangeAnimFinished' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, ________7) == 0x001534, "Member 'ABP_UIConfiguration_C::________7' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, BrightnessPreviewAstrea) == 0x001568, "Member 'ABP_UIConfiguration_C::BrightnessPreviewAstrea' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, BrightnessPreviewInstDyAstrea) == 0x001590, "Member 'ABP_UIConfiguration_C::BrightnessPreviewInstDyAstrea' has a wrong offset!");
static_assert(offsetof(ABP_UIConfiguration_C, BaseSprAssetObjectEx) == 0x001598, "Member 'ABP_UIConfiguration_C::BaseSprAssetObjectEx' has a wrong offset!");

}

