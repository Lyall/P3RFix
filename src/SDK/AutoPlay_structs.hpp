#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AutoPlay

#include "Basic.hpp"


namespace SDK
{

// ScriptStruct AutoPlay.APCommandParam
// 0x0028 (0x0028 - 0x0000)
struct FAPCommandParam
{
public:
	class FString                                 Command_name;                                      // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Filter_name;                                       // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStruct*                                TypeInfo_;                                         // 0x0020(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
static_assert(alignof(FAPCommandParam) == 0x000008, "Wrong alignment on FAPCommandParam");
static_assert(sizeof(FAPCommandParam) == 0x000028, "Wrong size on FAPCommandParam");
static_assert(offsetof(FAPCommandParam, Command_name) == 0x000000, "Member 'FAPCommandParam::Command_name' has a wrong offset!");
static_assert(offsetof(FAPCommandParam, Filter_name) == 0x000010, "Member 'FAPCommandParam::Filter_name' has a wrong offset!");
static_assert(offsetof(FAPCommandParam, TypeInfo_) == 0x000020, "Member 'FAPCommandParam::TypeInfo_' has a wrong offset!");

// ScriptStruct AutoPlay.APEndRecordParam
// 0x0000 (0x0028 - 0x0028)
struct FAPEndRecordParam final : public FAPCommandParam
{
};
static_assert(alignof(FAPEndRecordParam) == 0x000008, "Wrong alignment on FAPEndRecordParam");
static_assert(sizeof(FAPEndRecordParam) == 0x000028, "Wrong size on FAPEndRecordParam");

// ScriptStruct AutoPlay.APStartRecordParam
// 0x0000 (0x0028 - 0x0028)
struct FAPStartRecordParam final : public FAPCommandParam
{
};
static_assert(alignof(FAPStartRecordParam) == 0x000008, "Wrong alignment on FAPStartRecordParam");
static_assert(sizeof(FAPStartRecordParam) == 0x000028, "Wrong size on FAPStartRecordParam");

// ScriptStruct AutoPlay.APSlowMotionParam
// 0x0008 (0x0030 - 0x0028)
struct FAPSlowMotionParam final : public FAPCommandParam
{
public:
	float                                         Speed;                                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FAPSlowMotionParam) == 0x000008, "Wrong alignment on FAPSlowMotionParam");
static_assert(sizeof(FAPSlowMotionParam) == 0x000030, "Wrong size on FAPSlowMotionParam");
static_assert(offsetof(FAPSlowMotionParam, Speed) == 0x000028, "Member 'FAPSlowMotionParam::Speed' has a wrong offset!");

// ScriptStruct AutoPlay.APScreenShotParam
// 0x0010 (0x0038 - 0x0028)
struct FAPScreenShotParam final : public FAPCommandParam
{
public:
	class FString                                 Filename;                                          // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FAPScreenShotParam) == 0x000008, "Wrong alignment on FAPScreenShotParam");
static_assert(sizeof(FAPScreenShotParam) == 0x000038, "Wrong size on FAPScreenShotParam");
static_assert(offsetof(FAPScreenShotParam, Filename) == 0x000028, "Member 'FAPScreenShotParam::Filename' has a wrong offset!");

// ScriptStruct AutoPlay.APWaitForNextCommandParam
// 0x0008 (0x0030 - 0x0028)
struct FAPWaitForNextCommandParam final : public FAPCommandParam
{
public:
	float                                         Time_limit;                                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FAPWaitForNextCommandParam) == 0x000008, "Wrong alignment on FAPWaitForNextCommandParam");
static_assert(sizeof(FAPWaitForNextCommandParam) == 0x000030, "Wrong size on FAPWaitForNextCommandParam");
static_assert(offsetof(FAPWaitForNextCommandParam, Time_limit) == 0x000028, "Member 'FAPWaitForNextCommandParam::Time_limit' has a wrong offset!");

// ScriptStruct AutoPlay.APNopParam
// 0x0000 (0x0028 - 0x0028)
struct FAPNopParam final : public FAPCommandParam
{
};
static_assert(alignof(FAPNopParam) == 0x000008, "Wrong alignment on FAPNopParam");
static_assert(sizeof(FAPNopParam) == 0x000028, "Wrong size on FAPNopParam");

// ScriptStruct AutoPlay.APEchoParam
// 0x0018 (0x0040 - 0x0028)
struct FAPEchoParam final : public FAPCommandParam
{
public:
	class FString                                 Message;                                           // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DisplayTime;                                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FAPEchoParam) == 0x000008, "Wrong alignment on FAPEchoParam");
static_assert(sizeof(FAPEchoParam) == 0x000040, "Wrong size on FAPEchoParam");
static_assert(offsetof(FAPEchoParam, Message) == 0x000028, "Member 'FAPEchoParam::Message' has a wrong offset!");
static_assert(offsetof(FAPEchoParam, DisplayTime) == 0x000038, "Member 'FAPEchoParam::DisplayTime' has a wrong offset!");

// ScriptStruct AutoPlay.APCommandLog
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FAPCommandLog final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x14];                                       // 0x0004(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FAPCommandLog) == 0x000008, "Wrong alignment on FAPCommandLog");
static_assert(sizeof(FAPCommandLog) == 0x000018, "Wrong size on FAPCommandLog");
static_assert(offsetof(FAPCommandLog, Time) == 0x000000, "Member 'FAPCommandLog::Time' has a wrong offset!");

// ScriptStruct AutoPlay.APCommandReserve
// 0x0050 (0x0050 - 0x0000)
struct alignas(0x10) FAPCommandReserve final
{
public:
	class UAPCommandBase*                         Command;                                           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x48];                                       // 0x0008(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FAPCommandReserve) == 0x000010, "Wrong alignment on FAPCommandReserve");
static_assert(sizeof(FAPCommandReserve) == 0x000050, "Wrong size on FAPCommandReserve");
static_assert(offsetof(FAPCommandReserve, Command) == 0x000000, "Member 'FAPCommandReserve::Command' has a wrong offset!");

// ScriptStruct AutoPlay.APCommandInstance
// 0x0050 (0x0050 - 0x0000)
struct alignas(0x10) FAPCommandInstance final
{
public:
	class UAPCommandBase*                         Command;                                           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x48];                                       // 0x0008(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FAPCommandInstance) == 0x000010, "Wrong alignment on FAPCommandInstance");
static_assert(sizeof(FAPCommandInstance) == 0x000050, "Wrong size on FAPCommandInstance");
static_assert(offsetof(FAPCommandInstance, Command) == 0x000000, "Member 'FAPCommandInstance::Command' has a wrong offset!");

}

