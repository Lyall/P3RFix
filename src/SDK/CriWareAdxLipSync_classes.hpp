#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CriWareAdxLipSync

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class CriWareAdxLipSync.LipsAnalyzerBase
// 0x0000 (0x0028 - 0x0028)
class ULipsAnalyzerBase : public UObject
{
public:
	void Init(const int32 MaxInputSamplingRate);
	void SetSamplingRate(const int32 SamplingRateHz);
	void SetSilenceThreshold(const float VolumeDb);

	struct FCriLipsMouthInfo GetInfo() const;
	struct FCriLipsMouthInfo GetInfoAtSilence() const;
	struct FCriLipsMorphTargetBlendAmountAsJapanese GetMorphTargetBlendAmountAsJapanese() const;
	float GetSilenceThreshold() const;
	float GetVolume() const;
	bool IsAtSilence() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LipsAnalyzerBase">();
	}
	static class ULipsAnalyzerBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULipsAnalyzerBase>();
	}
};
static_assert(alignof(ULipsAnalyzerBase) == 0x000008, "Wrong alignment on ULipsAnalyzerBase");
static_assert(sizeof(ULipsAnalyzerBase) == 0x000028, "Wrong size on ULipsAnalyzerBase");

// Class CriWareAdxLipSync.LipsAtomAnalyzer
// 0x0010 (0x0038 - 0x0028)
class ULipsAtomAnalyzer final : public ULipsAnalyzerBase
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UAtomComponent*                         AtomComponent;                                     // 0x0030(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void Attach(class UAtomComponent* InAtomComponent);
	void Detach();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LipsAtomAnalyzer">();
	}
	static class ULipsAtomAnalyzer* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULipsAtomAnalyzer>();
	}
};
static_assert(alignof(ULipsAtomAnalyzer) == 0x000008, "Wrong alignment on ULipsAtomAnalyzer");
static_assert(sizeof(ULipsAtomAnalyzer) == 0x000038, "Wrong size on ULipsAtomAnalyzer");
static_assert(offsetof(ULipsAtomAnalyzer, AtomComponent) == 0x000030, "Member 'ULipsAtomAnalyzer::AtomComponent' has a wrong offset!");

}

